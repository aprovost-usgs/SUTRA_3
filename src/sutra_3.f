C     MAIN PROGRAM       S U T R A _ M A I N       SUTRA VERSION 3.0     SUTRA_MAIN.....100
C_______________________________________________________________________ SUTRA_MAIN.....200
C|                                                                     | SUTRA_MAIN.....300
C|                                                                     | SUTRA_MAIN.....400
C|                   UNITED STATES GEOLOGICAL SURVEY                   | SUTRA_MAIN.....500
C|          MODEL FOR SATURATED-UNSATURATED, VARIABLE-DENSITY          | SUTRA_MAIN.....600
C|          GROUND-WATER FLOW WITH SOLUTE OR ENERGY TRANSPORT          | SUTRA_MAIN.....700
C|                                                                     | SUTRA_MAIN.....800
C|                                                                     | SUTRA_MAIN.....900
C|                                                                     | SUTRA_MAIN....1000
C|                                                                     | SUTRA_MAIN....1100
C|                       _______________________                       | SUTRA_MAIN....1200
C|                      |                       |                      | SUTRA_MAIN....1300
C|                      |   S   U   T   R   A   |                      | SUTRA_MAIN....1400
C|                      |_______________________|                      | SUTRA_MAIN....1500
C|                                                                     | SUTRA_MAIN....1600
C|                                                                     | SUTRA_MAIN....1700
C|                Saturated    Unsaturated    TRAnsport                | SUTRA_MAIN....1800
C|                =            =              ===                      | SUTRA_MAIN....1900
C|                                                                     | SUTRA_MAIN....2000
C|                                                                     | SUTRA_MAIN....2100
C|                                                                     | SUTRA_MAIN....2200
C|    * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *    | SUTRA_MAIN....2300
C|    *                                                           *    | SUTRA_MAIN....2400
C|    *  PHYSICS OPTIONS:                                         *    | SUTRA_MAIN....2500
C|    *  -> Saturated and/or unsaturated ground-water flow        *    | SUTRA_MAIN....2600
C|    *  -> Either single species reactive solute transport       *    | SUTRA_MAIN....2700
C|    *     or thermal energy transport                           *    | SUTRA_MAIN....2800
C|    *  -> Formation of lakes on the model surface and           *    | SUTRA_MAIN....2900
C|    *     interaction of lakes with groundwater via boundary    *    | SUTRA_MAIN....3000
C|    *     conditions                                            *    | SUTRA_MAIN....3100
C|    *  GEOMETRY OPTIONS:                                        *    | SUTRA_MAIN....3200
C|    *  -> Two-dimensional areal or cross-sectional simulation   *    | SUTRA_MAIN....3300
C|    *  -> Fully three-dimensional simulation                    *    | SUTRA_MAIN....3400
C|    *  -> Either two- or three-dimensional Cartesian or         *    | SUTRA_MAIN....3500
C|    *     two-dimensional radial coordinates                    *    | SUTRA_MAIN....3600
C|    *  NUMERICAL METHODS:                                       *    | SUTRA_MAIN....3700
C|    *  -> Hybrid Galerkin-finite-element method and             *    | SUTRA_MAIN....3800
C|    *     integrated-finite-difference method                   *    | SUTRA_MAIN....3900
C|    *     with two-dimensional quadrilateral or                 *    | SUTRA_MAIN....4000
C|    *     three-dimensional generalized hexahedral              *    | SUTRA_MAIN....4100
C|    *     finite elements                                       *    | SUTRA_MAIN....4200
C|    *  -> Finite-difference time discretization                 *    | SUTRA_MAIN....4300
C|    *  -> Nonlinear iterative, sequential or steady-state       *    | SUTRA_MAIN....4400
C|    *     solution modes                                        *    | SUTRA_MAIN....4500
C|    *  -> Direct and iterative solvers                          *    | SUTRA_MAIN....4600
C|    *  OUTPUT OPTIONS:                                          *    | SUTRA_MAIN....4700
C|    *  -> Optional fluid velocity calculation                   *    | SUTRA_MAIN....4800
C|    *  -> Optional observation well output                      *    | SUTRA_MAIN....4900
C|    *  -> Optional fluid mass and solute mass or energy budget  *    | SUTRA_MAIN....5000
C|    *  -> Flexible, columnwise output of solution               *    | SUTRA_MAIN....5100
C|    *                                                           *    | SUTRA_MAIN....5200
C|    * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *    | SUTRA_MAIN....5300
C|                                                                     | SUTRA_MAIN....5400
C|                                                                     | SUTRA_MAIN....5500
C|                                                                     | SUTRA_MAIN....5600
C|       Complete explanation of the function and use of this code     | SUTRA_MAIN....5700
C|       is given in :                                                 | SUTRA_MAIN....5800
C|                                                                     | SUTRA_MAIN....5900
C|       Voss, Clifford I., and Provost, Alden M., 2002,               | SUTRA_MAIN....6000
C|            SUTRA - A model for saturated-unsaturated                | SUTRA_MAIN....6100
C|            variable-density ground-water flow with                  | SUTRA_MAIN....6200
C|            solute or energy transport: U.S. Geological              | SUTRA_MAIN....6300
C|            Survey Water-Resources Investigations Report             | SUTRA_MAIN....6400
C|            02-4231, 291 p. (Version of Sept 22, 2010),              | SUTRA_MAIN....6500
C|            http://pubs.er.usgs.gov/publication/wri024231              SUTRA_MAIN....6600
C|                                                                     | SUTRA_MAIN....6700
C|       Provost, Alden M., and Voss, Clifford I., 2019,               | SUTRA_MAIN....6800
C|            SUTRA, a model for saturated-unsaturated                 | SUTRA_MAIN....6900
C|            variable-density groundwater flow with                   | SUTRA_MAIN....7000
C|            solute or energy transport - Documentation of            | SUTRA_MAIN....7100
C|            generalized boundary conditions, a modified              | SUTRA_MAIN....7200
C|            implementation of specified pressures and                | SUTRA_MAIN....7300
C|            concentrations or temperatures, and the lake             | SUTRA_MAIN....7400
C|            capability: U.S. Geological Survey Techniques            | SUTRA_MAIN....7500
C|            and Methods, book 6, chap. A52, 62 p.,                   | SUTRA_MAIN....7600
C|            https://doi.org/10.3133/tm6A52                             SUTRA_MAIN....7700
C|                                                                     | SUTRA_MAIN....7800
C|       The most up-to-date publicly released versions of               SUTRA_MAIN....7900
C|       the SUTRA code and documentation are available at               SUTRA_MAIN....8000
C|       https://doi.org/10.5066/P9PPEHHM.                               SUTRA_MAIN....8100
C|                                                                     | SUTRA_MAIN....8200
C|    * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *    | SUTRA_MAIN....8300
C|    *                                                           *    | SUTRA_MAIN....8400
C|    *  The SUTRA code and documentation were originally         *    | SUTRA_MAIN....8500
C|    *  prepared under a joint research project of the U.S.      *    | SUTRA_MAIN....8600
C|    *  Geological Survey, Department of the Interior, Reston,   *    | SUTRA_MAIN....8700
C|    *  Virginia, and the Engineering and Services Laboratory,   *    | SUTRA_MAIN....8800
C|    *  U.S. Air Force Engineering and Services Center, Tyndall  *    | SUTRA_MAIN....8900
C|    *  A.F.B., Florida.  The SUTRA code and documentation are   *    | SUTRA_MAIN....9000
C|    *  available for unlimited distribution.                    *    | SUTRA_MAIN....9100
C|    *                                                           *    | SUTRA_MAIN....9200
C|    * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *    | SUTRA_MAIN....9300
C|                                                                     | SUTRA_MAIN....9400
C|    * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *    | SUTRA_MAIN....9500
C|    *                                                           *    | SUTRA_MAIN....9600
C|    *  Original Release: 1984, Version 1.0                      *    | SUTRA_MAIN....9700
C|    *  by: Clifford I. Voss, U.S. Geological Survey             *    | SUTRA_MAIN....9800
C|    *                                                           *    | SUTRA_MAIN....9900
C|    *  First Revision: June 1990, Version 1.1 (V06902D)         *    | SUTRA_MAIN...10000
C|    *  by: Clifford I. Voss, U.S. Geological Survey             *    | SUTRA_MAIN...10100
C|    *                                                           *    | SUTRA_MAIN...10200
C|    *  Second Revision: September 1997, Version 1.2 (V09972D)   *    | SUTRA_MAIN...10300
C|    *  by: C.I. Voss and David Boldt, U.S. Geological Survey    *    | SUTRA_MAIN...10400
C|    *                                                           *    | SUTRA_MAIN...10500
C|    *  Third Revision: September 2003, Version 2.0 (2D3D.1)     *    | SUTRA_MAIN...10600
C|    *  by: A.M. Provost & C.I. Voss, U.S. Geological Survey     *    | SUTRA_MAIN...10700
C|    *                                                           *    | SUTRA_MAIN...10800
C|    *  Fourth Revision: June 2008, Version 2.1                  *    | SUTRA_MAIN...10900
C|    *  by: A.M. Provost & C.I. Voss, U.S. Geological Survey     *    | SUTRA_MAIN...11000
C|    *                                                           *    | SUTRA_MAIN...11100
C|    *  Fifth Revision: September 2010, Version 2.2              *    | SUTRA_MAIN...11200
C|    *  by: A.M. Provost & C.I. Voss, U.S. Geological Survey     *    | SUTRA_MAIN...11300
C|    *                                                           *    | SUTRA_MAIN...11400
C|    *  Sixth Revision: August 2019, Version 3.0                 *    | SUTRA_MAIN...11500
C|    *  by: A.M. Provost & C.I. Voss, U.S. Geological Survey     *    | SUTRA_MAIN...11600
C|    *                                                           *    | SUTRA_MAIN...11700
C|    * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *    | SUTRA_MAIN...11800
C|                                                                     | SUTRA_MAIN...11900
C|                                                                     | SUTRA_MAIN...12000
C|_____________________________________________________________________| SUTRA_MAIN...12100
C                                                                        SUTRA_MAIN...12200
C                                                                        SUTRA_MAIN...12300
C                                                                        SUTRA_MAIN...12400
      PROGRAM SUTRA_MAIN                                                 SUTRA_MAIN...12500
      USE ALLARR                                                         SUTRA_MAIN...12600
      USE PTRDEF                                                         SUTRA_MAIN...12700
      USE EXPINT                                                         SUTRA_MAIN...12800
      USE SCHDEF                                                         SUTRA_MAIN...12900
      USE BCSDEF                                                         SUTRA_MAIN...13000
      USE FINDEF                                                         SUTRA_MAIN...13100
      USE LLDEF                                                          SUTRA_MAIN...13200
      USE LARR, ONLY : ISLAKE,ILKF,ILKS,ILKP,ILKU,ILKPG,ITIPG,           SUTRA_MAIN...13300
     1   ILKUG,ITIUG,IBCSF,IBCSS,IBCSP,IBCSU,IBCSPG,IBCSUG,              SUTRA_MAIN...13400
     2   LKBCPBC,LKBCUBC,LKBCSOP,LKBCSOU,LKBCPBG,LKBCUBG                 SUTRA_MAIN...13500
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                SUTRA_MAIN...13600
      PARAMETER (NCOLMX=9)                                               SUTRA_MAIN...13700
C                                                                        SUTRA_MAIN...13800
C.....PROGRAMMERS SET SUTRA VERSION NUMBER HERE (8 CHARACTERS MAXIMUM)   SUTRA_MAIN...13900
      CHARACTER*8, PARAMETER :: VERN='3.0'                               SUTRA_MAIN...14000
C                                                                        SUTRA_MAIN...14100
      CHARACTER*8 VERNUM, VERNIN                                         SUTRA_MAIN...14200
      CHARACTER*1 TITLE1(80),TITLE2(80)                                  SUTRA_MAIN...14300
      CHARACTER*80 SIMULA(5),MSHTYP(2),LAYNOR(2),SIMSTR,MSHSTR,LAYSTR    SUTRA_MAIN...14400
      CHARACTER*80 CUNSAT, CSSFLO ,CSSTRA, CREAD                         SUTRA_MAIN...14500
      CHARACTER*80 UNSSTR, SSFSTR ,SSTSTR, RDSTR                         SUTRA_MAIN...14600
      CHARACTER*80 UNAME,FNAME,FNINP,FNICS,FNBCS,FNLKIN,FNLKBC,FNLKAR    SUTRA_MAIN...14700
      CHARACTER*80 ERRCOD,CHERR(10)                                      SUTRA_MAIN...14800
      CHARACTER*40 SOLNAM(0:10)                                          SUTRA_MAIN...14900
      CHARACTER*10 SOLWRD(0:10)                                          SUTRA_MAIN...15000
      CHARACTER*10 ADSMOD,ADSMOD1(10)                                    SUTRA_MAIN...15100
      CHARACTER INTFIL*1000                                              SUTRA_MAIN...15200
      CHARACTER*10 BCSSCH                                                SUTRA_MAIN...15300
      CHARACTER*80 CDUM80                                                SUTRA_MAIN...15400
      INTEGER RMVDIM,IMVDIM,I1VDIM,CMVDIM,LMVDIM,PMVDIM                  SUTRA_MAIN...15500
      LOGICAL ONCEK5,ONCEK6,ONCEK7,ONCEK8,ONCESTG                        SUTRA_MAIN...15600
      LOGICAL ONCEK10,ONCEK11,ONCEK12,ONCEK13,ONCEK14,ONCEK15            SUTRA_MAIN...15700
      LOGICAL ONCEFO                                                     SUTRA_MAIN...15800
      LOGICAL ONCEBCS, SETBCS                                            SUTRA_MAIN...15900
      LOGICAL ONCEKLK                                                    SUTRA_MAIN...16000
      LOGICAL ALCBCS,ALCFIN,ALCOBS                                       SUTRA_MAIN...16100
      LOGICAL LAKUSD                                                     SUTRA_MAIN...16200
      DIMENSION FNAME(0:23),IUNIT(0:23)                                  SUTRA_MAIN...16300
      DIMENSION INERR(10), RLERR(10)                                     SUTRA_MAIN...16400
      DIMENSION J5COL(NCOLMX), J6COL(NCOLMX)                             SUTRA_MAIN...16500
      ALLOCATABLE :: FNBCS(:), IUBCS(:)                                  SUTRA_MAIN...16600
      DIMENSION KTYPE(2)                                                 SUTRA_MAIN...16700
      COMMON /ALC/ ALCBCS,ALCFIN,ALCOBS                                  SUTRA_MAIN...16800
      COMMON /BCSL/ ONCEBCS                                              SUTRA_MAIN...16900
      COMMON /CLAY/ LAYSTR                                               SUTRA_MAIN...17000
      COMMON /CONTRL/ GNUP,GNUU,UP,DTMULT,DTMAX,ME,ISSFLO,ISSTRA,ITCYC,  SUTRA_MAIN...17100
     1   NPCYC,NUCYC,NPRINT,NBCFPR,NBCSPR,NBCPPR,NBCUPR,NLAKPR,IREAD,    SUTRA_MAIN...17200
     1   NBGPPR,NBGUPR,ISTORE,NOUMAT,IUNSAT,IALSAT,KTYPE                 SUTRA_MAIN...17300
      COMMON /DIMEN/ NLAKES, NSIL, NCEL, NPLK                            SUTRA_MAIN...17400
      COMMON /DIMLAY/ NLAYS,NNLAY,NELAY                                  SUTRA_MAIN...17500
      COMMON /DIMS/ NN,NE,NIN,NBI,NCBI,NB,NBHALF,NPBC,NUBC,              SUTRA_MAIN...17600
     1   NSOP,NSOU,NBCN,NPBG,NUBG,NCIDB                                  SUTRA_MAIN...17700
      COMMON /DIMX/ NWI,NWF,NWL,NELT,NNNX,NEX,N48                        SUTRA_MAIN...17800
      COMMON /DIMX2/ NELTA, NNVEC, NDIMIA, NDIMJA                        SUTRA_MAIN...17900
      COMMON /FNAMES/ UNAME,FNAME                                        SUTRA_MAIN...18000
      COMMON /FO/ONCEFO                                                  SUTRA_MAIN...18100
      COMMON /FUNIB/ NFBCS                                               SUTRA_MAIN...18200
      COMMON /FUNITA/ IUNIT                                              SUTRA_MAIN...18300
      COMMON /FUNITS/ K00,K0,K1,K2,K3,K4,K5,K6,K7,K8,K9,                 SUTRA_MAIN...18400
     1   K10,K11,K12,K13,K14,K15,K16,K17,K18,K19,K20,K21,K22,K23         SUTRA_MAIN...18500
      COMMON /ITERAT/ RPM,RPMAX,RUM,RUMAX,ITER,ITRMAX,IPWORS,IUWORS      SUTRA_MAIN...18600
      COMMON /ITSOLI/ ITRMXP,ITOLP,NSAVEP,ITRMXU,ITOLU,NSAVEU            SUTRA_MAIN...18700
      COMMON /ITSOLR/ TOLP,TOLU                                          SUTRA_MAIN...18800
      COMMON /JCOLS/ NCOLPR, LCOLPR, NCOLS5, NCOLS6, J5COL, J6COL        SUTRA_MAIN...18900
      COMMON /KPRBCS/ KINACT                                             SUTRA_MAIN...19000
      COMMON /KPRINT/ KNODAL,KELMNT,KINCID,KPLOTP,KPLOTU,                SUTRA_MAIN...19100
     1   KPANDS,KVEL,KCORT,KBUDG,KSCRN,KPAUSE                            SUTRA_MAIN...19200
      COMMON /LAKU/ LAKUSD                                               SUTRA_MAIN...19300
      COMMON /MEMCNT/ RMVDIM,IMVDIM,I1VDIM,CMVDIM,LMVDIM,PMVDIM          SUTRA_MAIN...19400
      COMMON /MODSOR/ ADSMOD,ADSMOD1                                     SUTRA_MAIN...19500
      COMMON /OBS/ NOBSN,NTOBS,NOBCYC,NOBLIN,NFLOMX                      SUTRA_MAIN...19600
      COMMON /PARAMS/ COMPFL,COMPMA,DRWDU,CW,CS,RHOS,SIGMAW,SIGMAS,      SUTRA_MAIN...19700
     1   RHOW0,URHOW0,VISC0,PRODF1,PRODS1,PRODF0,PRODS0,CHI1,CHI2        SUTRA_MAIN...19800
      COMMON /PLT1/ ONCEK5, ONCEK6, ONCEK7, ONCEK8, ONCESTG              SUTRA_MAIN...19900
      COMMON /PLT2/ ONCEK10, ONCEK11, ONCEK12, ONCEK13, ONCEK14, ONCEK15 SUTRA_MAIN...20000
      COMMON /PLTLK/ ONCEKLK                                             SUTRA_MAIN...20100
      COMMON /SCH/ NSCH,ISCHTS,NSCHAU                                    SUTRA_MAIN...20200
      COMMON /SOLVC/ SOLWRD, SOLNAM                                      SUTRA_MAIN...20300
      COMMON /SOLVN/ NSLVRS                                              SUTRA_MAIN...20400
      COMMON /SOLVI/ KSOLVP, KSOLVU, NN1, NN2, NN3                       SUTRA_MAIN...20500
      COMMON /TIMES/ DELT,TSEC,TMIN,THOUR,TDAY,TWEEK,TMONTH,TYEAR,       SUTRA_MAIN...20600
     1   TMAX,DELTP,DELTU,DLTPM1,DLTUM1,IT,ITBCS,ITRST,ITMAX,TSTART      SUTRA_MAIN...20700
      COMMON /VER/ VERNUM, VERNIN                                        SUTRA_MAIN...20800
C....."NSLVRS" AND THE ARRAYS "SOLWRD" AND "SOLNAM" ARE INITIALIZED      SUTRA_MAIN...20900
C        IN THE BLOCK-DATA SUBPROGRAM "BDINIT"                           SUTRA_MAIN...21000
C                                                                        SUTRA_MAIN...21100
C                                                                        SUTRA_MAIN...21200
C.....COPY PARAMETER VERN (SUTRA VERSION NUMBER) TO VARIABLE VERNUM,     SUTRA_MAIN...21300
C        WHICH IS PASSED THROUGH COMMON BLOCK VER.                       SUTRA_MAIN...21400
      VERNUM = VERN                                                      SUTRA_MAIN...21500
C                                                                        SUTRA_MAIN...21600
C.....SET THE ALLOCATION FLAGS TO FALSE AND INITIALIZE MEMORY COUNTS.    SUTRA_MAIN...21700
      ALLO1 = .FALSE.                                                    SUTRA_MAIN...21800
      ALLO2 = .FALSE.                                                    SUTRA_MAIN...21900
      ALLO3 = .FALSE.                                                    SUTRA_MAIN...22000
      RMVDIM = 0                                                         SUTRA_MAIN...22100
      IMVDIM = 0                                                         SUTRA_MAIN...22200
      I1VDIM = 0                                                         SUTRA_MAIN...22300
      CMVDIM = 0                                                         SUTRA_MAIN...22400
      PMVDIM = 0                                                         SUTRA_MAIN...22500
      LMVDIM = 0                                                         SUTRA_MAIN...22600
C                                                                        SUTRA_MAIN...22700
C.....INITIALIZE FLAG TO INDICATE THAT BCSTEP HAS NOT YET BEEN CALLED    SUTRA_MAIN...22800
C        IN THE MAIN PROGRAM                                             SUTRA_MAIN...22900
      ONCEBCS = .FALSE.                                                  SUTRA_MAIN...23000
C                                                                        SUTRA_MAIN...23100
C_______________________________________________________________________ SUTRA_MAIN...23200
C|                                                                     | SUTRA_MAIN...23300
C|  *****************************************************************  | SUTRA_MAIN...23400
C|  *                                                               *  | SUTRA_MAIN...23500
C|  *   **********  M E M O R Y   A L L O C A T I O N  **********   *  | SUTRA_MAIN...23600
C|  *                                                               *  | SUTRA_MAIN...23700
C|  *   The main arrays used by SUTRA are dimensioned dynamically   *  | SUTRA_MAIN...23800
C|  *   in the main program, SUTRA_MAIN.  The amount of storage     *  | SUTRA_MAIN...23900
C|  *   required by these arrays depends on the dimensionality of   *  | SUTRA_MAIN...24000
C|  *   the problem (2D or 3D), the particular solver(s) used,      *  | SUTRA_MAIN...24100
C|  *   and whether or not the lakes capability is being used.      *  | SUTRA_MAIN...24200
C|  *   During each run, SUTRA writes memory usage information to   *  | SUTRA_MAIN...24300
C|  *   the LST output file.                                        *  | SUTRA_MAIN...24400
C|  *                                                               *  | SUTRA_MAIN...24500
C|  *****************************************************************  | SUTRA_MAIN...24600
C|_____________________________________________________________________| SUTRA_MAIN...24700
C                                                                        SUTRA_MAIN...24800
C                                                                        SUTRA_MAIN...24900
C_______________________________________________________________________ SUTRA_MAIN...25000
C|                                                                     | SUTRA_MAIN...25100
C|  *****************************************************************  | SUTRA_MAIN...25200
C|  *                                                               *  | SUTRA_MAIN...25300
C|  *   ***********  F I L E   A S S I G N M E N T S  ***********   *  | SUTRA_MAIN...25400
C|  *                                                               *  | SUTRA_MAIN...25500
C|  *   Unit K0 contains the FORTRAN unit number and filename       *  | SUTRA_MAIN...25600
C|  *   assignments for the various SUTRA input and output files.   *  | SUTRA_MAIN...25700
C|  *   Each line of Unit K0 begins with a file type, followed by   *  | SUTRA_MAIN...25800
C|  *   a unit number and a filename for that type, all in free     *  | SUTRA_MAIN...25900
C|  *   format. Permitted file types are INP, BCS, ICS, LST, RST,   *  | SUTRA_MAIN...26000
C|  *   NOD, ELE, BCOF, BCOP, BCOS, BCOU, BCOPG, BCOUG, OBS, OBC,   *  | SUTRA_MAIN...26100
C|  *   LKIN, LKBC, LKAR, LKBU, LKST, LKRS, LKN, LKH, and SMY.      *  | SUTRA_MAIN...26200
C|  *   Assignments may be listed in any order.                     *  | SUTRA_MAIN...26300
C|  *   Example ("#" indicates a comment):                          *  | SUTRA_MAIN...26400
C|  *   'INP'   50  'project.inp'   # required                      *  | SUTRA_MAIN...26500
C|  *   'BCS'   52  'project.bcs'   # optional                      *  | SUTRA_MAIN...26600
C|  *   'ICS'   55  'project.ics'   # required                      *  | SUTRA_MAIN...26700
C|  *   'LST'   60  'project.lst'   # required                      *  | SUTRA_MAIN...26800
C|  *   'RST'   66  'project.rst'   # required if restart storage   *  | SUTRA_MAIN...26900
C|  *   'NOD'   70  'project.nod'   # optional                      *  | SUTRA_MAIN...27000
C|  *   'ELE'   75  'project.ele'   # optional                      *  | SUTRA_MAIN...27100
C|  *   'OBS'   80  'project.obs'   # optional                      *  | SUTRA_MAIN...27200
C|  *   'OBC'   85  'project.obc'   # optional                      *  | SUTRA_MAIN...27300
C|  *   'BCOF'  91  'project.bcof'  # optional                      *  | SUTRA_MAIN...27400
C|  *   'BCOP'  92  'project.bcop'  # optional                      *  | SUTRA_MAIN...27500
C|  *   'BCOS'  93  'project.bcos'  # optional                      *  | SUTRA_MAIN...27600
C|  *   'BCOU'  94  'project.bcou'  # optional                      *  | SUTRA_MAIN...27700
C|  *   'BCOPG' 95  'project.bcopg' # optional                      *  | SUTRA_MAIN...27800
C|  *   'BCOUG' 96  'project.bcoug' # optional                      *  | SUTRA_MAIN...27900
C|  *   'LKIN'  40  'project.lkin'  # required for lakes            *  | SUTRA_MAIN...28000
C|  *   'LKBC'  41  'project.lkbc'  # required for lakes            *  | SUTRA_MAIN...28100
C|  *   'LKAR'  42  'project.lkar'  # required for lakes            *  | SUTRA_MAIN...28200
C|  *   'LKBU'  43  'project.lkbu'  # optional                      *  | SUTRA_MAIN...28300
C|  *   'LKST'  44  'project.lkst'  # optional                      *  | SUTRA_MAIN...28400
C|  *   'LKRS'  45  'project.lkrs'  # required if restart w/ lakes  *  | SUTRA_MAIN...28500
C|  *   'LKN '  46  'project.lkn'   # optional                      *  | SUTRA_MAIN...28600
C|  *   'LKH'   47  'project.lkh'   # optional                      *  | SUTRA_MAIN...28700
C|  *   'SMY'   98  'project.smy'   # optional; defaults to         *  | SUTRA_MAIN...28800
C|  *                               #          filename="SUTRA.SMY" *  | SUTRA_MAIN...28900
C|  *                                                               *  | SUTRA_MAIN...29000
C|  *   Note that the filenames for types OBS and OBC are actually  *  | SUTRA_MAIN...29100
C|  *   root names from which SUTRA will automatically generate     *  | SUTRA_MAIN...29200
C|  *   observation output filenames based on the combinations of   *  | SUTRA_MAIN...29300
C|  *   schedules and output formats that appear in the observation *  | SUTRA_MAIN...29400
C|  *   specifications.  If a specified unit number is already      *  | SUTRA_MAIN...29500
C|  *   assigned to another file, SUTRA automatically assigns the   *  | SUTRA_MAIN...29600
C|  *   the next available unit number.                             *  | SUTRA_MAIN...29700
C|  *                                                               *  | SUTRA_MAIN...29800
C|  *****************************************************************  | SUTRA_MAIN...29900
C|_____________________________________________________________________| SUTRA_MAIN...30000
C                                                                        SUTRA_MAIN...30100
C.....SET FILENAME AND FORTRAN UNIT NUMBER FOR UNIT K0                   SUTRA_MAIN...30200
      UNAME = 'SUTRA.FIL'                                                SUTRA_MAIN...30300
      K0 = 10                                                            SUTRA_MAIN...30400
C.....INITIALIZE NFLOMX TO ZERO NOW IN CASE TERMINATION SEQUENCE IS      SUTRA_MAIN...30500
C        CALLED BEFORE NFLOMX GETS SET.                                  SUTRA_MAIN...30600
      NFLOMX = 0                                                         SUTRA_MAIN...30700
C.....ASSIGN UNIT NUMBERS AND OPEN FILE UNITS FOR THIS SIMULATION,       SUTRA_MAIN...30800
C        EXCEPT OBSERVATION OUTPUT FILES.                                SUTRA_MAIN...30900
      ONCEFO = .FALSE.                                                   SUTRA_MAIN...31000
      CALL FOPEN()                                                       SUTRA_MAIN...31100
C.....STORE INP, BCS, AND ICS FILENAMES FOR LATER REFERENCE, SINCE THE   SUTRA_MAIN...31200
C        CORRESPONDING ENTRIES IN FNAME MAY BE OVERWRITTEN BY FILE       SUTRA_MAIN...31300
C        INSERTION.                                                      SUTRA_MAIN...31400
      FNINP = FNAME(1)                                                   SUTRA_MAIN...31500
      FNICS = FNAME(2)                                                   SUTRA_MAIN...31600
      FNLKIN = FNAME(16)                                                 SUTRA_MAIN...31700
      FNLKBC = FNAME(17)                                                 SUTRA_MAIN...31800
      FNLKAR = FNAME(18)                                                 SUTRA_MAIN...31900
      IUINP = IUNIT(1)                                                   SUTRA_MAIN...32000
      IUICS = IUNIT(2)                                                   SUTRA_MAIN...32100
      IULKIN = IUNIT(16)                                                 SUTRA_MAIN...32200
      IULKBC = IUNIT(17)                                                 SUTRA_MAIN...32300
      IULKAR = IUNIT(18)                                                 SUTRA_MAIN...32400
      ALLOCATE (FNBCS(NFBCS), IUBCS(NFBCS))                              SUTRA_MAIN...32500
      FNBCS = FNAMB                                                      SUTRA_MAIN...32600
      IUBCS = IUNIB                                                      SUTRA_MAIN...32700
C                                                                        SUTRA_MAIN...32800
C.....IF LAKES NOT USED, SET NPLK=0.                                     SUTRA_MAIN...32900
      IF (.NOT.LAKUSD) NPLK = 0                                          SUTRA_MAIN...33000
C                                                                        SUTRA_MAIN...33100
C                                                                        SUTRA_MAIN...33200
C.....OUTPUT BANNER                                                      SUTRA_MAIN...33300
      WRITE(K3,110) TRIM(VERNUM)                                         SUTRA_MAIN...33400
  110 FORMAT('1',131('*')////3(132('*')////)////                         SUTRA_MAIN...33500
     1   47X,' SSSS   UU  UU  TTTTTT  RRRRR     AA  '/                   SUTRA_MAIN...33600
     2   47X,'SS   S  UU  UU  T TT T  RR  RR   AAAA '/                   SUTRA_MAIN...33700
     3   47X,'SSSS    UU  UU    TT    RRRRR   AA  AA'/                   SUTRA_MAIN...33800
     4   47X,'    SS  UU  UU    TT    RR R    AAAAAA'/                   SUTRA_MAIN...33900
     5   47X,'SS  SS  UU  UU    TT    RR RR   AA  AA'/                   SUTRA_MAIN...34000
     6   47X,' SSSS    UUUU     TT    RR  RR  AA  AA'/                   SUTRA_MAIN...34100
     7   7(/),37X,'U N I T E D    S T A T E S   ',                       SUTRA_MAIN...34200
     8   'G E O L O G I C A L   S U R V E Y'////                         SUTRA_MAIN...34300
     9   45X,'SUBSURFACE FLOW AND TRANSPORT SIMULATION MODEL'/           SUTRA_MAIN...34400
     *   //58X,'-SUTRA VERSION ',A,'-'///                                SUTRA_MAIN...34500
     A   36X,'*  SATURATED-UNSATURATED FLOW AND SOLUTE OR ENERGY',       SUTRA_MAIN...34600
     B   ' TRANSPORT  *'////4(////132('*')))                             SUTRA_MAIN...34700
C                                                                        SUTRA_MAIN...34800
C_______________________________________________________________________ SUTRA_MAIN...34900
C|                                                                     | SUTRA_MAIN...35000
C|  *****************************************************************  | SUTRA_MAIN...35100
C|  *                                                               *  | SUTRA_MAIN...35200
C|  *   *********  R E A D I N G   I N P U T   D A T A  *********   *  | SUTRA_MAIN...35300
C|  *   *********  A N D   E R R O R   H A N D L I N G  *********   *  | SUTRA_MAIN...35400
C|  *                                                               *  | SUTRA_MAIN...35500
C|  *   SUTRA typically reads input data line by line as follows.   *  | SUTRA_MAIN...35600
C|  *   Subroutine READIF is called to skip over any comment        *  | SUTRA_MAIN...35700
C|  *   lines and read a single line of input data (up to 1000      *  | SUTRA_MAIN...35800
C|  *   characters) into internal file INTFIL. The input data       *  | SUTRA_MAIN...35900
C|  *   are then read from INTFIL. In case of an error, subroutine  *  | SUTRA_MAIN...36000
C|  *   SUTERR is called to report it, and control passes to the    *  | SUTRA_MAIN...36100
C|  *   termination sequence in subroutine TERSEQ.  The variable    *  | SUTRA_MAIN...36200
C|  *   ERRCOD is used to identify the nature of the error and is   *  | SUTRA_MAIN...36300
C|  *   set prior to calling READIF. The variables CHERR, INERR,    *  | SUTRA_MAIN...36400
C|  *   and RLERR can be used to send character, integer, or real   *  | SUTRA_MAIN...36500
C|  *   error information to subroutine SUTERR.                     *  | SUTRA_MAIN...36600
C|  *   Example from the main program:                              *  | SUTRA_MAIN...36700
C|  *                                                               *  | SUTRA_MAIN...36800
C|  *   ERRCOD = 'REA-INP-3'                                        *  | SUTRA_MAIN...36900
C|  *   CALL READIF(K1, 0, INTFIL, ERRCOD)                          *  | SUTRA_MAIN...37000
C|  *   READ(INTFIL,*,IOSTAT=INERR(1)) NN,NE,NPBC,NUBC,             *  | SUTRA_MAIN...37100
C|  *  1   NSOP,NSOU,NOBS                                           *  | SUTRA_MAIN...37200
C|  *   IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR) *  | SUTRA_MAIN...37300
C|  *                                                               *  | SUTRA_MAIN...37400
C|  *****************************************************************  | SUTRA_MAIN...37500
C|_____________________________________________________________________| SUTRA_MAIN...37600
C                                                                        SUTRA_MAIN...37700
C.....INPUT DATASET 1:  OUTPUT HEADING                                   SUTRA_MAIN...37800
      ERRCOD = 'REA-INP-1'                                               SUTRA_MAIN...37900
      CALL READIF(K1, 0, INTFIL, ERRCOD)                                 SUTRA_MAIN...38000
      READ(INTFIL,117,IOSTAT=INERR(1)) TITLE1                            SUTRA_MAIN...38100
      IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)        SUTRA_MAIN...38200
      CALL READIF(K1, 0, INTFIL, ERRCOD)                                 SUTRA_MAIN...38300
      READ(INTFIL,117,IOSTAT=INERR(1)) TITLE2                            SUTRA_MAIN...38400
      IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)        SUTRA_MAIN...38500
  117 FORMAT(80A1)                                                       SUTRA_MAIN...38600
C                                                                        SUTRA_MAIN...38700
C.....INPUT DATASET 2A:  SIMULATION TYPE (TYPE OF TRANSPORT)             SUTRA_MAIN...38800
C        (SET ME=-1 FOR SOLUTE TRANSPORT, ME=+1 FOR ENERGY TRANSPORT)    SUTRA_MAIN...38900
      IALSAT = 0                                                         SUTRA_MAIN...39000
      ERRCOD = 'REA-INP-2A'                                              SUTRA_MAIN...39100
      CALL READIF(K1, 0, INTFIL, ERRCOD)                                 SUTRA_MAIN...39200
      READ(INTFIL,*,IOSTAT=INERR(1)) SIMSTR                              SUTRA_MAIN...39300
      IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)        SUTRA_MAIN...39400
      CALL PRSWDS(SIMSTR, ' ', 5, SIMULA, NWORDS)                        SUTRA_MAIN...39500
      IF(SIMULA(1).NE.'SUTRA     ') THEN                                 SUTRA_MAIN...39600
         ERRCOD = 'INP-2A-1'                                             SUTRA_MAIN...39700
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        SUTRA_MAIN...39800
      END IF                                                             SUTRA_MAIN...39900
      IF (SIMULA(2).EQ.'VERSION   ') THEN                                SUTRA_MAIN...40000
         VERNIN = SIMULA(3)                                              SUTRA_MAIN...40100
         IF (VERNIN.EQ.'2D3D.1 ') THEN                                   SUTRA_MAIN...40200
            VERNIN = '2.0'                                               SUTRA_MAIN...40300
         ELSE IF ((VERNIN.NE.'2.0 ').AND.(VERNIN.NE.'2.1 ').AND.         SUTRA_MAIN...40400
     1            (VERNIN.NE.'2.2 ').AND.(VERNIN.NE.'3.0 ')) THEN        SUTRA_MAIN...40500
            ERRCOD = 'INP-2A-4'                                          SUTRA_MAIN...40600
            CHERR(1) = VERNIN                                            SUTRA_MAIN...40700
            CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                     SUTRA_MAIN...40800
         END IF                                                          SUTRA_MAIN...40900
         IOFF = 2                                                        SUTRA_MAIN...41000
      ELSE                                                               SUTRA_MAIN...41100
         VERNIN = '2.0'                                                  SUTRA_MAIN...41200
         IOFF = 0                                                        SUTRA_MAIN...41300
      END IF                                                             SUTRA_MAIN...41400
      IF (SIMULA(2+IOFF).EQ.'SOLUTE    ') THEN                           SUTRA_MAIN...41500
         GOTO 120                                                        SUTRA_MAIN...41600
      ELSE IF (SIMULA(2+IOFF).EQ.'ENERGY    ') THEN                      SUTRA_MAIN...41700
         GOTO 140                                                        SUTRA_MAIN...41800
      END IF                                                             SUTRA_MAIN...41900
      IF (IOFF.EQ.0) THEN                                                SUTRA_MAIN...42000
         ERRCOD = 'INP-2A-2'                                             SUTRA_MAIN...42100
      ELSE                                                               SUTRA_MAIN...42200
         ERRCOD = 'INP-2A-3'                                             SUTRA_MAIN...42300
      END IF                                                             SUTRA_MAIN...42400
      CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                           SUTRA_MAIN...42500
  120 ME=-1                                                              SUTRA_MAIN...42600
      WRITE(K3,130)                                                      SUTRA_MAIN...42700
  130 FORMAT('1'//132('*')///20X,'* * * * *   S U T R A   S O L U ',     SUTRA_MAIN...42800
     1   'T E   T R A N S P O R T   S I M U L A T I O N   * * * * *'//   SUTRA_MAIN...42900
     2   /132('*')/)                                                     SUTRA_MAIN...43000
      GOTO 160                                                           SUTRA_MAIN...43100
  140 ME=+1                                                              SUTRA_MAIN...43200
      WRITE(K3,150)                                                      SUTRA_MAIN...43300
  150 FORMAT('1'//132('*')///20X,'* * * * *   S U T R A   E N E R ',     SUTRA_MAIN...43400
     1   'G Y   T R A N S P O R T   S I M U L A T I O N   * * * * *'//   SUTRA_MAIN...43500
     2   /132('*')/)                                                     SUTRA_MAIN...43600
  160 CONTINUE                                                           SUTRA_MAIN...43700
C                                                                        SUTRA_MAIN...43800
C.....INPUT DATASET 2B:  MESH STRUCTURE                                  SUTRA_MAIN...43900
      ERRCOD = 'REA-INP-2B'                                              SUTRA_MAIN...44000
      CALL READIF(K1, 0, INTFIL, ERRCOD)                                 SUTRA_MAIN...44100
      READ(INTFIL,*,IOSTAT=INERR(1)) MSHSTR                              SUTRA_MAIN...44200
      IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)        SUTRA_MAIN...44300
      CALL PRSWDS(MSHSTR, ' ', 2, MSHTYP, NWORDS)                        SUTRA_MAIN...44400
C.....KTYPE SET ACCORDING TO THE TYPE OF FINITE-ELEMENT MESH:            SUTRA_MAIN...44500
C        2D MESH          ==>   KTYPE(1) = 2                             SUTRA_MAIN...44600
C        3D MESH          ==>   KTYPE(1) = 3                             SUTRA_MAIN...44700
C        IRREGULAR MESH   ==>   KTYPE(2) = 0                             SUTRA_MAIN...44800
C        LAYERED MESH     ==>   KTYPE(2) = 1                             SUTRA_MAIN...44900
C        REGULAR MESH     ==>   KTYPE(2) = 2                             SUTRA_MAIN...45000
C        BLOCKWISE MESH   ==>   KTYPE(2) = 3                             SUTRA_MAIN...45100
      IF (MSHTYP(1).EQ.'2D        ') THEN                                SUTRA_MAIN...45200
         KTYPE(1) = 2                                                    SUTRA_MAIN...45300
      ELSE IF (MSHTYP(1).EQ.'3D        ') THEN                           SUTRA_MAIN...45400
         KTYPE(1) = 3                                                    SUTRA_MAIN...45500
      ELSE                                                               SUTRA_MAIN...45600
         ERRCOD = 'INP-2B-1'                                             SUTRA_MAIN...45700
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        SUTRA_MAIN...45800
      END IF                                                             SUTRA_MAIN...45900
      IF ((MSHTYP(2).EQ.'REGULAR   ').OR.                                SUTRA_MAIN...46000
     1    (MSHTYP(2).EQ.'BLOCKWISE ')) THEN                              SUTRA_MAIN...46100
         ERRCOD = 'REA-INP-2B'                                           SUTRA_MAIN...46200
         IF (KTYPE(1).EQ.2) THEN                                         SUTRA_MAIN...46300
            READ(INTFIL,*,IOSTAT=INERR(1)) MSHSTR, NN1, NN2              SUTRA_MAIN...46400
            NN3 = 1                                                      SUTRA_MAIN...46500
         ELSE                                                            SUTRA_MAIN...46600
            READ(INTFIL,*,IOSTAT=INERR(1)) MSHSTR, NN1, NN2, NN3         SUTRA_MAIN...46700
         END IF                                                          SUTRA_MAIN...46800
         IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)     SUTRA_MAIN...46900
         IF ((NN1.LT.2).OR.(NN2.LT.2).OR.                                SUTRA_MAIN...47000
     1      ((KTYPE(1).EQ.3).AND.(NN3.LT.2))) THEN                       SUTRA_MAIN...47100
            ERRCOD = 'INP-2B-3'                                          SUTRA_MAIN...47200
            CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                     SUTRA_MAIN...47300
         END IF                                                          SUTRA_MAIN...47400
         IF (MSHTYP(2).EQ.'BLOCKWISE ') THEN                             SUTRA_MAIN...47500
            KTYPE(2) = 3                                                 SUTRA_MAIN...47600
            ERRCOD = 'REA-INP-2B'                                        SUTRA_MAIN...47700
            DO 177 I1=1,KTYPE(1)                                         SUTRA_MAIN...47800
               CALL READIF(K1, 0, INTFIL, ERRCOD)                        SUTRA_MAIN...47900
               READ(INTFIL,*,IOSTAT=INERR(1)) IDUM1, (IDUM2, I2=1,IDUM1) SUTRA_MAIN...48000
               IF (INERR(1).NE.0) CALL SUTERR(ERRCOD,CHERR,INERR,RLERR)  SUTRA_MAIN...48100
  177       CONTINUE                                                     SUTRA_MAIN...48200
         ELSE                                                            SUTRA_MAIN...48300
            KTYPE(2) = 2                                                 SUTRA_MAIN...48400
         END IF                                                          SUTRA_MAIN...48500
      ELSE IF (MSHTYP(2).EQ.'LAYERED   ') THEN                           SUTRA_MAIN...48600
         IF (KTYPE(1).EQ.2) THEN                                         SUTRA_MAIN...48700
            ERRCOD = 'INP-2B-5'                                          SUTRA_MAIN...48800
            CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                     SUTRA_MAIN...48900
         END IF                                                          SUTRA_MAIN...49000
         KTYPE(2) = 1                                                    SUTRA_MAIN...49100
         ERRCOD = 'REA-INP-2B'                                           SUTRA_MAIN...49200
         READ(INTFIL,*,IOSTAT=INERR(1)) MSHSTR,NLAYS,NNLAY,NELAY,LAYSTR  SUTRA_MAIN...49300
         IF (INERR(1).NE.0) CALL SUTERR(ERRCOD,CHERR,INERR,RLERR)        SUTRA_MAIN...49400
         CALL PRSWDS(LAYSTR, ' ', 1, LAYNOR, NWORDS)                     SUTRA_MAIN...49500
         IF ((LAYNOR(1).NE.'ACROSS').AND.(LAYNOR(1).NE.'WITHIN')) THEN   SUTRA_MAIN...49600
            ERRCOD = 'INP-2B-6'                                          SUTRA_MAIN...49700
            CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                     SUTRA_MAIN...49800
         END IF                                                          SUTRA_MAIN...49900
         IF ((NLAYS.LT.2).OR.(NNLAY.LT.4).OR.(NELAY.LT.1)) THEN          SUTRA_MAIN...50000
            ERRCOD = 'INP-2B-7'                                          SUTRA_MAIN...50100
            CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                     SUTRA_MAIN...50200
         END IF                                                          SUTRA_MAIN...50300
      ELSE IF (MSHTYP(2).EQ.'IRREGULAR ') THEN                           SUTRA_MAIN...50400
         KTYPE(2) = 0                                                    SUTRA_MAIN...50500
      ELSE                                                               SUTRA_MAIN...50600
         ERRCOD = 'INP-2B-4'                                             SUTRA_MAIN...50700
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        SUTRA_MAIN...50800
      END IF                                                             SUTRA_MAIN...50900
      IF (LAKUSD.AND.((KTYPE(1).NE.3).OR.(KTYPE(2).LT.1))) THEN          SUTRA_MAIN...51000
         ERRCOD = 'INP-2B-8'                                             SUTRA_MAIN...51100
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        SUTRA_MAIN...51200
      END IF                                                             SUTRA_MAIN...51300
C                                                                        SUTRA_MAIN...51400
C.....OUTPUT DATASET 1                                                   SUTRA_MAIN...51500
      WRITE(K3,180) TITLE1,TITLE2                                        SUTRA_MAIN...51600
  180 FORMAT(////1X,131('-')//26X,80A1//26X,80A1//1X,131('-'))           SUTRA_MAIN...51700
C                                                                        SUTRA_MAIN...51800
C.....OUTPUT FILE UNIT ASSIGNMENTS                                       SUTRA_MAIN...51900
      WRITE(K3,200) IUINP,FNINP,IUICS,FNICS                              SUTRA_MAIN...52000
  200 FORMAT(/////11X,'F I L E   U N I T   A S S I G N M E N T S'//      SUTRA_MAIN...52100
     1   13X,'INPUT UNITS:'/                                             SUTRA_MAIN...52200
     2   13X,' INP FILE (MAIN INPUT)          ',I7,4X,                   SUTRA_MAIN...52300
     3      'ASSIGNED TO ',A80/                                          SUTRA_MAIN...52400
     4   13X,' ICS FILE (INITIAL CONDITIONS)  ',I7,4X,                   SUTRA_MAIN...52500
     5      'ASSIGNED TO ',A80)                                          SUTRA_MAIN...52600
      IF(IUNIT(9).NE.-1) THEN                                            SUTRA_MAIN...52700
         DO 202 NFB=1,NFBCS                                              SUTRA_MAIN...52800
            WRITE(K3,201) IUBCS(NFB),FNBCS(NFB)                          SUTRA_MAIN...52900
  201       FORMAT(13X,' BCS FILE (TIME-VAR. BND. COND.)',I7,4X,         SUTRA_MAIN...53000
     1      'ASSIGNED TO ',A80)                                          SUTRA_MAIN...53100
  202    CONTINUE                                                        SUTRA_MAIN...53200
      END IF                                                             SUTRA_MAIN...53300
      IF(IULKIN.NE.-1) WRITE(K3,203) IULKIN,FNLKIN                       SUTRA_MAIN...53400
  203 FORMAT(13X,' LKIN FILE (LAKE MAIN INPUT)    ',I7,4X,               SUTRA_MAIN...53500
     1   'ASSIGNED TO ',A80)                                             SUTRA_MAIN...53600
      IF(IULKBC.NE.-1) WRITE(K3,204) IULKBC,FNLKBC                       SUTRA_MAIN...53700
  204 FORMAT(13X,' LKBC FILE (LAKE-BC INTERACT.)  ',I7,4X,               SUTRA_MAIN...53800
     1   'ASSIGNED TO ',A80)                                             SUTRA_MAIN...53900
      IF(IULKAR.NE.-1) WRITE(K3,205) IULKAR,FNLKAR                       SUTRA_MAIN...54000
  205 FORMAT(13X,' LKAR FILE (LAKE AREA INPUT)    ',I7,4X,               SUTRA_MAIN...54100
     1   'ASSIGNED TO ',A80)                                             SUTRA_MAIN...54200
      WRITE(K3,206) IUNIT(0),FNAME(0),IUNIT(3),FNAME(3)                  SUTRA_MAIN...54300
  206 FORMAT(/                                                           SUTRA_MAIN...54400
     6   13X,'OUTPUT UNITS:'/                                            SUTRA_MAIN...54500
     7   13X,' SMY FILE (RUN SUMMARY)         ',I7,4X,                   SUTRA_MAIN...54600
     8      'ASSIGNED TO ',A80/                                          SUTRA_MAIN...54700
     9   13X,' LST FILE (GENERAL OUTPUT)      ',I7,4X,                   SUTRA_MAIN...54800
     T      'ASSIGNED TO ',A80)                                          SUTRA_MAIN...54900
      IF(IUNIT(4).NE.-1) WRITE(K3,207) IUNIT(4),FNAME(4)                 SUTRA_MAIN...55000
  207 FORMAT(13X,' RST FILE (RESTART DATA)        ',I7,4X,               SUTRA_MAIN...55100
     1   'ASSIGNED TO ',A80)                                             SUTRA_MAIN...55200
      IF(IUNIT(5).NE.-1) WRITE(K3,208) IUNIT(5),FNAME(5)                 SUTRA_MAIN...55300
  208 FORMAT(13X,' NOD FILE (NODEWISE OUTPUT)     ',I7,4X,               SUTRA_MAIN...55400
     1   'ASSIGNED TO ',A80)                                             SUTRA_MAIN...55500
      IF(IUNIT(6).NE.-1) WRITE(K3,209) IUNIT(6),FNAME(6)                 SUTRA_MAIN...55600
  209 FORMAT(13X,' ELE FILE (VELOCITY OUTPUT)     ',I7,4X,               SUTRA_MAIN...55700
     1   'ASSIGNED TO ',A80)                                             SUTRA_MAIN...55800
      IF(IUNIT(7).NE.-1) WRITE(K3,210) IUNIT(7),                         SUTRA_MAIN...55900
     1   TRIM(FNAME(7)) // " (BASE FILENAME)"                            SUTRA_MAIN...56000
  210 FORMAT(13X,' OBS FILE (OBSERVATION OUTPUT) (',I7,')',3X,           SUTRA_MAIN...56100
     1   'ASSIGNED TO ',A)                                               SUTRA_MAIN...56200
      IF(IUNIT(8).NE.-1) WRITE(K3,211) IUNIT(8),                         SUTRA_MAIN...56300
     1   TRIM(FNAME(8)) // " (BASE FILENAME)"                            SUTRA_MAIN...56400
  211 FORMAT(13X,' OBC FILE (OBSERVATION OUTPUT) (',I7,')',3X,           SUTRA_MAIN...56500
     1   'ASSIGNED TO ',A)                                               SUTRA_MAIN...56600
      IF(IUNIT(10).NE.-1) WRITE(K3,212) IUNIT(10),FNAME(10)              SUTRA_MAIN...56700
  212 FORMAT(13X,' BCOF FILE (BND. COND. OUTPUT)  ',I7,4X,               SUTRA_MAIN...56800
     1   'ASSIGNED TO ',A80)                                             SUTRA_MAIN...56900
      IF(IUNIT(11).NE.-1) WRITE(K3,213) IUNIT(11),FNAME(11)              SUTRA_MAIN...57000
  213 FORMAT(13X,' BCOS FILE (BND. COND. OUTPUT)  ',I7,4X,               SUTRA_MAIN...57100
     1   'ASSIGNED TO ',A80)                                             SUTRA_MAIN...57200
      IF(IUNIT(12).NE.-1) WRITE(K3,214) IUNIT(12),FNAME(12)              SUTRA_MAIN...57300
  214 FORMAT(13X,' BCOP FILE (BND. COND. OUTPUT)  ',I7,4X,               SUTRA_MAIN...57400
     1   'ASSIGNED TO ',A80)                                             SUTRA_MAIN...57500
      IF(IUNIT(13).NE.-1) WRITE(K3,215) IUNIT(13),FNAME(13)              SUTRA_MAIN...57600
  215 FORMAT(13X,' BCOU FILE (BND. COND. OUTPUT)  ',I7,4X,               SUTRA_MAIN...57700
     1   'ASSIGNED TO ',A80)                                             SUTRA_MAIN...57800
      IF(IUNIT(14).NE.-1) WRITE(K3,216) IUNIT(14),FNAME(14)              SUTRA_MAIN...57900
  216 FORMAT(13X,' BCOPG FILE (BND. COND. OUTPUT) ',I7,4X,               SUTRA_MAIN...58000
     1   'ASSIGNED TO ',A80)                                             SUTRA_MAIN...58100
      IF(IUNIT(15).NE.-1) WRITE(K3,217) IUNIT(15),FNAME(15)              SUTRA_MAIN...58200
  217 FORMAT(13X,' BCOUG FILE (BND. COND. OUTPUT) ',I7,4X,               SUTRA_MAIN...58300
     1   'ASSIGNED TO ',A80)                                             SUTRA_MAIN...58400
      IF(IUNIT(19).NE.-1) WRITE(K3,218) IUNIT(19),FNAME(19)              SUTRA_MAIN...58500
  218 FORMAT(13X,' LKBU FILE (LAKE BUDGET OUTPUT) ',I7,4X,               SUTRA_MAIN...58600
     1   'ASSIGNED TO ',A80)                                             SUTRA_MAIN...58700
      IF(IUNIT(20).NE.-1) WRITE(K3,219) IUNIT(20),FNAME(20)              SUTRA_MAIN...58800
  219 FORMAT(13X,' LKST FILE (LAKE STAGE OUTPUT)  ',I7,4X,               SUTRA_MAIN...58900
     1   'ASSIGNED TO ',A80)                                             SUTRA_MAIN...59000
      IF(IUNIT(21).NE.-1) WRITE(K3,220) IUNIT(21),FNAME(21)              SUTRA_MAIN...59100
  220 FORMAT(13X,' LKRS FILE (LAKE RESTART DATA)  ',I7,4X,               SUTRA_MAIN...59200
     1   'ASSIGNED TO ',A80)                                             SUTRA_MAIN...59300
      IF(IUNIT(22).NE.-1) WRITE(K3,221) IUNIT(22),FNAME(22)              SUTRA_MAIN...59400
  221 FORMAT(13X,' LKN FILE (LAKE NUMBER OUTPUT)  ',I7,4X,               SUTRA_MAIN...59500
     1   'ASSIGNED TO ',A80)                                             SUTRA_MAIN...59600
      IF(IUNIT(23).NE.-1) WRITE(K3,222) IUNIT(23),FNAME(23)              SUTRA_MAIN...59700
  222 FORMAT(13X,' LKH FILE (LAKE HIERARCHY)      ',I7,4X,               SUTRA_MAIN...59800
     1   'ASSIGNED TO ',A80)                                             SUTRA_MAIN...59900
      IF ((IUNIT(7).NE.-1).OR.(IUNIT(8).NE.-1)) WRITE(K3,223)            SUTRA_MAIN...60000
  223 FORMAT(/14X,'NAMES FOR OBS AND OBC FILES WILL BE GENERATED',       SUTRA_MAIN...60100
     1   ' AUTOMATICALLY FROM THE BASE NAMES LISTED ABOVE AND SCHEDULE', SUTRA_MAIN...60200
     2   ' NAMES'/14X,'LISTED LATER IN THIS FILE.  UNIT NUMBERS',        SUTRA_MAIN...60300
     3   ' ASSIGNED TO THESE FILES WILL BE THE FIRST AVAILABLE',         SUTRA_MAIN...60400
     4   ' NUMBERS GREATER THAN'/14X,'OR EQUAL TO THE VALUES LISTED',    SUTRA_MAIN...60500
     5   ' ABOVE IN PARENTHESES.')                                       SUTRA_MAIN...60600
      DEALLOCATE (FNBCS,IUBCS)                                           SUTRA_MAIN...60700
C                                                                        SUTRA_MAIN...60800
C.....INPUT DATASET 3:  SIMULATION CONTROL NUMBERS                       SUTRA_MAIN...60900
      ERRCOD = 'REA-INP-3'                                               SUTRA_MAIN...61000
      CALL READIF(K1, 0, INTFIL, ERRCOD)                                 SUTRA_MAIN...61100
      IF ((VERNIN.EQ."2.0").OR.(VERNIN.EQ."2.1").OR.(VERNIN.EQ."2.2"))   SUTRA_MAIN...61200
     1   THEN                                                            SUTRA_MAIN...61300
         READ(INTFIL,*,IOSTAT=INERR(1)) NN,NE,NPBC,NUBC,NSOP,NSOU,NOBS   SUTRA_MAIN...61400
      ELSE                                                               SUTRA_MAIN...61500
         READ(INTFIL,*,IOSTAT=INERR(1)) NN,NE,NPBC,NUBC,NSOP,NSOU,       SUTRA_MAIN...61600
     1      NPBG,NUBG,NOBS                                               SUTRA_MAIN...61700
      END IF                                                             SUTRA_MAIN...61800
      IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)        SUTRA_MAIN...61900
      IF (KTYPE(2).GT.1) THEN                                            SUTRA_MAIN...62000
         NN123 = NN1*NN2*NN3                                             SUTRA_MAIN...62100
         IF(NN123.NE.NN) THEN                                            SUTRA_MAIN...62200
           ERRCOD = 'INP-2B,3-1'                                         SUTRA_MAIN...62300
           CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                      SUTRA_MAIN...62400
         END IF                                                          SUTRA_MAIN...62500
         IF (KTYPE(1).EQ.3) THEN                                         SUTRA_MAIN...62600
            NE123 = (NN1 - 1)*(NN2 - 1)*(NN3 - 1)                        SUTRA_MAIN...62700
         ELSE                                                            SUTRA_MAIN...62800
            NE123 = (NN1 - 1)*(NN2 - 1)                                  SUTRA_MAIN...62900
         END IF                                                          SUTRA_MAIN...63000
         IF(NE123.NE.NE) THEN                                            SUTRA_MAIN...63100
           ERRCOD = 'INP-2B,3-2'                                         SUTRA_MAIN...63200
           CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                      SUTRA_MAIN...63300
         END IF                                                          SUTRA_MAIN...63400
      ELSE IF (MSHTYP(2).EQ.'LAYERED   ') THEN                           SUTRA_MAIN...63500
         NNTOT = NLAYS*NNLAY                                             SUTRA_MAIN...63600
         IF(NNTOT.NE.NN) THEN                                            SUTRA_MAIN...63700
           ERRCOD = 'INP-2B,3-3'                                         SUTRA_MAIN...63800
           CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                      SUTRA_MAIN...63900
         END IF                                                          SUTRA_MAIN...64000
         NETOT = (NLAYS - 1)*NELAY                                       SUTRA_MAIN...64100
         IF(NETOT.NE.NE) THEN                                            SUTRA_MAIN...64200
           ERRCOD = 'INP-2B,3-4'                                         SUTRA_MAIN...64300
           CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                      SUTRA_MAIN...64400
         END IF                                                          SUTRA_MAIN...64500
      ENDIF                                                              SUTRA_MAIN...64600
C                                                                        SUTRA_MAIN...64700
C.....INPUT AND OUTPUT DATASET 4:  SIMULATION MODE OPTIONS               SUTRA_MAIN...64800
      ERRCOD = 'REA-INP-4'                                               SUTRA_MAIN...64900
      CALL READIF(K1, 0, INTFIL, ERRCOD)                                 SUTRA_MAIN...65000
      READ(INTFIL,*,IOSTAT=INERR(1)) UNSSTR,SSFSTR,SSTSTR,RDSTR,ISTORE   SUTRA_MAIN...65100
      IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)        SUTRA_MAIN...65200
      CALL PRSWDS(UNSSTR, ' ', 1, CUNSAT, NWORDS)                        SUTRA_MAIN...65300
      CALL PRSWDS(SSFSTR, ' ', 1, CSSFLO, NWORDS)                        SUTRA_MAIN...65400
      CALL PRSWDS(SSTSTR, ' ', 1, CSSTRA, NWORDS)                        SUTRA_MAIN...65500
      CALL PRSWDS(RDSTR,  ' ', 1, CREAD,  NWORDS)                        SUTRA_MAIN...65600
      ISMERR = 0                                                         SUTRA_MAIN...65700
      IF (CUNSAT.EQ.'UNSATURATED') THEN                                  SUTRA_MAIN...65800
         IUNSAT = +1                                                     SUTRA_MAIN...65900
         IALSAT = +1                                                     SUTRA_MAIN...66000
      ELSE IF (CUNSAT.EQ.'SATURATED') THEN                               SUTRA_MAIN...66100
         IUNSAT = 0                                                      SUTRA_MAIN...66200
      ELSE                                                               SUTRA_MAIN...66300
         ERRCOD = 'INP-4-1'                                              SUTRA_MAIN...66400
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        SUTRA_MAIN...66500
      END IF                                                             SUTRA_MAIN...66600
      IF (CSSFLO.EQ.'TRANSIENT') THEN                                    SUTRA_MAIN...66700
         ISSFLO = 0                                                      SUTRA_MAIN...66800
      ELSE IF (CSSFLO.EQ.'STEADY') THEN                                  SUTRA_MAIN...66900
         ISSFLO = +1                                                     SUTRA_MAIN...67000
      ELSE                                                               SUTRA_MAIN...67100
         ERRCOD = 'INP-4-2'                                              SUTRA_MAIN...67200
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        SUTRA_MAIN...67300
      END IF                                                             SUTRA_MAIN...67400
      IF (CSSTRA.EQ.'TRANSIENT') THEN                                    SUTRA_MAIN...67500
         ISSTRA = 0                                                      SUTRA_MAIN...67600
      ELSE IF (CSSTRA.EQ.'STEADY') THEN                                  SUTRA_MAIN...67700
         ISSTRA = +1                                                     SUTRA_MAIN...67800
      ELSE                                                               SUTRA_MAIN...67900
         ERRCOD = 'INP-4-3'                                              SUTRA_MAIN...68000
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        SUTRA_MAIN...68100
      END IF                                                             SUTRA_MAIN...68200
      IF (LAKUSD.AND.(CSSTRA.NE.CSSFLO)) THEN                            SUTRA_MAIN...68300
         ERRCOD = 'INP-4-6'                                              SUTRA_MAIN...68400
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        SUTRA_MAIN...68500
      END IF                                                             SUTRA_MAIN...68600
      IF (CREAD.EQ.'COLD') THEN                                          SUTRA_MAIN...68700
         IREAD = +1                                                      SUTRA_MAIN...68800
      ELSE IF (CREAD.EQ.'WARM') THEN                                     SUTRA_MAIN...68900
         IREAD = -1                                                      SUTRA_MAIN...69000
      ELSE                                                               SUTRA_MAIN...69100
         ERRCOD = 'INP-4-4'                                              SUTRA_MAIN...69200
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        SUTRA_MAIN...69300
      END IF                                                             SUTRA_MAIN...69400
      WRITE(K3,230)                                                      SUTRA_MAIN...69500
  230 FORMAT(////11X,'S I M U L A T I O N   M O D E   ',                 SUTRA_MAIN...69600
     1   'O P T I O N S'/)                                               SUTRA_MAIN...69700
      IF(ISSTRA.EQ.1.AND.ISSFLO.NE.1) THEN                               SUTRA_MAIN...69800
         ERRCOD = 'INP-4-5'                                              SUTRA_MAIN...69900
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        SUTRA_MAIN...70000
      ENDIF                                                              SUTRA_MAIN...70100
      IF(IUNSAT.EQ.+1) WRITE(K3,231)                                     SUTRA_MAIN...70200
      IF(IUNSAT.EQ.0) WRITE(K3,232)                                      SUTRA_MAIN...70300
  231 FORMAT(11X,'- ALLOW UNSATURATED AND SATURATED FLOW:  UNSATURATED', SUTRA_MAIN...70400
     1   ' PROPERTIES ARE USER-PROGRAMMED IN SUBROUTINE   U N S A T')    SUTRA_MAIN...70500
  232 FORMAT(11X,'- ASSUME SATURATED FLOW ONLY')                         SUTRA_MAIN...70600
      IF(ISSFLO.EQ.+1.AND.ME.EQ.-1) WRITE(K3,233)                        SUTRA_MAIN...70700
      IF(ISSFLO.EQ.+1.AND.ME.EQ.+1) WRITE(K3,234)                        SUTRA_MAIN...70800
      IF(ISSFLO.EQ.0) WRITE(K3,235)                                      SUTRA_MAIN...70900
  233 FORMAT(11X,'- ASSUME STEADY-STATE FLOW FIELD CONSISTENT WITH ',    SUTRA_MAIN...71000
     1   'INITIAL CONCENTRATION CONDITIONS')                             SUTRA_MAIN...71100
  234 FORMAT(11X,'- ASSUME STEADY-STATE FLOW FIELD CONSISTENT WITH ',    SUTRA_MAIN...71200
     1   'INITIAL TEMPERATURE CONDITIONS')                               SUTRA_MAIN...71300
  235 FORMAT(11X,'- ALLOW TIME-DEPENDENT FLOW FIELD')                    SUTRA_MAIN...71400
      IF(ISSTRA.EQ.+1) WRITE(K3,236)                                     SUTRA_MAIN...71500
      IF(ISSTRA.EQ.0) WRITE(K3,237)                                      SUTRA_MAIN...71600
  236 FORMAT(11X,'- ASSUME STEADY-STATE TRANSPORT')                      SUTRA_MAIN...71700
  237 FORMAT(11X,'- ALLOW TIME-DEPENDENT TRANSPORT')                     SUTRA_MAIN...71800
      IF(IREAD.EQ.-1) WRITE(K3,238)                                      SUTRA_MAIN...71900
      IF(IREAD.EQ.+1) WRITE(K3,239)                                      SUTRA_MAIN...72000
  238 FORMAT(11X,'- WARM START - SIMULATION IS TO BE ',                  SUTRA_MAIN...72100
     1   'CONTINUED FROM PREVIOUSLY-STORED DATA')                        SUTRA_MAIN...72200
  239 FORMAT(11X,'- COLD START - BEGIN NEW SIMULATION')                  SUTRA_MAIN...72300
      IF(ISTORE.GT.0) WRITE(K3,240) ISTORE                               SUTRA_MAIN...72400
      IF(ISTORE.EQ.0) WRITE(K3,241)                                      SUTRA_MAIN...72500
  240 FORMAT(11X,'- STORE RESULTS AFTER EVERY',I9,' TIME STEPS IN',      SUTRA_MAIN...72600
     1   ' RESTART FILE AS BACKUP AND FOR USE IN A SIMULATION RESTART')  SUTRA_MAIN...72700
  241 FORMAT(11X,'- DO NOT STORE RESULTS FOR USE IN A',                  SUTRA_MAIN...72800
     1   ' RESTART OF SIMULATION')                                       SUTRA_MAIN...72900
C.....OUTPUT DATASET 3                                                   SUTRA_MAIN...73000
      IF(ME.EQ.-1)                                                       SUTRA_MAIN...73100
     1   WRITE(K3,245) NN,NE,NPBC,NUBC,NSOP,NSOU,NOBS                    SUTRA_MAIN...73200
  245 FORMAT(////11X,'S I M U L A T I O N   C O N T R O L   ',           SUTRA_MAIN...73300
     1   'N U M B E R S'// 8X,I9,5X,'NUMBER OF NODES IN FINITE-',        SUTRA_MAIN...73400
     2   'ELEMENT MESH'/ 8X,I9,5X,'NUMBER OF ELEMENTS IN MESH'//         SUTRA_MAIN...73500
     3    8X,I9,5X,'EXACT NUMBER OF NODES IN MESH AT WHICH ',            SUTRA_MAIN...73600
     4   'PRESSURE IS A SPECIFIED CONSTANT OR FUNCTION OF TIME'/         SUTRA_MAIN...73700
     5    8X,I9,5X,'EXACT NUMBER OF NODES IN MESH AT WHICH ',            SUTRA_MAIN...73800
     6   'SOLUTE CONCENTRATION IS A SPECIFIED CONSTANT OR ',             SUTRA_MAIN...73900
     7   'FUNCTION OF TIME'// 8X,I9,5X,'EXACT NUMBER OF NODES AT',       SUTRA_MAIN...74000
     8   ' WHICH FLUID INFLOW OR OUTFLOW IS A SPECIFIED CONSTANT',       SUTRA_MAIN...74100
     9   ' OR FUNCTION OF TIME'/ 8X,I9,5X,'EXACT NUMBER OF NODES AT',    SUTRA_MAIN...74200
     A   ' WHICH A SOURCE OR SINK OF SOLUTE MASS IS A SPECIFIED ',       SUTRA_MAIN...74300
     B   'CONSTANT OR FUNCTION OF TIME'// 8X,I9,5X,'EXACT NUMBER OF ',   SUTRA_MAIN...74400
     C   'NODES AT WHICH PRESSURE AND CONCENTRATION WILL BE OBSERVED')   SUTRA_MAIN...74500
C                                                                        SUTRA_MAIN...74600
      IF(ME.EQ.+1)                                                       SUTRA_MAIN...74700
     1    WRITE(K3,247) NN,NE,NPBC,NUBC,NSOP,NSOU,NOBS                   SUTRA_MAIN...74800
  247 FORMAT(////11X,'S I M U L A T I O N   C O N T R O L   ',           SUTRA_MAIN...74900
     1   'N U M B E R S'// 8X,I9,5X,'NUMBER OF NODES IN FINITE-',        SUTRA_MAIN...75000
     2   'ELEMENT MESH'/ 8X,I9,5X,'NUMBER OF ELEMENTS IN MESH'//         SUTRA_MAIN...75100
     3    8X,I9,5X,'EXACT NUMBER OF NODES IN MESH AT WHICH ',            SUTRA_MAIN...75200
     4   'PRESSURE IS A SPECIFIED CONSTANT OR FUNCTION OF TIME'/         SUTRA_MAIN...75300
     5    8X,I9,5X,'EXACT NUMBER OF NODES IN MESH AT WHICH ',            SUTRA_MAIN...75400
     6   'TEMPERATURE IS A SPECIFIED CONSTANT OR ',                      SUTRA_MAIN...75500
     7   'FUNCTION OF TIME'// 8X,I9,5X,'EXACT NUMBER OF NODES AT',       SUTRA_MAIN...75600
     8   ' WHICH FLUID INFLOW OR OUTFLOW IS A SPECIFIED CONSTANT',       SUTRA_MAIN...75700
     9   ' OR FUNCTION OF TIME'/ 8X,I9,5X,'EXACT NUMBER OF NODES AT',    SUTRA_MAIN...75800
     A   ' WHICH A SOURCE OR SINK OF ENERGY IS A SPECIFIED CONSTANT',    SUTRA_MAIN...75900
     B   ' OR FUNCTION OF TIME'// 8X,I9,5X,'EXACT NUMBER OF NODES ',     SUTRA_MAIN...76000
     C   'AT WHICH PRESSURE AND TEMPERATURE WILL BE OBSERVED')           SUTRA_MAIN...76100
C                                                                        SUTRA_MAIN...76200
C.....INPUT DATASETS 5 - 7 (NUMERICAL, TEMPORAL, AND ITERATION CONTROLS) SUTRA_MAIN...76300
      CALL INDAT0()                                                      SUTRA_MAIN...76400
C.....KSOLVP AND KSOLVU HAVE BEEN SET ACCORDING TO THE SOLVERS SELECTED: SUTRA_MAIN...76500
C        BANDED GAUSSIAN ELIMINATION (DIRECT)   ==>   0                  SUTRA_MAIN...76600
C        IC-PRECONDITIONED CG                   ==>   1                  SUTRA_MAIN...76700
C        ILU-PRECONDITIONED GMRES               ==>   2                  SUTRA_MAIN...76800
C        ILU-PRECONDITIONED ORTHOMIN            ==>   3                  SUTRA_MAIN...76900
C                                                                        SUTRA_MAIN...77000
C.....OUTPUT DATASETS 7B & 7C                                            SUTRA_MAIN...77100
      WRITE(K3,261)                                                      SUTRA_MAIN...77200
  261 FORMAT(////11X,'S O L V E R - R E L A T E D   ',                   SUTRA_MAIN...77300
     1   'P A R A M E T E R S')                                          SUTRA_MAIN...77400
C.....OUTPUT DATASETS 3B & 3C                                            SUTRA_MAIN...77500
  266 IF (KSOLVP.NE.0) THEN                                              SUTRA_MAIN...77600
         WRITE(K3,268)                                                   SUTRA_MAIN...77700
     1      SOLNAM(KSOLVP), ITRMXP, TOLP,                                SUTRA_MAIN...77800
     2      SOLNAM(KSOLVU), ITRMXU, TOLU                                 SUTRA_MAIN...77900
  268    FORMAT(                                                         SUTRA_MAIN...78000
     1      /13X,'SOLVER FOR P: ',A40                                    SUTRA_MAIN...78100
     2      //20X,I6,5X,'MAXIMUM NUMBER OF MATRIX SOLVER ITERATIONS',    SUTRA_MAIN...78200
     3           ' DURING P SOLUTION'                                    SUTRA_MAIN...78300
     4      /11X,1PE15.4,5X,'CONVERGENCE TOLERANCE FOR MATRIX',          SUTRA_MAIN...78400
     5           ' SOLVER ITERATIONS DURING P SOLUTION'                  SUTRA_MAIN...78500
     6      //13X,'SOLVER FOR U: ',A40                                   SUTRA_MAIN...78600
     7      //20X,I6,5X,'MAXIMUM NUMBER OF MATRIX SOLVER ITERATIONS',    SUTRA_MAIN...78700
     8           ' DURING U SOLUTION'                                    SUTRA_MAIN...78800
     9      /11X,1PE15.4,5X,'CONVERGENCE TOLERANCE FOR MATRIX',          SUTRA_MAIN...78900
     A           ' SOLVER ITERATIONS DURING U SOLUTION' )                SUTRA_MAIN...79000
      ELSE                                                               SUTRA_MAIN...79100
         WRITE(K3,269) SOLNAM(KSOLVP)                                    SUTRA_MAIN...79200
  269    FORMAT(/13X,'SOLVER FOR P AND U: ',A40)                         SUTRA_MAIN...79300
      END IF                                                             SUTRA_MAIN...79400
C                                                                        SUTRA_MAIN...79500
C.....CALCULATE ARRAY DIMENSIONS, EXCEPT THOSE THAT DEPEND ON            SUTRA_MAIN...79600
C        BANDWIDTH OR NELT                                               SUTRA_MAIN...79700
C                                                                        SUTRA_MAIN...79800
      IF (KSOLVP.EQ.0) THEN                                              SUTRA_MAIN...79900
C........SET DIMENSIONS FOR DIRECT SOLVER                                SUTRA_MAIN...80000
         NNNX = 1                                                        SUTRA_MAIN...80100
         NDIMJA = 1                                                      SUTRA_MAIN...80200
         NNVEC = NN                                                      SUTRA_MAIN...80300
      ELSE                                                               SUTRA_MAIN...80400
C........SET DIMENSIONS FOR ITERATIVE SOLVER(S)                          SUTRA_MAIN...80500
         NNNX = NN                                                       SUTRA_MAIN...80600
         NDIMJA = NN + 1                                                 SUTRA_MAIN...80700
         NNVEC = NN                                                      SUTRA_MAIN...80800
      END IF                                                             SUTRA_MAIN...80900
      NBCN=NPBC+NUBC+1                                                   SUTRA_MAIN...81000
      NSOP=NSOP+1                                                        SUTRA_MAIN...81100
      NSOU=NSOU+1                                                        SUTRA_MAIN...81200
      NOBSN=NOBS+1                                                       SUTRA_MAIN...81300
      IF (KTYPE(1).EQ.3) THEN                                            SUTRA_MAIN...81400
         N48 = 8                                                         SUTRA_MAIN...81500
         NEX = NE                                                        SUTRA_MAIN...81600
      ELSE                                                               SUTRA_MAIN...81700
         N48 = 4                                                         SUTRA_MAIN...81800
         NEX = 1                                                         SUTRA_MAIN...81900
      END IF                                                             SUTRA_MAIN...82000
      NIN=NE*N48                                                         SUTRA_MAIN...82100
C                                                                        SUTRA_MAIN...82200
C.....ALLOCATE REAL ARRAYS, EXCEPT THOSE THAT DEPEND ON BANDWIDTH        SUTRA_MAIN...82300
C        OR NELT                                                         SUTRA_MAIN...82400
      ALLOCATE(PITER(NN),UITER(NN),PM1(NN),DPDTITR(NN),UM1(NN),          SUTRA_MAIN...82500
     1   PVEL(NN),SL(NN),SR(NN),X(NN),Y(NN),Z(NN),VOL(NN),POR(NN),       SUTRA_MAIN...82600
     2   CS1(NN),CS2(NN),CS3(NN),SW(NN),DSWDP(NN),RHO(NN),SOP(NN),       SUTRA_MAIN...82700
     3   QIN(NN),UIN(NN),QUIN(NN),QINITR(NN),RCIT(NN),RCITM1(NN),        SUTRA_MAIN...82800
     4   DUDTITR(NN),PVEC(NNVEC),UVEC(NNVEC),B(NNNX))                    SUTRA_MAIN...82900
      RMVDIM = RMVDIM + 27*NN + 2*NNVEC + NNNX                           SUTRA_MAIN...83000
      ALLOCATE(ALMAX(NE),ALMIN(NE),ATMAX(NE),ATMIN(NE),VMAG(NE),         SUTRA_MAIN...83100
     1   VANG1(NE),PERMXX(NE),PERMXY(NE),PERMYX(NE),PERMYY(NE),          SUTRA_MAIN...83200
     2   PANGL1(NE),GXSI(NE,N48),GETA(NE,N48),ALMID(NEX),ATMID(NEX),     SUTRA_MAIN...83300
     1   VANG2(NEX),PERMXZ(NEX),PERMYZ(NEX),PERMZX(NEX),                 SUTRA_MAIN...83400
     2   PERMZY(NEX),PERMZZ(NEX),PANGL2(NEX),PANGL3(NEX),GZET(NEX,N48))  SUTRA_MAIN...83500
      RMVDIM = RMVDIM + (11 + 2*N48)*NE + (10 + N48)*NEX                 SUTRA_MAIN...83600
      ALLOCATE(PBC(NBCN),UBC(NBCN),QPLITR(NBCN),GNUPP(NBCN),GNUUU(NBCN), SUTRA_MAIN...83700
     1   BPBC(NPBC),PZERO(NPBC),BUBC(NUBC),UZERO(NUBC),BPBG(NPBG),       SUTRA_MAIN...83800
     1   PZERG(NPBG),PBG1(NPBG),QPBG1(NPBG),PBG2(NPBG),QPBG2(NPBG),      SUTRA_MAIN...83900
     1   UPBGI(NPBG),QPBGIC(NPBG),GNUPG(NPBG),QPGITR(NPBG),UPBGO(NPBG),  SUTRA_MAIN...84000
     1   UBG1(NUBG),QUBG1(NUBG),UBG2(NUBG),QUBG2(NUBG),QUBGIC(NUBG),     SUTRA_MAIN...84100
     1   GNUUG(NUBG))                                                    SUTRA_MAIN...84200
      RMVDIM = RMVDIM + 5*NBCN + 2*NPBC + 2*NUBC + 11*NPBG + 6*NUBG      SUTRA_MAIN...84300
C.....ALLOCATE INTEGER ARRAYS, EXCEPT THOSE THAT DEPEND ON BANDWIDTH     SUTRA_MAIN...84400
C        OR NELT                                                         SUTRA_MAIN...84500
      ALLOCATE(IN(NIN),JA(NDIMJA),NREG(NN),NREGAD(NN),ISPBC(NN),         SUTRA_MAIN...84600
     1   ISUBC(NN),ISPBG(NN),LREG(NE),IPBC(NBCN),IUBC(NBCN),             SUTRA_MAIN...84700
     1   IIDPBC(NBCN),IIDUBC(NBCN),IBCSP(NBCN),IBCSU(NBCN),              SUTRA_MAIN...84800
     1   IQSOP(NSOP),IIDSOP(NSOP),IBCSF(NSOP),                           SUTRA_MAIN...84900
     1   IQSOU(NSOU),IIDSOU(NSOU),IBCSS(NSOU),                           SUTRA_MAIN...85000
     1   IPBG(NPBG),IIDPBG(NPBG),IBCSPG(NPBG),                           SUTRA_MAIN...85100
     1   IUBG(NUBG),IIDUBG(NUBG),IBCSUG(NUBG),                           SUTRA_MAIN...85200
     1   ILKF(0:NFBCS),ILKS(0:NFBCS),ILKP(0:NFBCS),ILKU(0:NFBCS),        SUTRA_MAIN...85300
     1   ILKPG(0:NFBCS),ITIPG(0:NFBCS),ILKUG(0:NFBCS),ITIUG(0:NFBCS))    SUTRA_MAIN...85400
      IMVDIM = IMVDIM + NIN + NDIMJA + 5*NN + NE + 5*NBCN + 3*NSOP       SUTRA_MAIN...85500
     1   + 3*NSOU + 3*NPBG + 3*NUBG + 8*(NFBCS + 1)                      SUTRA_MAIN...85600
C.....ALLOCATE INTEGER(1) ARRAYS, EXCEPT THOSE THAT DEPEND ON BANDWIDTH  SUTRA_MAIN...85700
C        OR NELT                                                         SUTRA_MAIN...85800
      ALLOCATE(IBCPBC(NBCN),IBCUBC(NBCN),IBCSOP(NSOP),IBCSOU(NSOU),      SUTRA_MAIN...85900
     1   IBCPBG(NPBG),IBCUBG(NUBG))                                      SUTRA_MAIN...86000
      I1VDIM = I1VDIM + 2*NBCN + NSOP + NSOU + NPBG + NUBG               SUTRA_MAIN...86100
C.....ALLOCATE CHARACTER ARRAYS, EXCEPT THOSE THAT DEPEND ON             SUTRA_MAIN...86200
C        BANDWIDTH OR NELT                                               SUTRA_MAIN...86300
      ALLOCATE(CPQL1(NPBG),CPQL2(NPBG),CUPBGO(NPBG))                     SUTRA_MAIN...86400
      CMVDIM = CMVDIM + (1 + 1 + 3)*NPBG                                 SUTRA_MAIN...86500
C.....ALLOCATE ARRAYS OF LOGICAL TYPE, EXCEPT THOSE THAT DEPEND ON       SUTRA_MAIN...86600
C        BANDWIDTH OR NELT                                               SUTRA_MAIN...86700
      ALLOCATE(BCSFL(0:ITMAX),BCSTR(0:ITMAX),ISLAKE(NN),                 SUTRA_MAIN...86800
     1   LKBCPBC(NBCN),LKBCUBC(NBCN),LKBCSOP(NSOP),LKBCSOU(NSOU),        SUTRA_MAIN...86900
     1   LKBCPBG(NPBG),LKBCUBG(NUBG),LPBGSP(NPBG))                       SUTRA_MAIN...87000
      LMVDIM = LMVDIM + 2*(ITMAX + 1) + NN + 2*NBCN + NSOP + NSOU        SUTRA_MAIN...87100
     1   + 2*NPBG + NUBG                                                 SUTRA_MAIN...87200
C.....ALLOCATE ARRAYS OF DERIVED TYPE, EXCEPT THOSE THAT DEPEND ON       SUTRA_MAIN...87300
C        BANDWIDTH OR NELT                                               SUTRA_MAIN...87400
      ALLOCATE(OBSPTS(NOBSN))                                            SUTRA_MAIN...87500
      CMVDIM = CMVDIM + 53*NOBSN                                         SUTRA_MAIN...87600
      IMVDIM = IMVDIM + NOBSN                                            SUTRA_MAIN...87700
      RMVDIM = RMVDIM + 6*NOBSN                                          SUTRA_MAIN...87800
      ALLO1 = .TRUE.                                                     SUTRA_MAIN...87900
C                                                                        SUTRA_MAIN...88000
C.....INITIALIZE BOUNDARY-CONDITION FLAG AND MAPPING ARRAYS              SUTRA_MAIN...88100
C        AND SOME LAKE-RELATED ARRAYS                                    SUTRA_MAIN...88200
      BCSFL = .FALSE.                                                    SUTRA_MAIN...88300
      BCSTR = .FALSE.                                                    SUTRA_MAIN...88400
      ISPBC = 0                                                          SUTRA_MAIN...88500
      ISUBC = 0                                                          SUTRA_MAIN...88600
      ISPBG = 0                                                          SUTRA_MAIN...88700
      LPBGSP = .FALSE.                                                   SUTRA_MAIN...88800
      ISLAKE = .FALSE.                                                   SUTRA_MAIN...88900
      LKBCSOP = .TRUE.                                                   SUTRA_MAIN...89000
      LKBCSOU = .TRUE.                                                   SUTRA_MAIN...89100
      LKBCPBC = .TRUE.                                                   SUTRA_MAIN...89200
      LKBCUBC = .TRUE.                                                   SUTRA_MAIN...89300
      LKBCPBG = .TRUE.                                                   SUTRA_MAIN...89400
      LKBCUBG = .TRUE.                                                   SUTRA_MAIN...89500
C                                                                        SUTRA_MAIN...89600
C.....INITIALIZE SOME ARRAYS TO ZERO FOR NEATNESS                        SUTRA_MAIN...89700
      IBCSOP = 0                                                         SUTRA_MAIN...89800
      IBCSOU = 0                                                         SUTRA_MAIN...89900
      IBCPBC = 0                                                         SUTRA_MAIN...90000
      IBCUBC = 0                                                         SUTRA_MAIN...90100
      IBCPBG = 0                                                         SUTRA_MAIN...90200
      IBCUBG = 0                                                         SUTRA_MAIN...90300
      IIDSOP = 0                                                         SUTRA_MAIN...90400
      IIDSOU = 0                                                         SUTRA_MAIN...90500
      IIDPBC = 0                                                         SUTRA_MAIN...90600
      IIDUBC = 0                                                         SUTRA_MAIN...90700
      IIDPBG = 0                                                         SUTRA_MAIN...90800
      IIDUBG = 0                                                         SUTRA_MAIN...90900
      IBCSF = 0                                                          SUTRA_MAIN...91000
      IBCSS = 0                                                          SUTRA_MAIN...91100
      IBCSP = 0                                                          SUTRA_MAIN...91200
      IBCSU = 0                                                          SUTRA_MAIN...91300
      IBCSPG = 0                                                         SUTRA_MAIN...91400
      IBCSUG = 0                                                         SUTRA_MAIN...91500
C                                                                        SUTRA_MAIN...91600
C.....INPUT DATASETS 8 - 15 (OUTPUT CONTROLS; FLUID AND SOLID MATRIX     SUTRA_MAIN...91700
C        PROPERTIES; ADSORPTION PARAMETERS; PRODUCTION OF ENERGY OR      SUTRA_MAIN...91800
C        SOLUTE MASS; GRAVITY; AND NODEWISE AND ELEMENTWISE DATA)        SUTRA_MAIN...91900
      CALL INDAT1(X,Y,Z,POR,CS1,ALMAX,ALMID,ALMIN,ATMAX,ATMID,ATMIN,     SUTRA_MAIN...92000
     1   PERMXX,PERMXY,PERMXZ,PERMYX,PERMYY,PERMYZ,                      SUTRA_MAIN...92100
     2   PERMZX,PERMZY,PERMZZ,PANGL1,PANGL2,PANGL3,SOP,                  SUTRA_MAIN...92200
     3   NREG,NREGAD,LREG,OBSPTS)                                        SUTRA_MAIN...92300
C                                                                        SUTRA_MAIN...92400
C.....GNUP AND GNUU ARE NOW HARDWIRED AND USED A HUGE MULTIPLIERS FOR    SUTRA_MAIN...92500
C        SPEC-P AND SPEC-U CONDITIONS (BUT NOT AS "CONDUCTANCES")        SUTRA_MAIN...92600
      GNUP = 1D+20                                                       SUTRA_MAIN...92700
      GNUU = 1D+20                                                       SUTRA_MAIN...92800
C                                                                        SUTRA_MAIN...92900
C.....KEEP TRACK IF OUTPUT ROUTINES HAVE BEEN EXECUTED, TO PRINT         SUTRA_MAIN...93000
C        HEADERS ONLY ONCE.                                              SUTRA_MAIN...93100
      ONCEK5 = .FALSE.                                                   SUTRA_MAIN...93200
      ONCEK6 = .FALSE.                                                   SUTRA_MAIN...93300
      ONCEK7 = .FALSE.                                                   SUTRA_MAIN...93400
      ONCEK8 = .FALSE.                                                   SUTRA_MAIN...93500
      ONCESTG = .FALSE.                                                  SUTRA_MAIN...93600
      ALLOCATE(ONCK78(NFLOMX))                                           SUTRA_MAIN...93700
      LMVDIM = LMVDIM + NFLOMX                                           SUTRA_MAIN...93800
      ONCK78 = .FALSE.                                                   SUTRA_MAIN...93900
      ONCEK10 = .FALSE.                                                  SUTRA_MAIN...94000
      ONCEK11 = .FALSE.                                                  SUTRA_MAIN...94100
      ONCEK12 = .FALSE.                                                  SUTRA_MAIN...94200
      ONCEK13 = .FALSE.                                                  SUTRA_MAIN...94300
      ONCEK14 = .FALSE.                                                  SUTRA_MAIN...94400
      ONCEK15 = .FALSE.                                                  SUTRA_MAIN...94500
      ONCEKLK = .FALSE.                                                  SUTRA_MAIN...94600
C                                                                        SUTRA_MAIN...94700
C.....INITIALIZE BCTIME CONDITION FLAGS                                  SUTRA_MAIN...94800
      IQSOPT = 1                                                         SUTRA_MAIN...94900
      IQSOUT = 1                                                         SUTRA_MAIN...95000
      IPBCT = 1                                                          SUTRA_MAIN...95100
      IUBCT = 1                                                          SUTRA_MAIN...95200
      IPBGT = 1                                                          SUTRA_MAIN...95300
      IUBGT = 1                                                          SUTRA_MAIN...95400
C                                                                        SUTRA_MAIN...95500
C.....INPUT DATASETS 17 & 18 (SOURCES OF FLUID MASS AND ENERGY OR        SUTRA_MAIN...95600
C        SOLUTE MASS)                                                    SUTRA_MAIN...95700
      CALL ZERO(QIN,NN,0.0D0)                                            SUTRA_MAIN...95800
      CALL ZERO(UIN,NN,0.0D0)                                            SUTRA_MAIN...95900
      CALL ZERO(QUIN,NN,0.0D0)                                           SUTRA_MAIN...96000
      IF(NSOP-1.GT.0.OR.NSOU-1.GT.0)                                     SUTRA_MAIN...96100
     1   CALL SOURCE(QIN,UIN,IQSOP,QUIN,IQSOU,IQSOPT,IQSOUT,             SUTRA_MAIN...96200
     2      IBCSOP,IBCSOU)                                               SUTRA_MAIN...96300
C                                                                        SUTRA_MAIN...96400
C.....INPUT DATASETS 19 & 20 (SPECIFIED P AND U BOUNDARY CONDITIONS)     SUTRA_MAIN...96500
      IF(NBCN-1.GT.0) CALL BOUND(IPBC,PBC,ISPBC,IUBC,UBC,ISUBC,          SUTRA_MAIN...96600
     1   IPBCT,IUBCT,IBCPBC,IBCUBC,GNUPP,GNUUU)                          SUTRA_MAIN...96700
C                                                                        SUTRA_MAIN...96800
C.....INPUT DATASETS 21A & 21B (GENERALIZED FLOW AND TRANSPORT           SUTRA_MAIN...96900
C        BOUNDARY CONDITIONS)                                            SUTRA_MAIN...97000
      IF((VERNIN.NE."2.0").AND.(VERNIN.NE."2.1").AND.(VERNIN.NE."2.2")   SUTRA_MAIN...97100
     1   .AND.(NPBG+NUBG.GT.0))                                          SUTRA_MAIN...97200
     2   CALL BOUNG(IPBG,PBG1,QPBG1,PBG2,QPBG2,CPQL1,CPQL2,UPBGI,        SUTRA_MAIN...97300
     3   CUPBGO,UPBGO,IUBG,UBG1,QUBG1,UBG2,QUBG2,ISPBG,IPBGT,IUBGT,      SUTRA_MAIN...97400
     4   IBCPBG,IBCUBG,QPBGIC,GNUPG,QUBGIC,GNUUG)                        SUTRA_MAIN...97500
C                                                                        SUTRA_MAIN...97600
C.....INPUT DATASET 22 (ELEMENT INCIDENCE [MESH CONNECTION] DATA)        SUTRA_MAIN...97700
      CALL CONNEC(IN)                                                    SUTRA_MAIN...97800
C                                                                        SUTRA_MAIN...97900
C.....IF USING OLD (VERSION 2D3D.1) OBSERVATION INPUT FORMAT, LOOK UP    SUTRA_MAIN...98000
C        COORDINATES FOR OBSERVATION POINTS (NODES).                     SUTRA_MAIN...98100
      IF (NOBCYC.NE.-1) THEN                                             SUTRA_MAIN...98200
         DO 710 K=1,NOBS                                                 SUTRA_MAIN...98300
            I = OBSPTS(K)%L                                              SUTRA_MAIN...98400
            OBSPTS(K)%X = X(I)                                           SUTRA_MAIN...98500
            OBSPTS(K)%Y = Y(I)                                           SUTRA_MAIN...98600
            IF (N48.EQ.8) OBSPTS(K)%Z = Z(I)                             SUTRA_MAIN...98700
  710    CONTINUE                                                        SUTRA_MAIN...98800
      END IF                                                             SUTRA_MAIN...98900
C                                                                        SUTRA_MAIN...99000
C.....FIND THE ELEMENT EACH OBSERVATION POINT IS IN.  IN COMPONENTS OF   SUTRA_MAIN...99100
C        OBSPTS, OVERWRITE NODE NUMBERS AND GLOBAL COORDINATES WITH      SUTRA_MAIN...99200
C        ELEMENT NUMBERS AND LOCAL COORDINATES.                          SUTRA_MAIN...99300
      DO 900 K=1,NOBS                                                    SUTRA_MAIN...99400
         XK = OBSPTS(K)%X                                                SUTRA_MAIN...99500
         YK = OBSPTS(K)%Y                                                SUTRA_MAIN...99600
         IF (N48.EQ.8) ZK = OBSPTS(K)%Z                                  SUTRA_MAIN...99700
         DO 800 LL=1,NE                                                  SUTRA_MAIN...99800
            IF (N48.EQ.8) THEN                                           SUTRA_MAIN...99900
               CALL FINDL3(X,Y,Z,IN,LL,XK,YK,ZK,XSI,ETA,ZET,INOUT)       SUTRA_MAIN..100000
            ELSE                                                         SUTRA_MAIN..100100
               CALL FINDL2(X,Y,IN,LL,XK,YK,XSI,ETA,INOUT)                SUTRA_MAIN..100200
            END IF                                                       SUTRA_MAIN..100300
            IF (INOUT.EQ.1) THEN                                         SUTRA_MAIN..100400
               L = LL                                                    SUTRA_MAIN..100500
               GOTO 820                                                  SUTRA_MAIN..100600
            END IF                                                       SUTRA_MAIN..100700
  800    CONTINUE                                                        SUTRA_MAIN..100800
         ERRCOD = 'INP-8D-3'                                             SUTRA_MAIN..100900
         CHERR(1) = OBSPTS(K)%NAME                                       SUTRA_MAIN..101000
         WRITE(UNIT=CHERR(2), FMT=805)                                   SUTRA_MAIN..101100
     1      OBSPTS(K)%X, OBSPTS(K)%Y, OBSPTS(K)%Z                        SUTRA_MAIN..101200
  805    FORMAT('(',2(1PE14.7,','),1PE14.7,')')                          SUTRA_MAIN..101300
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        SUTRA_MAIN..101400
  820    OBSPTS(K)%L = L                                                 SUTRA_MAIN..101500
         OBSPTS(K)%XSI = XSI                                             SUTRA_MAIN..101600
         OBSPTS(K)%ETA = ETA                                             SUTRA_MAIN..101700
         IF (N48.EQ.8) OBSPTS(K)%ZET = ZET                               SUTRA_MAIN..101800
  900 CONTINUE                                                           SUTRA_MAIN..101900
C                                                                        SUTRA_MAIN..102000
C.....IF ITERATIVE SOLVER IS USED, SET UP POINTER ARRAYS IA AND JA THAT  SUTRA_MAIN..102100
C        SPECIFY MATRIX STRUCTURE IN "SLAP COLUMN" FORMAT.  DIMENSION    SUTRA_MAIN..102200
C        NELT GETS SET HERE.                                             SUTRA_MAIN..102300
      IF (KSOLVP.NE.0) THEN                                              SUTRA_MAIN..102400
         CALL PTRSET()                                                   SUTRA_MAIN..102500
      ELSE                                                               SUTRA_MAIN..102600
         NELT = NN                                                       SUTRA_MAIN..102700
         NDIMIA = 1                                                      SUTRA_MAIN..102800
         ALLOCATE(IA(NDIMIA))                                            SUTRA_MAIN..102900
         IMVDIM = IMVDIM + NDIMIA                                        SUTRA_MAIN..103000
      END IF                                                             SUTRA_MAIN..103100
      ALLO3 = .TRUE.                                                     SUTRA_MAIN..103200
C                                                                        SUTRA_MAIN..103300
C.....CALCULATE BANDWIDTH                                                SUTRA_MAIN..103400
      CALL BANWID(IN)                                                    SUTRA_MAIN..103500
C                                                                        SUTRA_MAIN..103600
C.....CALCULATE ARRAY DIMENSIONS THAT DEPEND ON BANDWIDTH OR NELT        SUTRA_MAIN..103700
      IF (KSOLVP.EQ.0) THEN                                              SUTRA_MAIN..103800
C........SET DIMENSIONS FOR DIRECT SOLVER                                SUTRA_MAIN..103900
         NCBI = NBI                                                      SUTRA_MAIN..104000
         NELTA = NELT                                                    SUTRA_MAIN..104100
         NWI = 1                                                         SUTRA_MAIN..104200
         NWF = 1                                                         SUTRA_MAIN..104300
      ELSE                                                               SUTRA_MAIN..104400
C........SET DIMENSIONS FOR ITERATIVE SOLVER(S)                          SUTRA_MAIN..104500
         NCBI = 1                                                        SUTRA_MAIN..104600
         NELTA = NELT                                                    SUTRA_MAIN..104700
         KSOLVR = KSOLVP                                                 SUTRA_MAIN..104800
         NSAVE = NSAVEP                                                  SUTRA_MAIN..104900
         CALL DIMWRK(KSOLVR, NSAVE, NN, NELTA, NWIP, NWFP)               SUTRA_MAIN..105000
         KSOLVR = KSOLVU                                                 SUTRA_MAIN..105100
         NSAVE = NSAVEU                                                  SUTRA_MAIN..105200
         CALL DIMWRK(KSOLVR, NSAVE, NN, NELTA, NWIU, NWFU)               SUTRA_MAIN..105300
         NWI = MAX(NWIP, NWIU)                                           SUTRA_MAIN..105400
         NWF = MAX(NWFP, NWFU)                                           SUTRA_MAIN..105500
      END IF                                                             SUTRA_MAIN..105600
      MATDIM=NELT*NCBI                                                   SUTRA_MAIN..105700
C                                                                        SUTRA_MAIN..105800
C.....ALLOCATE REAL AND INTEGER ARRAYS THAT DEPEND ON BANDWIDTH OR NELT  SUTRA_MAIN..105900
      ALLOCATE(PMAT(NELT,NCBI),UMAT(NELT,NCBI),FWK(NWF))                 SUTRA_MAIN..106000
      RMVDIM = RMVDIM + 2*NELT*NCBI + NWF                                SUTRA_MAIN..106100
      ALLOCATE(IWK(NWI))                                                 SUTRA_MAIN..106200
      IMVDIM = IMVDIM + NWI                                              SUTRA_MAIN..106300
      ALLO2 = .TRUE.                                                     SUTRA_MAIN..106400
C                                                                        SUTRA_MAIN..106500
C.....READ BCS SCHEDULES AND CHECK BCS BOUNDARY CONDITIONS FOR           SUTRA_MAIN..106600
C        INPUT ERRORS.  DETERMINE SIZE OF BCS IDENTIFIER ARRAY.          SUTRA_MAIN..106700
      NCIDB = 1                                                          SUTRA_MAIN..106800
      ALLOCATE(CIDBCS(NCIDB))                                            SUTRA_MAIN..106900
      CMVDIM = CMVDIM + 40*NCIDB                                         SUTRA_MAIN..107000
      CIDBCS = ""                                                        SUTRA_MAIN..107100
      IF (K9.NE.-1) THEN                                                 SUTRA_MAIN..107200
C........SET UP ARRAY OF SCHEDULE NUMBERS, BCP                           SUTRA_MAIN..107300
         ALLOCATE (BFP(NFBCS))                                           SUTRA_MAIN..107400
         IMVDIM = IMVDIM + NFBCS                                         SUTRA_MAIN..107500
         DO 2100 NFB=1,NFBCS                                             SUTRA_MAIN..107600
            K9 = IUNIB(NFB)                                              SUTRA_MAIN..107700
C...........SET FNAME(9) EQUAL TO FNAMB(NFB) FOR CONVENIENCE IN          SUTRA_MAIN..107800
C              ERROR HANDLING                                            SUTRA_MAIN..107900
            FNAME(9) = FNAMB(NFB)                                        SUTRA_MAIN..108000
C...........READ SCHEDULE NAME FOR CURRENT BCS FILE.                     SUTRA_MAIN..108100
            ERRCOD = 'REA-BCS-1'                                         SUTRA_MAIN..108200
            CHERR(1) = 'n/a'                                             SUTRA_MAIN..108300
            CHERR(2) = 'n/a'                                             SUTRA_MAIN..108400
            CALL READIF(K9, NFB, INTFIL, ERRCOD, CHERR)                  SUTRA_MAIN..108500
            READ(INTFIL,*,IOSTAT=INERR(1)) CDUM80                        SUTRA_MAIN..108600
            IF (LEN_TRIM(CDUM80).GT.10) THEN                             SUTRA_MAIN..108700
               ERRCOD = 'BCS-1-4'                                        SUTRA_MAIN..108800
               CHERR(1) = CDUM80                                         SUTRA_MAIN..108900
               CHERR(2) = FNAME(9)                                       SUTRA_MAIN..109000
               CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                  SUTRA_MAIN..109100
            END IF                                                       SUTRA_MAIN..109200
            READ(INTFIL,*,IOSTAT=INERR(1)) BCSSCH                        SUTRA_MAIN..109300
            IF (INERR(1).NE.0)                                           SUTRA_MAIN..109400
     1            CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)               SUTRA_MAIN..109500
C...........FIND SCHEDULE NUMBER IN LIST.  IF NOT FOUND, ERROR.          SUTRA_MAIN..109600
            DO 2050 NS=1,NSCH                                            SUTRA_MAIN..109700
               IF (BCSSCH.EQ.SCHDLS(NS)%NAME) THEN                       SUTRA_MAIN..109800
                  BFP(NFB)%ISCHED = NS                                   SUTRA_MAIN..109900
                  LENSCH = SCHDLS(BFP(NFB)%ISCHED)%LLEN                  SUTRA_MAIN..110000
                  DO 2000 LC=1,LENSCH                                    SUTRA_MAIN..110100
                     DITBCS = SCHDLS(BFP(NFB)%ISCHED)%SLIST(LC)%DVALU2   SUTRA_MAIN..110200
                     ITBCS = INT(DITBCS)                                 SUTRA_MAIN..110300
                     IF (DBLE(ITBCS).NE.DITBCS) THEN                     SUTRA_MAIN..110400
                        ERRCOD = 'BCS-1-2'                               SUTRA_MAIN..110500
                        CHERR(1) = BCSSCH                                SUTRA_MAIN..110600
                        CHERR(2) = FNAME(9)                              SUTRA_MAIN..110700
                        RLERR(1) = DITBCS                                SUTRA_MAIN..110800
                        CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)         SUTRA_MAIN..110900
                     END IF                                              SUTRA_MAIN..111000
 2000             CONTINUE                                               SUTRA_MAIN..111100
                  GOTO 2100                                              SUTRA_MAIN..111200
               END IF                                                    SUTRA_MAIN..111300
 2050       CONTINUE                                                     SUTRA_MAIN..111400
            IF (ISSTRA.NE.1) THEN                                        SUTRA_MAIN..111500
               ERRCOD = 'BCS-1-1'                                        SUTRA_MAIN..111600
            ELSE                                                         SUTRA_MAIN..111700
               ERRCOD = 'BCS-1-3'                                        SUTRA_MAIN..111800
            END IF                                                       SUTRA_MAIN..111900
            CHERR(1) = BCSSCH                                            SUTRA_MAIN..112000
            CHERR(2) = FNAME(9)                                          SUTRA_MAIN..112100
            CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                     SUTRA_MAIN..112200
 2100    CONTINUE                                                        SUTRA_MAIN..112300
C........READ THROUGH FILES TO SEARCH FOR INPUT ERRORS, BUT DO NOT       SUTRA_MAIN..112400
C           ACTUALLY SET THE BOUNDARY CONDITIONS (SETBCS = .FALSE.)      SUTRA_MAIN..112500
         SETBCS = .FALSE.                                                SUTRA_MAIN..112600
         LENSCH = SCHDLS(ISCHTS)%LLEN                                    SUTRA_MAIN..112700
         DO 2200 LC=1,LENSCH                                             SUTRA_MAIN..112800
            DITBCS = SCHDLS(ISCHTS)%SLIST(LC)%DVALU2                     SUTRA_MAIN..112900
            ITBCS = INT(DITBCS)                                          SUTRA_MAIN..113000
            CALL BCSTEP(SETBCS,IPBC,PBC,IUBC,UBC,QIN,UIN,QUIN,IQSOP,     SUTRA_MAIN..113100
     1         IQSOU,IPBCT1,IUBCT1,IQSOPT1,IQSOUT1,GNUPP,GNUUU,          SUTRA_MAIN..113200
     2         IBCPBC,IBCUBC,IBCSOP,IBCSOU,IBCPBG,IBCUBG,IIDPBC,IIDUBC,  SUTRA_MAIN..113300
     3         IIDSOP,IIDSOU,IIDPBG,IIDUBG,                              SUTRA_MAIN..113400
     4         IBCSF,IBCSS,IBCSP,IBCSU,IBCSPG,IBCSUG,NCID,BCSFL,         SUTRA_MAIN..113500
     5         BCSTR,IPBG,PBG1,QPBG1,PBG2,QPBG2,CPQL1,CPQL2,UPBGI,       SUTRA_MAIN..113600
     6         CUPBGO,UPBGO,QPBGIC,GNUPG,IUBG,UBG1,QUBG1,UBG2,QUBG2,     SUTRA_MAIN..113700
     7         QUBGIC,GNUUG)                                             SUTRA_MAIN..113800
            NCIDB = MAX(NCIDB, NCID)                                     SUTRA_MAIN..113900
 2200    CONTINUE                                                        SUTRA_MAIN..114000
C........TO CLOSE ALL INSERTED FILES, KEEP READING UNTIL END OF ZERO-    SUTRA_MAIN..114100
C           LEVEL FILE IS ENCOUNTERED.  THEN REWIND ZERO-LEVEL FILE      SUTRA_MAIN..114200
C           AND RE-READ THE SCHEDULE NAME.                               SUTRA_MAIN..114300
         DO 2300 NFB=1,NFBCS                                             SUTRA_MAIN..114400
            K9 = IUNIB(NFB)                                              SUTRA_MAIN..114500
            ERRCOD = 'NO_EOF_ERR'                                        SUTRA_MAIN..114600
            CHERR(1) = 'n/a'                                             SUTRA_MAIN..114700
            CHERR(2) = 'n/a'                                             SUTRA_MAIN..114800
            DO WHILE (ERRCOD.NE.'EOF')                                   SUTRA_MAIN..114900
               CALL READIF(K9, NFB, INTFIL, ERRCOD, CHERR)               SUTRA_MAIN..115000
            END DO                                                       SUTRA_MAIN..115100
            REWIND (K9)                                                  SUTRA_MAIN..115200
            CALL READIF(K9, NFB, INTFIL, ERRCOD, CHERR)                  SUTRA_MAIN..115300
            READ(INTFIL,*,IOSTAT=INERR(1)) BCSSCH                        SUTRA_MAIN..115400
 2300    CONTINUE                                                        SUTRA_MAIN..115500
      END IF                                                             SUTRA_MAIN..115600
C.....ALLOCATION OF BCS IDENTIFIER ARRAY IS DONE IN SUBROUTINE INDAT2.   SUTRA_MAIN..115700
C                                                                        SUTRA_MAIN..115800
C.....INPUT INITIAL OR RESTART CONDITIONS FROM THE ICS FILE AND          SUTRA_MAIN..115900
C        INITIALIZE PARAMETERS                                           SUTRA_MAIN..116000
      CALL INDAT2(PVEC,UVEC,PM1,UM1,CS1,CS2,CS3,SL,SR,RCIT,SW,           SUTRA_MAIN..116100
     1   DSWDP,PBC,IPBC,IPBCT,IPBGT,NREG,QIN,DPDTITR,                    SUTRA_MAIN..116200
     2   GNUPP,GNUUU,UIN,UBC,QUIN,IBCPBC,IBCUBC,IBCSOP,IBCSOU,           SUTRA_MAIN..116300
     3   IBCPBG,IBCUBG,IIDPBC,IIDUBC,IIDSOP,IIDSOU,IIDPBG,IIDUBG,        SUTRA_MAIN..116400
     4   IBCSF,IBCSS,IBCSP,IBCSU,IBCSPG,IBCSUG,                          SUTRA_MAIN..116500
     5   IPBG,QPBGIC,GNUPG,QPBG1,QPBG2,PBG1,PBG2,                        SUTRA_MAIN..116600
     6   CPQL1,CPQL2,CUPBGO,QPLITR,QPGITR,QINITR,ISPBG,LPBGSP)           SUTRA_MAIN..116700
C                                                                        SUTRA_MAIN..116800
C.....SET UP LAKES                                                       SUTRA_MAIN..116900
      IF (LAKUSD) THEN                                                   SUTRA_MAIN..117000
         CALL LAKSET()                                                   SUTRA_MAIN..117100
         IF (K22.NE.-1) CALL OUTLKN(TITLE1,TITLE2)                       SUTRA_MAIN..117200
         IF (K23.NE.-1) CALL OUTLKH(TITLE1,TITLE2)                       SUTRA_MAIN..117300
      ELSE                                                               SUTRA_MAIN..117400
         ISLAKE = .FALSE.                                                SUTRA_MAIN..117500
         ILKF = 0                                                        SUTRA_MAIN..117600
         ILKS = 0                                                        SUTRA_MAIN..117700
         ILKP = 0                                                        SUTRA_MAIN..117800
         ILKU = 0                                                        SUTRA_MAIN..117900
         ILKPG = 0                                                       SUTRA_MAIN..118000
         ILKUG = 0                                                       SUTRA_MAIN..118100
      END IF                                                             SUTRA_MAIN..118200
C                                                                        SUTRA_MAIN..118300
C.....OUTPUT DIMENSIONS OF SIMULATION                                    SUTRA_MAIN..118400
      TOTMB = (DBLE(RMVDIM)*8D0 + DBLE(IMVDIM)*4D0 + DBLE(I1VDIM)        SUTRA_MAIN..118500
     1   + DBLE(CMVDIM) + DBLE(LMVDIM)*4D0)/1D6                          SUTRA_MAIN..118600
      WRITE(K3,3000) RMVDIM,IMVDIM,I1VDIM,CMVDIM,LMVDIM,PMVDIM,TOTMB     SUTRA_MAIN..118700
 3000 FORMAT(////11X,'S I M U L A T I O N   D I M E N S I O N S'//       SUTRA_MAIN..118800
     1   13X,'REAL        ARRAYS WERE ALLOCATED ',I12/                   SUTRA_MAIN..118900
     2   13X,'INTEGER     ARRAYS WERE ALLOCATED ',I12/                   SUTRA_MAIN..119000
     3   13X,'INTEGER(1)  ARRAYS WERE ALLOCATED ',I12/                   SUTRA_MAIN..119100
     4   13X,'CHARACTER   ARRAYS WERE ALLOCATED ',I12,                   SUTRA_MAIN..119200
     5       ' (SUM OF ARRAY_DIMENSION*CHARACTER_LENGTH)'/               SUTRA_MAIN..119300
     6   13X,'LOGICAL     ARRAYS WERE ALLOCATED ',I12/                   SUTRA_MAIN..119400
     7   13X,'ARRAYS OF POINTERS WERE ALLOCATED ',I12//                  SUTRA_MAIN..119500
     8   13X,F10.3,' Mbytes MEMORY USED FOR MAIN ARRAYS'/                SUTRA_MAIN..119600
     9   13X,'- assuming 1 byte/character'/                              SUTRA_MAIN..119700
     1   13X,'- assuming 4-byte logical variables'/                      SUTRA_MAIN..119800
     2   13X,'- pointer storage not included')                           SUTRA_MAIN..119900
C                                                                        SUTRA_MAIN..120000
      WRITE(K3,4000)                                                     SUTRA_MAIN..120100
 4000 FORMAT(////////8(132("-")/))                                       SUTRA_MAIN..120200
C                                                                        SUTRA_MAIN..120300
C.....CALL MAIN CONTROL ROUTINE, SUTRA                                   SUTRA_MAIN..120400
      CALL SUTRA(TITLE1,TITLE2,PMAT,UMAT,PITER,UITER,PM1,DPDTITR,        SUTRA_MAIN..120500
     1   UM1,DUDTITR,PVEL,SL,SR,X,Y,Z,VOL,POR,CS1,CS2,CS3,SW,            SUTRA_MAIN..120600
     2   DSWDP,RHO,SOP,                                                  SUTRA_MAIN..120700
     3   QIN,UIN,QUIN,QINITR,RCIT,RCITM1,PVEC,UVEC,                      SUTRA_MAIN..120800
     4   ALMAX,ALMID,ALMIN,ATMAX,ATMID,ATMIN,VMAG,VANG1,VANG2,           SUTRA_MAIN..120900
     5   PERMXX,PERMXY,PERMXZ,PERMYX,PERMYY,PERMYZ,PERMZX,PERMZY,PERMZZ, SUTRA_MAIN..121000
     6   PANGL1,PANGL2,PANGL3,PBC,UBC,QPLITR,BPBC,PZERO,BUBC,UZERO,      SUTRA_MAIN..121100
     7   BPBG,PZERG,GXSI,GETA,GZET,FWK,B,GNUPP,GNUUU,IN,IQSOP,IQSOU,     SUTRA_MAIN..121200
     8   IPBC,IUBC,ISPBC,ISUBC,ISPBG,LPBGSP,                             SUTRA_MAIN..121300
     9   OBSPTS,NREG,NREGAD,LREG,IWK,IA,JA,                              SUTRA_MAIN..121400
     9   IBCPBC,IBCUBC,IBCSOP,IBCSOU,IBCPBG,IBCUBG,                      SUTRA_MAIN..121500
     T   IIDPBC,IIDUBC,IIDSOP,IIDSOU,IIDPBG,IIDUBG,                      SUTRA_MAIN..121600
     1   IBCSF,IBCSS,IBCSP,IBCSU,IBCSPG,IBCSUG,                          SUTRA_MAIN..121700
     2   IQSOPT,IQSOUT,IPBCT,IUBCT,IPBGT,IUBGT,                          SUTRA_MAIN..121800
     3   BCSFL,BCSTR,IPBG,PBG1,QPBG1,PBG2,QPBG2,CPQL1,CPQL2,UPBGI,       SUTRA_MAIN..121900
     4   CUPBGO,UPBGO,IUBG,UBG1,QUBG1,UBG2,QUBG2,QPBGIC,GNUPG,QUBGIC,    SUTRA_MAIN..122000
     5   GNUUG,QPGITR)                                                   SUTRA_MAIN..122100
C                                                                        SUTRA_MAIN..122200
C.....TERMINATION SEQUENCE: DEALLOCATE ARRAYS, CLOSE FILES, AND END      SUTRA_MAIN..122300
9000  CONTINUE                                                           SUTRA_MAIN..122400
      CALL TERSEQ()                                                      SUTRA_MAIN..122500
      END                                                                SUTRA_MAIN..122600
C                                                                        SUTRA_MAIN..122700
C     SUBROUTINE        A  D  S  O  R  B           SUTRA VERSION 3.0     ADSORB.........100
C                                                                        ADSORB.........200
C *** PURPOSE :                                                          ADSORB.........300
C ***  TO CALCULATE VALUES OF EQUILIBRIUM SORPTION PARAMETERS FOR        ADSORB.........400
C ***  LINEAR, FREUNDLICH, AND LANGMUIR MODELS.                          ADSORB.........500
C                                                                        ADSORB.........600
      SUBROUTINE ADSORB(CS1,CS2,CS3,SL,SR,U,NREGAD)                      ADSORB.........700
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                ADSORB.........800
      CHARACTER*10 ADSMOD,ADSMOD1(10)                                    ADSORB.........900
      DIMENSION CS1(NN),CS2(NN),CS3(NN),SL(NN),SR(NN),U(NN)              ADSORB........1000
      DIMENSION CHI11(10),CHI21(10)                                      ADSORB........1100
      DIMENSION NREGAD(NN)                                               ADSORB........1200
      COMMON /DIMS/ NN,NE,NIN,NBI,NCBI,NB,NBHALF,NPBC,NUBC,              ADSORB........1300
     1   NSOP,NSOU,NBCN,NPBG,NUBG,NCIDB                                  ADSORB........1400
      COMMON /MODSOR/ ADSMOD,ADSMOD1                                     ADSORB........1500
      COMMON /PARAMS/ COMPFL,COMPMA,DRWDU,CW,CS,RHOS,SIGMAW,SIGMAS,      ADSORB........1600
     1   RHOW0,URHOW0,VISC0,PRODF1,PRODS1,PRODF0,PRODS0,CHI1,CHI2        ADSORB........1700
      COMMON /PARSOR/ CHI11,CHI21                                        ADSORB........1800
C                                                                        ADSORB........1900
C.....NOTE THAT THE CONCENTRATION OF ADSORBATE, CS(I), IS GIVEN BY       ADSORB........2000
C        CS(I) = SL(I)*U(I) + SR(I)                                      ADSORB........2100
C                                                                        ADSORB........2200
      DO 1000 I=1,NN                                                     ADSORB........2300
      NR = NREGAD(I)                                                     ADSORB........2400
      CHI1 = CHI11(NR)                                                   ADSORB........2500
      CHI2 = CHI21(NR)                                                   ADSORB........2600
C                                                                        ADSORB........2700
C.....NO SORPTION                                                        ADSORB........2800
      IF(ADSMOD1(NR).NE.'NONE      ') GOTO 450                           ADSORB........2900
      CS1(I)=0.D0                                                        ADSORB........3000
      CS2(I)=0.D0                                                        ADSORB........3100
      CS3(I)=0.D0                                                        ADSORB........3200
      SL(I)=0.D0                                                         ADSORB........3300
      SR(I)=0.D0                                                         ADSORB........3400
      GOTO 1000                                                          ADSORB........3500
C                                                                        ADSORB........3600
C.....LINEAR SORPTION MODEL                                              ADSORB........3700
  450 IF(ADSMOD1(NR).NE.'LINEAR    ') GOTO 700                           ADSORB........3800
      CS1(I)=CHI1*RHOW0                                                  ADSORB........3900
      CS2(I)=0.D0                                                        ADSORB........4000
      CS3(I)=0.D0                                                        ADSORB........4100
      SL(I)=CHI1*RHOW0                                                   ADSORB........4200
      SR(I)=0.D0                                                         ADSORB........4300
      GOTO 1000                                                          ADSORB........4400
C                                                                        ADSORB........4500
C.....FREUNDLICH SORPTION MODEL                                          ADSORB........4600
  700 IF(ADSMOD1(NR).NE.'FREUNDLICH') GOTO 950                           ADSORB........4700
      CHCH=CHI1/CHI2                                                     ADSORB........4800
      DCHI2=1.D0/CHI2                                                    ADSORB........4900
      RH2=RHOW0**DCHI2                                                   ADSORB........5000
      CHI2F=((1.D0-CHI2)/CHI2)                                           ADSORB........5100
      IF(U(I)) 720,720,730                                               ADSORB........5200
  720 UCH=1.0D0                                                          ADSORB........5300
      GOTO 740                                                           ADSORB........5400
  730 UCH=U(I)**CHI2F                                                    ADSORB........5500
  740 RU=RH2*UCH                                                         ADSORB........5600
      CS1(I)=CHCH*RU                                                     ADSORB........5700
      CS2(I)=0.D0                                                        ADSORB........5800
      CS3(I)=0.D0                                                        ADSORB........5900
      SL(I)=CHI1*RU                                                      ADSORB........6000
      SR(I)=0.D0                                                         ADSORB........6100
      GOTO 1000                                                          ADSORB........6200
C                                                                        ADSORB........6300
C.....LANGMUIR SORPTION MODEL                                            ADSORB........6400
  950 IF(ADSMOD1(NR).NE.'LANGMUIR  ') GOTO 1000                          ADSORB........6500
      DD=1.D0+CHI2*RHOW0*U(I)                                            ADSORB........6600
      CS1(I)=(CHI1*RHOW0)/(DD*DD)                                        ADSORB........6700
      CS2(I)=0.D0                                                        ADSORB........6800
      CS3(I)=0.D0                                                        ADSORB........6900
      SL(I)=CS1(I)                                                       ADSORB........7000
      SR(I)=CS1(I)*CHI2*RHOW0*U(I)*U(I)                                  ADSORB........7100
C                                                                        ADSORB........7200
 1000 CONTINUE                                                           ADSORB........7300
C                                                                        ADSORB........7400
 2000 RETURN                                                             ADSORB........7500
      END                                                                ADSORB........7600
C                                                                        ADSORB........7700
C     SUBROUTINE        B  A  N  W  I  D           SUTRA VERSION 3.0     BANWID.........100
C                                                                        BANWID.........200
C *** PURPOSE :                                                          BANWID.........300
C ***  TO CALCULATE THE BANDWIDTH OF THE FINITE ELEMENT MESH.            BANWID.........400
C                                                                        BANWID.........500
      SUBROUTINE BANWID(IN)                                              BANWID.........600
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                BANWID.........700
      CHARACTER*80 UNAME,FNAME(0:23)                                     BANWID.........800
      DIMENSION IN(NIN)                                                  BANWID.........900
      COMMON /DIMS/ NN,NE,NIN,NBI,NCBI,NB,NBHALF,NPBC,NUBC,              BANWID........1000
     1   NSOP,NSOU,NBCN,NPBG,NUBG,NCIDB                                  BANWID........1100
      COMMON /DIMX/ NWI,NWF,NWL,NELT,NNNX,NEX,N48                        BANWID........1200
      COMMON /FNAMES/ UNAME,FNAME                                        BANWID........1300
      COMMON /FUNITS/ K00,K0,K1,K2,K3,K4,K5,K6,K7,K8,K9,                 BANWID........1400
     1   K10,K11,K12,K13,K14,K15,K16,K17,K18,K19,K20,K21,K22,K23         BANWID........1500
      COMMON /SOLVI/ KSOLVP, KSOLVU, NN1, NN2, NN3                       BANWID........1600
C                                                                        BANWID........1700
      NDIF=0                                                             BANWID........1800
      II=0                                                               BANWID........1900
      WRITE(K3,100)                                                      BANWID........2000
  100 FORMAT(////11X,'**** MESH ANALYSIS ****'//)                        BANWID........2100
C                                                                        BANWID........2200
C.....FIND ELEMENT WITH MAXIMUM DIFFERENCE IN NODE NUMBERS               BANWID........2300
      DO 2000 L=1,NE                                                     BANWID........2400
      II=II+1                                                            BANWID........2500
      IELO=IN(II)                                                        BANWID........2600
      IEHI=IN(II)                                                        BANWID........2700
      DO 1000 I=2,N48                                                    BANWID........2800
      II=II+1                                                            BANWID........2900
      IF(IN(II).LT.IELO) IELO=IN(II)                                     BANWID........3000
 1000 IF(IN(II).GT.IEHI) IEHI=IN(II)                                     BANWID........3100
      NDIFF=IEHI-IELO                                                    BANWID........3200
      IF(NDIFF.GT.NDIF) THEN                                             BANWID........3300
       NDIF=NDIFF                                                        BANWID........3400
       LEM=L                                                             BANWID........3500
      ENDIF                                                              BANWID........3600
 2000 CONTINUE                                                           BANWID........3700
C                                                                        BANWID........3800
C.....CALCULATE FULL BANDWIDTH, NB.                                      BANWID........3900
      NB=2*NDIF+1                                                        BANWID........4000
      NBHALF=NDIF+1                                                      BANWID........4100
C.....NBI IS USED TO DIMENSION ARRAYS WHOSE SIZE DEPENDS ON THE          BANWID........4200
C        BANDWIDTH.  IT IS THE SAME AS THE ACTUAL BANDWIDTH, NB.         BANWID........4300
      NBI = NB                                                           BANWID........4400
      WRITE(K3,2500) NB,LEM                                              BANWID........4500
 2500 FORMAT(//13X,'MAXIMUM FULL BANDWIDTH, ',I9,                        BANWID........4600
     1   ', WAS CALCULATED IN ELEMENT ',I9)                              BANWID........4700
C                                                                        BANWID........4800
      RETURN                                                             BANWID........4900
      END                                                                BANWID........5000
C                                                                        BANWID........5100
C     SUBROUTINE        B  A  S  I  S  2           SUTRA VERSION 3.0     BASIS2.........100
C                                                                        BASIS2.........200
C *** PURPOSE :                                                          BASIS2.........300
C ***  TO CALCULATE VALUES OF BASIS AND WEIGHTING FUNCTIONS AND THEIR    BASIS2.........400
C ***  DERIVATIVES, TRANSFORMATION MATRICES BETWEEN LOCAL AND GLOBAL     BASIS2.........500
C ***  COORDINATES AND PARAMETER VALUES AT A SPECIFIED POINT IN A        BASIS2.........600
C ***  QUADRILATERAL FINITE ELEMENT.  THIS SUBROUTINE HANDLES 2D         BASIS2.........700
C ***  CALCULATIONS ONLY; 3D CALCULATIONS ARE PERFORMED IN SUBROUTINE    BASIS2.........800
C ***  BASIS3.                                                           BASIS2.........900
C                                                                        BASIS2........1000
      SUBROUTINE BASIS2(ICALL,L,XLOC,YLOC,IN,X,Y,F,W,DET,                BASIS2........1100
     1   DFDXG,DFDYG,DWDXG,DWDYG,PITER,UITER,PVEL,POR,THICK,THICKG,      BASIS2........1200
     2   VXG,VYG,SWG,RHOG,VISCG,PORG,VGMAG,RELKG,                        BASIS2........1300
     3   PERMXX,PERMXY,PERMYX,PERMYY,CJ11,CJ12,CJ21,CJ22,                BASIS2........1400
     4   GXSI,GETA,RCIT,RCITM1,RGXG,RGYG,LREG)                           BASIS2........1500
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                BASIS2........1600
      DOUBLE PRECISION XLOC,YLOC                                         BASIS2........1700
      DIMENSION IN(NIN),X(NN),Y(NN),UITER(NN),PITER(NN),PVEL(NN),        BASIS2........1800
     1   POR(NN),PERMXX(NE),PERMXY(NE),PERMYX(NE),PERMYY(NE),THICK(NN)   BASIS2........1900
      DIMENSION GXSI(NE,4),GETA(NE,4),RCIT(NN),RCITM1(NN),LREG(NE)       BASIS2........2000
      DIMENSION F(4),W(4),DFDXG(4),DFDYG(4),DWDXG(4),DWDYG(4)            BASIS2........2100
      DIMENSION FX(4),FY(4),AFX(4),AFY(4),                               BASIS2........2200
     1   DFDXL(4),DFDYL(4),DWDXL(4),DWDYL(4),                            BASIS2........2300
     2   XDW(4),YDW(4),XIIX(4),YIIY(4)                                   BASIS2........2400
      DIMENSION KTYPE(2)                                                 BASIS2........2500
      COMMON /CONTRL/ GNUP,GNUU,UP,DTMULT,DTMAX,ME,ISSFLO,ISSTRA,ITCYC,  BASIS2........2600
     1   NPCYC,NUCYC,NPRINT,NBCFPR,NBCSPR,NBCPPR,NBCUPR,NLAKPR,IREAD,    BASIS2........2700
     1   NBGPPR,NBGUPR,ISTORE,NOUMAT,IUNSAT,IALSAT,KTYPE                 BASIS2........2800
      COMMON /DIMS/ NN,NE,NIN,NBI,NCBI,NB,NBHALF,NPBC,NUBC,              BASIS2........2900
     1   NSOP,NSOU,NBCN,NPBG,NUBG,NCIDB                                  BASIS2........3000
      COMMON /PARAMS/ COMPFL,COMPMA,DRWDU,CW,CS,RHOS,SIGMAW,SIGMAS,      BASIS2........3100
     1   RHOW0,URHOW0,VISC0,PRODF1,PRODS1,PRODF0,PRODS0,CHI1,CHI2        BASIS2........3200
      DATA XIIX/-1.D0,+1.D0,+1.D0,-1.D0/,                                BASIS2........3300
     1     YIIY/-1.D0,-1.D0,+1.D0,+1.D0/                                 BASIS2........3400
      SAVE XIIX,YIIY                                                     BASIS2........3500
C                                                                        BASIS2........3600
C                                                                        BASIS2........3700
C.....AT THIS LOCATION IN LOCAL COORDINATES, (XLOC,YLOC),                BASIS2........3800
C        CALCULATE SYMMETRIC WEIGHTING FUNCTIONS, F(I),                  BASIS2........3900
C        SPACE DERIVATIVES, DFDXG(I) AND DFDYG(I), AND                   BASIS2........4000
C        DETERMINANT OF JACOBIAN, DET.                                   BASIS2........4100
C                                                                        BASIS2........4200
      XF1=1.D0-XLOC                                                      BASIS2........4300
      XF2=1.D0+XLOC                                                      BASIS2........4400
      YF1=1.D0-YLOC                                                      BASIS2........4500
      YF2=1.D0+YLOC                                                      BASIS2........4600
C                                                                        BASIS2........4700
C.....CALCULATE BASIS FUNCTION, F.                                       BASIS2........4800
      FX(1)=XF1                                                          BASIS2........4900
      FX(2)=XF2                                                          BASIS2........5000
      FX(3)=XF2                                                          BASIS2........5100
      FX(4)=XF1                                                          BASIS2........5200
      FY(1)=YF1                                                          BASIS2........5300
      FY(2)=YF1                                                          BASIS2........5400
      FY(3)=YF2                                                          BASIS2........5500
      FY(4)=YF2                                                          BASIS2........5600
      DO 10 I=1,4                                                        BASIS2........5700
   10 F(I)=0.250D0*FX(I)*FY(I)                                           BASIS2........5800
C                                                                        BASIS2........5900
C.....CALCULATE DERIVATIVES WITH RESPECT TO LOCAL COORDINATES.           BASIS2........6000
      DO 20 I=1,4                                                        BASIS2........6100
      DFDXL(I)=XIIX(I)*0.250D0*FY(I)                                     BASIS2........6200
   20 DFDYL(I)=YIIY(I)*0.250D0*FX(I)                                     BASIS2........6300
C                                                                        BASIS2........6400
C.....CALCULATE ELEMENTS OF JACOBIAN MATRIX, CJ.                         BASIS2........6500
      CJ11=0.D0                                                          BASIS2........6600
      CJ12=0.D0                                                          BASIS2........6700
      CJ21=0.D0                                                          BASIS2........6800
      CJ22=0.D0                                                          BASIS2........6900
      DO 100 IL=1,4                                                      BASIS2........7000
      II=(L-1)*4+IL                                                      BASIS2........7100
      I=IN(II)                                                           BASIS2........7200
      CJ11=CJ11+DFDXL(IL)*X(I)                                           BASIS2........7300
      CJ12=CJ12+DFDXL(IL)*Y(I)                                           BASIS2........7400
      CJ21=CJ21+DFDYL(IL)*X(I)                                           BASIS2........7500
  100 CJ22=CJ22+DFDYL(IL)*Y(I)                                           BASIS2........7600
C                                                                        BASIS2........7700
C.....CALCULATE DETERMINANT OF JACOBIAN MATRIX.                          BASIS2........7800
      DET=CJ11*CJ22-CJ21*CJ12                                            BASIS2........7900
C                                                                        BASIS2........8000
C.....RETURN TO ELEMEN2 WITH JACOBIAN MATRIX ON FIRST TIME STEP.         BASIS2........8100
      IF(ICALL.EQ.0) RETURN                                              BASIS2........8200
C                                                                        BASIS2........8300
C.....CALCULATE ELEMENTS OF INVERSE JACOBIAN MATRIX, CIJ.                BASIS2........8400
      ODET=1.D0/DET                                                      BASIS2........8500
      CIJ11=+ODET*CJ22                                                   BASIS2........8600
      CIJ12=-ODET*CJ12                                                   BASIS2........8700
      CIJ21=-ODET*CJ21                                                   BASIS2........8800
      CIJ22=+ODET*CJ11                                                   BASIS2........8900
C                                                                        BASIS2........9000
C.....CALCULATE DERIVATIVES WITH RESPECT TO GLOBAL COORDINATES           BASIS2........9100
      DO 200 I=1,4                                                       BASIS2........9200
      DFDXG(I)=CIJ11*DFDXL(I)+CIJ12*DFDYL(I)                             BASIS2........9300
  200 DFDYG(I)=CIJ21*DFDXL(I)+CIJ22*DFDYL(I)                             BASIS2........9400
C                                                                        BASIS2........9500
C.....CALCULATE CONSISTENT COMPONENTS OF (RHO*GRAV) TERM IN LOCAL        BASIS2........9600
C        COORDINATES AT THIS LOCATION, (XLOC,YLOC)                       BASIS2........9700
      RGXL=0.D0                                                          BASIS2........9800
      RGYL=0.D0                                                          BASIS2........9900
      RGXLM1=0.D0                                                        BASIS2.......10000
      RGYLM1=0.D0                                                        BASIS2.......10100
      DO 800 IL=1,4                                                      BASIS2.......10200
      II=(L-1)*4+IL                                                      BASIS2.......10300
      I=IN(II)                                                           BASIS2.......10400
      ADFDXL=DABS(DFDXL(IL))                                             BASIS2.......10500
      ADFDYL=DABS(DFDYL(IL))                                             BASIS2.......10600
      RGXL=RGXL+RCIT(I)*GXSI(L,IL)*ADFDXL                                BASIS2.......10700
      RGYL=RGYL+RCIT(I)*GETA(L,IL)*ADFDYL                                BASIS2.......10800
      RGXLM1=RGXLM1+RCITM1(I)*GXSI(L,IL)*ADFDXL                          BASIS2.......10900
      RGYLM1=RGYLM1+RCITM1(I)*GETA(L,IL)*ADFDYL                          BASIS2.......11000
  800 CONTINUE                                                           BASIS2.......11100
C                                                                        BASIS2.......11200
C.....TRANSFORM CONSISTENT COMPONENTS OF (RHO*GRAV) TERM TO              BASIS2.......11300
C        GLOBAL COORDINATES                                              BASIS2.......11400
      RGXG=CIJ11*RGXL+CIJ12*RGYL                                         BASIS2.......11500
      RGYG=CIJ21*RGXL+CIJ22*RGYL                                         BASIS2.......11600
      RGXGM1=CIJ11*RGXLM1+CIJ12*RGYLM1                                   BASIS2.......11700
      RGYGM1=CIJ21*RGXLM1+CIJ22*RGYLM1                                   BASIS2.......11800
C                                                                        BASIS2.......11900
C.....CALCULATE PARAMETER VALUES AT THIS LOCATION, (XLOC,YLOC)           BASIS2.......12000
      PITERG=0.D0                                                        BASIS2.......12100
      UITERG=0.D0                                                        BASIS2.......12200
      DPDXG=0.D0                                                         BASIS2.......12300
      DPDYG=0.D0                                                         BASIS2.......12400
      PORG=0.D0                                                          BASIS2.......12500
      THICKG=0.0D0                                                       BASIS2.......12600
      DO 1000 IL=1,4                                                     BASIS2.......12700
      II=(L-1)*4 +IL                                                     BASIS2.......12800
      I=IN(II)                                                           BASIS2.......12900
      DPDXG=DPDXG+PVEL(I)*DFDXG(IL)                                      BASIS2.......13000
      DPDYG=DPDYG+PVEL(I)*DFDYG(IL)                                      BASIS2.......13100
      PORG=PORG+POR(I)*F(IL)                                             BASIS2.......13200
      THICKG=THICKG+THICK(I)*F(IL)                                       BASIS2.......13300
      PITERG=PITERG+PITER(I)*F(IL)                                       BASIS2.......13400
      UITERG=UITERG+UITER(I)*F(IL)                                       BASIS2.......13500
 1000 CONTINUE                                                           BASIS2.......13600
C                                                                        BASIS2.......13700
C.....SET VALUES FOR DENSITY AND VISCOSITY.                              BASIS2.......13800
C.....RHOG = FUNCTION(UITER)                                             BASIS2.......13900
      RHOG=RHOFUN(UITERG)                                                BASIS2.......14000
C.....VISCG = FUNCTION(UITER); VISCOSITY IN UNITS OF VISC0*(KG/(M*SEC))  BASIS2.......14100
      IF(ME) 1300,1300,1200                                              BASIS2.......14200
 1200 VISCG=VISCFUN(UITERG)                                              BASIS2.......14300
      GOTO 1400                                                          BASIS2.......14400
C.....FOR SOLUTE TRANSPORT, VISCG IS TAKEN TO BE CONSTANT                BASIS2.......14500
 1300 VISCG=VISC0                                                        BASIS2.......14600
 1400 CONTINUE                                                           BASIS2.......14700
C                                                                        BASIS2.......14800
C.....SET UNSATURATED FLOW PARAMETERS SWG AND RELKG                      BASIS2.......14900
      IF (IALSAT.EQ.2) THEN                                              BASIS2.......15000
         CALL GETSAT(SWG,DSWDPG,RELKG,PITERG,LREG(L))                    BASIS2.......15100
      ELSE                                                               BASIS2.......15200
         SWG = 1D0                                                       BASIS2.......15300
         SIG = 0D0                                                       BASIS2.......15400
         RELKG = 1D0                                                     BASIS2.......15500
      END IF                                                             BASIS2.......15600
C                                                                        BASIS2.......15700
C.....CALCULATE CONSISTENT FLUID VELOCITIES WITH RESPECT TO GLOBAL       BASIS2.......15800
C        COORDINATES, VXG, VYG, AND VGMAG, AT THIS LOCATION, (XLOC,YLOC) BASIS2.......15900
      DENOM=1.D0/(PORG*SWG*VISCG)                                        BASIS2.......16000
      PGX=DPDXG-RGXGM1                                                   BASIS2.......16100
      PGY=DPDYG-RGYGM1                                                   BASIS2.......16200
C.....ZERO OUT RANDOM BOUYANT DRIVING FORCES DUE TO DIFFERENCING         BASIS2.......16300
C        NUMBERS PAST PRECISION LIMIT.  MINIMUM DRIVING FORCE IS         BASIS2.......16400
C        1.D-10 OF PRESSURE GRADIENT.  (THIS VALUE MAY BE CHANGED        BASIS2.......16500
C        DEPENDING ON MACHINE PRECISION.)                                BASIS2.......16600
      IF(DPDXG) 1720,1730,1720                                           BASIS2.......16700
 1720 IF(DABS(PGX/DPDXG)-1.0D-10) 1725,1725,1730                         BASIS2.......16800
 1725 PGX=0.0D0                                                          BASIS2.......16900
 1730 IF(DPDYG) 1750,1760,1750                                           BASIS2.......17000
 1750 IF(DABS(PGY/DPDYG)-1.0D-10) 1755,1755,1760                         BASIS2.......17100
 1755 PGY=0.0D0                                                          BASIS2.......17200
 1760 VXG=-DENOM*(PERMXX(L)*PGX+PERMXY(L)*PGY)*RELKG                     BASIS2.......17300
      VYG=-DENOM*(PERMYX(L)*PGX+PERMYY(L)*PGY)*RELKG                     BASIS2.......17400
      VXG2=VXG*VXG                                                       BASIS2.......17500
      VYG2=VYG*VYG                                                       BASIS2.......17600
      VGMAG=DSQRT(VXG2+VYG2)                                             BASIS2.......17700
C                                                                        BASIS2.......17800
C.....AT THIS POINT IN LOCAL COORDINATES, (XLOC,YLOC),                   BASIS2.......17900
C        CALCULATE ASYMMETRIC WEIGHTING FUNCTIONS, W(I),                 BASIS2.......18000
C        AND SPACE DERIVATIVES, DWDXG(I) AND DWDYG(I).                   BASIS2.......18100
C                                                                        BASIS2.......18200
C.....ASYMMETRIC FUNCTIONS SIMPLIFY WHEN  UP=0.0                         BASIS2.......18300
      IF(UP.GT.1.0D-6.AND.NOUMAT.EQ.0) GOTO 1790                         BASIS2.......18400
      DO 1780 I=1,4                                                      BASIS2.......18500
      W(I)=F(I)                                                          BASIS2.......18600
      DWDXG(I)=DFDXG(I)                                                  BASIS2.......18700
      DWDYG(I)=DFDYG(I)                                                  BASIS2.......18800
 1780 CONTINUE                                                           BASIS2.......18900
C.....RETURN WHEN ONLY SYMMETRIC WEIGHTING FUNCTIONS ARE USED            BASIS2.......19000
      RETURN                                                             BASIS2.......19100
C                                                                        BASIS2.......19200
C.....CALCULATE FLUID VELOCITIES WITH RESPECT TO LOCAL COORDINATES,      BASIS2.......19300
C        VXL, VYL, AND VLMAG, AT THIS LOCATION, (XLOC,YLOC).             BASIS2.......19400
 1790 VXL=CIJ11*VXG+CIJ21*VYG                                            BASIS2.......19500
      VYL=CIJ12*VXG+CIJ22*VYG                                            BASIS2.......19600
      VLMAG=DSQRT(VXL*VXL+VYL*VYL)                                       BASIS2.......19700
C                                                                        BASIS2.......19800
      AA=0.0D0                                                           BASIS2.......19900
      BB=0.0D0                                                           BASIS2.......20000
      IF(VLMAG) 1900,1900,1800                                           BASIS2.......20100
 1800 AA=UP*VXL/VLMAG                                                    BASIS2.......20200
      BB=UP*VYL/VLMAG                                                    BASIS2.......20300
C                                                                        BASIS2.......20400
 1900 XIXI=.750D0*AA*XF1*XF2                                             BASIS2.......20500
      YIYI=.750D0*BB*YF1*YF2                                             BASIS2.......20600
      DO 2000 I=1,4                                                      BASIS2.......20700
      AFX(I)=.50D0*FX(I)+XIIX(I)*XIXI                                    BASIS2.......20800
 2000 AFY(I)=.50D0*FY(I)+YIIY(I)*YIYI                                    BASIS2.......20900
C                                                                        BASIS2.......21000
C.....CALCULATE ASYMMETRIC WEIGHTING FUNCTION, W.                        BASIS2.......21100
      DO 3000 I=1,4                                                      BASIS2.......21200
 3000 W(I)=AFX(I)*AFY(I)                                                 BASIS2.......21300
C                                                                        BASIS2.......21400
      THAAX=0.50D0-1.50D0*AA*XLOC                                        BASIS2.......21500
      THBBY=0.50D0-1.50D0*BB*YLOC                                        BASIS2.......21600
      DO 4000 I=1,4                                                      BASIS2.......21700
      XDW(I)=XIIX(I)*THAAX                                               BASIS2.......21800
 4000 YDW(I)=YIIY(I)*THBBY                                               BASIS2.......21900
C                                                                        BASIS2.......22000
C.....CALCULATE DERIVATIVES WITH RESPECT TO LOCAL COORDINATES.           BASIS2.......22100
      DO 5000 I=1,4                                                      BASIS2.......22200
      DWDXL(I)=XDW(I)*AFY(I)                                             BASIS2.......22300
 5000 DWDYL(I)=YDW(I)*AFX(I)                                             BASIS2.......22400
C                                                                        BASIS2.......22500
C.....CALCULATE DERIVATIVES WITH RESPECT TO GLOBAL COORDINATES.          BASIS2.......22600
      DO 6000 I=1,4                                                      BASIS2.......22700
      DWDXG(I)=CIJ11*DWDXL(I)+CIJ12*DWDYL(I)                             BASIS2.......22800
 6000 DWDYG(I)=CIJ21*DWDXL(I)+CIJ22*DWDYL(I)                             BASIS2.......22900
C                                                                        BASIS2.......23000
C                                                                        BASIS2.......23100
      RETURN                                                             BASIS2.......23200
      END                                                                BASIS2.......23300
C                                                                        BASIS2.......23400
C     SUBROUTINE        B  A  S  I  S  3           SUTRA VERSION 3.0     BASIS3.........100
C                                                                        BASIS3.........200
C *** PURPOSE :                                                          BASIS3.........300
C ***  TO CALCULATE VALUES OF BASIS AND WEIGHTING FUNCTIONS AND THEIR    BASIS3.........400
C ***  DERIVATIVES, TRANSFORMATION MATRICES BETWEEN LOCAL AND GLOBAL     BASIS3.........500
C ***  COORDINATES AND PARAMETER VALUES AT A SPECIFIED POINT IN A        BASIS3.........600
C ***  QUADRILATERAL FINITE ELEMENT.  THIS SUBROUTINE HANDLES 3D         BASIS3.........700
C ***  CALCULATIONS ONLY; 2D CALCULATIONS ARE PERFORMED IN SUBROUTINE    BASIS3.........800
C ***  BASIS2.                                                           BASIS3.........900
C                                                                        BASIS3........1000
      SUBROUTINE BASIS3(ICALL,L,XLOC,YLOC,ZLOC,IN,X,Y,Z,F,W,DET,         BASIS3........1100
     1   DFDXG,DFDYG,DFDZG,DWDXG,DWDYG,DWDZG,PITER,UITER,PVEL,POR,       BASIS3........1200
     2   VXG,VYG,VZG,SWG,RHOG,VISCG,PORG,VGMAG,RELKG,                    BASIS3........1300
     3   PERMXX,PERMXY,PERMXZ,PERMYX,PERMYY,PERMYZ,PERMZX,PERMZY,PERMZZ, BASIS3........1400
     4   CJ11,CJ12,CJ13,CJ21,CJ22,CJ23,CJ31,CJ32,CJ33,                   BASIS3........1500
     4   GXSI,GETA,GZET,RCIT,RCITM1,RGXG,RGYG,RGZG,LREG)                 BASIS3........1600
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                BASIS3........1700
      DOUBLE PRECISION XLOC,YLOC,ZLOC                                    BASIS3........1800
      DIMENSION IN(NIN),X(NN),Y(NN),Z(NN),UITER(NN),PITER(NN),PVEL(NN),  BASIS3........1900
     1   POR(NN),PERMXX(NE),PERMXY(NE),PERMXZ(NE),PERMYX(NE),            BASIS3........2000
     2   PERMYY(NE),PERMYZ(NE),PERMZX(NE),PERMZY(NE),PERMZZ(NE)          BASIS3........2100
      DIMENSION GXSI(NE,8),GETA(NE,8),GZET(NE,8)                         BASIS3........2200
      DIMENSION RCIT(NN),RCITM1(NN),LREG(NE)                             BASIS3........2300
      DIMENSION F(8),DFDXG(8),DFDYG(8),DFDZG(8)                          BASIS3........2400
      DIMENSION W(8),DWDXG(8),DWDYG(8),DWDZG(8)                          BASIS3........2500
      DIMENSION FX(8),FY(8),FZ(8),AFX(8),AFY(8),AFZ(8),                  BASIS3........2600
     1   DFDXL(8),DFDYL(8),DFDZL(8),DWDXL(8),DWDYL(8),DWDZL(8),          BASIS3........2700
     2   XDW(8),YDW(8),ZDW(8),XIIX(8),YIIY(8),ZIIZ(8)                    BASIS3........2800
      DIMENSION KTYPE(2)                                                 BASIS3........2900
      COMMON /CONTRL/ GNUP,GNUU,UP,DTMULT,DTMAX,ME,ISSFLO,ISSTRA,ITCYC,  BASIS3........3000
     1   NPCYC,NUCYC,NPRINT,NBCFPR,NBCSPR,NBCPPR,NBCUPR,NLAKPR,IREAD,    BASIS3........3100
     1   NBGPPR,NBGUPR,ISTORE,NOUMAT,IUNSAT,IALSAT,KTYPE                 BASIS3........3200
      COMMON /DIMS/ NN,NE,NIN,NBI,NCBI,NB,NBHALF,NPBC,NUBC,              BASIS3........3300
     1   NSOP,NSOU,NBCN,NPBG,NUBG,NCIDB                                  BASIS3........3400
      COMMON /PARAMS/ COMPFL,COMPMA,DRWDU,CW,CS,RHOS,SIGMAW,SIGMAS,      BASIS3........3500
     1   RHOW0,URHOW0,VISC0,PRODF1,PRODS1,PRODF0,PRODS0,CHI1,CHI2        BASIS3........3600
      DATA XIIX/-1.D0,+1.D0,+1.D0,-1.D0,-1.D0,+1.D0,+1.D0,-1.D0/         BASIS3........3700
      DATA YIIY/-1.D0,-1.D0,+1.D0,+1.D0,-1.D0,-1.D0,+1.D0,+1.D0/         BASIS3........3800
      DATA ZIIZ/-1.D0,-1.D0,-1.D0,-1.D0,+1.D0,+1.D0,+1.D0,+1.D0/         BASIS3........3900
      SAVE XIIX,YIIY,ZIIZ                                                BASIS3........4000
C                                                                        BASIS3........4100
C                                                                        BASIS3........4200
C.....AT THIS LOCATION IN LOCAL COORDINATES, (XLOC,YLOC,ZLOC),           BASIS3........4300
C        CALCULATE SYMMETRIC WEIGHTING FUNCTIONS, F(I),                  BASIS3........4400
C        SPACE DERIVATIVES, DFDXG(I), DFDYX(I), AND DFDZG(I),            BASIS3........4500
C        AND DETERMINANT OF JACOBIAN, DET.                               BASIS3........4600
C                                                                        BASIS3........4700
      XF1=1.D0-XLOC                                                      BASIS3........4800
      XF2=1.D0+XLOC                                                      BASIS3........4900
      YF1=1.D0-YLOC                                                      BASIS3........5000
      YF2=1.D0+YLOC                                                      BASIS3........5100
      ZF1=1.D0-ZLOC                                                      BASIS3........5200
      ZF2=1.D0+ZLOC                                                      BASIS3........5300
C                                                                        BASIS3........5400
C.....CALCULATE BASIS FUNCTION, F.                                       BASIS3........5500
      FX(1)=XF1                                                          BASIS3........5600
      FX(2)=XF2                                                          BASIS3........5700
      FX(3)=XF2                                                          BASIS3........5800
      FX(4)=XF1                                                          BASIS3........5900
      FX(5)=XF1                                                          BASIS3........6000
      FX(6)=XF2                                                          BASIS3........6100
      FX(7)=XF2                                                          BASIS3........6200
      FX(8)=XF1                                                          BASIS3........6300
      FY(1)=YF1                                                          BASIS3........6400
      FY(2)=YF1                                                          BASIS3........6500
      FY(3)=YF2                                                          BASIS3........6600
      FY(4)=YF2                                                          BASIS3........6700
      FY(5)=YF1                                                          BASIS3........6800
      FY(6)=YF1                                                          BASIS3........6900
      FY(7)=YF2                                                          BASIS3........7000
      FY(8)=YF2                                                          BASIS3........7100
      FZ(1)=ZF1                                                          BASIS3........7200
      FZ(2)=ZF1                                                          BASIS3........7300
      FZ(3)=ZF1                                                          BASIS3........7400
      FZ(4)=ZF1                                                          BASIS3........7500
      FZ(5)=ZF2                                                          BASIS3........7600
      FZ(6)=ZF2                                                          BASIS3........7700
      FZ(7)=ZF2                                                          BASIS3........7800
      FZ(8)=ZF2                                                          BASIS3........7900
      DO 10 I=1,8                                                        BASIS3........8000
   10 F(I)=0.125D0*FX(I)*FY(I)*FZ(I)                                     BASIS3........8100
C                                                                        BASIS3........8200
C.....CALCULATE DERIVATIVES WITH RESPECT TO LOCAL COORDINATES.           BASIS3........8300
      DO 20 I=1,8                                                        BASIS3........8400
      DFDXL(I)=XIIX(I)*0.125D0*FY(I)*FZ(I)                               BASIS3........8500
      DFDYL(I)=YIIY(I)*0.125D0*FX(I)*FZ(I)                               BASIS3........8600
   20 DFDZL(I)=ZIIZ(I)*0.125D0*FX(I)*FY(I)                               BASIS3........8700
C                                                                        BASIS3........8800
C.....CALCULATE ELEMENTS OF JACOBIAN MATRIX, CJ.                         BASIS3........8900
      CJ11=0.D0                                                          BASIS3........9000
      CJ12=0.D0                                                          BASIS3........9100
      CJ13=0.D0                                                          BASIS3........9200
      CJ21=0.D0                                                          BASIS3........9300
      CJ22=0.D0                                                          BASIS3........9400
      CJ23=0.D0                                                          BASIS3........9500
      CJ31=0.D0                                                          BASIS3........9600
      CJ32=0.D0                                                          BASIS3........9700
      CJ33=0.D0                                                          BASIS3........9800
      DO 100 IL=1,8                                                      BASIS3........9900
      II=(L-1)*8+IL                                                      BASIS3.......10000
      I=IN(II)                                                           BASIS3.......10100
      CJ11=CJ11+DFDXL(IL)*X(I)                                           BASIS3.......10200
      CJ12=CJ12+DFDXL(IL)*Y(I)                                           BASIS3.......10300
      CJ13=CJ13+DFDXL(IL)*Z(I)                                           BASIS3.......10400
      CJ21=CJ21+DFDYL(IL)*X(I)                                           BASIS3.......10500
      CJ22=CJ22+DFDYL(IL)*Y(I)                                           BASIS3.......10600
      CJ23=CJ23+DFDYL(IL)*Z(I)                                           BASIS3.......10700
      CJ31=CJ31+DFDZL(IL)*X(I)                                           BASIS3.......10800
      CJ32=CJ32+DFDZL(IL)*Y(I)                                           BASIS3.......10900
  100 CJ33=CJ33+DFDZL(IL)*Z(I)                                           BASIS3.......11000
C                                                                        BASIS3.......11100
C.....CALCULATE DETERMINANT OF JACOBIAN MATRIX.                          BASIS3.......11200
      DET=CJ11*(CJ22*CJ33-CJ32*CJ23)                                     BASIS3.......11300
     1   -CJ21*(CJ12*CJ33-CJ32*CJ13)                                     BASIS3.......11400
     2   +CJ31*(CJ12*CJ23-CJ22*CJ13)                                     BASIS3.......11500
C                                                                        BASIS3.......11600
C.....RETURN TO ELEMEN3 WITH JACOBIAN MATRIX ON FIRST TIME STEP.         BASIS3.......11700
      IF(ICALL.EQ.0) RETURN                                              BASIS3.......11800
C                                                                        BASIS3.......11900
C                                                                        BASIS3.......12000
C.....CALCULATE ELEMENTS OF INVERSE JACOBIAN MATRIX, CIJ.                BASIS3.......12100
      ODET=1.D0/DET                                                      BASIS3.......12200
      CIJ11=+ODET*(CJ22*CJ33-CJ32*CJ23)                                  BASIS3.......12300
      CIJ12=-ODET*(CJ12*CJ33-CJ32*CJ13)                                  BASIS3.......12400
      CIJ13=+ODET*(CJ12*CJ23-CJ22*CJ13)                                  BASIS3.......12500
      CIJ21=-ODET*(CJ21*CJ33-CJ31*CJ23)                                  BASIS3.......12600
      CIJ22=+ODET*(CJ11*CJ33-CJ31*CJ13)                                  BASIS3.......12700
      CIJ23=-ODET*(CJ11*CJ23-CJ21*CJ13)                                  BASIS3.......12800
      CIJ31=+ODET*(CJ21*CJ32-CJ31*CJ22)                                  BASIS3.......12900
      CIJ32=-ODET*(CJ11*CJ32-CJ31*CJ12)                                  BASIS3.......13000
      CIJ33=+ODET*(CJ11*CJ22-CJ21*CJ12)                                  BASIS3.......13100
C                                                                        BASIS3.......13200
C.....CALCULATE DERIVATIVES WITH RESPECT TO GLOBAL COORDINATES           BASIS3.......13300
      DO 200 I=1,8                                                       BASIS3.......13400
      DFDXG(I)=CIJ11*DFDXL(I)+CIJ12*DFDYL(I)+CIJ13*DFDZL(I)              BASIS3.......13500
      DFDYG(I)=CIJ21*DFDXL(I)+CIJ22*DFDYL(I)+CIJ23*DFDZL(I)              BASIS3.......13600
  200 DFDZG(I)=CIJ31*DFDXL(I)+CIJ32*DFDYL(I)+CIJ33*DFDZL(I)              BASIS3.......13700
C                                                                        BASIS3.......13800
C.....CALCULATE CONSISTENT COMPONENTS OF (RHO*GRAV) TERM IN LOCAL        BASIS3.......13900
C        COORDINATES AT THIS LOCATION, (XLOC,YLOC,ZLOC)                  BASIS3.......14000
      RGXL=0.D0                                                          BASIS3.......14100
      RGYL=0.D0                                                          BASIS3.......14200
      RGZL=0.D0                                                          BASIS3.......14300
      RGXLM1=0.D0                                                        BASIS3.......14400
      RGYLM1=0.D0                                                        BASIS3.......14500
      RGZLM1=0.D0                                                        BASIS3.......14600
      DO 800 IL=1,8                                                      BASIS3.......14700
      II=(L-1)*8+IL                                                      BASIS3.......14800
      I=IN(II)                                                           BASIS3.......14900
      ADFDXL=DABS(DFDXL(IL))                                             BASIS3.......15000
      ADFDYL=DABS(DFDYL(IL))                                             BASIS3.......15100
      ADFDZL=DABS(DFDZL(IL))                                             BASIS3.......15200
      RGXL=RGXL+RCIT(I)*GXSI(L,IL)*ADFDXL                                BASIS3.......15300
      RGYL=RGYL+RCIT(I)*GETA(L,IL)*ADFDYL                                BASIS3.......15400
      RGZL=RGZL+RCIT(I)*GZET(L,IL)*ADFDZL                                BASIS3.......15500
      RGXLM1=RGXLM1+RCITM1(I)*GXSI(L,IL)*ADFDXL                          BASIS3.......15600
      RGYLM1=RGYLM1+RCITM1(I)*GETA(L,IL)*ADFDYL                          BASIS3.......15700
      RGZLM1=RGZLM1+RCITM1(I)*GZET(L,IL)*ADFDZL                          BASIS3.......15800
  800 CONTINUE                                                           BASIS3.......15900
C                                                                        BASIS3.......16000
C.....TRANSFORM CONSISTENT COMPONENTS OF (RHO*GRAV) TERM TO              BASIS3.......16100
C        GLOBAL COORDINATES                                              BASIS3.......16200
      RGXG=CIJ11*RGXL+CIJ12*RGYL+CIJ13*RGZL                              BASIS3.......16300
      RGYG=CIJ21*RGXL+CIJ22*RGYL+CIJ23*RGZL                              BASIS3.......16400
      RGZG=CIJ31*RGXL+CIJ32*RGYL+CIJ33*RGZL                              BASIS3.......16500
      RGXGM1=CIJ11*RGXLM1+CIJ12*RGYLM1+CIJ13*RGZLM1                      BASIS3.......16600
      RGYGM1=CIJ21*RGXLM1+CIJ22*RGYLM1+CIJ23*RGZLM1                      BASIS3.......16700
      RGZGM1=CIJ31*RGXLM1+CIJ32*RGYLM1+CIJ33*RGZLM1                      BASIS3.......16800
C                                                                        BASIS3.......16900
C.....CALCULATE PARAMETER VALUES AT THIS LOCATION, (XLOC,YLOC,ZLOC)      BASIS3.......17000
      PITERG=0.D0                                                        BASIS3.......17100
      UITERG=0.D0                                                        BASIS3.......17200
      DPDXG=0.D0                                                         BASIS3.......17300
      DPDYG=0.D0                                                         BASIS3.......17400
      DPDZG=0.D0                                                         BASIS3.......17500
      PORG=0.D0                                                          BASIS3.......17600
      DO 1000 IL=1,8                                                     BASIS3.......17700
      II=(L-1)*8 +IL                                                     BASIS3.......17800
      I=IN(II)                                                           BASIS3.......17900
      DPDXG=DPDXG+PVEL(I)*DFDXG(IL)                                      BASIS3.......18000
      DPDYG=DPDYG+PVEL(I)*DFDYG(IL)                                      BASIS3.......18100
      DPDZG=DPDZG+PVEL(I)*DFDZG(IL)                                      BASIS3.......18200
      PORG=PORG+POR(I)*F(IL)                                             BASIS3.......18300
      PITERG=PITERG+PITER(I)*F(IL)                                       BASIS3.......18400
      UITERG=UITERG+UITER(I)*F(IL)                                       BASIS3.......18500
 1000 CONTINUE                                                           BASIS3.......18600
C                                                                        BASIS3.......18700
C.....SET VALUES FOR DENSITY AND VISCOSITY.                              BASIS3.......18800
C.....RHOG = FUNCTION(UITER)                                             BASIS3.......18900
      RHOG=RHOFUN(UITERG)                                                BASIS3.......19000
C.....VISCG = FUNCTION(UITER); VISCOSITY IN UNITS OF VISC0*(KG/(M*SEC))  BASIS3.......19100
      IF(ME) 1300,1300,1200                                              BASIS3.......19200
 1200 VISCG=VISCFUN(UITERG)                                              BASIS3.......19300
      GOTO 1400                                                          BASIS3.......19400
C.....FOR SOLUTE TRANSPORT, VISCG IS TAKEN TO BE CONSTANT                BASIS3.......19500
 1300 VISCG=VISC0                                                        BASIS3.......19600
 1400 CONTINUE                                                           BASIS3.......19700
C                                                                        BASIS3.......19800
C.....SET UNSATURATED FLOW PARAMETERS SWG AND RELKG                      BASIS3.......19900
      IF (IALSAT.EQ.2) THEN                                              BASIS3.......20000
         CALL GETSAT(SWG,DSWDPG,RELKG,PITERG,LREG(L))                    BASIS3.......20100
      ELSE                                                               BASIS3.......20200
         SWG = 1D0                                                       BASIS3.......20300
         SIG = 0D0                                                       BASIS3.......20400
         RELKG = 1D0                                                     BASIS3.......20500
      END IF                                                             BASIS3.......20600
C                                                                        BASIS3.......20700
C.....CALCULATE CONSISTENT FLUID VELOCITIES WITH RESPECT TO GLOBAL       BASIS3.......20800
C        COORDINATES, VXG, VYG, VZG, AND VGMAG, AT THIS LOCATION,        BASIS3.......20900
C        (XLOC,YLOC,ZLOC)                                                BASIS3.......21000
      DENOM=1.D0/(PORG*SWG*VISCG)                                        BASIS3.......21100
      PGX=DPDXG-RGXGM1                                                   BASIS3.......21200
      PGY=DPDYG-RGYGM1                                                   BASIS3.......21300
      PGZ=DPDZG-RGZGM1                                                   BASIS3.......21400
C.....ZERO OUT RANDOM BOUYANT DRIVING FORCES DUE TO DIFFERENCING         BASIS3.......21500
C        NUMBERS PAST PRECISION LIMIT.  MINIMUM DRIVING FORCE IS         BASIS3.......21600
C        1.D-10 OF PRESSURE GRADIENT.  (THIS VALUE MAY BE CHANGED        BASIS3.......21700
C        DEPENDING ON MACHINE PRECISION.)                                BASIS3.......21800
      IF(DPDXG) 1720,1727,1720                                           BASIS3.......21900
 1720 IF(DABS(PGX/DPDXG)-1.0D-10) 1725,1725,1727                         BASIS3.......22000
 1725 PGX=0.0D0                                                          BASIS3.......22100
 1727 IF(DPDYG) 1730,1737,1730                                           BASIS3.......22200
 1730 IF(DABS(PGY/DPDYG)-1.0D-10) 1735,1735,1737                         BASIS3.......22300
 1735 PGY=0.0D0                                                          BASIS3.......22400
 1737 IF(DPDZG) 1740,1760,1740                                           BASIS3.......22500
 1740 IF(DABS(PGZ/DPDZG)-1.0D-10) 1745,1745,1760                         BASIS3.......22600
 1745 PGZ=0.0D0                                                          BASIS3.......22700
 1760 VXG=-DENOM*(PERMXX(L)*PGX+PERMXY(L)*PGY+PERMXZ(L)*PGZ)*RELKG       BASIS3.......22800
      VYG=-DENOM*(PERMYX(L)*PGX+PERMYY(L)*PGY+PERMYZ(L)*PGZ)*RELKG       BASIS3.......22900
      VZG=-DENOM*(PERMZX(L)*PGX+PERMZY(L)*PGY+PERMZZ(L)*PGZ)*RELKG       BASIS3.......23000
      VXG2=VXG*VXG                                                       BASIS3.......23100
      VYG2=VYG*VYG                                                       BASIS3.......23200
      VZG2=VZG*VZG                                                       BASIS3.......23300
      VGMAG=DSQRT(VXG2+VYG2+VZG2)                                        BASIS3.......23400
C                                                                        BASIS3.......23500
C.....AT THIS POINT IN LOCAL COORDINATES, (XLOC,YLOC,ZLOC),              BASIS3.......23600
C        CALCULATE ASYMMETRIC WEIGHTING FUNCTIONS, W(I),                 BASIS3.......23700
C        AND SPACE DERIVATIVES, DWDXG(I), DWDYG(I), AND DWDZG(I).        BASIS3.......23800
C                                                                        BASIS3.......23900
C.....ASYMMETRIC FUNCTIONS SIMPLIFY WHEN  UP=0.0                         BASIS3.......24000
      IF(UP.GT.1.0D-6.AND.NOUMAT.EQ.0) GOTO 1790                         BASIS3.......24100
      DO 1780 I=1,8                                                      BASIS3.......24200
      W(I)=F(I)                                                          BASIS3.......24300
      DWDXG(I)=DFDXG(I)                                                  BASIS3.......24400
      DWDYG(I)=DFDYG(I)                                                  BASIS3.......24500
      DWDZG(I)=DFDZG(I)                                                  BASIS3.......24600
 1780 CONTINUE                                                           BASIS3.......24700
C.....RETURN WHEN ONLY SYMMETRIC WEIGHTING FUNCTIONS ARE USED            BASIS3.......24800
      RETURN                                                             BASIS3.......24900
C                                                                        BASIS3.......25000
C.....CALCULATE FLUID VELOCITIES WITH RESPECT TO LOCAL COORDINATES,      BASIS3.......25100
C        VXL, VYL, VZL, AND VLMAG, AT THIS LOCATION, (XLOC,YLOC,ZLOC).   BASIS3.......25200
 1790 VXL=CIJ11*VXG+CIJ21*VYG+CIJ31*VZG                                  BASIS3.......25300
      VYL=CIJ12*VXG+CIJ22*VYG+CIJ32*VZG                                  BASIS3.......25400
      VZL=CIJ13*VXG+CIJ23*VYG+CIJ33*VZG                                  BASIS3.......25500
      VLMAG=DSQRT(VXL*VXL+VYL*VYL+VZL*VZL)                               BASIS3.......25600
C                                                                        BASIS3.......25700
      AA=0.0D0                                                           BASIS3.......25800
      BB=0.0D0                                                           BASIS3.......25900
      GG=0.0D0                                                           BASIS3.......26000
      IF(VLMAG) 1900,1900,1800                                           BASIS3.......26100
 1800 AA=UP*VXL/VLMAG                                                    BASIS3.......26200
      BB=UP*VYL/VLMAG                                                    BASIS3.......26300
      GG=UP*VZL/VLMAG                                                    BASIS3.......26400
C                                                                        BASIS3.......26500
 1900 XIXI=.750D0*AA*XF1*XF2                                             BASIS3.......26600
      YIYI=.750D0*BB*YF1*YF2                                             BASIS3.......26700
      ZIZI=.750D0*GG*ZF1*ZF2                                             BASIS3.......26800
      DO 2000 I=1,8                                                      BASIS3.......26900
      AFX(I)=.50D0*FX(I)+XIIX(I)*XIXI                                    BASIS3.......27000
      AFY(I)=.50D0*FY(I)+YIIY(I)*YIYI                                    BASIS3.......27100
 2000 AFZ(I)=.50D0*FZ(I)+ZIIZ(I)*ZIZI                                    BASIS3.......27200
C                                                                        BASIS3.......27300
C.....CALCULATE ASYMMETRIC WEIGHTING FUNCTION, W.                        BASIS3.......27400
      DO 3000 I=1,8                                                      BASIS3.......27500
 3000 W(I)=AFX(I)*AFY(I)*AFZ(I)                                          BASIS3.......27600
C                                                                        BASIS3.......27700
      THAAX=0.50D0-1.50D0*AA*XLOC                                        BASIS3.......27800
      THBBY=0.50D0-1.50D0*BB*YLOC                                        BASIS3.......27900
      THGGZ=0.50D0-1.50D0*GG*ZLOC                                        BASIS3.......28000
      DO 4000 I=1,8                                                      BASIS3.......28100
      XDW(I)=XIIX(I)*THAAX                                               BASIS3.......28200
      YDW(I)=YIIY(I)*THBBY                                               BASIS3.......28300
 4000 ZDW(I)=ZIIZ(I)*THGGZ                                               BASIS3.......28400
C                                                                        BASIS3.......28500
C.....CALCULATE DERIVATIVES WITH RESPECT TO LOCAL COORDINATES.           BASIS3.......28600
      DO 5000 I=1,8                                                      BASIS3.......28700
      DWDXL(I)=XDW(I)*AFY(I)*AFZ(I)                                      BASIS3.......28800
      DWDYL(I)=YDW(I)*AFX(I)*AFZ(I)                                      BASIS3.......28900
 5000 DWDZL(I)=ZDW(I)*AFX(I)*AFY(I)                                      BASIS3.......29000
C                                                                        BASIS3.......29100
C.....CALCULATE DERIVATIVES WITH RESPECT TO GLOBAL COORDINATES.          BASIS3.......29200
      DO 6000 I=1,8                                                      BASIS3.......29300
      DWDXG(I)=CIJ11*DWDXL(I)+CIJ12*DWDYL(I)+CIJ13*DWDZL(I)              BASIS3.......29400
      DWDYG(I)=CIJ21*DWDXL(I)+CIJ22*DWDYL(I)+CIJ23*DWDZL(I)              BASIS3.......29500
 6000 DWDZG(I)=CIJ31*DWDXL(I)+CIJ32*DWDYL(I)+CIJ33*DWDZL(I)              BASIS3.......29600
C                                                                        BASIS3.......29700
C                                                                        BASIS3.......29800
      RETURN                                                             BASIS3.......29900
      END                                                                BASIS3.......30000
C                                                                        BASIS3.......30100
C     SUBROUTINE        B  C                       SUTRA VERSION 3.0     BC.............100
C                                                                        BC.............200
C *** PURPOSE :                                                          BC.............300
C ***  TO IMPLEMENT SPECIFIED PRESSURE AND SPECIFIED TEMPERATURE OR      BC.............400
C ***  CONCENTRATION CONDITIONS BY MODIFYING THE GLOBAL FLOW AND         BC.............500
C ***  TRANSPORT MATRIX EQUATIONS.                                       BC.............600
C                                                                        BC.............700
      SUBROUTINE BC(ML,PMAT,PVEC,UMAT,UVEC,IPBC,PBC,BPBC,                BC.............800
     1   IUBC,UBC,BUBC,QPLITR,IA,JA,GNUPP,GNUUU,UITER,IBCPBC,IBCUBC,     BC.............900
     2   ISPBC,ISUBC)                                                    BC............1000
      USE LARR, ONLY : ISLAKE,PLK,ULK,LAKNOD,LKBCPBC,LKBCUBC,ISURFACE    BC............1100
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                BC............1200
      DIMENSION PMAT(NELT,NCBI),PVEC(NNVEC),UMAT(NELT,NCBI),UVEC(NNVEC), BC............1300
     1   IPBC(NBCN),PBC(NBCN),IUBC(NBCN),UBC(NBCN),QPLITR(NBCN),         BC............1400
     2   GNUPP(NBCN),GNUUU(NBCN),UITER(NNVEC),BPBC(NPBC),BUBC(NUBC)      BC............1500
      INTEGER(1) IBCPBC(NBCN),IBCUBC(NBCN)                               BC............1600
      DIMENSION IA(NDIMIA),JA(NDIMJA),ISPBC(NN),ISUBC(NN)                BC............1700
      DIMENSION KTYPE(2)                                                 BC............1800
      COMMON /CONTRL/ GNUP,GNUU,UP,DTMULT,DTMAX,ME,ISSFLO,ISSTRA,ITCYC,  BC............1900
     1   NPCYC,NUCYC,NPRINT,NBCFPR,NBCSPR,NBCPPR,NBCUPR,NLAKPR,IREAD,    BC............2000
     1   NBGPPR,NBGUPR,ISTORE,NOUMAT,IUNSAT,IALSAT,KTYPE                 BC............2100
      COMMON /DIMS/ NN,NE,NIN,NBI,NCBI,NB,NBHALF,NPBC,NUBC,              BC............2200
     1   NSOP,NSOU,NBCN,NPBG,NUBG,NCIDB                                  BC............2300
      COMMON /DIMSRF/ MAXCON, NNSURF, NNVERT                             BC............2400
      COMMON /DIMX/ NWI,NWF,NWL,NELT,NNNX,NEX,N48                        BC............2500
      COMMON /DIMX2/ NELTA,NNVEC,NDIMIA,NDIMJA                           BC............2600
      COMMON /PARAMS/ COMPFL,COMPMA,DRWDU,CW,CS,RHOS,SIGMAW,SIGMAS,      BC............2700
     1   RHOW0,URHOW0,VISC0,PRODF1,PRODS1,PRODF0,PRODS0,CHI1,CHI2        BC............2800
      COMMON /SOLVI/ KSOLVP,KSOLVU,NN1,NN2,NN3                           BC............2900
      COMMON /TIMES/ DELT,TSEC,TMIN,THOUR,TDAY,TWEEK,TMONTH,TYEAR,       BC............3000
     1   TMAX,DELTP,DELTU,DLTPM1,DLTUM1,IT,ITBCS,ITRST,ITMAX,TSTART      BC............3100
C                                                                        BC............3200
C                                                                        BC............3300
C.....SET UP MATRIX STRUCTURE INFORMATION                                BC............3400
      IF (KSOLVP.EQ.0) THEN                                              BC............3500
         JMID = NBHALF                                                   BC............3600
      ELSE                                                               BC............3700
         JMID = 1                                                        BC............3800
      END IF                                                             BC............3900
C                                                                        BC............4000
      IF(NPBC.EQ.0) GOTO 1050                                            BC............4100
C.....SPECIFIED P BOUNDARY CONDITIONS                                    BC............4200
C                                                                        BC............4300
      IF ((ML.NE.2).AND.(KSOLVP.EQ.0)) THEN                              BC............4400
C.....FOR DIRECT SOLVER, MOVE SPEC-P MATRIX OFF-DIAGONALS TO RHS         BC............4500
C        OF EQUATION FOR P                                               BC............4600
      DO 80 I=1,NN                                                       BC............4700
         IB = I                                                          BC............4800
         DO 50 JB=1,NB                                                   BC............4900
            J=JB+IB-NBHALF                                               BC............5000
            IF ((J.EQ.I).OR.(J.LT.1).OR.(J.GT.NN)) CYCLE                 BC............5100
            JP = ISPBC(J)                                                BC............5200
            IF (JP.NE.0) THEN                                            BC............5300
               IF ((IBCPBC(JP).NE.2).AND.(LKBCPBC(JP))) THEN             BC............5400
                  IF (ISLAKE(J)) THEN                                    BC............5500
                     ISURF = ISURFACE(J)                                 BC............5600
                     PLAK = PLK(ISURF)                                   BC............5700
                  ELSE                                                   BC............5800
                     PLAK = 0D0                                          BC............5900
                  END IF                                                 BC............6000
                  PVEC(IB) = PVEC(IB) - PMAT(IB,JB)*(PBC(JP) + PLAK)     BC............6100
                  PMAT(IB,JB) = 0D0                                      BC............6200
               END IF                                                    BC............6300
            END IF                                                       BC............6400
   50    CONTINUE                                                        BC............6500
   80 CONTINUE                                                           BC............6600
      END IF                                                             BC............6700
C                                                                        BC............6800
      DO 1000 IP=1,NPBC                                                  BC............6900
      IF ((IBCPBC(IP).EQ.2).OR.(.NOT.LKBCPBC(IP))) CYCLE                 BC............7000
      I=IABS(IPBC(IP))                                                   BC............7100
      IF (KSOLVP.EQ.0) THEN                                              BC............7200
         IMID = I                                                        BC............7300
      ELSE                                                               BC............7400
         IMID = JA(I)                                                    BC............7500
      END IF                                                             BC............7600
C                                                                        BC............7700
      IF (ISLAKE(I)) THEN                                                BC............7800
         ISURF = ISURFACE(I)                                             BC............7900
         PLAK = PLK(ISURF)                                               BC............8000
         ULAK = ULK(ISURF)                                               BC............8100
      ELSE                                                               BC............8200
         PLAK = 0D0                                                      BC............8300
         ULAK = 0D0                                                      BC............8400
      END IF                                                             BC............8500
C                                                                        BC............8600
      IF (ML.NE.2) THEN                                                  BC............8700
      IF (KSOLVP.EQ.0) THEN                                              BC............8800
C........FOR DIRECT SOLVER, SAVE MATRIX DIAGONAL ENTRY AT SPEC-P         BC............8900
C           NODE, BUT DO NOT MODIFY THE MATRIX OR RHS FOR P              BC............9000
         BPBC(IP) = PMAT(IMID,JMID)                                      BC............9100
      ELSE                                                               BC............9200
C........FOR ITERATIVE SOLVER, SAVE "TRUE" RHS VECTOR AND SET UP         BC............9300
C           MODIFIED MATRIX AND RHS FOR P                                BC............9400
         BPBC(IP) = PVEC(I)                                              BC............9500
         GPINL=GNUP*PMAT(IMID,JMID)                                      BC............9600
         GPINR=GPINL*(PBC(IP) + PLAK)                                    BC............9700
         PMAT(IMID,JMID)=GPINL                                           BC............9800
         PVEC(I)=GPINR                                                   BC............9900
      END IF                                                             BC...........10000
      END IF                                                             BC...........10100
C                                                                        BC...........10200
      IF (ML.NE.1) THEN                                                  BC...........10300
C.....MODIFY EQUATION FOR U BY ADDING U SOURCE WHEN FLUID FLOWS IN       BC...........10400
C        AT SPECIFIED PRESSURE NODE                                      BC...........10500
      IF (QPLITR(IP).GT.0D0) THEN                                        BC...........10600
         GUL = -CW*QPLITR(IP)                                            BC...........10700
         IF (.NOT.ISLAKE(I)) THEN                                        BC...........10800
            GUR = -GUL*UBC(IP)                                           BC...........10900
         ELSE                                                            BC...........11000
            GUR = -GUL*ULAK                                              BC...........11100
         END IF                                                          BC...........11200
      ELSE                                                               BC...........11300
         GUL = 0.0D0                                                     BC...........11400
         GUR = 0.0D0                                                     BC...........11500
      END IF                                                             BC...........11600
  360 IF(NOUMAT) 370,370,380                                             BC...........11700
  370 UMAT(IMID,JMID)=UMAT(IMID,JMID)-GUL                                BC...........11800
  380 UVEC(I)=UVEC(I)+GUR                                                BC...........11900
      END IF                                                             BC...........12000
C                                                                        BC...........12100
 1000 CONTINUE                                                           BC...........12200
C                                                                        BC...........12300
C                                                                        BC...........12400
 1050 IF (ML.NE.1) THEN                                                  BC...........12500
 1100 IF(NUBC.EQ.0) GOTO 3000                                            BC...........12600
C.....SPECIFIED U BOUNDARY CONDITIONS.                                   BC...........12700
C                                                                        BC...........12800
C.....FOR ALL SOLVERS, MOVE SPEC-U MATRIX OFF-DIAGONALS TO RHS           BC...........12900
C        OF EQUATION FOR U                                               BC...........13000
      IF (KSOLVU.EQ.0) THEN                                              BC...........13100
C........DIRECT SOLVER                                                   BC...........13200
         DO 1140 I=1,NN                                                  BC...........13300
            IB = I                                                       BC...........13400
            DO 1120 JB=1,NB                                              BC...........13500
               J=JB+IB-NBHALF                                            BC...........13600
               IF ((J.EQ.I).OR.(J.LT.1).OR.(J.GT.NN)) CYCLE              BC...........13700
               JPU = ISUBC(J)                                            BC...........13800
               IF (JPU.NE.0) THEN                                        BC...........13900
                  IF ((IBCUBC(JPU).NE.2).AND.(LKBCUBC(JPU))) THEN        BC...........14000
                     IF (ISLAKE(J)) THEN                                 BC...........14100
                        ISURF = ISURFACE(J)                              BC...........14200
                        UVAL = ULK(ISURF)                                BC...........14300
                     ELSE                                                BC...........14400
                        UVAL = UBC(JPU)                                  BC...........14500
                     END IF                                              BC...........14600
                     UVEC(IB) = UVEC(IB) - UMAT(IB,JB)*UVAL              BC...........14700
ccc                     UMAT(IB,JB) = 0D0                                ! fix bk 231103   BC...........14800
C....................ESSENTIALLY ZERO OUT DIAGONAL IN A RECOVERABLE WAY  ! fix bk 231103
                     UMAT(IB,JB) = UMAT(IB,JB)/GNUU                      ! fix bk 231103
                  END IF                                                 BC...........14900
               END IF                                                    BC...........15000
 1120       CONTINUE                                                     BC...........15100
 1140    CONTINUE                                                        BC...........15200
      ELSE                                                               BC...........15300
C........ITERATIVE SOLVER (SLAP COLUMN)                                  BC...........15400
         DO 1180 I=1,NN                                                  BC...........15500
            MDBEG = JA(I)                                                BC...........15600
            MDEND = JA(I + 1) - 1                                        BC...........15700
            DO 1170 MJ=MDBEG+1,MDEND                                     BC...........15800
               J = IA(MJ)                                                BC...........15900
C..............ASSUME MATRIX STRUCTURE IS SYMMETRIC, EVEN IF             BC...........16000
C                 MATRIX VALUES ARE NOT                                  BC...........16100
               MBEG = JA(J)                                              BC...........16200
               MEND = JA(J + 1) - 1                                      BC...........16300
               DO 1150 MM=MBEG,MEND                                      BC...........16400
                  IF (I.EQ.IA(MM)) THEN                                  BC...........16500
                     M = MM                                              BC...........16600
                     GOTO 1152                                           BC...........16700
                  END IF                                                 BC...........16800
 1150          CONTINUE                                                  BC...........16900
 1152          JPU = ISUBC(J)                                            BC...........17000
               IF (JPU.NE.0) THEN                                        BC...........17100
                  IF ((IBCUBC(JPU).NE.2).AND.(LKBCUBC(JPU))) THEN        BC...........17200
                     IF (ISLAKE(J)) THEN                                 BC...........17300
                        ISURF = ISURFACE(J)                              BC...........17400
                        UVAL = ULK(ISURF)                                BC...........17500
                     ELSE                                                BC...........17600
                        UVAL = UBC(JPU)                                  BC...........17700
                     END IF                                              BC...........17800
                     UVEC(I) = UVEC(I) - UMAT(M,1)*UVAL                  BC...........17900
ccc                     UMAT(M,1) = 0D0                                  ! fix bk 231103   BC...........18000
C....................ESSENTIALLY ZERO OUT DIAGONAL IN A RECOVERABLE WAY  ! fix bk 231103
                     UMAT(M,1) = UMAT(M,1)/GNUU                          ! fix bk 231103
                  END IF                                                 BC...........18100
               END IF                                                    BC...........18200
 1170       CONTINUE                                                     BC...........18300
 1180    CONTINUE                                                        BC...........18400
      END IF                                                             BC...........18500
C                                                                        BC...........18600
C.....SAVE MATRIX DIAGONAL ENTRIES AT SPEC-U NODES, BUT DO NOT MODIFY    BC...........18700
C        THE MATRIX OR RHS FOR U                                         BC...........18800
      DO 2500 IU=1,NUBC                                                  BC...........18900
      IUP=IU+NPBC                                                        BC...........19000
      IF ((IBCUBC(IUP).EQ.2).OR.(.NOT.LKBCUBC(IUP))) CYCLE               BC...........19100
      I=IABS(IUBC(IUP))                                                  BC...........19200
C                                                                        BC...........19300
      IF (KSOLVP.EQ.0) THEN                                              BC...........19400
         IMID = I                                                        BC...........19500
      ELSE                                                               BC...........19600
         IMID = JA(I)                                                    BC...........19700
      END IF                                                             BC...........19800
      IF(NOUMAT) 1200,1200,2500                                          BC...........19900
 1200 BUBC(IU) = UMAT(IMID,JMID)                                         BC...........20000
 2500 CONTINUE                                                           BC...........20100
      END IF                                                             BC...........20200
C                                                                        BC...........20300
 3000 CONTINUE                                                           BC...........20400
C                                                                        BC...........20500
C                                                                        BC...........20600
      RETURN                                                             BC...........20700
      END                                                                BC...........20800
C                                                                        BC...........20900
C     SUBROUTINE        B  C  G                    SUTRA VERSION 3.0     BCG............100
C                                                                        BCG............200
C *** PURPOSE :                                                          BCG............300
C ***  TO IMPLEMENT GENERALIZED FLOW AND TRANSPORT BOUNDARY              BCG............400
C ***  CONDITIONS BY MODIFYING THE GLOBAL FLOW AND TRANSPORT             BCG............500
C ***  MATRIX EQUATIONS.                                                 BCG............600
C                                                                        BCG............700
      SUBROUTINE BCG(ML,PMAT,PVEC,UMAT,UVEC,IPBG,PBG1,QPBG1,PBG2,        BCG............800
     1   QPBG2,CPQL1,CPQL2,UPBGI,CUPBGO,UPBGO,IUBG,UBG1,QUBG1,UBG2,      BCG............900
     2   QUBG2,BPBG,QPGITR,JA,GNUPG,QPBGIC,GNUUG,QUBGIC,PITER,           BCG...........1000
     3   IBCPBG,IBCUBG,IBCSPG,IBCSUG,ISPBG,LPBGSP)                       BCG...........1100
      USE LARR, ONLY : ISLAKE,PLK,ULK,LAKNOD,ITIPG,ITIUG,                BCG...........1200
     1   LKBCPBG,LKBCUBG,ISURFACE                                        BCG...........1300
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                BCG...........1400
      CHARACTER*1 CPQL1(NPBG),CPQL2(NPBG)                                BCG...........1500
      CHARACTER*3 CUPBGO(NPBG)                                           BCG...........1600
      DIMENSION PMAT(NELT,NCBI),PVEC(NNVEC),UMAT(NELT,NCBI),UVEC(NNVEC)  BCG...........1700
      DIMENSION PITER(NNVEC)                                             BCG...........1800
      DIMENSION PBG1(NPBG),QPBG1(NPBG),PBG2(NPBG),QPBG2(NPBG),           BCG...........1900
     1   UPBGI(NPBG),UBG1(NUBG),QUBG1(NUBG),UBG2(NUBG),QUBG2(NUBG),      BCG...........2000
     2   QPBGIC(NPBG),GNUPG(NPBG),QUBGIC(NUBG),GNUUG(NUBG),QPGITR(NPBG), BCG...........2100
     3   UPBGO(NPBG),BPBG(NPBG)                                          BCG...........2200
      DIMENSION IPBG(NPBG),IUBG(NUBG)                                    BCG...........2300
      INTEGER(1) IBCPBG(NPBG),IBCUBG(NUBG)                               BCG...........2400
      DIMENSION IBCSPG(NPBG),IBCSUG(NUBG)                                BCG...........2500
      DIMENSION ISPBG(NN)                                                BCG...........2600
      LOGICAL LPBGSP(NPBG),LPBG                                          BCG...........2700
      DIMENSION JA(NDIMJA)                                               BCG...........2800
      DIMENSION KTYPE(2)                                                 BCG...........2900
      COMMON /CONTRL/ GNUP,GNUU,UP,DTMULT,DTMAX,ME,ISSFLO,ISSTRA,ITCYC,  BCG...........3000
     1   NPCYC,NUCYC,NPRINT,NBCFPR,NBCSPR,NBCPPR,NBCUPR,NLAKPR,IREAD,    BCG...........3100
     1   NBGPPR,NBGUPR,ISTORE,NOUMAT,IUNSAT,IALSAT,KTYPE                 BCG...........3200
      COMMON /DIMS/ NN,NE,NIN,NBI,NCBI,NB,NBHALF,NPBC,NUBC,              BCG...........3300
     1   NSOP,NSOU,NBCN,NPBG,NUBG,NCIDB                                  BCG...........3400
      COMMON /DIMSRF/ MAXCON, NNSURF, NNVERT                             BCG...........3500
      COMMON /DIMX/ NWI,NWF,NWL,NELT,NNNX,NEX,N48                        BCG...........3600
      COMMON /DIMX2/ NELTA,NNVEC,NDIMIA,NDIMJA                           BCG...........3700
      COMMON /PARAMS/ COMPFL,COMPMA,DRWDU,CW,CS,RHOS,SIGMAW,SIGMAS,      BCG...........3800
     1   RHOW0,URHOW0,VISC0,PRODF1,PRODS1,PRODF0,PRODS0,CHI1,CHI2        BCG...........3900
      COMMON /SOLVI/ KSOLVP,KSOLVU,NN1,NN2,NN3                           BCG...........4000
      COMMON /TIMES/ DELT,TSEC,TMIN,THOUR,TDAY,TWEEK,TMONTH,TYEAR,       BCG...........4100
     1   TMAX,DELTP,DELTU,DLTPM1,DLTUM1,IT,ITBCS,ITRST,ITMAX,TSTART      BCG...........4200
C                                                                        BCG...........4300
C                                                                        BCG...........4400
C.....SET UP MATRIX STRUCTURE INFORMATION                                BCG...........4500
      IF (KSOLVP.EQ.0) THEN                                              BCG...........4600
         JMID = NBHALF                                                   BCG...........4700
      ELSE                                                               BCG...........4800
         JMID = 1                                                        BCG...........4900
      END IF                                                             BCG...........5000
C                                                                        BCG...........5100
      IF(NPBG.EQ.0) GOTO 1050                                            BCG...........5200
C.....GENERALIZED-FLOW BOUNDARY CONDITIONS                               BCG...........5300
C                                                                        BCG...........5400
      IF ((ML.NE.2).AND.(KSOLVP.EQ.0)) THEN                              BCG...........5500
C.....FOR DIRECT SOLVER, MOVE SPEC-P-ACTING MATRIX OFF-DIAGINALS TO      BCG...........5600
C        RHS OF EQUATION FOR P                                           BCG...........5700
      DO 80 I=1,NN                                                       BCG...........5800
         IB = I                                                          BCG...........5900
         DO 50 JB=1,NB                                                   BCG...........6000
            J=JB+IB-NBHALF                                               BCG...........6100
            IF ((J.EQ.I).OR.(J.LT.1).OR.(J.GT.NN)) CYCLE                 BCG...........6200
            JPG = ISPBG(J)                                               BCG...........6300
            IF (JPG.EQ.0) THEN                                           BCG...........6400
               LPBG = .FALSE.                                            BCG...........6500
            ELSE                                                         BCG...........6600
               LPBG = LPBGSP(JPG)                                        BCG...........6700
            END IF                                                       BCG...........6800
            IF (LPBG) THEN                                               BCG...........6900
               NFB = IBCSPG(IABS(JPG))                                   BCG...........7000
               LIT = ITIPG(NFB)                                          BCG...........7100
               IF (ISLAKE(J).AND.(LIT.EQ.2)) THEN                        BCG...........7200
                  ISURF = ISURFACE(J)                                    BCG...........7300
                  PLAK = PLK(ISURF)                                      BCG...........7400
               ELSE                                                      BCG...........7500
                  PLAK = 0D0                                             BCG...........7600
               END IF                                                    BCG...........7700
               IF (JPG.LT.0) THEN                                        BCG...........7800
C.................UPDATE FOR PBG CONDITION AT ITS LOWER P LIMIT.         BCG...........7900
                  PVEC(IB) = PVEC(IB) -                                  BCG...........8000
     1               PMAT(IB,JB)*(PBG1(-JPG) + PLAK)                     BCG...........8100
                  PMAT(IB,JB) = 0D0                                      BCG...........8200
               ELSE IF (JPG.GT.0) THEN                                   BCG...........8300
C.................UPDATE FOR PBG CONDITION AT ITS UPPER P LIMIT.         BCG...........8400
                  PVEC(IB) = PVEC(IB) -                                  BCG...........8500
     1               PMAT(IB,JB)*(PBG2(JPG) + PLAK)                      BCG...........8600
                  PMAT(IB,JB) = 0D0                                      BCG...........8700
               END IF                                                    BCG...........8800
            END IF                                                       BCG...........8900
   50    CONTINUE                                                        BCG...........9000
   80 CONTINUE                                                           BCG...........9100
      END IF                                                             BCG...........9200
C                                                                        BCG...........9300
      DO 1000 IPG=1,NPBG                                                 BCG...........9400
      IF ((IBCPBG(IPG).EQ.2).OR.(.NOT.LKBCPBG(IPG))) CYCLE               BCG...........9500
      I=IABS(IPBG(IPG))                                                  BCG...........9600
      NFB = IBCSPG(IPG)                                                  BCG...........9700
      LIT = ITIPG(NFB)                                                   BCG...........9800
      IF ((LIT.EQ.1).AND.ISLAKE(I)) CYCLE                                BCG...........9900
C                                                                        BCG..........10000
      IF (KSOLVP.EQ.0) THEN                                              BCG..........10100
         IMID = I                                                        BCG..........10200
      ELSE                                                               BCG..........10300
         IMID = JA(I)                                                    BCG..........10400
      END IF                                                             BCG..........10500
C                                                                        BCG..........10600
      IF (ISLAKE(I).AND.(LIT.EQ.2)) THEN                                 BCG..........10700
         ISURF = ISURFACE(I)                                             BCG..........10800
         PLAK = PLK(ISURF)                                               BCG..........10900
         ULAK = ULK(ISURF)                                               BCG..........11000
      ELSE                                                               BCG..........11100
         PLAK = 0D0                                                      BCG..........11200
         ULAK = 0D0                                                      BCG..........11300
      END IF                                                             BCG..........11400
      PBG1EFF = PBG1(IPG) + PLAK                                         BCG..........11500
      PBG2EFF = PBG2(IPG) + PLAK                                         BCG..........11600
C                                                                        BCG..........11700
      IF(ML-1) 100,100,200                                               BCG..........11800
C.....MODIFY EQUATION FOR P BY ADDING FLUID SOURCE AT                    BCG..........11900
C        GENERALIZED-FLOW NODE                                           BCG..........12000
  100 IF (.NOT.LPBGSP(IPG)) THEN                                         BCG..........12100
C........NOT ACTING AS A SPECIFIED-P NODE                                BCG..........12200
ccc         IF (ISPBG(IPG).NE.0) THEN                                       BCG..........12300
         IF (ISPBG(I).NE.0) THEN                                         ! fix wt220107
C...........ACTING AS A NORMAL PBG NODE                                  BCG..........12400
            IF ((CPQL1(IPG).EQ."Q").AND.(PITER(I).LT.PBG1EFF)) THEN      BCG..........12500
               GPINL = 0D0                                               BCG..........12600
               GPINR = QPBG1(IPG)                                        BCG..........12700
            ELSE IF ((CPQL2(IPG).EQ."Q").AND.(PITER(I).GT.PBG2EFF)) THEN BCG..........12800
               GPINL = 0D0                                               BCG..........12900
               GPINR = QPBG2(IPG)                                        BCG..........13000
            ELSE                                                         BCG..........13100
               GPINL = -GNUPG(IPG)                                       BCG..........13200
               GPINR = GNUPG(IPG)*PBG1EFF + QPBG1(IPG)                   BCG..........13300
            END IF                                                       BCG..........13400
            PMAT(IMID,JMID)=PMAT(IMID,JMID)-GPINL                        BCG..........13500
            PVEC(I)=PVEC(I)+GPINR                                        BCG..........13600
         END IF                                                          BCG..........13700
      ELSE                                                               BCG..........13800
C........ACTING AS A SPECIFIED-P NODE                                    BCG..........13900
         IF (KSOLVP.EQ.0) THEN                                           BCG..........14000
C...........FOR DIRECT SOLVER, SAVE MATRIX DIAGONAL ENTRY AT GEN-FLOW    BCG..........14100
C              NODE  ACTING AS SPEC-P NODE, BUT DO NOT MODIFY THE        BCG..........14200
C              MATRIX OR RHS FOR P                                       BCG..........14300
            BPBG(IPG) = PMAT(IMID,JMID)                                  BCG..........14400
         ELSE                                                            BCG..........14500
C...........FOR ITERATIVE SOLVER, SAVE "TRUE" RHS VECTOR AND SET UP      BCG..........14600
C              MODIFIED MATRIX AND RHS FOR P                             BCG..........14700
            BPBG(IPG) = PVEC(I)                                          BCG..........14800
            GPINL=GNUP*PMAT(IMID,JMID)                                   BCG..........14900
            IF (ISPBG(I).LT.0) THEN                                      BCG..........15000
               GPINR=GPINL*(PBG1(IPG) + PLAK)                            BCG..........15100
            ELSE                                                         BCG..........15200
               GPINR=GPINL*(PBG2(IPG) + PLAK)                            BCG..........15300
            END IF                                                       BCG..........15400
            PMAT(IMID,JMID)=GPINL                                        BCG..........15500
            PVEC(I)=GPINR                                                BCG..........15600
         END IF                                                          BCG..........15700
      END IF                                                             BCG..........15800
C                                                                        BCG..........15900
      IF(ML-1) 200,1000,200                                              BCG..........16000
C.....MODIFY EQUATION FOR U BY ADDING U SOURCE WHEN FLUID FLOWS IN       BCG..........16100
C        OR OUT AT GENERALIZED-FLOW NODE                                 BCG..........16200
  200 IF (QPGITR(IPG).GT.0D0) THEN                                       BCG..........16300
         GUL=-CW*QPGITR(IPG)                                             BCG..........16400
         IF (LIT.EQ.1) THEN                                              BCG..........16500
            GUR=-GUL*UPBGI(IPG)                                          BCG..........16600
         ELSE                                                            BCG..........16700
            IF (.NOT.ISLAKE(I)) THEN                                     BCG..........16800
               GUR=-GUL*UPBGI(IPG)                                       BCG..........16900
            ELSE                                                         BCG..........17000
               GUR=-GUL*ULAK                                             BCG..........17100
            END IF                                                       BCG..........17200
         END IF                                                          BCG..........17300
      ELSE                                                               BCG..........17400
         IF (CUPBGO(IPG).EQ.'DIR') THEN                                  BCG..........17500
            GUL=-CW*QPGITR(IPG)                                          BCG..........17600
            GUR=-GUL*UPBGO(IPG)                                          BCG..........17700
         ELSE                                                            BCG..........17800
            GUL=0D0                                                      BCG..........17900
            GUR=-GUL*UPBGO(IPG)                                          BCG..........18000
         END IF                                                          BCG..........18100
      END IF                                                             BCG..........18200
  360 IF(NOUMAT) 370,370,380                                             BCG..........18300
  370 UMAT(IMID,JMID)=UMAT(IMID,JMID)-GUL                                BCG..........18400
  380 UVEC(I)=UVEC(I)+GUR                                                BCG..........18500
 1000 CONTINUE                                                           BCG..........18600
C                                                                        BCG..........18700
C                                                                        BCG..........18800
 1050 IF(ML-1) 1100,3000,1100                                            BCG..........18900
 1100 IF(NUBG.EQ.0) GOTO 3000                                            BCG..........19000
C.....GENERALIZED-TRANSPORT BOUNDARY CONDITIONS.                         BCG..........19100
C        MODIFY EQUATION FOR U BY ADDING ENERGY/SOLUTE MASS SOURCE       BCG..........19200
C        AT GENERALIZED-TRANSPORT NODE                                   BCG..........19300
      DO 2500 IUG=1,NUBG                                                 BCG..........19400
      IF ((IBCUBG(IUG).EQ.2).OR.(.NOT.LKBCUBG(IUG))) CYCLE               BCG..........19500
      I=IABS(IUBG(IUG))                                                  BCG..........19600
      NFB = IBCSUG(IUG)                                                  BCG..........19700
      LIT = ITIUG(NFB)                                                   BCG..........19800
      IF ((LIT.EQ.1).AND.ISLAKE(I)) CYCLE                                BCG..........19900
      IF (KSOLVP.EQ.0) THEN                                              BCG..........20000
         IMID = I                                                        BCG..........20100
      ELSE                                                               BCG..........20200
         IMID = JA(I)                                                    BCG..........20300
      END IF                                                             BCG..........20400
      IF (ISLAKE(I).AND.(LIT.EQ.2)) THEN                                 BCG..........20500
         ISURF = ISURFACE(I)                                             BCG..........20600
         ULAK = ULK(ISURF)                                               BCG..........20700
      ELSE                                                               BCG..........20800
         ULAK = 0D0                                                      BCG..........20900
      END IF                                                             BCG..........21000
      GUINL=-GNUUG(IUG)                                                  BCG..........21100
      IF (LIT.EQ.1) THEN                                                 BCG..........21200
         GUINR=GNUUG(IUG)*UBG1(IUG)+QUBG1(IUG)                           BCG..........21300
      ELSE                                                               BCG..........21400
         IF (.NOT.ISLAKE(I)) THEN                                        BCG..........21500
            GUINR=GNUUG(IUG)*UBG1(IUG)+QUBG1(IUG)                        BCG..........21600
         ELSE                                                            BCG..........21700
            GUINR=GNUUG(IUG)*ULAK                                        BCG..........21800
         END IF                                                          BCG..........21900
      END IF                                                             BCG..........22000
      IF(NOUMAT) 1200,1200,2000                                          BCG..........22100
 1200 UMAT(IMID,JMID)=UMAT(IMID,JMID)-GUINL                              BCG..........22200
 2000 UVEC(I)=UVEC(I)+GUINR                                              BCG..........22300
 2500 CONTINUE                                                           BCG..........22400
C                                                                        BCG..........22500
 3000 CONTINUE                                                           BCG..........22600
C                                                                        BCG..........22700
C                                                                        BCG..........22800
      RETURN                                                             BCG..........22900
      END                                                                BCG..........23000
C                                                                        BCG..........23100
C     SUBROUTINE        B  C  S  T  E  P           SUTRA VERSION 3.0     BCSTEP.........100
C                                                                        BCSTEP.........200
C *** PURPOSE :                                                          BCSTEP.........300
C ***  TO READ TIME-DEPENDENT BOUNDARY CONDITIONS FROM THE BCS FILES     BCSTEP.........400
c ***  AND UPDATE THE ARRAYS IN WHICH THEY ARE STORED.                   BCSTEP.........500
C                                                                        BCSTEP.........600
      SUBROUTINE BCSTEP(SETBCS,IPBC,PBC,IUBC,UBC,QIN,UIN,QUIN,IQSOP,     BCSTEP.........700
     1   IQSOU,IPBCT1,IUBCT1,IQSOPT1,IQSOUT1,GNUPP,GNUUU,                BCSTEP.........800
     2   IBCPBC,IBCUBC,IBCSOP,IBCSOU,IBCPBG,IBCUBG,                      BCSTEP.........900
     3   IIDPBC,IIDUBC,IIDSOP,IIDSOU,IIDPBG,IIDUBG,                      BCSTEP........1000
     4   IBCSF,IBCSS,IBCSP,IBCSU,IBCSPG,IBCSUG,NCID,BCSFL,BCSTR,         BCSTEP........1100
     5   IPBG,PBG1,QPBG1,PBG2,QPBG2,CPQL1,CPQL2,UPBGI,CUPBGO,UPBGO,      BCSTEP........1200
     6   QPBGIC,GNUPG,IUBG,UBG1,QUBG1,UBG2,QUBG2,QUBGIC,GNUUG)           BCSTEP........1300
      USE ALLARR, ONLY : CIDBCS                                          BCSTEP........1400
      USE BCSDEF                                                         BCSTEP........1500
      USE EXPINT                                                         BCSTEP........1600
      USE LLDEF                                                          BCSTEP........1700
      USE SCHDEF                                                         BCSTEP........1800
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                BCSTEP........1900
      CHARACTER INTFIL*1000                                              BCSTEP........2000
      CHARACTER*80 ERRCOD,CHERR(10),UNAME,FNAME(0:23)                    BCSTEP........2100
      CHARACTER*40 BCSID                                                 BCSTEP........2200
      CHARACTER*1 CPQL1(NPBG),CPQL2(NPBG)                                BCSTEP........2300
      CHARACTER*3 CUPBGO(NPBG)                                           BCSTEP........2400
      LOGICAL ONCEBCS,SETBCS,SETFL,SETTR,BCSFL(0:ITMAX),BCSTR(0:ITMAX)   BCSTEP........2500
      LOGICAL USEFL,ANYFL,ANYTR,LAKUSD                                   BCSTEP........2600
      INTEGER(1) IBCPBC(NBCN),IBCUBC(NBCN),IBCSOP(NSOP),IBCSOU(NSOU),    BCSTEP........2700
     1   IBCPBG(NPBG),IBCUBG(NUBG)                                       BCSTEP........2800
      INTEGER IIDPBC(NBCN),IIDUBC(NBCN),IIDSOP(NSOP),IIDSOU(NSOU),       BCSTEP........2900
     1   IIDPBG(NPBG),IIDUBG(NUBG)                                       BCSTEP........3000
      INTEGER IBCSP(NBCN),IBCSU(NBCN),IBCSF(NSOP),IBCSS(NSOU),           BCSTEP........3100
     1   IBCSPG(NPBG),IBCSUG(NUBG)                                       BCSTEP........3200
      INTEGER RMVDIM,IMVDIM,I1VDIM,CMVDIM,LMVDIM,PMVDIM                  BCSTEP........3300
      DIMENSION INERR(10),RLERR(10)                                      BCSTEP........3400
      DIMENSION IPBC(NBCN),PBC(NBCN),IUBC(NBCN),UBC(NBCN),               BCSTEP........3500
     1   GNUPP(NBCN),GNUUU(NBCN),                                        BCSTEP........3600
     2   QIN(NN),UIN(NN),QUIN(NN),IQSOP(NSOP),IQSOU(NSOU)                BCSTEP........3700
      DIMENSION PBG1(NPBG),QPBG1(NPBG),PBG2(NPBG),QPBG2(NPBG),           BCSTEP........3800
     1   UPBGI(NPBG),UBG1(NUBG),QUBG1(NUBG),UBG2(NUBG),QUBG2(NUBG),      BCSTEP........3900
     2   QPBGIC(NPBG),GNUPG(NPBG),QUBGIC(NUBG),GNUUG(NUBG),UPBGO(NPBG)   BCSTEP........4000
      DIMENSION IPBG(NPBG),IUBG(NUBG)                                    BCSTEP........4100
      DIMENSION KTYPE(2)                                                 BCSTEP........4200
      ALLOCATABLE :: IPBC1(:),PBC1(:),IUBC1(:),UBC1(:),                  BCSTEP........4300
     1   QIN1(:),UIN1(:),QUIN1(:),IQSOP1(:),IQSOU1(:),                   BCSTEP........4400
     2   IPBG1(:),PBG11(:),QPBG11(:),PBG21(:),QPBG21(:),                 BCSTEP........4500
     3   UPBGI1(:),IUBG1(:),UBG11(:),QUBG11(:),UBG21(:),QUBG21(:),       BCSTEP........4600
     4   UPBGO1(:)                                                       BCSTEP........4700
      CHARACTER*1, ALLOCATABLE :: CPQL11(:),CPQL21(:)                    BCSTEP........4800
      CHARACTER*3, ALLOCATABLE :: CUPBGO1(:)                             BCSTEP........4900
      COMMON /BCSL/ ONCEBCS                                              BCSTEP........5000
      COMMON /CONTRL/ GNUP,GNUU,UP,DTMULT,DTMAX,ME,ISSFLO,ISSTRA,ITCYC,  BCSTEP........5100
     1   NPCYC,NUCYC,NPRINT,NBCFPR,NBCSPR,NBCPPR,NBCUPR,NLAKPR,IREAD,    BCSTEP........5200
     1   NBGPPR,NBGUPR,ISTORE,NOUMAT,IUNSAT,IALSAT,KTYPE                 BCSTEP........5300
      COMMON /DIMS/ NN,NE,NIN,NBI,NCBI,NB,NBHALF,NPBC,NUBC,              BCSTEP........5400
     1   NSOP,NSOU,NBCN,NPBG,NUBG,NCIDB                                  BCSTEP........5500
      COMMON /FUNIB/ NFBCS                                               BCSTEP........5600
      COMMON /FNAMES/ UNAME,FNAME                                        BCSTEP........5700
      COMMON /FUNITS/ K00,K0,K1,K2,K3,K4,K5,K6,K7,K8,K9,                 BCSTEP........5800
     1   K10,K11,K12,K13,K14,K15,K16,K17,K18,K19,K20,K21,K22,K23         BCSTEP........5900
      COMMON /LAKU/ LAKUSD                                               BCSTEP........6000
      COMMON /MEMCNT/ RMVDIM,IMVDIM,I1VDIM,CMVDIM,LMVDIM,PMVDIM          BCSTEP........6100
      COMMON /SCH/ NSCH,ISCHTS,NSCHAU                                    BCSTEP........6200
      COMMON /TIMES/ DELT,TSEC,TMIN,THOUR,TDAY,TWEEK,TMONTH,TYEAR,       BCSTEP........6300
     1   TMAX,DELTP,DELTU,DLTPM1,DLTUM1,IT,ITBCS,ITRST,ITMAX,TSTART      BCSTEP........6400
C                                                                        BCSTEP........6500
C.....IF THIS IS THE FIRST IN A SERIES OF CALLS, INITIALIZE BCS          BCSTEP........6600
C        SCHEDULES AND COUNTER FOR BCS IDENTIFIERS.                      BCSTEP........6700
      IF (.NOT.ONCEBCS) THEN                                             BCSTEP........6800
         IF (.NOT.ALLOCATED(LCNT)) THEN                                  BCSTEP........6900
            ALLOCATE (LCNT(NFBCS))                                       BCSTEP........7000
            IMVDIM = IMVDIM + NFBCS                                      BCSTEP........7100
            RMVDIM = RMVDIM + 2*NFBCS                                    BCSTEP........7200
            PMVDIM = PMVDIM + NFBCS                                      BCSTEP........7300
         END IF                                                          BCSTEP........7400
         DO 20 NFB=1,NFBCS                                               BCSTEP........7500
            LCNT(NFB) = 1                                                BCSTEP........7600
   20    CONTINUE                                                        BCSTEP........7700
         IF (.NOT.((ISSTRA.NE.0).AND.(ITBCS.EQ.1))) NCID = 0             BCSTEP........7800
         ONCEBCS = .TRUE.                                                BCSTEP........7900
      END IF                                                             BCSTEP........8000
C                                                                        BCSTEP........8100
C.....INITIALIZE FLAGS THAT INDICATE WHETHER BOUNDARY CONDITIONS ARE     BCSTEP........8200
C        ACTUALLY SET ON THIS TIME STEP.  THESE FLAGS ARE USED IN        BCSTEP........8300
C        DETERMINING SOLUTION CYCLING.                                   BCSTEP........8400
      IF (ITBCS.NE.0) THEN                                               BCSTEP........8500
         BCSFL(ITBCS) = .FALSE.                                          BCSTEP........8600
         BCSTR(ITBCS) = .FALSE.                                          BCSTEP........8700
      END IF                                                             BCSTEP........8800
C                                                                        BCSTEP........8900
C.....LOOP OVER ALL BCS FILES                                            BCSTEP........9000
      DO 1000 NFB=1,NFBCS                                                BCSTEP........9100
         K9 = IUNIB(NFB)                                                 BCSTEP........9200
C........SET FNAME(9) EQUAL TO FNAMB(NFB) FOR CONVENIENCE IN             BCSTEP........9300
C           ERROR HANDLING                                               BCSTEP........9400
         FNAME(9) = FNAMB(NFB)                                           BCSTEP........9500
         LENSCH = SCHDLS(BFP(NFB)%ISCHED)%LLEN                           BCSTEP........9600
C                                                                        BCSTEP........9700
C...,,FIND BOUNDARY CONDITIONS FOR THE CURRENT TIME STEP, IF ANY.        BCSTEP........9800
C        (IF THIS BCS SCHEDULE IS EXHAUSTED, SKIP TO NEXT FILE.)         BCSTEP........9900
  100 IF (LCNT(NFB).GT.LENSCH) GOTO 1000                                 BCSTEP.......10000
      ITNBCS = INT(SCHDLS(BFP(NFB)%ISCHED)%SLIST(LCNT(NFB))%DVALU2)      BCSTEP.......10100
      IF (ITBCS.LT.ITNBCS) THEN                                          BCSTEP.......10200
C........THE CURRENT TIME STEP PRECEDES THIS BCS SCHEDULE ENTRY.         BCSTEP.......10300
C          SKIP TO NEXT FILE.                                            BCSTEP.......10400
         GOTO 1000                                                       BCSTEP.......10500
      ELSE                                                               BCSTEP.......10600
         WRITE(CHERR(1),*) ITNBCS                                        BCSTEP.......10700
         ERRCOD = 'REA-BCS-2'                                            BCSTEP.......10800
         CHERR(2) = 'unknown'                                            BCSTEP.......10900
         CALL READIF(K9, NFB, INTFIL, ERRCOD, CHERR)                     BCSTEP.......11000
         READ(INTFIL,*,IOSTAT=INERR(1))                                  BCSTEP.......11100
     1      BCSID,NSOP1,NSOU1,NPBC1,NUBC1,NPBG1,NUBG1                    BCSTEP.......11200
         IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)     BCSTEP.......11300
         IF ((ITNBCS.EQ.0).AND.(NSOU1+NUBC1+NUBG1.GT.0)) THEN            BCSTEP.......11400
            ERRCOD = 'BCS-2-1'                                           BCSTEP.......11500
            CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                     BCSTEP.......11600
         END IF                                                          BCSTEP.......11700
         IF (ITBCS.GT.ITNBCS) THEN                                       BCSTEP.......11800
C...........THE CURRENT TIME STEP IS PAST THIS BCS SCHEDULE ENTRY,       BCSTEP.......11900
C             READ PAST THIS SPECIFICATION AND ADVANCE TO THE NEXT       BCSTEP.......12000
C             SCHEDULE ENTRY.                                            BCSTEP.......12100
            CHERR(2) = BCSID                                             BCSTEP.......12200
            ERRCOD = 'REA-BCS-3'                                         BCSTEP.......12300
            IF (NSOP1.GT.0) THEN                                         BCSTEP.......12400
               DO 120 N=1,NSOP1+1                                        BCSTEP.......12500
                  CALL READIF(K9, NFB, INTFIL, ERRCOD, CHERR)            BCSTEP.......12600
  120          CONTINUE                                                  BCSTEP.......12700
            END IF                                                       BCSTEP.......12800
            ERRCOD = 'REA-BCS-4'                                         BCSTEP.......12900
            IF (NSOU1.GT.0) THEN                                         BCSTEP.......13000
               DO 122 N=1,NSOU1+1                                        BCSTEP.......13100
                  CALL READIF(K9, NFB, INTFIL, ERRCOD, CHERR)            BCSTEP.......13200
  122          CONTINUE                                                  BCSTEP.......13300
            END IF                                                       BCSTEP.......13400
            ERRCOD = 'REA-BCS-5'                                         BCSTEP.......13500
            IF (NPBC1.GT.0) THEN                                         BCSTEP.......13600
               DO 124 N=1,NPBC1+1                                        BCSTEP.......13700
                  CALL READIF(K9, NFB, INTFIL, ERRCOD, CHERR)            BCSTEP.......13800
  124          CONTINUE                                                  BCSTEP.......13900
            END IF                                                       BCSTEP.......14000
            ERRCOD = 'REA-BCS-6'                                         BCSTEP.......14100
            IF (NUBC1.GT.0) THEN                                         BCSTEP.......14200
               DO 126 N=1,NUBC1+1                                        BCSTEP.......14300
                  CALL READIF(K9, NFB, INTFIL, ERRCOD, CHERR)            BCSTEP.......14400
  126          CONTINUE                                                  BCSTEP.......14500
            END IF                                                       BCSTEP.......14600
            ERRCOD = 'REA-BCS-7A'                                        BCSTEP.......14700
            IF (NPBG1.GT.0) THEN                                         BCSTEP.......14800
               DO 128 N=1,NPBG1+1                                        BCSTEP.......14900
                  CALL READIF(K9, NFB, INTFIL, ERRCOD, CHERR)            BCSTEP.......15000
  128          CONTINUE                                                  BCSTEP.......15100
            END IF                                                       BCSTEP.......15200
            ERRCOD = 'REA-BCS-7B'                                        BCSTEP.......15300
            IF (NUBG1.GT.0) THEN                                         BCSTEP.......15400
               DO 130 N=1,NUBG1+1                                        BCSTEP.......15500
                  CALL READIF(K9, NFB, INTFIL, ERRCOD, CHERR)            BCSTEP.......15600
  130          CONTINUE                                                  BCSTEP.......15700
            END IF                                                       BCSTEP.......15800
            LCNT(NFB) = LCNT(NFB) + 1                                    BCSTEP.......15900
            GOTO 100                                                     BCSTEP.......16000
         END IF                                                          BCSTEP.......16100
      END IF                                                             BCSTEP.......16200
C                                                                        BCSTEP.......16300
C.....SET NBCN1, AND INCREMENT NSOP1 AND NSOU1 TO ACCOMMODATE FINAL      BCSTEP.......16400
C        ZERO WHEN READING.  COUNTS OF TIME-DEPENDENT NODES REFER TO     BCSTEP.......16500
C        THE BCS FILE CURRENTLY BEING READ.                              BCSTEP.......16600
      NBCN1 = NPBC1 + NUBC1 + 1                                          BCSTEP.......16700
      NSOP1 = NSOP1 + 1                                                  BCSTEP.......16800
      NSOU1 = NSOU1 + 1                                                  BCSTEP.......16900
C.....NSOPI IS ACTUAL NUMBER OF POSSIBLE FLUID SOURCE NODES              BCSTEP.......17000
      NSOPI = NSOP - 1                                                   BCSTEP.......17100
C.....NSOUI IS ACTUAL NUMBER OF POSSIBLE ENERGY OR SOLUTE MASS           BCSTEP.......17200
C        SOURCE NODES                                                    BCSTEP.......17300
      NSOUI = NSOU - 1                                                   BCSTEP.......17400
C.....NSOPI1 IS ACTUAL NUMBER OF TIME-STEP-DEPENDENT FLUID SOURCE NODES  BCSTEP.......17500
C        ON THIS TIME STEP                                               BCSTEP.......17600
      NSOPI1 = NSOP1 - 1                                                 BCSTEP.......17700
C.....NSOUI1 IS ACTUAL NUMBER OF TIME-STEP-DEPENDENT ENERGY OR SOLUTE    BCSTEP.......17800
C        MASS SOURCE NODES ON THIS TIME STEP                             BCSTEP.......17900
      NSOUI1 = NSOU1 - 1                                                 BCSTEP.......18000
C                                                                        BCSTEP.......18100
C.....SET FLAGS THAT DETERMINE WHETHER TO SET FLOW AND/OR TRANSPORT      BCSTEP.......18200
C        BOUNDARY CONDITIONS (IF ANY) AND THAT INDICATE WHETHER BOUNDARY BCSTEP.......18300
C        CONDITIONS ARE ACTUALLY SET ON THIS TIME STEP                   BCSTEP.......18400
      USEFL = ((ISSFLO.NE.0).AND.(ITBCS.EQ.0)).OR.                       BCSTEP.......18500
     1   ((ISSFLO.EQ.0).AND.(ITBCS.NE.0))                                BCSTEP.......18600
      ANYFL = NSOPI1+NPBC1+NPBG1.GT.0                                    BCSTEP.......18700
      ANYTR = NSOUI1+NUBC1+NUBG1.GT.0                                    BCSTEP.......18800
      BCSFL(ITBCS) = USEFL.AND.ANYFL                                     BCSTEP.......18900
      BCSTR(ITBCS) = ANYTR                                               BCSTEP.......19000
      SETFL = SETBCS.AND.BCSFL(ITBCS)                                    BCSTEP.......19100
      SETTR = SETBCS.AND.BCSTR(ITBCS)                                    BCSTEP.......19200
      IF (BCSFL(ITBCS).OR.BCSTR(ITBCS)) THEN                             BCSTEP.......19300
         NCID = NCID + 1                                                 BCSTEP.......19400
         IF (SETBCS) CIDBCS(NCID) = BCSID                                BCSTEP.......19500
      END IF                                                             BCSTEP.......19600
C                                                                        BCSTEP.......19700
C.....IF NO TIME-DEPENDENT SOURCE/SINK CONDITIONS, SKIP THIS SECTION     BCSTEP.......19800
      IF ((NSOPI1+NSOUI1).EQ.0) GOTO 500                                 BCSTEP.......19900
C                                                                        BCSTEP.......20000
C.....ALLOCATE ARRAYS FOR SOURCE/SINK CONDITIONS                         BCSTEP.......20100
      ALLOCATE(QIN1(NN),UIN1(NN),QUIN1(NN))                              BCSTEP.......20200
      ALLOCATE(IQSOP1(NSOP1),IQSOU1(NSOU1))                              BCSTEP.......20300
C                                                                        BCSTEP.......20400
C.....INPUT BCS DATASETS 3 & 4 (SOURCES OF FLUID MASS AND ENERGY OR      BCSTEP.......20500
C        SOLUTE MASS) FOR CURRENT TIME STEP                              BCSTEP.......20600
      CALL SOURCE1(QIN1,UIN1,IQSOP1,QUIN1,IQSOU1,IQSOPT1,IQSOUT1,        BCSTEP.......20700
     1   NSOP1,NSOU1,NFB,BCSID)                                          BCSTEP.......20800
C                                                                        BCSTEP.......20900
C.....SET TIME-STEP-DEPENDENT FLUID SOURCES/SINKS,                       BCSTEP.......21000
C      OR CONCENTRATIONS (TEMPERATURES) OF SOURCE FLUID                  BCSTEP.......21100
C                                                                        BCSTEP.......21200
      IF (NSOPI1.GT.0) THEN                                              BCSTEP.......21300
      DO 200 IQP1=1,NSOPI1                                               BCSTEP.......21400
         I=IQSOP1(IQP1)                                                  BCSTEP.......21500
         DO 150 IQP0=1,NSOPI                                             BCSTEP.......21600
            I0 = IQSOP(IQP0)                                             BCSTEP.......21700
            IF (IABS(I0).EQ.IABS(I)) THEN                                BCSTEP.......21800
               IQP = IQP0                                                BCSTEP.......21900
               GOTO 180                                                  BCSTEP.......22000
            END IF                                                       BCSTEP.......22100
  150    CONTINUE                                                        BCSTEP.......22200
         ERRCOD = 'BCS-3-2'                                              BCSTEP.......22300
         INERR(1) = IABS(I)                                              BCSTEP.......22400
         INERR(2) = ITBCS                                                BCSTEP.......22500
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        BCSTEP.......22600
  180    CONTINUE                                                        BCSTEP.......22700
         IF (SETFL) THEN                                                 BCSTEP.......22800
            IF (I.GT.0) THEN                                             BCSTEP.......22900
C..............ACTIVATED BY AND SET TO BCS SPECIFICATION.                BCSTEP.......23000
               QIN(I) = QIN1(I)                                          BCSTEP.......23100
               IF (QIN(I).GT.0D0) UIN(I) = UIN1(I)                       BCSTEP.......23200
               IBCSOP(IQP) = 1                                           BCSTEP.......23300
            ELSE                                                         BCSTEP.......23400
C..............DEACTIVATED BY BCS SPECIFICATION.                         BCSTEP.......23500
               QIN(-I) = 0D0                                             BCSTEP.......23600
               IBCSOP(IQP) = 2                                           BCSTEP.......23700
            END IF                                                       BCSTEP.......23800
            IIDSOP(IQP) = NCID                                           BCSTEP.......23900
            IBCSF(IQP) = NFB                                             BCSTEP.......24000
         END IF                                                          BCSTEP.......24100
  200 CONTINUE                                                           BCSTEP.......24200
      END IF                                                             BCSTEP.......24300
C                                                                        BCSTEP.......24400
C.....SET TIME-STEP-DEPENDENT SOURCES/SINKS                              BCSTEP.......24500
C     OF SOLUTE MASS OR ENERGY                                           BCSTEP.......24600
C                                                                        BCSTEP.......24700
      IF (NSOUI1.GT.0) THEN                                              BCSTEP.......24800
      DO 400 IQU1=1,NSOUI1                                               BCSTEP.......24900
         I=IQSOU1(IQU1)                                                  BCSTEP.......25000
         DO 350 IQU0=1,NSOUI                                             BCSTEP.......25100
            I0 = IQSOU(IQU0)                                             BCSTEP.......25200
            IF (IABS(I0).EQ.IABS(I)) THEN                                BCSTEP.......25300
               IQU = IQU0                                                BCSTEP.......25400
               GOTO 380                                                  BCSTEP.......25500
            END IF                                                       BCSTEP.......25600
  350    CONTINUE                                                        BCSTEP.......25700
         ERRCOD = 'BCS-4-2'                                              BCSTEP.......25800
         INERR(1) = IABS(I)                                              BCSTEP.......25900
         INERR(2) = ITBCS                                                BCSTEP.......26000
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        BCSTEP.......26100
  380    CONTINUE                                                        BCSTEP.......26200
         IF (SETTR) THEN                                                 BCSTEP.......26300
            IF (I.GT.0) THEN                                             BCSTEP.......26400
               QUIN(I) = QUIN1(I)                                        BCSTEP.......26500
               IBCSOU(IQU) = 1                                           BCSTEP.......26600
            ELSE                                                         BCSTEP.......26700
               QUIN(-I) = 0D0                                            BCSTEP.......26800
               IBCSOU(IQU) = 2                                           BCSTEP.......26900
            END IF                                                       BCSTEP.......27000
            IIDSOU(IQU) = NCID                                           BCSTEP.......27100
            IBCSS(IQU) = NFB                                             BCSTEP.......27200
         END IF                                                          BCSTEP.......27300
  400 CONTINUE                                                           BCSTEP.......27400
      END IF                                                             BCSTEP.......27500
C                                                                        BCSTEP.......27600
C.....DEALLOCATE ARRAYS FOR SOURCE/SINK CONDITIONS                       BCSTEP.......27700
      DEALLOCATE(QIN1,UIN1,QUIN1,IQSOP1,IQSOU1)                          BCSTEP.......27800
C                                                                        BCSTEP.......27900
C.....IF NO TIME-DEPENDENT SPECIFIED P OR U BOUNDARY CONDITIONS, SKIP    BCSTEP.......28000
C        THIS SECTION                                                    BCSTEP.......28100
  500 IF (NBCN1-1.EQ.0) GOTO 810                                         BCSTEP.......28200
C                                                                        BCSTEP.......28300
C.....ALLOCATE ARRAYS FOR SPECIFIED P AND U BOUNDARY CONDITIONS          BCSTEP.......28400
      ALLOCATE(PBC1(NBCN1),UBC1(NBCN1))                                  BCSTEP.......28500
      ALLOCATE(IPBC1(NBCN1),IUBC1(NBCN1))                                BCSTEP.......28600
C                                                                        BCSTEP.......28700
C.....INPUT BCS DATASETS 5 & 6 (SPECIFIED P AND U BOUNDARY CONDITIONS)   BCSTEP.......28800
C        FOR CURRENT TIME STEP                                           BCSTEP.......28900
      CALL BOUND1(IPBC1,PBC1,IUBC1,UBC1,IPBCT1,IUBCT1,                   BCSTEP.......29000
     1   NPBC1,NUBC1,NBCN1,NFB,BCSID)                                    BCSTEP.......29100
C                                                                        BCSTEP.......29200
C.....SET TIME-STEP-DEPENDENT SPECIFIED PRESSURES OR                     BCSTEP.......29300
C     CONCENTRATIONS (TEMPERATURES) OF INFLOWS AT SPECIFIED              BCSTEP.......29400
C     PRESSURE NODES                                                     BCSTEP.......29500
C                                                                        BCSTEP.......29600
      IF (NPBC1.GT.0) THEN                                               BCSTEP.......29700
      DO 600 IP1=1,NPBC1                                                 BCSTEP.......29800
         I = IPBC1(IP1)                                                  BCSTEP.......29900
         DO 550 IP0=1,NPBC                                               BCSTEP.......30000
            I0 = IPBC(IP0)                                               BCSTEP.......30100
            IF (IABS(I0).EQ.IABS(I)) THEN                                BCSTEP.......30200
               IP = IP0                                                  BCSTEP.......30300
               GOTO 580                                                  BCSTEP.......30400
            END IF                                                       BCSTEP.......30500
  550    CONTINUE                                                        BCSTEP.......30600
         ERRCOD = 'BCS-5-2'                                              BCSTEP.......30700
         INERR(1) = IABS(I)                                              BCSTEP.......30800
         INERR(2) = ITBCS                                                BCSTEP.......30900
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        BCSTEP.......31000
  580    CONTINUE                                                        BCSTEP.......31100
         IF (SETFL) THEN                                                 BCSTEP.......31200
            IF (I.GT.0) THEN                                             BCSTEP.......31300
C..............ACTIVATED BY AND SET TO BCS SPECIFICATION.                BCSTEP.......31400
               PBC(IP) = PBC1(IP1)                                       BCSTEP.......31500
               UBC(IP) = UBC1(IP1)                                       BCSTEP.......31600
               GNUPP(IP) = GNUP                                          BCSTEP.......31700
               IBCPBC(IP) = 1                                            BCSTEP.......31800
            ELSE                                                         BCSTEP.......31900
C..............DEACTIVATED BY BCS SPECIFICATION.                         BCSTEP.......32000
               GNUPP(IP) = 0D0                                           BCSTEP.......32100
               IBCPBC(IP) = 2                                            BCSTEP.......32200
            END IF                                                       BCSTEP.......32300
            IIDPBC(IP) = NCID                                            BCSTEP.......32400
            IBCSP(IP) = NFB                                              BCSTEP.......32500
         END IF                                                          BCSTEP.......32600
  600 CONTINUE                                                           BCSTEP.......32700
      END IF                                                             BCSTEP.......32800
C                                                                        BCSTEP.......32900
C.....SET TIME-STEP-DEPENDENT SPECIFIED                                  BCSTEP.......33000
C     CONCENTRATIONS (TEMPERATURES)                                      BCSTEP.......33100
C                                                                        BCSTEP.......33200
      IF (NUBC1.GT.0) THEN                                               BCSTEP.......33300
      DO 800 IU1=1,NUBC1                                                 BCSTEP.......33400
         IUP1 = IU1 + NPBC1                                              BCSTEP.......33500
         I=IUBC1(IUP1)                                                   BCSTEP.......33600
         DO 700 IU0=1,NUBC                                               BCSTEP.......33700
            IUP0 = IU0 + NPBC                                            BCSTEP.......33800
            I0 = IUBC(IUP0)                                              BCSTEP.......33900
            IF (IABS(I0).EQ.IABS(I)) THEN                                BCSTEP.......34000
               IUP = IUP0                                                BCSTEP.......34100
               GOTO 750                                                  BCSTEP.......34200
            END IF                                                       BCSTEP.......34300
  700    CONTINUE                                                        BCSTEP.......34400
         ERRCOD = 'BCS-6-2'                                              BCSTEP.......34500
         INERR(1) = IABS(I)                                              BCSTEP.......34600
         INERR(2) = ITBCS                                                BCSTEP.......34700
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        BCSTEP.......34800
  750    CONTINUE                                                        BCSTEP.......34900
         IF (SETTR) THEN                                                 BCSTEP.......35000
            IF (I.GT.0) THEN                                             BCSTEP.......35100
C..............ACTIVATED BY AND SET TO BCS SPECIFICATION.                BCSTEP.......35200
               UBC(IUP) = UBC1(IUP1)                                     BCSTEP.......35300
               GNUUU(IUP) = GNUU                                         BCSTEP.......35400
               IBCUBC(IUP) = 1                                           BCSTEP.......35500
            ELSE                                                         BCSTEP.......35600
C..............DEACTIVATED BY BCS SPECIFICATION.                         BCSTEP.......35700
               GNUUU(IUP) = 0D0                                          BCSTEP.......35800
               IBCUBC(IUP) = 2                                           BCSTEP.......35900
            END IF                                                       BCSTEP.......36000
            IIDUBC(IUP) = NCID                                           BCSTEP.......36100
            IBCSU(IUP) = NFB                                             BCSTEP.......36200
         END IF                                                          BCSTEP.......36300
  800 CONTINUE                                                           BCSTEP.......36400
      END IF                                                             BCSTEP.......36500
C                                                                        BCSTEP.......36600
C.....DEALLOCATE ARRAYS FOR SPECIFIED P AND U BOUNDARY CONDITIONS        BCSTEP.......36700
      DEALLOCATE(IPBC1,PBC1,IUBC1,UBC1)                                  BCSTEP.......36800
C                                                                        BCSTEP.......36900
C.....IF NO TIME-DEPENDENT GENERALIZED FLOW OR TRANSPORT BOUNDARY        BCSTEP.......37000
C        CONDITIONS, SKIP THIS SECTION                                   BCSTEP.......37100
  810 IF (NPBG1+NUBG1.EQ.0) GOTO 990                                     BCSTEP.......37200
C                                                                        BCSTEP.......37300
C.....ALLOCATE ARRAYS FOR GENERALIZED FLOW AND TRANSPORT BOUNDARY        BCSTEP.......37400
C        CONDITIONS                                                      BCSTEP.......37500
      ALLOCATE(PBG11(NPBG1),QPBG11(NPBG1),PBG21(NPBG1),                  BCSTEP.......37600
     1   QPBG21(NPBG1),UPBGI1(NPBG1),UPBGO1(NPBG1),                      BCSTEP.......37700
     2   UBG11(NUBG1),QUBG11(NUBG1),UBG21(NUBG1),                        BCSTEP.......37800
     3   QUBG21(NUBG1))                                                  BCSTEP.......37900
      ALLOCATE(IPBG1(NPBG1),IUBG1(NUBG1))                                BCSTEP.......38000
      ALLOCATE(CPQL11(NPBG1),CPQL21(NPBG1),CUPBGO1(NPBG1))               BCSTEP.......38100
C                                                                        BCSTEP.......38200
C.....INPUT BCS DATASETS 7A & 7B (GENERALIZED BOUNDARY CONDITIONS)       BCSTEP.......38300
C        FOR CURRENT TIME STEP                                           BCSTEP.......38400
      CALL BOUNG1(IPBG1,PBG11,QPBG11,PBG21,QPBG21,CPQL11,CPQL21,         BCSTEP.......38500
     1   UPBGI1,CUPBGO1,UPBGO1,IUBG1,UBG11,QUBG11,UBG21,QUBG21,          BCSTEP.......38600
     1   IPBCT1,IUBCT1,NPBG1,NUBG1,NFB,BCSID)                            BCSTEP.......38700
C                                                                        BCSTEP.......38800
C.....SET TIME-STEP-DEPENDENT GENERALIZED FLOWS OR                       BCSTEP.......38900
C     CONCENTRATIONS (TEMPERATURES) OF INFLOWS AT GENERALIZED            BCSTEP.......39000
C     FLOW NODES                                                         BCSTEP.......39100
C                                                                        BCSTEP.......39200
      IF (NPBG1.GT.0) THEN                                               BCSTEP.......39300
      DO 850 IPG1=1,NPBG1                                                BCSTEP.......39400
         I = IPBG1(IPG1)                                                 BCSTEP.......39500
         DO 845 IPG0=1,NPBG                                              BCSTEP.......39600
            IG0 = IPBG(IPG0)                                             BCSTEP.......39700
            IF (IABS(IG0).EQ.IABS(I)) THEN                               BCSTEP.......39800
               IPG = IPG0                                                BCSTEP.......39900
               GOTO 848                                                  BCSTEP.......40000
            END IF                                                       BCSTEP.......40100
  845    CONTINUE                                                        BCSTEP.......40200
         ERRCOD = 'BCS-7A-2'                                             BCSTEP.......40300
         INERR(1) = IABS(I)                                              BCSTEP.......40400
         INERR(2) = ITBCS                                                BCSTEP.......40500
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        BCSTEP.......40600
  848    CONTINUE                                                        BCSTEP.......40700
         IF (SETFL) THEN                                                 BCSTEP.......40800
            IF (I.GT.0) THEN                                             BCSTEP.......40900
C..............ACTIVATED BY AND SET TO BCS SPECIFICATION.                BCSTEP.......41000
               PBG1(IPG) = PBG11(IPG1)                                   BCSTEP.......41100
               QPBG1(IPG) = QPBG11(IPG1)                                 BCSTEP.......41200
               PBG2(IPG) = PBG21(IPG1)                                   BCSTEP.......41300
               QPBG2(IPG) = QPBG21(IPG1)                                 BCSTEP.......41400
               UPBGI(IPG) = UPBGI1(IPG1)                                 BCSTEP.......41500
               CPQL1(IPG) = CPQL11(IPG1)                                 BCSTEP.......41600
               CPQL2(IPG) = CPQL21(IPG1)                                 BCSTEP.......41700
               CUPBGO(IPG) = CUPBGO1(IPG1)                               BCSTEP.......41800
               UPBGO(IPG) = UPBGO1(IPG1)                                 BCSTEP.......41900
               RNUM = QPBG2(IPG) - QPBG1(IPG)                            BCSTEP.......42000
               RDEN = PBG2(IPG) - PBG1(IPG)                              BCSTEP.......42100
               IF ((RDEN.LE.0D0).OR.(RNUM.GT.0D0)) THEN                  BCSTEP.......42200
                  ERRCOD = 'BCS-7A-3'                                    BCSTEP.......42300
                  CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)               BCSTEP.......42400
               END IF                                                    BCSTEP.......42500
               GNUPG(IPG) = -RNUM/RDEN                                   BCSTEP.......42600
               QPBGIC(IPG) = QPBG1(IPG) + GNUPG(IPG)*PBG1(IPG)           BCSTEP.......42700
               IBCPBG(IPG) = 1                                           BCSTEP.......42800
            ELSE                                                         BCSTEP.......42900
C..............DEACTIVATED BY BCS SPECIFICATION.                         BCSTEP.......43000
               GNUPG(IPG) = 0D0                                          BCSTEP.......43100
               QPBGIC(IPG) = 0D0                                         BCSTEP.......43200
               IBCPBG(IPG) = 2                                           BCSTEP.......43300
            END IF                                                       BCSTEP.......43400
            IIDPBG(IPG) = NCID                                           BCSTEP.......43500
            IBCSPG(IPG) = NFB                                            BCSTEP.......43600
         END IF                                                          BCSTEP.......43700
  850 CONTINUE                                                           BCSTEP.......43800
      END IF                                                             BCSTEP.......43900
C                                                                        BCSTEP.......44000
C.....SET TIME-STEP-DEPENDENT GENERALIZED-TRANSPORT CONDITIONS           BCSTEP.......44100
C                                                                        BCSTEP.......44200
      IF (NUBG1.GT.0) THEN                                               BCSTEP.......44300
      DO 870 IUG1=1,NUBG1                                                BCSTEP.......44400
         I=IUBG1(IUG1)                                                   BCSTEP.......44500
         DO 865 IUG0=1,NUBG                                              BCSTEP.......44600
            IG0 = IUBG(IUG0)                                             BCSTEP.......44700
            IF (IABS(IG0).EQ.IABS(I)) THEN                               BCSTEP.......44800
               IUG = IUG0                                                BCSTEP.......44900
               GOTO 868                                                  BCSTEP.......45000
            END IF                                                       BCSTEP.......45100
  865    CONTINUE                                                        BCSTEP.......45200
         ERRCOD = 'BCS-7B-2'                                             BCSTEP.......45300
         INERR(1) = IABS(I)                                              BCSTEP.......45400
         INERR(2) = ITBCS                                                BCSTEP.......45500
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        BCSTEP.......45600
  868    CONTINUE                                                        BCSTEP.......45700
         IF (SETTR) THEN                                                 BCSTEP.......45800
            IF (I.GT.0) THEN                                             BCSTEP.......45900
C..............ACTIVATED BY AND SET TO BCS SPECIFICATION.                BCSTEP.......46000
               UBG1(IUG) = UBG11(IUG1)                                   BCSTEP.......46100
               QUBG1(IUG) = QUBG11(IUG1)                                 BCSTEP.......46200
               UBG2(IUG) = UBG21(IUG1)                                   BCSTEP.......46300
               QUBG2(IUG) = QUBG21(IUG1)                                 BCSTEP.......46400
               RNUM = QUBG2(IUG) - QUBG1(IUG)                            BCSTEP.......46500
               RDEN = UBG2(IUG) - UBG1(IUG)                              BCSTEP.......46600
               IF (RDEN.EQ.0D0) THEN                                     BCSTEP.......46700
                  ERRCOD = 'BCS-7B-3'                                    BCSTEP.......46800
                  CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)               BCSTEP.......46900
               END IF                                                    BCSTEP.......47000
               GNUUG(IUG) = -RNUM/RDEN                                   BCSTEP.......47100
               QUBGIC(IUG) = QUBG1(IUG) + GNUUG(IUG)*UBG1(IUG)           BCSTEP.......47200
               IBCUBG(IUG) = 1                                           BCSTEP.......47300
            ELSE                                                         BCSTEP.......47400
C..............DEACTIVATED BY BCS SPECIFICATION.                         BCSTEP.......47500
               GNUUG(IUG) = 0D0                                          BCSTEP.......47600
               QUBGIC(IUG) = 0D0                                         BCSTEP.......47700
               IBCUBG(IUG) = 2                                           BCSTEP.......47800
            END IF                                                       BCSTEP.......47900
            IIDUBG(IUG) = NCID                                           BCSTEP.......48000
            IBCSUG(IUG) = NFB                                            BCSTEP.......48100
         END IF                                                          BCSTEP.......48200
  870 CONTINUE                                                           BCSTEP.......48300
      END IF                                                             BCSTEP.......48400
C                                                                        BCSTEP.......48500
C.....DEALLOCATE ARRAYS FOR GENERALIZED FLOW AND TRANSPORT BOUNDARY      BCSTEP.......48600
C        CONDITIONS                                                      BCSTEP.......48700
      DEALLOCATE(IPBG1,PBG11,QPBG11,PBG21,QPBG21,UPBGI1,IUBG1,UBG11,     BCSTEP.......48800
     1   QUBG11,UBG21,QUBG21,UPBGO1)                                     BCSTEP.......48900
      DEALLOCATE(CPQL11,CPQL21,CUPBGO1)                                  BCSTEP.......49000
C                                                                        BCSTEP.......49100
C.....ADVANCE TO NEXT SCHEDULE ENTRY FOR THIS FILE (IF THERE IS ONE).    BCSTEP.......49200
  990 LCNT(NFB) = LCNT(NFB) + 1                                          BCSTEP.......49300
C                                                                        BCSTEP.......49400
 1000 CONTINUE                                                           BCSTEP.......49500
      RETURN                                                             BCSTEP.......49600
      END                                                                BCSTEP.......49700
C                                                                        BCSTEP.......49800
C     SUBPROGRAM        B  D  I  N  I  T           SUTRA VERSION 3.0     BDINIT.........100
C                                                                        BDINIT.........200
C *** PURPOSE :                                                          BDINIT.........300
C ***  BLOCK-DATA SUBPROGRAM FOR INITIALIZING VARIABLES NAMED IN         BDINIT.........400
C ***  COMMON BLOCKS.                                                    BDINIT.........500
C                                                                        BDINIT.........600
      BLOCK DATA BDINIT                                                  BDINIT.........700
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                BDINIT.........800
      CHARACTER*40 SOLNAM(0:10)                                          BDINIT.........900
      CHARACTER*10 SOLWRD(0:10)                                          BDINIT........1000
      COMMON /SOLVC/ SOLWRD, SOLNAM                                      BDINIT........1100
      COMMON /SOLVN/ NSLVRS                                              BDINIT........1200
C.....SET THE NUMBER OF SOLVERS AVAILABLE                                BDINIT........1300
      DATA NSLVRS /4/                                                    BDINIT........1400
C.....DEFINE KEYWORDS AND NAMES FOR SOLVERS                              BDINIT........1500
      DATA (SOLWRD(M),SOLNAM(M),M=0,10) /                                BDINIT........1600
     1   'DIRECT', 'BANDED GAUSSIAN ELIMINATION (DIRECT)',               BDINIT........1700
     2   'CG', 'IC-PRECONDITIONED CONJUGATE GRADIENT',                   BDINIT........1800
     3   'GMRES', 'ILU-PRECONDITIONED GMRES',                            BDINIT........1900
     4   'ORTHOMIN', 'ILU-PRECONDITIONED ORTHOMIN',                      BDINIT........2000
     5   '', '',                                                         BDINIT........2100
     6   '', '',                                                         BDINIT........2200
     7   '', '',                                                         BDINIT........2300
     8   '', '',                                                         BDINIT........2400
     9   '', '',                                                         BDINIT........2500
     T   '', '',                                                         BDINIT........2600
     1   '', ''/                                                         BDINIT........2700
      END                                                                BDINIT........2800
C                                                                        BDINIT........2900
C     SUBROUTINE        B  O  U  N  D              SUTRA VERSION 3.0     BOUND..........100
C                                                                        BOUND..........200
C *** PURPOSE :                                                          BOUND..........300
C ***  TO READ AND ORGANIZE DEFAULT VALUES FOR SPECIFIED PRESSURE DATA   BOUND..........400
C ***  AND SPECIFIED TEMPERATURE OR CONCENTRATION DATA.                  BOUND..........500
C                                                                        BOUND..........600
      SUBROUTINE BOUND(IPBC,PBC,ISPBC,IUBC,UBC,ISUBC,IPBCT,IUBCT,        BOUND..........700
     1   IBCPBC,IBCUBC,GNUPP,GNUUU)                                      BOUND..........800
      USE EXPINT                                                         BOUND..........900
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                BOUND.........1000
      CHARACTER INTFIL*1000                                              BOUND.........1100
      CHARACTER*80 ERRCOD,CHERR(10),UNAME,FNAME(0:23)                    BOUND.........1200
      DIMENSION IPBC(NBCN),PBC(NBCN),ISPBC(NN)                           BOUND.........1300
      DIMENSION IUBC(NBCN),UBC(NBCN),ISUBC(NN)                           BOUND.........1400
      DIMENSION GNUPP(NBCN),GNUUU(NBCN)                                  BOUND.........1500
      DIMENSION INERR(10),RLERR(10)                                      BOUND.........1600
      INTEGER(1) IBCPBC(NBCN),IBCUBC(NBCN)                               BOUND.........1700
      DIMENSION KTYPE(2)                                                 BOUND.........1800
      COMMON /CONTRL/ GNUP,GNUU,UP,DTMULT,DTMAX,ME,ISSFLO,ISSTRA,ITCYC,  BOUND.........1900
     1   NPCYC,NUCYC,NPRINT,NBCFPR,NBCSPR,NBCPPR,NBCUPR,NLAKPR,IREAD,    BOUND.........2000
     1   NBGPPR,NBGUPR,ISTORE,NOUMAT,IUNSAT,IALSAT,KTYPE                 BOUND.........2100
      COMMON /DIMS/ NN,NE,NIN,NBI,NCBI,NB,NBHALF,NPBC,NUBC,              BOUND.........2200
     1   NSOP,NSOU,NBCN,NPBG,NUBG,NCIDB                                  BOUND.........2300
      COMMON /FNAMES/ UNAME,FNAME                                        BOUND.........2400
      COMMON /FUNITS/ K00,K0,K1,K2,K3,K4,K5,K6,K7,K8,K9,                 BOUND.........2500
     1   K10,K11,K12,K13,K14,K15,K16,K17,K18,K19,K20,K21,K22,K23         BOUND.........2600
C                                                                        BOUND.........2700
C                                                                        BOUND.........2800
      IP=0                                                               BOUND.........2900
      IPU=0                                                              BOUND.........3000
      IF(NPBC.EQ.0) GOTO 400                                             BOUND.........3100
      WRITE(K3,100)                                                      BOUND.........3200
  100 FORMAT('1'////11X,'S P E C I F I E D   P R E S S U R E   D A T A'  BOUND.........3300
     1   ////11X,'**** NODES AT WHICH PRESSURES ARE SPECIFIED ****'/)    BOUND.........3400
      IF(ME) 107,107,114                                                 BOUND.........3500
  107 WRITE(K3,108)                                                      BOUND.........3600
  108 FORMAT(16X,'(AS WELL AS SOLUTE CONCENTRATION OF ANY'               BOUND.........3700
     1   /16X,' FLUID INFLOW WHICH MAY OCCUR AT THE POINT'               BOUND.........3800
     2   /16X,' OF SPECIFIED PRESSURE)'                                  BOUND.........3900
     3  //12X,'NODE',10X,'DEFAULT PRESSURE',                             BOUND.........4000
     4     5X,'DEFAULT CONCENTRATION'//)                                 BOUND.........4100
      GOTO 125                                                           BOUND.........4200
  114 WRITE(K3,115)                                                      BOUND.........4300
  115 FORMAT(16X,'(AS WELL AS TEMPERATURE {DEGREES CELSIUS} OF ANY'      BOUND.........4400
     1   /16X,' FLUID INFLOW WHICH MAY OCCUR AT THE POINT'               BOUND.........4500
     2   /16X,' OF SPECIFIED PRESSURE)'                                  BOUND.........4600
     3  //12X,'NODE',10X,'DEFAULT PRESSURE',                             BOUND.........4700
     4     5X,'  DEFAULT TEMPERATURE'//)                                 BOUND.........4800
C                                                                        BOUND.........4900
C.....INPUT DATASET 19:  DATA FOR SPECIFIED PRESSURE NODES               BOUND.........5000
  125 IPU=IPU+1                                                          BOUND.........5100
      ERRCOD = 'REA-INP-19'                                              BOUND.........5200
      CALL READIF(K1, 0, INTFIL, ERRCOD)                                 BOUND.........5300
      READ(INTFIL,*,IOSTAT=INERR(1)) IDUM                                BOUND.........5400
      IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)        BOUND.........5500
      IDUMA = IABS(IDUM)                                                 BOUND.........5600
      IF (IDUM.EQ.0) THEN                                                BOUND.........5700
         GOTO 180                                                        BOUND.........5800
      ELSE IF (IDUMA.GT.NN) THEN                                         BOUND.........5900
         ERRCOD = 'INP-19-1'                                             BOUND.........6000
         INERR(1) = IDUMA                                                BOUND.........6100
         INERR(2) = NN                                                   BOUND.........6200
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        BOUND.........6300
      ELSE IF (IPU.GT.NPBC) THEN                                         BOUND.........6400
         GOTO 125                                                        BOUND.........6500
      END IF                                                             BOUND.........6600
      IPBC(IPU) = IDUM                                                   BOUND.........6700
      ISPBC(IDUMA) = IPU                                                 BOUND.........6800
      IF (IPBC(IPU).GT.0) THEN                                           BOUND.........6900
         ERRCOD = 'REA-INP-19'                                           BOUND.........7000
         READ(INTFIL,*,IOSTAT=INERR(1)) IPBC(IPU),PBC(IPU),UBC(IPU)      BOUND.........7100
         IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)     BOUND.........7200
         WRITE(K3,160) IPBC(IPU),PBC(IPU),UBC(IPU)                       BOUND.........7300
      ELSE IF (IPBC(IPU).LT.0) THEN                                      BOUND.........7400
         IPBCT = -1                                                      BOUND.........7500
         WRITE(K3,160) IPBC(IPU)                                         BOUND.........7600
      ELSE                                                               BOUND.........7700
         PBC(NBCN) = 0D0                                                 BOUND.........7800
         GOTO 180                                                        BOUND.........7900
      END IF                                                             BOUND.........8000
  160 FORMAT(7X,I9,6X,1PE20.13,6X,1PE20.13)                              BOUND.........8100
      GOTO 125                                                           BOUND.........8200
  180 IPU=IPU-1                                                          BOUND.........8300
      IP=IPU                                                             BOUND.........8400
      IF(IP.EQ.NPBC) GOTO 200                                            BOUND.........8500
      ERRCOD = 'INP-3,19-1'                                              BOUND.........8600
      INERR(1) = IP                                                      BOUND.........8700
      INERR(2) = NPBC                                                    BOUND.........8800
      CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                           BOUND.........8900
  200 IF(IPBCT.NE.-1) GOTO 250                                           BOUND.........9000
      IF(ME) 205,205,215                                                 BOUND.........9100
  205 WRITE(K3,206)                                                      BOUND.........9200
  206 FORMAT(//12X,'TIME-DEPENDENT SPECIFIED PRESSURE OR INFLOW ',       BOUND.........9300
     1   'CONCENTRATION'/12X,'SET IN SUBROUTINE BCTIME IS INDICATED ',   BOUND.........9400
     2   'BY NEGATIVE NODE NUMBER')                                      BOUND.........9500
      GOTO 250                                                           BOUND.........9600
  215 WRITE(K3,216)                                                      BOUND.........9700
  216 FORMAT(//12X,'TIME-DEPENDENT SPECIFIED PRESSURE OR INFLOW ',       BOUND.........9800
     1   'TEMPERATURE'/12X,'SET IN SUBROUTINE BCTIME IS INDICATED ',     BOUND.........9900
     2   'BY NEGATIVE NODE NUMBER')                                      BOUND........10000
  250 WRITE(K3,252)                                                      BOUND........10100
  252 FORMAT(/11X,'SPECIFICATIONS MADE IN (OPTIONAL) ',                  BOUND........10200
     1   'BCS INPUT FILES TAKE PRECEDENCE OVER THE'/11X,                 BOUND........10300
     2   'DEFAULT VALUES LISTED ABOVE AND ANY VALUES ',                  BOUND........10400
     3   'SET IN SUBROUTINE BCTIME.')                                    BOUND........10500
C.....INITIALIZE GNUPP ARRAY                                             BOUND........10600
      GNUPP = GNUP                                                       BOUND........10700
C.....INITIALIZE ARRAY THAT INDICATES WHERE SPECIFIED-PRESSURE           BOUND........10800
C        CONDITIONS WERE SET (0 = INP FILE)                              BOUND........10900
      IBCPBC = 0                                                         BOUND........11000
C                                                                        BOUND........11100
  400 IF(NUBC.EQ.0) GOTO 9000                                            BOUND........11200
      IF(ME) 500,500,550                                                 BOUND........11300
  500 WRITE(K3,1000)                                                     BOUND........11400
 1000 FORMAT('1'////11X,'S P E C I F I E D   C O N C E N T R A T I O N', BOUND........11500
     1   '   D A T A'                                                    BOUND........11600
     2   ////11X,'**** NODES AT WHICH SOLUTE CONCENTRATIONS ARE ',       BOUND........11700
     3   'SPECIFIED TO BE INDEPENDENT OF LOCAL FLOWS AND FLUID SOURCES', BOUND........11800
     4   ' ****'//12X,'NODE',5X,'DEFAULT CONCENTRATION'//)               BOUND........11900
      GOTO 1125                                                          BOUND........12000
  550 WRITE(K3,1001)                                                     BOUND........12100
 1001 FORMAT('1'////11X,'S P E C I F I E D   T E M P E R A T U R E',     BOUND........12200
     1   '   D A T A'                                                    BOUND........12300
     2   ////11X,'**** NODES AT WHICH TEMPERATURES ARE ',                BOUND........12400
     3   'SPECIFIED TO BE INDEPENDENT OF LOCAL FLOWS AND FLUID SOURCES', BOUND........12500
     4   ' ****'//12X,'NODE',5X,'  DEFAULT TEMPERATURE'//)               BOUND........12600
C                                                                        BOUND........12700
C.....INPUT DATASET 20:  DATA FOR SPECIFIED CONCENTRATION OR             BOUND........12800
C        TEMPERATURE NODES                                               BOUND........12900
 1125 IPU=IPU+1                                                          BOUND........13000
      ERRCOD = 'REA-INP-20'                                              BOUND........13100
      CALL READIF(K1, 0, INTFIL, ERRCOD)                                 BOUND........13200
      READ(INTFIL,*,IOSTAT=INERR(1)) IDUM                                BOUND........13300
      IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)        BOUND........13400
      IDUMA = IABS(IDUM)                                                 BOUND........13500
      IF (IDUM.EQ.0) THEN                                                BOUND........13600
         GOTO 1180                                                       BOUND........13700
      ELSE IF (IDUMA.GT.NN) THEN                                         BOUND........13800
         ERRCOD = 'INP-20-1'                                             BOUND........13900
         INERR(1) = IDUMA                                                BOUND........14000
         INERR(2) = NN                                                   BOUND........14100
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        BOUND........14200
      ELSE IF (IPU.GT.NPBC+NUBC) THEN                                    BOUND........14300
         GOTO 1125                                                       BOUND........14400
      END IF                                                             BOUND........14500
      IUBC(IPU) = IDUM                                                   BOUND........14600
      ISUBC(IDUMA) = IPU                                                 BOUND........14700
      IF (IUBC(IPU).GT.0) THEN                                           BOUND........14800
         ERRCOD = 'REA-INP-20'                                           BOUND........14900
         READ(INTFIL,*,IOSTAT=INERR(1)) IUBC(IPU),UBC(IPU)               BOUND........15000
         IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)     BOUND........15100
         WRITE(K3,1150) IUBC(IPU),UBC(IPU)                               BOUND........15200
      ELSE IF (IUBC(IPU).LT.0) THEN                                      BOUND........15300
         IUBCT = -1                                                      BOUND........15400
         WRITE(K3,1150) IUBC(IPU)                                        BOUND........15500
      ELSE                                                               BOUND........15600
         GOTO 1180                                                       BOUND........15700
      END IF                                                             BOUND........15800
 1150 FORMAT(7X,I9,6X,1PE20.13)                                          BOUND........15900
      GOTO 1125                                                          BOUND........16000
 1180 IPU=IPU-1                                                          BOUND........16100
      IU=IPU-IP                                                          BOUND........16200
      IF(IU.EQ.NUBC) GOTO 1200                                           BOUND........16300
      IF (ME.EQ.1) THEN                                                  BOUND........16400
         ERRCOD = 'INP-3,20-2'                                           BOUND........16500
      ELSE                                                               BOUND........16600
         ERRCOD = 'INP-3,20-1'                                           BOUND........16700
      END IF                                                             BOUND........16800
      INERR(1) = IU                                                      BOUND........16900
      INERR(2) = NUBC                                                    BOUND........17000
      CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                           BOUND........17100
 1200 IF(IUBCT.NE.-1) GOTO 6000                                          BOUND........17200
      IF(ME) 1205,1205,1215                                              BOUND........17300
 1205 WRITE(K3,1206)                                                     BOUND........17400
 1206 FORMAT(//11X,'TIME-DEPENDENT SPECIFIED CONCENTRATIONS USER-',      BOUND........17500
     1   'PROGRAMMED IN'/12X,'SUBROUTINE BCTIME ARE INDICATED BY ',      BOUND........17600
     2   'A NEGATIVE NODE NUMBER.')                                      BOUND........17700
      GOTO 6000                                                          BOUND........17800
 1215 WRITE(K3,1216)                                                     BOUND........17900
 1216 FORMAT(//11X,'TIME-DEPENDENT SPECIFIED TEMPERATURES USER-',        BOUND........18000
     1   'PROGRAMMED IN'/12X,'SUBROUTINE BCTIME ARE INDICATED BY ',      BOUND........18100
     2   'A NEGATIVE NODE NUMBER.')                                      BOUND........18200
 6000 WRITE(K3,252)                                                      BOUND........18300
C.....INITIALIZE GNUUU ARRAY                                             BOUND........18400
      GNUUU = GNUU                                                       BOUND........18500
C.....INITIALIZE ARRAY THAT INDICATES WHERE SPECIFIED-CONC OR TEMP       BOUND........18600
C        CONDITIONS WERE SET (0 = INP FILE)                              BOUND........18700
      IBCUBC = 0                                                         BOUND........18800
C                                                                        BOUND........18900
C                                                                        BOUND........19000
 9000 RETURN                                                             BOUND........19100
      END                                                                BOUND........19200
C                                                                        BOUND........19300
C     SUBROUTINE        B  O  U  N  D  1           SUTRA VERSION 3.0     BOUND1.........100
C                                                                        BOUND1.........200
C *** PURPOSE :                                                          BOUND1.........300
C ***  TO READ AND ORGANIZE TIME-DEPENDENT SPECIFIED PRESSURE DATA AND   BOUND1.........400
C ***  SPECIFIED TEMPERATURE OR CONCENTRATION DATA SPECIFIED IN THE      BOUND1.........500
C ***  OPTIONAL BCS INPUT FILE.                                          BOUND1.........600
C                                                                        BOUND1.........700
      SUBROUTINE BOUND1(IPBC1,PBC1,IUBC1,UBC1,IPBCT1,IUBCT1,             BOUND1.........800
     1   NPBC1,NUBC1,NBCN1,NFB,BCSID)                                    BOUND1.........900
      USE EXPINT                                                         BOUND1........1000
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                BOUND1........1100
      CHARACTER INTFIL*1000                                              BOUND1........1200
      CHARACTER*80 ERRCOD,CHERR(10),UNAME,FNAME(0:23)                    BOUND1........1300
      CHARACTER*40 BCSID                                                 BOUND1........1400
      DIMENSION IPBC1(NBCN1),PBC1(NBCN1),IUBC1(NBCN1),UBC1(NBCN1)        BOUND1........1500
      DIMENSION INERR(10),RLERR(10)                                      BOUND1........1600
      DIMENSION KTYPE(2)                                                 BOUND1........1700
      COMMON /CONTRL/ GNUP,GNUU,UP,DTMULT,DTMAX,ME,ISSFLO,ISSTRA,ITCYC,  BOUND1........1800
     1   NPCYC,NUCYC,NPRINT,NBCFPR,NBCSPR,NBCPPR,NBCUPR,NLAKPR,IREAD,    BOUND1........1900
     1   NBGPPR,NBGUPR,ISTORE,NOUMAT,IUNSAT,IALSAT,KTYPE                 BOUND1........2000
      COMMON /DIMS/ NN,NE,NIN,NBI,NCBI,NB,NBHALF,NPBC,NUBC,              BOUND1........2100
     1   NSOP,NSOU,NBCN,NPBG,NUBG,NCIDB                                  BOUND1........2200
      COMMON /FNAMES/ UNAME,FNAME                                        BOUND1........2300
      COMMON /FUNITS/ K00,K0,K1,K2,K3,K4,K5,K6,K7,K8,K9,                 BOUND1........2400
     1   K10,K11,K12,K13,K14,K15,K16,K17,K18,K19,K20,K21,K22,K23         BOUND1........2500
      COMMON /TIMES/ DELT,TSEC,TMIN,THOUR,TDAY,TWEEK,TMONTH,TYEAR,       BOUND1........2600
     1   TMAX,DELTP,DELTU,DLTPM1,DLTUM1,IT,ITBCS,ITRST,ITMAX,TSTART      BOUND1........2700
C                                                                        BOUND1........2800
C                                                                        BOUND1........2900
      IP = 0                                                             BOUND1........3000
      IPU = 0                                                            BOUND1........3100
      IPBCT1 = +1                                                        BOUND1........3200
      IUBCT1 = +1                                                        BOUND1........3300
C                                                                        BOUND1........3400
      IF (NPBC1.EQ.0) GOTO 400                                           BOUND1........3500
C                                                                        BOUND1........3600
C.....INPUT BCS DATASET 5:  DATA FOR SPECIFIED PRESSURE NODES            BOUND1........3700
      IPBCT1 = -1                                                        BOUND1........3800
  125 IPU = IPU + 1                                                      BOUND1........3900
      ERRCOD = 'REA-BCS-5'                                               BOUND1........4000
      WRITE(CHERR(1),*) ITBCS                                            BOUND1........4100
      CHERR(2) = BCSID                                                   BOUND1........4200
      CALL READIF(K9, NFB, INTFIL, ERRCOD, CHERR)                        BOUND1........4300
      READ(INTFIL,*,IOSTAT=INERR(1)) IDUM                                BOUND1........4400
      IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)        BOUND1........4500
      IDUMA = IABS(IDUM)                                                 BOUND1........4600
      IF (IDUM.EQ.0) THEN                                                BOUND1........4700
         GOTO 180                                                        BOUND1........4800
      ELSE IF (IDUMA.GT.NN) THEN                                         BOUND1........4900
         ERRCOD = 'BCS-5-1'                                              BOUND1........5000
         INERR(1) = IDUMA                                                BOUND1........5100
         INERR(2) = NN                                                   BOUND1........5200
         INERR(3) = ITBCS                                                BOUND1........5300
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        BOUND1........5400
      ELSE IF (IPU.GT.NPBC1) THEN                                        BOUND1........5500
         GOTO 125                                                        BOUND1........5600
      END IF                                                             BOUND1........5700
      IPBC1(IPU) = IDUM                                                  BOUND1........5800
      IF (IPBC1(IPU).GT.0) THEN                                          BOUND1........5900
         ERRCOD = 'REA-BCS-5'                                            BOUND1........6000
         WRITE(CHERR(1),*) ITBCS                                         BOUND1........6100
         CHERR(2) = BCSID                                                BOUND1........6200
         READ(INTFIL,*,IOSTAT=INERR(1))                                  BOUND1........6300
     1      IPBC1(IPU),PBC1(IPU),UBC1(IPU)                               BOUND1........6400
         IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)     BOUND1........6500
      ELSE IF (IPBC1(IPU).LT.0) THEN                                     BOUND1........6600
         CONTINUE                                                        BOUND1........6700
      ELSE                                                               BOUND1........6800
         GOTO 180                                                        BOUND1........6900
      END IF                                                             BOUND1........7000
      GOTO 125                                                           BOUND1........7100
  180 IPU = IPU - 1                                                      BOUND1........7200
      IP = IPU                                                           BOUND1........7300
      IF (IP.EQ.NPBC1) GOTO 400                                          BOUND1........7400
      ERRCOD = 'BCS-2,5-1'                                               BOUND1........7500
      INERR(1) = IP                                                      BOUND1........7600
      INERR(2) = NPBC1                                                   BOUND1........7700
      INERR(3) = ITBCS                                                   BOUND1........7800
      CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                           BOUND1........7900
C                                                                        BOUND1........8000
  400 IF(NUBC1.EQ.0) GOTO 8000                                           BOUND1........8100
C                                                                        BOUND1........8200
C.....INPUT BCS DATASET 6:  DATA FOR SPECIFIED CONCENTRATION OR          BOUND1........8300
C        TEMPERATURE NODES                                               BOUND1........8400
      IUBCT1 = -1                                                        BOUND1........8500
 1125 IPU = IPU + 1                                                      BOUND1........8600
      ERRCOD = 'REA-BCS-6'                                               BOUND1........8700
      WRITE(CHERR(1),*) ITBCS                                            BOUND1........8800
      CHERR(2) = BCSID                                                   BOUND1........8900
      CALL READIF(K9, NFB, INTFIL, ERRCOD, CHERR)                        BOUND1........9000
      READ(INTFIL,*,IOSTAT=INERR(1)) IDUM                                BOUND1........9100
      IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)        BOUND1........9200
      IDUMA = IABS(IDUM)                                                 BOUND1........9300
      IF (IDUM.EQ.0) THEN                                                BOUND1........9400
         GOTO 1180                                                       BOUND1........9500
      ELSE IF (IDUMA.GT.NN) THEN                                         BOUND1........9600
         ERRCOD = 'BCS-6-1'                                              BOUND1........9700
         INERR(1) = IDUMA                                                BOUND1........9800
         INERR(2) = NN                                                   BOUND1........9900
         INERR(3) = ITBCS                                                BOUND1.......10000
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        BOUND1.......10100
      ELSE IF (IPU.GT.NPBC1+NUBC1) THEN                                  BOUND1.......10200
         GOTO 1125                                                       BOUND1.......10300
      END IF                                                             BOUND1.......10400
      IUBC1(IPU) = IDUM                                                  BOUND1.......10500
      IF (IUBC1(IPU).GT.0) THEN                                          BOUND1.......10600
         ERRCOD = 'REA-BCS-6'                                            BOUND1.......10700
         WRITE(CHERR(1),*) ITBCS                                         BOUND1.......10800
         CHERR(2) = BCSID                                                BOUND1.......10900
         READ(INTFIL,*,IOSTAT=INERR(1)) IUBC1(IPU),UBC1(IPU)             BOUND1.......11000
         IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)     BOUND1.......11100
      ELSE IF (IUBC1(IPU).LT.0) THEN                                     BOUND1.......11200
         CONTINUE                                                        BOUND1.......11300
      ELSE                                                               BOUND1.......11400
         GOTO 1180                                                       BOUND1.......11500
      END IF                                                             BOUND1.......11600
      GOTO 1125                                                          BOUND1.......11700
 1180 IPU = IPU - 1                                                      BOUND1.......11800
      IU = IPU - IP                                                      BOUND1.......11900
      IF (IU.EQ.NUBC1) GOTO 8000                                         BOUND1.......12000
         ERRCOD = 'BCS-2,6-1'                                            BOUND1.......12100
         IF (ME.EQ.1) THEN                                               BOUND1.......12200
            CHERR(1) = ' temperature '                                   BOUND1.......12300
         ELSE                                                            BOUND1.......12400
            CHERR(1) = 'concentration'                                   BOUND1.......12500
         END IF                                                          BOUND1.......12600
         INERR(1) = IU                                                   BOUND1.......12700
         INERR(2) = NUBC1                                                BOUND1.......12800
         INERR(3) = ITBCS                                                BOUND1.......12900
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        BOUND1.......13000
C                                                                        BOUND1.......13100
 8000 CONTINUE                                                           BOUND1.......13200
C                                                                        BOUND1.......13300
      RETURN                                                             BOUND1.......13400
      END                                                                BOUND1.......13500
C                                                                        BOUND1.......13600
C     SUBROUTINE        B  O  U  N  G              SUTRA VERSION 3.0     BOUNG..........100
C                                                                        BOUNG..........200
C *** PURPOSE :                                                          BOUNG..........300
C ***  TO READ AND ORGANIZE DEFAULT VALUES FOR GENERALIZED-FLOW          BOUNG..........400
C ***  AND GENERALIZED-TRANSPORT BOUNDARY CONDITION DATA.                BOUNG..........500
C                                                                        BOUNG..........600
      SUBROUTINE BOUNG(IPBG,PBG1,QPBG1,PBG2,QPBG2,CPQL1,CPQL2,UPBGI,     BOUNG..........700
     1   CUPBGO,UPBGO,IUBG,UBG1,QUBG1,UBG2,QUBG2,ISPBG,IPBGT,IUBGT,      BOUNG..........800
     2   IBCPBG,IBCUBG,QPBGIC,GNUPG,QUBGIC,GNUUG)                        BOUNG..........900
      USE EXPINT                                                         BOUNG.........1000
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                BOUNG.........1100
      CHARACTER INTFIL*1000                                              BOUNG.........1200
      CHARACTER*80 ERRCOD,CHERR(10),UNAME,FNAME(0:23)                    BOUNG.........1300
      CHARACTER*1 CPQL1(NPBG),CPQL2(NPBG)                                BOUNG.........1400
      CHARACTER*3 CUPBGO(NPBG)                                           BOUNG.........1500
      DIMENSION PBG1(NPBG),QPBG1(NPBG),PBG2(NPBG),                       BOUNG.........1600
     1   QPBG2(NPBG),UPBGI(NPBG),UBG1(NUBG),QUBG1(NUBG),                 BOUNG.........1700
     2   UBG2(NUBG),QUBG2(NUBG),UPBGO(NPBG)                              BOUNG.........1800
      DIMENSION IPBG(NPBG),IUBG(NUBG),ISPBG(NN)                          BOUNG.........1900
      DIMENSION QPBGIC(NPBG),GNUPG(NPBG),QUBGIC(NUBG),GNUUG(NUBG)        BOUNG.........2000
      DIMENSION INERR(10),RLERR(10)                                      BOUNG.........2100
      INTEGER(1) IBCPBG(NPBG),IBCUBG(NUBG)                               BOUNG.........2200
      DIMENSION KTYPE(2)                                                 BOUNG.........2300
      COMMON /CONTRL/ GNUP,GNUU,UP,DTMULT,DTMAX,ME,ISSFLO,ISSTRA,ITCYC,  BOUNG.........2400
     1   NPCYC,NUCYC,NPRINT,NBCFPR,NBCSPR,NBCPPR,NBCUPR,NLAKPR,IREAD,    BOUNG.........2500
     1   NBGPPR,NBGUPR,ISTORE,NOUMAT,IUNSAT,IALSAT,KTYPE                 BOUNG.........2600
      COMMON /DIMS/ NN,NE,NIN,NBI,NCBI,NB,NBHALF,NPBC,NUBC,              BOUNG.........2700
     1   NSOP,NSOU,NBCN,NPBG,NUBG,NCIDB                                  BOUNG.........2800
      COMMON /FNAMES/ UNAME,FNAME                                        BOUNG.........2900
      COMMON /FUNITS/ K00,K0,K1,K2,K3,K4,K5,K6,K7,K8,K9,                 BOUNG.........3000
     1   K10,K11,K12,K13,K14,K15,K16,K17,K18,K19,K20,K21,K22,K23         BOUNG.........3100
C                                                                        BOUNG.........3200
C                                                                        BOUNG.........3300
      IPG=0                                                              BOUNG.........3400
      IPUG=0                                                             BOUNG.........3500
      IF(NPBG.EQ.0) GOTO 400                                             BOUNG.........3600
      WRITE(K3,100)                                                      BOUNG.........3700
  100 FORMAT('1'////11X,                                                 BOUNG.........3800
     1   'G E N E R A L I Z E D   F L O W   D A T A'                     BOUNG.........3900
     2   ////11X,'**** NODES AT WHICH GENERALIZED-FLOW DATA ARE ',       BOUNG.........4000
     3   'SPECIFIED ****'/)                                              BOUNG.........4100
      IF(ME) 107,107,114                                                 BOUNG.........4200
  107 WRITE(K3,108)                                                      BOUNG.........4300
  108 FORMAT(16X,'(AS WELL AS SOLUTE CONCENTRATION OF ANY'               BOUNG.........4400
     1   /16X,' FLUID INFLOW OR OUTFLOW WHICH MAY OCCUR'                 BOUNG.........4500
     2   /16X,'  AT THE GENERALIZED-FLOW NODE)'                          BOUNG.........4600
     3  //12X,'NODE',8X,'DEFAULT PRESSURE 1',6X,'DEFAULT IN/OUTFLOW 1',  BOUNG.........4700
     4     8X,'DEFAULT PRESSURE 2',6X,'DEFAULT IN/OUTFLOW 2',            BOUNG.........4800
     5     6X,'LIMIT 1',6X,'LIMIT 2',                                    BOUNG.........4900
     6     7X,'DEFAULT INFLOW CONC',6X,'DEFAULT OUTFLOW CONC'//)         BOUNG.........5000
      GOTO 125                                                           BOUNG.........5100
  114 WRITE(K3,115)                                                      BOUNG.........5200
  115 FORMAT(16X,'(AS WELL AS TEMPERATURE {DEGREES CELSIUS} OF ANY'      BOUNG.........5300
     1   /16X,' FLUID INFLOW OR OUTFLOW WHICH MAY OCCUR'                 BOUNG.........5400
     2   /16X,'  AT THE GENERALIZED-FLOW NODE)'                          BOUNG.........5500
     3  //12X,'NODE',8X,'DEFAULT PRESSURE 1',6X,'DEFAULT IN/OUTFLOW 1',  BOUNG.........5600
     4     8X,'DEFAULT PRESSURE 2',6X,'DEFAULT IN/OUTFLOW 2',            BOUNG.........5700
     5     6X,'LIMIT 1',6X,'LIMIT 2',                                    BOUNG.........5800
     6     7X,'DEFAULT INFLOW TEMP',6X,'DEFAULT OUTFLOW TEMP'//)         BOUNG.........5900
C                                                                        BOUNG.........6000
C.....INPUT DATASET 21A:  DATA FOR GENERALIZED-FLOW NODES                BOUNG.........6100
  125 IPUG=IPUG+1                                                        BOUNG.........6200
      ERRCOD = 'REA-INP-21A'                                             BOUNG.........6300
      CALL READIF(K1, 0, INTFIL, ERRCOD)                                 BOUNG.........6400
      READ(INTFIL,*,IOSTAT=INERR(1)) IDUM                                BOUNG.........6500
      IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)        BOUNG.........6600
      IDUMA = IABS(IDUM)                                                 BOUNG.........6700
      IF (IDUM.EQ.0) THEN                                                BOUNG.........6800
         GOTO 180                                                        BOUNG.........6900
      ELSE IF (IDUMA.GT.NN) THEN                                         BOUNG.........7000
         ERRCOD = 'INP-21A-1'                                            BOUNG.........7100
         INERR(1) = IDUMA                                                BOUNG.........7200
         INERR(2) = NN                                                   BOUNG.........7300
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        BOUNG.........7400
      ELSE IF (IPUG.GT.NPBG) THEN                                        BOUNG.........7500
         GOTO 125                                                        BOUNG.........7600
      END IF                                                             BOUNG.........7700
      IPBG(IPUG) = IDUM                                                  BOUNG.........7800
      IF (IPBG(IPUG).GT.0) THEN                                          BOUNG.........7900
         ERRCOD = 'REA-INP-21A'                                          BOUNG.........8000
         READ(INTFIL,*,IOSTAT=INERR(1)) IPBG(IPUG),                      BOUNG.........8100
     1      PBG1(IPUG),QPBG1(IPUG),PBG2(IPUG),QPBG2(IPUG),               BOUNG.........8200
     2      CPQL1(IPUG),CPQL2(IPUG),UPBGI(IPUG),CUPBGO(IPUG),UPBGO(IPUG) BOUNG.........8300
         IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)     BOUNG.........8400
         RNUM = QPBG2(IPUG) - QPBG1(IPUG)                                BOUNG.........8500
         RDEN = PBG2(IPUG) - PBG1(IPUG)                                  BOUNG.........8600
         IF ((RDEN.LE.0D0).OR.(RNUM.GT.0D0)) THEN                        BOUNG.........8700
            ERRCOD = 'INP-21A-2'                                         BOUNG.........8800
            CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                     BOUNG.........8900
         ELSE IF ((CUPBGO(IPUG).NE.'DIR').AND.                           BOUNG.........9000
     1            (CUPBGO(IPUG).NE.'REL')) THEN                          BOUNG.........9100
            ERRCOD = 'INP-21A-4'                                         BOUNG.........9200
            CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                     BOUNG.........9300
         END IF                                                          BOUNG.........9400
         GNUPG(IPUG) = -RNUM/RDEN                                        BOUNG.........9500
         QPBGIC(IPUG) = QPBG1(IPUG) + GNUPG(IPUG)*PBG1(IPUG)             BOUNG.........9600
         WRITE(K3,160) IPBG(IPUG),                                       BOUNG.........9700
     1      PBG1(IPUG),QPBG1(IPUG),PBG2(IPUG),QPBG2(IPUG),               BOUNG.........9800
     2      CPQL1(IPUG),CPQL2(IPUG),UPBGI(IPUG),UPBGO(IPUG),CUPBGO(IPUG) BOUNG.........9900
      ELSE IF (IPBG(IPUG).LT.0) THEN                                     BOUNG........10000
         IPBGT = -1                                                      BOUNG........10100
         WRITE(K3,160) IPBG(IPUG)                                        BOUNG........10200
      ELSE                                                               BOUNG........10300
         GOTO 180                                                        BOUNG........10400
      END IF                                                             BOUNG........10500
  160 FORMAT(7X,I9,4(6X,1PE20.13),2(A13),2(6X,1PE20.13),2X,A3)           BOUNG........10600
      GOTO 125                                                           BOUNG........10700
  180 IPUG=IPUG-1                                                        BOUNG........10800
      IPG=IPUG                                                           BOUNG........10900
      IF(IPG.EQ.NPBG) GOTO 200                                           BOUNG........11000
      ERRCOD = 'INP-3,21A-1'                                             BOUNG........11100
      INERR(1) = IPG                                                     BOUNG........11200
      INERR(2) = NPBG                                                    BOUNG........11300
      CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                           BOUNG........11400
  200 IF(IPBGT.NE.-1) GOTO 250                                           BOUNG........11500
       IF(ME) 205,205,215                                                BOUNG........11600
  205 WRITE(K3,206)                                                      BOUNG........11700
  206 FORMAT(//12X,'TIME-DEPENDENT GENERALIZED-FLOW CONDITION ',         BOUNG........11800
     1   /12X,'SET IN SUBROUTINE BCTIME IS INDICATED ',                  BOUNG........11900
     2   'BY NEGATIVE NODE NUMBER')                                      BOUNG........12000
      GOTO 250                                                           BOUNG........12100
  215 WRITE(K3,216)                                                      BOUNG........12200
  216 FORMAT(//12X,'TIME-DEPENDENT GENERALIZED-FLOW CONDITION ',         BOUNG........12300
     1   /12X,'SET IN SUBROUTINE BCTIME IS INDICATED ',                  BOUNG........12400
     2   'BY NEGATIVE NODE NUMBER')                                      BOUNG........12500
  250 WRITE(K3,252)                                                      BOUNG........12600
  252 FORMAT(/11X,'SPECIFICATIONS MADE IN (OPTIONAL) ',                  BOUNG........12700
     1   'BCS INPUT FILES TAKE PRECEDENCE OVER THE'/11X,                 BOUNG........12800
     2   'DEFAULT VALUES LISTED ABOVE AND ANY VALUES ',                  BOUNG........12900
     3   'SET IN SUBROUTINE BCTIME.')                                    BOUNG........13000
C.....INITIALIZE ARRAY THAT INDICATES WHERE GENERALIZED-FLOW             BOUNG........13100
C        CONDITIONS WERE SET (0 = INP FILE)                              BOUNG........13200
      IBCPBG = 0                                                         BOUNG........13300
C                                                                        BOUNG........13400
  400 IF(NUBG.EQ.0) GOTO 9000                                            BOUNG........13500
      IPUG = 0                                                           BOUNG........13600
      IF(ME) 500,500,550                                                 BOUNG........13700
  500 WRITE(K3,1000)                                                     BOUNG........13800
 1000 FORMAT('1'////11X,                                                 BOUNG........13900
     1   'G E N E R A L I Z E D   T R A N S P O R T   D A T A'           BOUNG........14000
     2   ////11X,'**** NODES AT WHICH GENERALIZED-TRANSPORT ',           BOUNG........14100
     3   'DATA ARE SPECIFIED ****'                                       BOUNG........14200
     3  //12X,'NODE',                                                    BOUNG........14300
     4     3X,'DEFAULT CONCENTRATION 1',6X,'DEFAULT IN/OUTFLOW 1',       BOUNG........14400
     5     3X,'DEFAULT CONCENTRATION 2',6X,'DEFAULT IN/OUTFLOW 2'//)     BOUNG........14500
      GOTO 1125                                                          BOUNG........14600
  550 WRITE(K3,1001)                                                     BOUNG........14700
 1001 FORMAT('1'////11X,                                                 BOUNG........14800
     1   'G E N E R A L I Z E D   T R A N S P O R T   D A T A'           BOUNG........14900
     2   ////11X,'**** NODES AT WHICH GENERALIZED-TRANSPORT ',           BOUNG........15000
     3   'DATA ARE SPECIFIED ****'                                       BOUNG........15100
     3  //12X,'NODE',                                                    BOUNG........15200
     4     5X,'DEFAULT TEMPERATURE 1',6X,'DEFAULT IN/OUTFLOW 1',         BOUNG........15300
     5     5X,'DEFAULT TEMPERATURE 2',6X,'DEFAULT IN/OUTFLOW 2'//)       BOUNG........15400
C                                                                        BOUNG........15500
C.....INPUT DATASET 21B:  DATA FOR GENERALIZED-TRANSPORT NODES           BOUNG........15600
 1125 IPUG = IPUG + 1                                                    BOUNG........15700
      ERRCOD = 'REA-INP-21B'                                             BOUNG........15800
      CALL READIF(K1, 0, INTFIL, ERRCOD)                                 BOUNG........15900
      READ(INTFIL,*,IOSTAT=INERR(1)) IDUM                                BOUNG........16000
      IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)        BOUNG........16100
      IDUMA = IABS(IDUM)                                                 BOUNG........16200
      IF (IDUM.EQ.0) THEN                                                BOUNG........16300
         GOTO 1180                                                       BOUNG........16400
      ELSE IF (IDUMA.GT.NN) THEN                                         BOUNG........16500
         ERRCOD = 'INP-21B-1'                                            BOUNG........16600
         INERR(1) = IDUMA                                                BOUNG........16700
         INERR(2) = NN                                                   BOUNG........16800
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        BOUNG........16900
      ELSE IF (IPUG.GT.NUBG) THEN                                        BOUNG........17000
         GOTO 1125                                                       BOUNG........17100
      END IF                                                             BOUNG........17200
      IUBG(IPUG) = IDUM                                                  BOUNG........17300
      IF (IUBG(IPUG).GT.0) THEN                                          BOUNG........17400
         ERRCOD = 'REA-INP-21B'                                          BOUNG........17500
         READ(INTFIL,*,IOSTAT=INERR(1)) IUBG(IPUG),                      BOUNG........17600
     1      UBG1(IPUG),QUBG1(IPUG),UBG2(IPUG),QUBG2(IPUG)                BOUNG........17700
         IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)     BOUNG........17800
         RNUM = QUBG2(IPUG) - QUBG1(IPUG)                                BOUNG........17900
         RDEN = UBG2(IPUG) - UBG1(IPUG)                                  BOUNG........18000
         GNUUG(IPUG) = -RNUM/RDEN                                        BOUNG........18100
         QUBGIC(IPUG) = QUBG1(IPUG) + GNUUG(IPUG)*UBG1(IPUG)             BOUNG........18200
         WRITE(K3,1150) IUBG(IPUG),                                      BOUNG........18300
     1      UBG1(IPUG),QUBG1(IPUG),UBG2(IPUG),QUBG2(IPUG)                BOUNG........18400
      ELSE IF (IUBG(IPUG).LT.0) THEN                                     BOUNG........18500
         IUBGT = -1                                                      BOUNG........18600
         WRITE(K3,1150) IUBG(IPUG)                                       BOUNG........18700
      ELSE                                                               BOUNG........18800
         GOTO 1180                                                       BOUNG........18900
      END IF                                                             BOUNG........19000
 1150 FORMAT(11X,I9,5(6X,1PE20.13))                                      BOUNG........19100
      GOTO 1125                                                          BOUNG........19200
 1180 IPUG=IPUG-1                                                        BOUNG........19300
      IUG=IPUG                                                           BOUNG........19400
      IF(IUG.EQ.NUBG) GOTO 1200                                          BOUNG........19500
      ERRCOD = 'INP-3,21B-1'                                             BOUNG........19600
      INERR(1) = IUG                                                     BOUNG........19700
      INERR(2) = NUBG                                                    BOUNG........19800
      CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                           BOUNG........19900
 1200 IF(IUBGT.NE.-1) GOTO 6000                                          BOUNG........20000
      IF(ME) 1205,1205,1215                                              BOUNG........20100
 1205 WRITE(K3,1206)                                                     BOUNG........20200
 1206 FORMAT(//11X,'TIME-DEPENDENT GENERALIZED-TRANSPORT CONDITIONS',    BOUNG........20300
     1   ' USER-PROGRAMMED IN'/12X,'SUBROUTINE BCTIME ARE INDICATED',    BOUNG........20400
     2   ' BY A NEGATIVE NODE NUMBER.')                                  BOUNG........20500
      GOTO 6000                                                          BOUNG........20600
 1215 WRITE(K3,1216)                                                     BOUNG........20700
 1216 FORMAT(//11X,'TIME-DEPENDENT GENERALIZED-TRANSPORT CONDITIONS',    BOUNG........20800
     1   ' USER-PROGRAMMED IN'/12X,'SUBROUTINE BCTIME ARE INDICATED',    BOUNG........20900
     2   ' BY A NEGATIVE NODE NUMBER.')                                  BOUNG........21000
 6000 WRITE(K3,252)                                                      BOUNG........21100
C.....INITIALIZE ARRAY THAT INDICATES WHERE GENERALIZED-TRANSPORT        BOUNG........21200
C        CONDITIONS WERE SET (0 = INP FILE)                              BOUNG........21300
      IBCUBG = 0                                                         BOUNG........21400
C                                                                        BOUNG........21500
 9000 RETURN                                                             BOUNG........21600
      END                                                                BOUNG........21700
C                                                                        BOUNG........21800
C     SUBROUTINE        B  O  U  N  G  1           SUTRA VERSION 3.0     BOUNG1.........100
C                                                                        BOUNG1.........200
C *** PURPOSE :                                                          BOUNG1.........300
C ***  TO READ AND ORGANIZE TIME-DEPENDENT GENERALIZED-FLOW DATA         BOUNG1.........400
C ***  AND GENERALIZED-TRANSPORT DATA SPECIFIED IN THE OPTIONAL BCS      BOUNG1.........500
C ***  INPUT FILE.                                                       BOUNG1.........600
C                                                                        BOUNG1.........700
      SUBROUTINE BOUNG1(IPBG1,PBG11,QPBG11,PBG21,QPBG21,CPQL11,CPQL21,   BOUNG1.........800
     1   UPBGI1,CUPBGO1,UPBGO1,IUBG1,UBG11,QUBG11,UBG21,QUBG21,          BOUNG1.........900
     1   IPBCT1,IUBCT1,NPBG1,NUBG1,NFB,BCSID)                            BOUNG1........1000
      USE EXPINT                                                         BOUNG1........1100
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                BOUNG1........1200
      CHARACTER INTFIL*1000                                              BOUNG1........1300
      CHARACTER*80 ERRCOD,CHERR(10),UNAME,FNAME(0:23)                    BOUNG1........1400
      CHARACTER*40 BCSID                                                 BOUNG1........1500
      CHARACTER*1 CPQL11(NPBG1),CPQL21(NPBG1)                            BOUNG1........1600
      CHARACTER*3 CUPBGO1(NPBG1)                                         BOUNG1........1700
      DIMENSION PBG11(NPBG1),QPBG11(NPBG1),PBG21(NPBG1),QPBG21(NPBG1),   BOUNG1........1800
     1   UPBGI1(NPBG1),UBG11(NUBG1),QUBG11(NUBG1),UBG21(NUBG1),          BOUNG1........1900
     2   QUBG21(NUBG1),UPBGO1(NPBG1)                                     BOUNG1........2000
      DIMENSION IPBG1(NPBG1),IUBG1(NUBG1)                                BOUNG1........2100
      DIMENSION INERR(10),RLERR(10)                                      BOUNG1........2200
      DIMENSION KTYPE(2)                                                 BOUNG1........2300
      COMMON /CONTRL/ GNUP,GNUU,UP,DTMULT,DTMAX,ME,ISSFLO,ISSTRA,ITCYC,  BOUNG1........2400
     1   NPCYC,NUCYC,NPRINT,NBCFPR,NBCSPR,NBCPPR,NBCUPR,NLAKPR,IREAD,    BOUNG1........2500
     1   NBGPPR,NBGUPR,ISTORE,NOUMAT,IUNSAT,IALSAT,KTYPE                 BOUNG1........2600
      COMMON /DIMS/ NN,NE,NIN,NBI,NCBI,NB,NBHALF,NPBC,NUBC,              BOUNG1........2700
     1   NSOP,NSOU,NBCN,NPBG,NUBG,NCIDB                                  BOUNG1........2800
      COMMON /FNAMES/ UNAME,FNAME                                        BOUNG1........2900
      COMMON /FUNITS/ K00,K0,K1,K2,K3,K4,K5,K6,K7,K8,K9,                 BOUNG1........3000
     1   K10,K11,K12,K13,K14,K15,K16,K17,K18,K19,K20,K21,K22,K23         BOUNG1........3100
      COMMON /TIMES/ DELT,TSEC,TMIN,THOUR,TDAY,TWEEK,TMONTH,TYEAR,       BOUNG1........3200
     1   TMAX,DELTP,DELTU,DLTPM1,DLTUM1,IT,ITBCS,ITRST,ITMAX,TSTART      BOUNG1........3300
C                                                                        BOUNG1........3400
C                                                                        BOUNG1........3500
      IPG = 0                                                            BOUNG1........3600
      IPUG = 0                                                           BOUNG1........3700
      IPBGT1 = +1                                                        BOUNG1........3800
      IUBGT1 = +1                                                        BOUNG1........3900
C                                                                        BOUNG1........4000
      IF (NPBG1.EQ.0) GOTO 400                                           BOUNG1........4100
C                                                                        BOUNG1........4200
C.....INPUT BCS DATASET 7A:  DATA FOR GENERALIZED-FLOW NODES             BOUNG1........4300
      IPBGT1 = -1                                                        BOUNG1........4400
  125 IPUG = IPUG + 1                                                    BOUNG1........4500
      ERRCOD = 'REA-BCS-7A'                                              BOUNG1........4600
      WRITE(CHERR(1),*) ITBCS                                            BOUNG1........4700
      CHERR(2) = BCSID                                                   BOUNG1........4800
      CALL READIF(K9, NFB, INTFIL, ERRCOD, CHERR)                        BOUNG1........4900
      READ(INTFIL,*,IOSTAT=INERR(1)) IDUM                                BOUNG1........5000
      IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)        BOUNG1........5100
      IDUMA = IABS(IDUM)                                                 BOUNG1........5200
      IF (IDUM.EQ.0) THEN                                                BOUNG1........5300
         GOTO 180                                                        BOUNG1........5400
      ELSE IF (IDUMA.GT.NN) THEN                                         BOUNG1........5500
         ERRCOD = 'BCS-7A-1'                                             BOUNG1........5600
         INERR(1) = IDUMA                                                BOUNG1........5700
         INERR(2) = NN                                                   BOUNG1........5800
         INERR(3) = ITBCS                                                BOUNG1........5900
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        BOUNG1........6000
      ELSE IF (IPUG.GT.NPBG1) THEN                                       BOUNG1........6100
         GOTO 125                                                        BOUNG1........6200
      END IF                                                             BOUNG1........6300
      IPBG1(IPUG) = IDUM                                                 BOUNG1........6400
      IF (IPBG1(IPUG).GT.0) THEN                                         BOUNG1........6500
         ERRCOD = 'REA-BCS-7A'                                           BOUNG1........6600
         WRITE(CHERR(1),*) ITBCS                                         BOUNG1........6700
         CHERR(2) = BCSID                                                BOUNG1........6800
         READ(INTFIL,*,IOSTAT=INERR(1)) IPBG1(IPUG),                     BOUNG1........6900
     1      PBG11(IPUG),QPBG11(IPUG),PBG21(IPUG),QPBG21(IPUG),           BOUNG1........7000
     2      CPQL11(IPUG),CPQL21(IPUG),UPBGI1(IPUG),                      BOUNG1........7100
     3      CUPBGO1(IPUG),UPBGO1(IPUG)                                   BOUNG1........7200
         IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)     BOUNG1........7300
         IF ((CUPBGO1(IPUG).NE.'DIR').AND.                               BOUNG1........7400
     1       (CUPBGO1(IPUG).NE.'REL')) THEN                              BOUNG1........7500
            ERRCOD = 'BCS-7A-3'                                          BOUNG1........7600
            CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                     BOUNG1........7700
         END IF                                                          BOUNG1........7800
      ELSE IF (IPBG1(IPUG).LT.0) THEN                                    BOUNG1........7900
         CONTINUE                                                        BOUNG1........8000
      ELSE                                                               BOUNG1........8100
         GOTO 180                                                        BOUNG1........8200
      END IF                                                             BOUNG1........8300
      GOTO 125                                                           BOUNG1........8400
  180 IPUG = IPUG - 1                                                    BOUNG1........8500
      IPG = IPUG                                                         BOUNG1........8600
      IF (IPG.EQ.NPBG1) GOTO 400                                         BOUNG1........8700
      ERRCOD = 'BCS-2,7A-1'                                              BOUNG1........8800
      INERR(1) = IPG                                                     BOUNG1........8900
      INERR(2) = NPBG1                                                   BOUNG1........9000
      INERR(3) = ITBCS                                                   BOUNG1........9100
      CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                           BOUNG1........9200
C                                                                        BOUNG1........9300
  400 IF(NUBG1.EQ.0) GOTO 8000                                           BOUNG1........9400
C                                                                        BOUNG1........9500
C.....INPUT BCS DATASET 7B:  DATA FOR GENERALIZED-TRANSPORT NODES        BOUNG1........9600
      IUBGT1 = -1                                                        BOUNG1........9700
      IPUG = 0                                                           BOUNG1........9800
 1125 IPUG = IPUG + 1                                                    BOUNG1........9900
      ERRCOD = 'REA-BCS-7B'                                              BOUNG1.......10000
      WRITE(CHERR(1),*) ITBCS                                            BOUNG1.......10100
      CHERR(2) = BCSID                                                   BOUNG1.......10200
      CALL READIF(K9, NFB, INTFIL, ERRCOD, CHERR)                        BOUNG1.......10300
      READ(INTFIL,*,IOSTAT=INERR(1)) IDUM                                BOUNG1.......10400
      IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)        BOUNG1.......10500
      IDUMA = IABS(IDUM)                                                 BOUNG1.......10600
      IF (IDUM.EQ.0) THEN                                                BOUNG1.......10700
         GOTO 1180                                                       BOUNG1.......10800
      ELSE IF (IDUMA.GT.NN) THEN                                         BOUNG1.......10900
         ERRCOD = 'BCS-7B-1'                                             BOUNG1.......11000
         INERR(1) = IDUMA                                                BOUNG1.......11100
         INERR(2) = NN                                                   BOUNG1.......11200
         INERR(3) = ITBCS                                                BOUNG1.......11300
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        BOUNG1.......11400
      ELSE IF (IPUG.GT.NUBG1) THEN                                       BOUNG1.......11500
         GOTO 1125                                                       BOUNG1.......11600
      END IF                                                             BOUNG1.......11700
      IUBG1(IPUG) = IDUM                                                 BOUNG1.......11800
      IF (IUBG1(IPUG).GT.0) THEN                                         BOUNG1.......11900
         ERRCOD = 'REA-BCS-7B'                                           BOUNG1.......12000
         WRITE(CHERR(1),*) ITBCS                                         BOUNG1.......12100
         CHERR(2) = BCSID                                                BOUNG1.......12200
         READ(INTFIL,*,IOSTAT=INERR(1)) IUBG1(IPUG),                     BOUNG1.......12300
     1      UBG11(IPUG),QUBG11(IPUG),UBG21(IPUG),QUBG21(IPUG)            BOUNG1.......12400
         IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)     BOUNG1.......12500
      ELSE IF (IUBG1(IPUG).LT.0) THEN                                    BOUNG1.......12600
         CONTINUE                                                        BOUNG1.......12700
      ELSE                                                               BOUNG1.......12800
         GOTO 1180                                                       BOUNG1.......12900
      END IF                                                             BOUNG1.......13000
      GOTO 1125                                                          BOUNG1.......13100
 1180 IPUG = IPUG - 1                                                    BOUNG1.......13200
      IUG = IPUG                                                         BOUNG1.......13300
      IF (IUG.EQ.NUBG1) GOTO 8000                                        BOUNG1.......13400
         ERRCOD = 'BCS-2,7B-1'                                           BOUNG1.......13500
         IF (ME.EQ.1) THEN                                               BOUNG1.......13600
            CHERR(1) = ' temperature '                                   BOUNG1.......13700
         ELSE                                                            BOUNG1.......13800
            CHERR(1) = 'concentration'                                   BOUNG1.......13900
         END IF                                                          BOUNG1.......14000
         INERR(1) = IUG                                                  BOUNG1.......14100
         INERR(2) = NUBG1                                                BOUNG1.......14200
         INERR(3) = ITBCS                                                BOUNG1.......14300
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        BOUNG1.......14400
C                                                                        BOUNG1.......14500
 8000 CONTINUE                                                           BOUNG1.......14600
C                                                                        BOUNG1.......14700
      RETURN                                                             BOUNG1.......14800
      END                                                                BOUNG1.......14900
C                                                                        BOUNG1.......15000
C     SUBROUTINE        B  U  D  G  E  T           SUTRA VERSION 3.0     BUDGET.........100
C                                                                        BUDGET.........200
C *** PURPOSE :                                                          BUDGET.........300
C ***  TO CALCULATE AND OUTPUT FLUID MASS AND SOLUTE MASS OR             BUDGET.........400
C ***  ENERGY BUDGETS.                                                   BUDGET.........500
C                                                                        BUDGET.........600
      SUBROUTINE BUDGET(ML,IBCT,IQSOPT,IQSOUT,VOL,SW,DSWDP,RHO,          BUDGET.........700
     1   SOP,QIN,PVEC,PM1,DPDTITR,PBC,QPLITR,IPBC,IQSOP,POR,UVEC,        BUDGET.........800
     2   UM1,DUDTITR,UIN,QUIN,QINITR,IQSOU,UBC,IUBC,CS1,CS2,CS3,         BUDGET.........900
     3   SL,SR,NREG,NREGAD,GNUPP,GNUUU,UITER,                            BUDGET........1000
     4   IBCPBC,IBCUBC,IBCSOP,IBCSOU,IBCPBG,IBCUBG,                      BUDGET........1100
     5   IPBG,PBG1,PBG2,QPBG1,QPBG2,QPBGIC,GNUPG,CPQL1,CPQL2,QPGITR,     BUDGET........1200
     6   IUBG,UBG1,QUBG1,UPBGI,UPBGO,GNUUG,CUPBGO)                       BUDGET........1300
      USE LARR, ONLY : LAKNOD,ISTAT,VOLW,VOLWO,UWMS,UWMSO,               BUDGET........1400
     1   LKBCPBC,LKBCUBC,LKBCSOP,LKBCSOU,LKBCPBG,LKBCUBG,ISURFACE        BUDGET........1500
      USE EXPINT                                                         BUDGET........1600
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                BUDGET........1700
      LOGICAL LAKUSD                                                     BUDGET........1800
      LOGICAL LAKELGSOPANY,LAKELGSOP(NSOP),LAKELGSOUANY,LAKELGSOU(NSOU)  BUDGET........1900
      CHARACTER*10 ADSMOD,ADSMOD1(10)                                    BUDGET........2000
      CHARACTER*13 ULABL(2)                                              BUDGET........2100
      CHARACTER*1 CPQL1(NPBG),CPQL2(NPBG)                                BUDGET........2200
      CHARACTER*3 CUPBGO(NPBG)                                           BUDGET........2300
      INTEGER(1) IBCPBC(NBCN),IBCUBC(NBCN),IBCSOP(NSOP),IBCSOU(NSOU),    BUDGET........2400
     1   IBCPBG(NPBG),IBCUBG(NUBG)                                       BUDGET........2500
      DIMENSION QIN(NN),UIN(NN),IQSOP(NSOP),QUIN(NN),QINITR(NN),         BUDGET........2600
     1   IQSOU(NSOU)                                                     BUDGET........2700
      DIMENSION IPBC(NBCN),IUBC(NBCN),UBC(NBCN),QPLITR(NBCN),PBC(NBCN),  BUDGET........2800
     1   GNUPP(NBCN),GNUUU(NBCN)                                         BUDGET........2900
      DIMENSION PBG1(NPBG),QPBG1(NPBG),PBG2(NPBG),QPBG2(NPBG),           BUDGET........3000
     1   UPBGI(NPBG),UBG1(NUBG),QUBG1(NUBG),UBG2(NUBG),QUBG2(NUBG),      BUDGET........3100
     2   QPBGIC(NPBG),GNUPG(NPBG),QUBGIC(NUBG),GNUUG(NUBG),QPGITR(NPBG), BUDGET........3200
     3   UPBGO(NPBG)                                                     BUDGET........3300
      DIMENSION IPBG(NPBG),IUBG(NUBG)                                    BUDGET........3400
      DIMENSION POR(NN),VOL(NN),PVEC(NNVEC),UVEC(NNVEC),SW(NN),          BUDGET........3500
     1   DSWDP(NN),RHO(NN),SOP(NN),PM1(NN),DPDTITR(NN),UM1(NN),          BUDGET........3600
     2   CS1(NN),CS2(NN),CS3(NN),SL(NN),SR(NN),NREG(NN),NREGAD(NN),      BUDGET........3700
     3   DUDTITR(NN),UITER(NN)                                           BUDGET........3800
      DIMENSION DWMDT(NLAKES),DUWMDT(NLAKES)                             BUDGET........3900
      DIMENSION KTYPE(2)                                                 BUDGET........4000
      COMMON /BUDO/ TSECO,LUTSO                                          BUDGET........4100
      COMMON /CONTRL/ GNUP,GNUU,UP,DTMULT,DTMAX,ME,ISSFLO,ISSTRA,ITCYC,  BUDGET........4200
     1   NPCYC,NUCYC,NPRINT,NBCFPR,NBCSPR,NBCPPR,NBCUPR,NLAKPR,IREAD,    BUDGET........4300
     1   NBGPPR,NBGUPR,ISTORE,NOUMAT,IUNSAT,IALSAT,KTYPE                 BUDGET........4400
      COMMON /DIMEN/ NLAKES, NSIL, NCEL, NPLK                            BUDGET........4500
      COMMON /DIMS/ NN,NE,NIN,NBI,NCBI,NB,NBHALF,NPBC,NUBC,              BUDGET........4600
     1   NSOP,NSOU,NBCN,NPBG,NUBG,NCIDB                                  BUDGET........4700
      COMMON /DIMSRF/ MAXCON, NNSURF, NNVERT                             BUDGET........4800
      COMMON /DIMX2/ NELTA,NNVEC,NDIMIA,NDIMJA                           BUDGET........4900
      COMMON /FUNITS/ K00,K0,K1,K2,K3,K4,K5,K6,K7,K8,K9,                 BUDGET........5000
     1   K10,K11,K12,K13,K14,K15,K16,K17,K18,K19,K20,K21,K22,K23         BUDGET........5100
      COMMON /ITERAT/ RPM,RPMAX,RUM,RUMAX,ITER,ITRMAX,IPWORS,IUWORS      BUDGET........5200
      COMMON /LAKU/ LAKUSD                                               BUDGET........5300
      COMMON /MODSOR/ ADSMOD,ADSMOD1                                     BUDGET........5400
      COMMON /PARAMS/ COMPFL,COMPMA,DRWDU,CW,CS,RHOS,SIGMAW,SIGMAS,      BUDGET........5500
     1   RHOW0,URHOW0,VISC0,PRODF1,PRODS1,PRODF0,PRODS0,CHI1,CHI2        BUDGET........5600
      COMMON /RHOLAK/ RHOLK                                              BUDGET........5700
      COMMON /TIMES/ DELT,TSEC,TMIN,THOUR,TDAY,TWEEK,TMONTH,TYEAR,       BUDGET........5800
     1   TMAX,DELTP,DELTU,DLTPM1,DLTUM1,IT,ITBCS,ITRST,ITMAX,TSTART      BUDGET........5900
      DATA ULABL(1)/'CONCENTRATION'/,ULABL(2)/' TEMPERATURE '/           BUDGET........6000
      SAVE ULABL                                                         BUDGET........6100
C                                                                        BUDGET........6200
C                                                                        BUDGET........6300
      MN=2                                                               BUDGET........6400
      IF(IUNSAT.NE.0) IUNSAT=1                                           BUDGET........6500
      IF(IALSAT.NE.0) IALSAT=1                                           BUDGET........6600
      IF(ME.EQ.-1) MN=1                                                  BUDGET........6700
      WRITE(K3,10)                                                       BUDGET........6800
   10 FORMAT('1')                                                        BUDGET........6900
C.....SET UNSATURATED FLOW PARAMETERS, SW(I) AND DSWDP(I)                BUDGET........7000
      IF (IALSAT.EQ.1) THEN                                              BUDGET........7100
         DO 30 I=1,NN                                                    BUDGET........7200
            CALL GETSAT(SW(I),DSWDP(I),RELK,PVEC(I),NREG(I))             BUDGET........7300
   30    CONTINUE                                                        BUDGET........7400
      END IF                                                             BUDGET........7500
C                                                                        BUDGET........7600
C.....CALCULATE COMPONENTS OF FLUID MASS BUDGET                          BUDGET........7700
   40 IF(ML-1) 50,50,1000                                                BUDGET........7800
   50 CONTINUE                                                           BUDGET........7900
C                                                                        BUDGET........8000
C.....TOTALS FOR GROUDWATER STORAGE                                      BUDGET........8100
      STPPOS = 0D0                                                       BUDGET........8200
      STPNEG = 0D0                                                       BUDGET........8300
      STUPOS = 0D0                                                       BUDGET........8400
      STUNEG = 0D0                                                       BUDGET........8500
      DO 100 I=1,NN                                                      BUDGET........8600
         DPDT = (PVEC(I)-PM1(I))/DELTP                                   BUDGET........8700
         TERM = (1-ISSFLO/2)*RHO(I)*VOL(I)*                              BUDGET........8800
     1      (SW(I)*SOP(I)+POR(I)*DSWDP(I))*DPDT                          BUDGET........8900
         STPPOS = STPPOS + MAX(0D0, TERM)                                BUDGET........9000
         STPNEG = STPNEG + MIN(0D0, TERM)                                BUDGET........9100
         TERM = (1-ISSFLO/2)*POR(I)*SW(I)*DRWDU*VOL(I)*DUDTITR(I)        BUDGET........9200
         STUPOS = STUPOS + MAX(0D0, TERM)                                BUDGET........9300
         STUNEG = STUNEG + MIN(0D0, TERM)                                BUDGET........9400
  100 CONTINUE                                                           BUDGET........9500
      STPTOT = STPPOS + STPNEG                                           BUDGET........9600
      STUTOT = STUPOS + STUNEG                                           BUDGET........9700
      STFPOS = STPPOS + STUPOS                                           BUDGET........9800
      STFNEG = STPNEG + STUNEG                                           BUDGET........9900
      STFTOT = STPTOT + STUTOT                                           BUDGET.......10000
C                                                                        BUDGET.......10100
C.....TOTALS FOR LAKE STORAGE                                            BUDGET.......10200
      IF (LAKUSD) THEN                                                   BUDGET.......10300
         STFPOSLK = 0D0                                                  BUDGET.......10400
         STFNEGLK = 0D0                                                  BUDGET.......10500
         STFTOTLK = 0D0                                                  BUDGET.......10600
         STSPOSLK = 0D0                                                  BUDGET.......10700
         STSNEGLK = 0D0                                                  BUDGET.......10800
         STSTOTLK = 0D0                                                  BUDGET.......10900
         IF ((ISSFLO.EQ.0).AND.(IT.NE.0)) THEN                           BUDGET.......11000
            DTSEC = TSEC - TSECO                                         BUDGET.......11100
            DWMDT = RHOLK*(VOLW - VOLWO)/DTSEC                           BUDGET.......11200
            DUWMDT = (UWMS - UWMSO)/DTSEC                                BUDGET.......11300
            DO 110 LK=1,NLAKES                                           BUDGET.......11400
               IF (ISTAT(LK).GT.0) THEN                                  BUDGET.......11500
                  STFPOSLK = STFPOSLK + MAX(0D0, DWMDT(LK))              BUDGET.......11600
                  STFNEGLK = STFNEGLK + MIN(0D0, DWMDT(LK))              BUDGET.......11700
                  STSPOSLK = STSPOSLK + MAX(0D0, DUWMDT(LK))             BUDGET.......11800
                  STSNEGLK = STSNEGLK + MIN(0D0, DUWMDT(LK))             BUDGET.......11900
               END IF                                                    BUDGET.......12000
  110       CONTINUE                                                     BUDGET.......12100
            STFTOTLK = STFPOSLK + STFNEGLK                               BUDGET.......12200
            STSTOTLK = STSPOSLK + STSNEGLK                               BUDGET.......12300
         END IF                                                          BUDGET.......12400
      END IF                                                             BUDGET.......12500
C                                                                        BUDGET.......12600
C.....TOTALS FOR FLOWS AT SPECIFIED FLUID-SOURCE/SINK NODES              BUDGET.......12700
      QINPOS = 0D0                                                       BUDGET.......12800
      QINNEG = 0D0                                                       BUDGET.......12900
      QINTOT = 0D0                                                       BUDGET.......13000
      QINPOSLK = 0D0                                                     BUDGET.......13100
      QINNEGLK = 0D0                                                     BUDGET.......13200
      QINTOTLK = 0D0                                                     BUDGET.......13300
      NSOPI = NSOP - 1                                                   BUDGET.......13400
      IF (NSOPI.EQ.0) GOTO 150                                           BUDGET.......13500
      DO 120 IQP=1,NSOPI                                                 BUDGET.......13600
         IF (.NOT.LKBCSOP(IQP)) CYCLE                                    BUDGET.......13700
         CALL BUDSOP(IQP,QINVAL,QIUVAL,QEXGW,QEXLK,QEXRO,                BUDGET.......13800
     1      QUEXGW,QUEXLK,QUEXRO,UEX)                                    BUDGET.......13900
         QINPOS = QINPOS + MAX(0D0, QEXGW)                               BUDGET.......14000
         QINNEG = QINNEG + MIN(0D0, QEXGW)                               BUDGET.......14100
         IF (LAKUSD) THEN                                                BUDGET.......14200
            QEXLKRO = QEXLK + QEXRO                                      BUDGET.......14300
            QINPOSLK = QINPOSLK + MAX(0D0, QEXLKRO)                      BUDGET.......14400
            QINNEGLK = QINNEGLK + MIN(0D0, QEXLKRO)                      BUDGET.......14500
         END IF                                                          BUDGET.......14600
  120 CONTINUE                                                           BUDGET.......14700
      QINTOT = QINPOS + QINNEG                                           BUDGET.......14800
      IF (LAKUSD) QINTOTLK = QINPOSLK + QINNEGLK                         BUDGET.......14900
C                                                                        BUDGET.......15000
C.....TOTALS FOR FLOWS AT SPECIFIED-PRESSURE NODES                       BUDGET.......15100
  150 CONTINUE                                                           BUDGET.......15200
      QPLPOS = 0D0                                                       BUDGET.......15300
      QPLNEG = 0D0                                                       BUDGET.......15400
      QPLTOT = 0D0                                                       BUDGET.......15500
      QPLPOSLK = 0D0                                                     BUDGET.......15600
      QPLNEGLK = 0D0                                                     BUDGET.......15700
      QPLTOTLK = 0D0                                                     BUDGET.......15800
      IF (NPBC.EQ.0) GOTO 210                                            BUDGET.......15900
      DO 200 IP=1,NPBC                                                   BUDGET.......16000
         IF ((IBCPBC(IP).EQ.2).OR.(.NOT.LKBCPBC(IP))) CYCLE              BUDGET.......16100
         CALL BUDPBC(IP,QPBC,QUPBC,QEXGW,QEXLK,QEXRO,                    BUDGET.......16200
     1      QUEXGW,QUEXLK,QUEXRO,UEX,PEX)                                BUDGET.......16300
         QPLPOS = QPLPOS + MAX(0D0, QEXGW)                               BUDGET.......16400
         QPLNEG = QPLNEG + MIN(0D0, QEXGW)                               BUDGET.......16500
         IF (LAKUSD) THEN                                                BUDGET.......16600
            QEXLKRO = QEXLK + QEXRO                                      BUDGET.......16700
            QPLPOSLK = QPLPOSLK + MAX(0D0, QEXLKRO)                      BUDGET.......16800
            QPLNEGLK = QPLNEGLK + MIN(0D0, QEXLKRO)                      BUDGET.......16900
         END IF                                                          BUDGET.......17000
  200 CONTINUE                                                           BUDGET.......17100
      QPLTOT = QPLPOS + QPLNEG                                           BUDGET.......17200
      IF (LAKUSD) QPLTOTLK = QPLPOSLK + QPLNEGLK                         BUDGET.......17300
C                                                                        BUDGET.......17400
C.....TOTALS FOR FLOWS AT GENERALIZED-FLOW NODES                         BUDGET.......17500
  210 CONTINUE                                                           BUDGET.......17600
      QPGPOS = 0D0                                                       BUDGET.......17700
      QPGNEG = 0D0                                                       BUDGET.......17800
      QPGTOT = 0D0                                                       BUDGET.......17900
      QPGPOSLK = 0D0                                                     BUDGET.......18000
      QPGNEGLK = 0D0                                                     BUDGET.......18100
      QPGTOTLK = 0D0                                                     BUDGET.......18200
      IF (NPBG.EQ.0) GOTO 250                                            BUDGET.......18300
      DO 220 IPG=1,NPBG                                                  BUDGET.......18400
         IF ((IBCPBG(IPG).EQ.2).OR.(.NOT.LKBCPBG(IPG))) CYCLE            BUDGET.......18500
         CALL BUDPBG(IPG,QPBG,QUPBG,QEXGW,QEXLK,QEXRO,                   BUDGET.......18600
     1      QUEXGW,QUEXLK,QUEXRO,UEX,PEX1,PEX2)                          BUDGET.......18700
         QPGPOS = QPGPOS + MAX(0D0, QEXGW)                               BUDGET.......18800
         QPGNEG = QPGNEG + MIN(0D0, QEXGW)                               BUDGET.......18900
         IF (LAKUSD) THEN                                                BUDGET.......19000
            QEXLKRO = QEXLK + QEXRO                                      BUDGET.......19100
            QPGPOSLK = QPGPOSLK + MAX(0D0, QEXLKRO)                      BUDGET.......19200
            QPGNEGLK = QPGNEGLK + MIN(0D0, QEXLKRO)                      BUDGET.......19300
         END IF                                                          BUDGET.......19400
  220 CONTINUE                                                           BUDGET.......19500
      QPGTOT = QPGPOS + QPGNEG                                           BUDGET.......19600
      IF (LAKUSD) QPGTOTLK = QPGPOSLK + QPGNEGLK                         BUDGET.......19700
C                                                                        BUDGET.......19800
C.....TOTALS FOR ALL FLOWS                                               BUDGET.......19900
  250 QFFPOS = QINPOS + QPLPOS + QPGPOS                                  BUDGET.......20000
      QFFNEG = QINNEG + QPLNEG + QPGNEG                                  BUDGET.......20100
      QFFTOT = QINTOT + QPLTOT + QPGTOT                                  BUDGET.......20200
      IF (LAKUSD) THEN                                                   BUDGET.......20300
         QFFPOSLK = QINPOSLK + QPLPOSLK + QPGPOSLK                       BUDGET.......20400
         QFFNEGLK = QINNEGLK + QPLNEGLK + QPGNEGLK                       BUDGET.......20500
         QFFTOTLK = QINTOTLK + QPLTOTLK + QPGTOTLK                       BUDGET.......20600
      ELSE                                                               BUDGET.......20700
         QFFPOSLK = 0D0                                                  BUDGET.......20800
         QFFNEGLK = 0D0                                                  BUDGET.......20900
         QFFTOTLK = 0D0                                                  BUDGET.......21000
      END IF                                                             BUDGET.......21100
C                                                                        BUDGET.......21200
C.....OUTPUT FLUID MASS BUDGET                                           BUDGET.......21300
C                                                                        BUDGET.......21400
C.....OUTPUT GROUNDWATER MASS BUDGET                                     BUDGET.......21500
      ACTFMB = 5D-1*(STFPOS - STFNEG + QFFPOS - QFFNEG)                  BUDGET.......21600
      ERFMBA = STFTOT - QFFTOT                                           BUDGET.......21700
      WRITE(K3,300) IT,STPPOS,STPNEG,STPTOT,                             BUDGET.......21800
     1   ULABL(MN),STUPOS,STUNEG,STUTOT,STFPOS,STFNEG,STFTOT,            BUDGET.......21900
     2   QINPOS,QINNEG,QINTOT,QPLPOS,QPLNEG,QPLTOT,QPGPOS,QPGNEG,QPGTOT, BUDGET.......22000
     3   QFFPOS,QFFNEG,QFFTOT,ACTFMB,ERFMBA                              BUDGET.......22100
  300 FORMAT(//11X,'F L U I D   M A S S   B U D G E T      AFTER TIME',  BUDGET.......22200
     1   ' STEP ',I8,',     IN (MASS/SECOND)'                            BUDGET.......22300
     2   //89X,'SUM OF',10X,'SUM OF',12X,'NET'/87X,'INCREASES(+)',4X,    BUDGET.......22400
     3   'DECREASES(-)',7X,'CHANGE'/84X,3(2X,14('='))                    BUDGET.......22500
     4   /13X,'RATE OF CHANGE IN TOTAL STORED GROUNDWATER DUE TO ',      BUDGET.......22600
     5   'PRESSURE CHANGE',6X,3(1X,1PE15.7)                              BUDGET.......22700
     6   /13X,'RATE OF CHANGE IN TOTAL STORED GROUNDWATER DUE TO ',A13,  BUDGET.......22800
     7   ' CHANGE',1X,3(1X,1PE15.7)/84X,3(2X,14('-'))                    BUDGET.......22900
     8   /13X,'TOTAL RATE OF CHANGE IN STORED GROUNDWATER [ S+, S-, S ]' BUDGET.......23000
     9   15X,3(1X,1PE15.7)                                               BUDGET.......23100
     T   //89X,'SUM OF',10X,'SUM OF',12X,'NET'/89X,'GAINS(+)',7X,        BUDGET.......23200
     1   'LOSSES(-)',7X,'GAIN/LOSS'/84X,3(2X,14('='))                    BUDGET.......23300
     2   /13X,'GAIN/LOSS OF GROUNDWATER THROUGH FLUID SOURCES AND ',     BUDGET.......23400
     3   'SINKS',15X,3(1X,1PE15.7)                                       BUDGET.......23500
     4   /13X,'GAIN/LOSS OF GROUNDWATER THROUGH INFLOWS/OUTFLOWS AT'     BUDGET.......23600
     5   ' SPECIFIED P NODES',1X,3(1X,1PE15.7)                           BUDGET.......23700
     6   /13X,'GAIN/LOSS OF GROUNDWATER THROUGH INFLOWS/OUTFLOWS AT'     BUDGET.......23800
     7   ' GEN.-FLOW NODES',3X,3(1X,1PE15.7)/84X,3(2X,14('-'))           BUDGET.......23900
     T   /13X,'TOTAL RATE OF GAIN/LOSS OF GROUNDWATER THROUGH FLOWS',    BUDGET.......24000
     1   ' [ F+, F-, F ]',5X,3(1X,1PE15.7)                               BUDGET.......24100
     2   ///13X,'GROUNDWATER MASS BALANCE ACTIVITY',                     BUDGET.......24200
     3   ' [ A = ((S+) - (S-) + (F+) - (F-))/2 ]',8X,1PE15.7             BUDGET.......24300
     4   /13X,'ABSOLUTE GROUNDWATER MASS BALANCE ERROR [ S - F ]',30X,   BUDGET.......24400
     5   1PE15.7)                                                        BUDGET.......24500
      IF (ACTFMB.NE.0D0) THEN                                            BUDGET.......24600
         ERFMBR = 1D2*ERFMBA/ACTFMB                                      BUDGET.......24700
         WRITE(K3,305) ERFMBR                                            BUDGET.......24800
      ELSE                                                               BUDGET.......24900
         WRITE(K3,306)                                                   BUDGET.......25000
      END IF                                                             BUDGET.......25100
  305 FORMAT(13X,'RELATIVE GROUNDWATER MASS BALANCE ERROR',              BUDGET.......25200
     1   ' [ 100*(S - F)/A ]',22X,1PE15.7,' (PERCENT)')                  BUDGET.......25300
  306 FORMAT(13X,'RELATIVE GROUNDWATER MASS BALANCE ERROR',              BUDGET.......25400
     1   ' [ 100*(S - F)/A ]',22X,'  UNDEFINED')                         BUDGET.......25500
C                                                                        BUDGET.......25600
C.....OUTPUT LAKE WATER MASS BUDGET                                      BUDGET.......25700
      IF (LAKUSD) THEN                                                   BUDGET.......25800
      WRITE(K3,320) STFPOSLK,STFNEGLK,STFTOTLK,                          BUDGET.......25900
     1   QINPOSLK,QINNEGLK,QINTOTLK,QPLPOSLK,QPLNEGLK,QPLTOTLK,          BUDGET.......26000
     2   QPGPOSLK,QPGNEGLK,QPGTOTLK,QFFPOSLK,QFFNEGLK,QFFTOTLK           BUDGET.......26100
  320 FORMAT(//89X,'SUM OF',10X,'SUM OF',12X,'NET'/87X,'INCREASES(+)',   BUDGET.......26200
     3   4X,'DECREASES(-)',7X,'CHANGE'/84X,3(2X,14('='))                 BUDGET.......26300
     8   /13X,'RATE OF CHANGE IN STORED LAKE WATER',                     BUDGET.......26400
     9   36X,3(1X,1PE15.7)                                               BUDGET.......26500
     T   //89X,'SUM OF',10X,'SUM OF',12X,'NET'/89X,'GAINS(+)',7X,        BUDGET.......26600
     1   'LOSSES(-)',7X,'GAIN/LOSS'/84X,3(2X,14('='))                    BUDGET.......26700
     2   /13X,'GAIN/LOSS OF LAKE WATER THROUGH FLUID SOURCES AND SINKS', BUDGET.......26800
     3   16X,3(1X,1PE15.7)                                               BUDGET.......26900
     4   /13X,'GAIN/LOSS OF LAKE WATER THROUGH INFLOWS/OUTFLOWS AT'      BUDGET.......27000
     5   ' SPECIFIED P NODES',2X,3(1X,1PE15.7)                           BUDGET.......27100
     6   /13X,'GAIN/LOSS OF LAKE WATER THROUGH INFLOWS/OUTFLOWS AT'      BUDGET.......27200
     7   ' GEN.-FLOW NODES',4X,3(1X,1PE15.7)                             BUDGET.......27300
     T   /13X,'TOTAL RATE OF GAIN/LOSS OF LAKE WATER THROUGH FLOWS',     BUDGET.......27400
     1   20X,3(1X,1PE15.7))                                              BUDGET.......27500
      END IF                                                             BUDGET.......27600
C                                                                        BUDGET.......27700
C.....FLOWS AT SPECIFIED FLUID-SOURCE/SINK NODES                         BUDGET.......27800
C        (PRINT ONLY FOR NODES THAT ARE SET IN BCTIME OR CAN BE          BUDGET.......27900
C        AFFECTED BY LAKES)                                              BUDGET.......28000
      IF ((IQSOPT.NE.-1).AND.(.NOT.LAKUSD)) GOTO 600                     BUDGET.......28100
      NSOPI=NSOP-1                                                       BUDGET.......28200
      IF (NSOPI.EQ.0) GOTO 600                                           BUDGET.......28300
      LAKELGSOP = .FALSE.                                                BUDGET.......28400
      LAKELGSOPANY = .FALSE.                                             ! fix civ 200722b      BUDGET.......28500
      IF (LAKUSD) THEN                                                   BUDGET.......28600
         DO 340 IQP=1,NSOPI                                              BUDGET.......28700
            I=IQSOP(IQP)                                                 BUDGET.......28800
            ISURF = ISURFACE(IABS(I))                                    BUDGET.......28900
            IF (ISURF.EQ.0) CYCLE                                        BUDGET.......29000
            IF (LAKNOD(ISURF)%LAKEOK) THEN                               BUDGET.......29100
               LAKELGSOP(IQP) = .TRUE.                                   BUDGET.......29200
               LAKELGSOPANY = .TRUE.                                     BUDGET.......29300
            END IF                                                       BUDGET.......29400
  340    CONTINUE                                                        BUDGET.......29500
      END IF                                                             BUDGET.......29600
      IF ((IQSOPT.EQ.-1).AND.LAKELGSOPANY) THEN                          BUDGET.......29700
         WRITE(K3,350)                                                   BUDGET.......29800
  350    FORMAT(///22X,'TIME-DEPENDENT FLUID SOURCES OR SINKS THAT ',    BUDGET.......29900
     1      'ARE SET IN SUBROUTINE BCTIME'                               BUDGET.......30000
     1      /22X,'AND/OR SPECIFIED FLUID ',                              BUDGET.......30100
     2      'SOURCES OR SINKS THAT CAN BE MODIFIED BY LAKES')            BUDGET.......30200
      ELSE IF (IQSOPT.EQ.-1) THEN                                        BUDGET.......30300
         WRITE(K3,351)                                                   BUDGET.......30400
  351    FORMAT(///22X,'TIME-DEPENDENT FLUID SOURCES OR SINKS THAT ',    BUDGET.......30500
     1      'ARE SET IN SUBROUTINE BCTIME')                              BUDGET.......30600
      ELSE IF (LAKELGSOPANY) THEN                                        BUDGET.......30700
         WRITE(K3,352)                                                   BUDGET.......30800
  352    FORMAT(///22X,'SPECIFIED FLUID SOURCES OR SINKS THAT CAN ',     BUDGET.......30900
     1      'BE MODIFIED BY LAKES')                                      BUDGET.......31000
      ELSE                                                               BUDGET.......31100
         GOTO 600                                                        BUDGET.......31200
      END IF                                                             BUDGET.......31300
      IF (LAKELGSOPANY) THEN                                             BUDGET.......31400
         WRITE(K3,444)                                                   BUDGET.......31500
  444    FORMAT(//22X,' NODE',2(5X,'INFLOW(+)/OUTFLOW(-)'),              BUDGET.......31600
     1      16X,'RUNOFF(+)'                                              BUDGET.......31700
     2      /33X,'TO/FROM GROUNDWATER',3X,'DIRECTLY TO/FROM LAKES',      BUDGET.......31800
     3      17X,'TO LAKES'                                               BUDGET.......31900
     4      /27X,3(12X,'(MASS/SECOND)')//)                               BUDGET.......32000
         DO 480 IQP=1,NSOPI                                              BUDGET.......32100
         I=IQSOP(IQP)                                                    BUDGET.......32200
         IF ((IBCSOP(IQP).EQ.-1).OR.LAKELGSOP(IQP)) THEN                 BUDGET.......32300
            IF (.NOT.LKBCSOP(IQP)) THEN                                  BUDGET.......32400
               WRITE(K3,450) IABS(I), 0D0, 0D0, 0D0                      BUDGET.......32500
            ELSE                                                         BUDGET.......32600
               CALL BUDSOP(IQP,QINVAL,QIUVAL,QEXGW,QEXLK,QEXRO,          BUDGET.......32700
     1            QUEXGW,QUEXLK,QUEXRO,UEX)                              BUDGET.......32800
               WRITE(K3,450) IABS(I), QEXGW,QEXLK,QEXRO                  BUDGET.......32900
            END IF                                                       BUDGET.......33000
  450       FORMAT(18X,I9,3(10X,1PE15.7))                                BUDGET.......33100
         END IF                                                          BUDGET.......33200
  480    CONTINUE                                                        BUDGET.......33300
      ELSE                                                               BUDGET.......33400
         WRITE(K3,544)                                                   BUDGET.......33500
  544    FORMAT(//22X,' NODE',5X,'INFLOW(+)/OUTFLOW(-)'                  BUDGET.......33600
     1      /37X,'  (MASS/SECOND)'//)                                    BUDGET.......33700
         DO 580 IQP=1,NSOPI                                              BUDGET.......33800
         I=IQSOP(IQP)                                                    BUDGET.......33900
         IF (IBCSOP(IQP).EQ.-1) THEN                                     BUDGET.......34000
            CALL BUDSOP(IQP,QINVAL,QIUVAL,QEXGW,QEXLK,QEXRO,             BUDGET.......34100
     1         QUEXGW,QUEXLK,QUEXRO,UEX)                                 BUDGET.......34200
            WRITE(K3,450) IABS(I), QINVAL                                BUDGET.......34300
         END IF                                                          BUDGET.......34400
  580    CONTINUE                                                        BUDGET.......34500
      END IF                                                             BUDGET.......34600
C                                                                        BUDGET.......34700
C.....FLOWS AT SPECIFIED-PRESSURE NODES                                  BUDGET.......34800
  600 IF(NPBC.EQ.0) GOTO 750                                             BUDGET.......34900
      IF (LAKUSD) THEN                                                   BUDGET.......35000
         WRITE(K3,651)                                                   BUDGET.......35100
      ELSE                                                               BUDGET.......35200
         WRITE(K3,650)                                                   BUDGET.......35300
      END IF                                                             BUDGET.......35400
  650 FORMAT(///22X,'FLUID SOURCES OR SINKS DUE TO SPECIFIED PRESSURES', BUDGET.......35500
     1   //22X,' NODE',5X,'INFLOW(+)/OUTFLOW(-)'/37X,'  (MASS/SECOND)'/) BUDGET.......35600
  651 FORMAT(///22X,'FLUID SOURCES OR SINKS DUE TO SPECIFIED PRESSURES', BUDGET.......35700
     1   //22X,' NODE',2(5X,'INFLOW(+)/OUTFLOW(-)'),                     BUDGET.......35800
     2   16X,'RUNOFF(+)'                                                 BUDGET.......35900
     3   /33X,'TO/FROM GROUNDWATER',3X,'DIRECTLY TO/FROM LAKES',         BUDGET.......36000
     4   17X,'TO LAKES'                                                  BUDGET.......36100
     5   /27X,3(12X,'(MASS/SECOND)')//)                                  BUDGET.......36200
      DO 700 IP=1,NPBC                                                   BUDGET.......36300
      I=IABS(IPBC(IP))                                                   BUDGET.......36400
      IF ((IBCPBC(IP).EQ.2).OR.(.NOT.LKBCPBC(IP))) THEN                  BUDGET.......36500
         WRITE(K3,450) I, 0D0, 0D0, 0D0                                  BUDGET.......36600
      ELSE                                                               BUDGET.......36700
         CALL BUDPBC(IP,QPBC,QUPBC,QEXGW,QEXLK,QEXRO,                    BUDGET.......36800
     1      QUEXGW,QUEXLK,QUEXRO,UEX,PEX)                                BUDGET.......36900
         IF (LAKUSD) THEN                                                BUDGET.......37000
            WRITE(K3,450) I, QEXGW,QEXLK,QEXRO                           BUDGET.......37100
         ELSE                                                            BUDGET.......37200
            WRITE(K3,450) I, QPBC                                        BUDGET.......37300
         END IF                                                          BUDGET.......37400
      END IF                                                             BUDGET.......37500
  700 CONTINUE                                                           BUDGET.......37600
C                                                                        BUDGET.......37700
C.....FLOWS AT GENERALIZED-FLOW NODES                                    BUDGET.......37800
  750 IF(NPBG.EQ.0) GOTO 990                                             BUDGET.......37900
      IF (LAKUSD) THEN                                                   BUDGET.......38000
         WRITE(K3,771)                                                   BUDGET.......38100
      ELSE                                                               BUDGET.......38200
         WRITE(K3,770)                                                   BUDGET.......38300
      END IF                                                             BUDGET.......38400
  770 FORMAT(///22X,'FLUID SOURCES OR SINKS DUE TO GENERALIZED-FLOW',    BUDGET.......38500
     1   ' CONDITIONS'                                                   BUDGET.......38600
     2   //22X,' NODE',5X,'INFLOW(+)/OUTFLOW(-)'/37X,'  (MASS/SECOND)'/) BUDGET.......38700
  771 FORMAT(///22X,'FLUID SOURCES OR SINKS DUE TO GENERALIZED-FLOW',    BUDGET.......38800
     1   ' CONDITIONS'                                                   BUDGET.......38900
     1   //22X,' NODE',2(5X,'INFLOW(+)/OUTFLOW(-)'),                     BUDGET.......39000
     2   16X,'RUNOFF(+)'                                                 BUDGET.......39100
     3   /33X,'TO/FROM GROUNDWATER',3X,'DIRECTLY TO/FROM LAKES',         BUDGET.......39200
     4   17X,'TO LAKES'                                                  BUDGET.......39300
     5   /27X,3(12X,'(MASS/SECOND)')//)                                  BUDGET.......39400
      DO 780 IPG=1,NPBG                                                  BUDGET.......39500
      I=IABS(IPBG(IPG))                                                  BUDGET.......39600
      IF ((IBCPBG(IPG).EQ.2).OR.(.NOT.LKBCPBG(IPG))) THEN                BUDGET.......39700
         WRITE(K3,450) I, 0D0, 0D0, 0D0                                  BUDGET.......39800
      ELSE                                                               BUDGET.......39900
         CALL BUDPBG(IPG,QPBG,QUPBG,QEXGW,QEXLK,QEXRO,                   BUDGET.......40000
     1      QUEXGW,QUEXLK,QUEXRO,UEX,PEX1,PEX2)                          BUDGET.......40100
         IF (LAKUSD) THEN                                                BUDGET.......40200
            WRITE(K3,450) I, QEXGW,QEXLK,QEXRO                           BUDGET.......40300
         ELSE                                                            BUDGET.......40400
            WRITE(K3,450) I, QPBG                                        BUDGET.......40500
         END IF                                                          BUDGET.......40600
      END IF                                                             BUDGET.......40700
  780 CONTINUE                                                           BUDGET.......40800
C                                                                        BUDGET.......40900
C.....CALCULATE COMPONENTS OF ENERGY OR SOLUTE MASS BUDGET               BUDGET.......41000
  990 IF(ML-1) 1000,6500,1000                                            BUDGET.......41100
 1000 CONTINUE                                                           BUDGET.......41200
C                                                                        BUDGET.......41300
C.....SET ADSORPTION PARAMETERS                                          BUDGET.......41400
      IF(ME.EQ.-1)                                                       BUDGET.......41500
     1   CALL ADSORB(CS1,CS2,CS3,SL,SR,UVEC,NREGAD)                      BUDGET.......41600
C                                                                        BUDGET.......41700
C.....TOTALS FOR SOLUTE/ENERGY STORAGE AND PRODUCTION/DECAY              BUDGET.......41800
      FLDPOS = 0D0                                                       BUDGET.......41900
      FLDNEG = 0D0                                                       BUDGET.......42000
      SLDPOS = 0D0                                                       BUDGET.......42100
      SLDNEG = 0D0                                                       BUDGET.......42200
      DNSPOS = 0D0                                                       BUDGET.......42300
      DNSNEG = 0D0                                                       BUDGET.......42400
      P1FPOS = 0D0                                                       BUDGET.......42500
      P1FNEG = 0D0                                                       BUDGET.......42600
      P1SPOS = 0D0                                                       BUDGET.......42700
      P1SNEG = 0D0                                                       BUDGET.......42800
      P0FPOS = 0D0                                                       BUDGET.......42900
      P0FNEG = 0D0                                                       BUDGET.......43000
      P0SPOS = 0D0                                                       BUDGET.......43100
      P0SNEG = 0D0                                                       BUDGET.......43200
      DO 1300 I=1,NN                                                     BUDGET.......43300
         ESRV=POR(I)*SW(I)*RHO(I)*VOL(I)                                 BUDGET.......43400
         EPRSV=(1.D0-POR(I))*RHOS*VOL(I)                                 BUDGET.......43500
         DUDT=(1-ISSTRA)*(UVEC(I)-UM1(I))/DELTU                          BUDGET.......43600
         TERM = ESRV*CW*DUDT                                             BUDGET.......43700
         FLDPOS = FLDPOS + MAX(0D0, TERM)                                BUDGET.......43800
         FLDNEG = FLDNEG + MIN(0D0, TERM)                                BUDGET.......43900
         TERM = EPRSV*CS1(I)*DUDT                                        BUDGET.......44000
         SLDPOS = SLDPOS + MAX(0D0, TERM)                                BUDGET.......44100
         SLDNEG = SLDNEG + MIN(0D0, TERM)                                BUDGET.......44200
         TERM = CW*UVEC(I)*(1-ISSFLO/2)*VOL(I)*                          BUDGET.......44300
     1      (RHO(I)*(SW(I)*SOP(I)+POR(I)*DSWDP(I))*DPDTITR(I)            BUDGET.......44400
     2      +POR(I)*SW(I)*DRWDU*DUDTITR(I))                              BUDGET.......44500
         DNSPOS = DNSPOS + MAX(0D0, TERM)                                BUDGET.......44600
         DNSNEG = DNSNEG + MIN(0D0, TERM)                                BUDGET.......44700
         TERM = ESRV*PRODF1*UVEC(I)                                      BUDGET.......44800
         P1FPOS = P1FPOS + MAX(0D0, TERM)                                BUDGET.......44900
         P1FNEG = P1FNEG + MIN(0D0, TERM)                                BUDGET.......45000
         TERM = EPRSV*PRODS1*(SL(I)*UVEC(I)+SR(I))                       BUDGET.......45100
         P1SPOS = P1SPOS + MAX(0D0, TERM)                                BUDGET.......45200
         P1SNEG = P1SNEG + MIN(0D0, TERM)                                BUDGET.......45300
         TERM = ESRV*PRODF0                                              BUDGET.......45400
         P0FPOS = P0FPOS + MAX(0D0, TERM)                                BUDGET.......45500
         P0FNEG = P0FNEG + MIN(0D0, TERM)                                BUDGET.......45600
         TERM = EPRSV*PRODS0                                             BUDGET.......45700
         P0SPOS = P0SPOS + MAX(0D0, TERM)                                BUDGET.......45800
         P0SNEG = P0SNEG + MIN(0D0, TERM)                                BUDGET.......45900
 1300 CONTINUE                                                           BUDGET.......46000
      FLDTOT = FLDPOS + FLDNEG                                           BUDGET.......46100
      SLDTOT = SLDPOS + SLDNEG                                           BUDGET.......46200
      DNSTOT = DNSPOS + DNSNEG                                           BUDGET.......46300
      STSPOS = FLDPOS + SLDPOS + DNSPOS                                  BUDGET.......46400
      STSNEG = FLDNEG + SLDNEG + DNSNEG                                  BUDGET.......46500
      STSTOT = FLDTOT + SLDTOT + DNSTOT                                  BUDGET.......46600
      P1FTOT = P1FPOS + P1FNEG                                           BUDGET.......46700
      P1STOT = P1SPOS + P1SNEG                                           BUDGET.......46800
      P0FTOT = P0FPOS + P0FNEG                                           BUDGET.......46900
      P0STOT = P0SPOS + P0SNEG                                           BUDGET.......47000
      PRSPOS = P1FPOS + P1SPOS + P0FPOS + P0SPOS                         BUDGET.......47100
      PRSNEG = P1FNEG + P1SNEG + P0FNEG + P0SNEG                         BUDGET.......47200
      PRSTOT = P1FTOT + P1STOT + P0FTOT + P0STOT                         BUDGET.......47300
C                                                                        BUDGET.......47400
C.....TOTALS FOR SOLUTE/ENERGY AT SPECIFIED FLUID-SOURCE/SINK NODES      BUDGET.......47500
      QIUPOS = 0D0                                                       BUDGET.......47600
      QIUNEG = 0D0                                                       BUDGET.......47700
      QIUTOT = 0D0                                                       BUDGET.......47800
      QIUPOSLK = 0D0                                                     BUDGET.......47900
      QIUNEGLK = 0D0                                                     BUDGET.......48000
      QIUTOTLK = 0D0                                                     BUDGET.......48100
      NSOPI = NSOP - 1                                                   BUDGET.......48200
      IF (NSOPI.EQ.0) GOTO 1405                                          BUDGET.......48300
      DO 1400 IQP=1,NSOPI                                                BUDGET.......48400
         IF (.NOT.LKBCSOP(IQP)) CYCLE                                    BUDGET.......48500
         CALL BUDSOP(IQP,QINVAL,QIUVAL,QEXGW,QEXLK,QEXRO,                BUDGET.......48600
     1      QUEXGW,QUEXLK,QUEXRO,UEX)                                    BUDGET.......48700
         QIUPOS = QIUPOS + MAX(0D0, QUEXGW)                              BUDGET.......48800
         QIUNEG = QIUNEG + MIN(0D0, QUEXGW)                              BUDGET.......48900
         IF (LAKUSD) THEN                                                BUDGET.......49000
            QUEXLKRO = QUEXLK + QUEXRO                                   BUDGET.......49100
            QIUPOSLK = QIUPOSLK + MAX(0D0, QUEXLKRO)                     BUDGET.......49200
            QIUNEGLK = QIUNEGLK + MIN(0D0, QUEXLKRO)                     BUDGET.......49300
         END IF                                                          BUDGET.......49400
 1400 CONTINUE                                                           BUDGET.......49500
      QIUTOT = QIUPOS + QIUNEG                                           BUDGET.......49600
      IF (LAKUSD)  QIUTOTLK = QIUPOSLK + QIUNEGLK                        BUDGET.......49700
C                                                                        BUDGET.......49800
C.....TOTALS FOR SOLUTE/ENERGY AT SPECIFIED-PRESSURE NODES               BUDGET.......49900
 1405 CONTINUE                                                           BUDGET.......50000
      QPUPOS = 0D0                                                       BUDGET.......50100
      QPUNEG = 0D0                                                       BUDGET.......50200
      QPUTOT = 0D0                                                       BUDGET.......50300
      QPUPOSLK = 0D0                                                     BUDGET.......50400
      QPUNEGLK = 0D0                                                     BUDGET.......50500
      QPUTOTLK = 0D0                                                     BUDGET.......50600
      IF (NPBC.EQ.0) GOTO 1415                                           BUDGET.......50700
      DO 1410 IP=1,NPBC                                                  BUDGET.......50800
         IF ((IBCPBC(IP).EQ.2).OR.(.NOT.LKBCPBC(IP))) CYCLE              BUDGET.......50900
         CALL BUDPBC(IP,QPBC,QUPBC,QEXGW,QEXLK,QEXRO,                    BUDGET.......51000
     1      QUEXGW,QUEXLK,QUEXRO,UEX,PEX)                                BUDGET.......51100
         QPUPOS = QPUPOS + MAX(0D0, QUEXGW)                              BUDGET.......51200
         QPUNEG = QPUNEG + MIN(0D0, QUEXGW)                              BUDGET.......51300
         IF (LAKUSD) THEN                                                BUDGET.......51400
            QUEXLKRO = QUEXLK + QUEXRO                                   BUDGET.......51500
            QPUPOSLK = QPUPOSLK + MAX(0D0, QUEXLKRO)                     BUDGET.......51600
            QPUNEGLK = QPUNEGLK + MIN(0D0, QUEXLKRO)                     BUDGET.......51700
         END IF                                                          BUDGET.......51800
 1410 CONTINUE                                                           BUDGET.......51900
      QPUTOT = QPUPOS + QPUNEG                                           BUDGET.......52000
      IF (LAKUSD)  QPUTOTLK = QPUPOSLK + QPUNEGLK                        BUDGET.......52100
C                                                                        BUDGET.......52200
C.....TOTALS FOR SOLUTE/ENERGY AT GENERALIZED-FLOW NODES                 BUDGET.......52300
 1415 CONTINUE                                                           BUDGET.......52400
      QPGUPOS = 0D0                                                      BUDGET.......52500
      QPGUNEG = 0D0                                                      BUDGET.......52600
      QPGUTOT = 0D0                                                      BUDGET.......52700
      QPGUPOSLK = 0D0                                                    BUDGET.......52800
      QPGUNEGLK = 0D0                                                    BUDGET.......52900
      QPGUTOTLK = 0D0                                                    BUDGET.......53000
      IF (NPBG.EQ.0) GOTO 1425                                           BUDGET.......53100
      DO 1420 IPG=1,NPBG                                                 BUDGET.......53200
         IF ((IBCPBG(IPG).EQ.2).OR.(.NOT.LKBCPBG(IPG))) CYCLE            BUDGET.......53300
         CALL BUDPBG(IPG,QPBG,QUPBG,QEXGW,QEXLK,QEXRO,                   BUDGET.......53400
     1      QUEXGW,QUEXLK,QUEXRO,UEX,PEX1,PEX2)                          BUDGET.......53500
         QPGUPOS = QPGUPOS + MAX(0D0, QUEXGW)                            BUDGET.......53600
         QPGUNEG = QPGUNEG + MIN(0D0, QUEXGW)                            BUDGET.......53700
         IF (LAKUSD) THEN                                                BUDGET.......53800
            QUEXLKRO = QUEXLK + QUEXRO                                   BUDGET.......53900
            QPGUPOSLK = QPGUPOSLK + MAX(0D0, QUEXLKRO)                   BUDGET.......54000
            QPGUNEGLK = QPGUNEGLK + MIN(0D0, QUEXLKRO)                   BUDGET.......54100
         END IF                                                          BUDGET.......54200
 1420 CONTINUE                                                           BUDGET.......54300
      QPGUTOT = QPGUPOS + QPGUNEG                                        BUDGET.......54400
      IF (LAKUSD)  QPGUTOTLK = QPGUPOSLK + QPGUNEGLK                     BUDGET.......54500
C                                                                        BUDGET.......54600
C.....TOTALS FOR SOLUTE/ENERGY AT SPECIFIED SOLUTE/ENERGY-SOURCE/SINK    BUDGET.......54700
C        NODES                                                           BUDGET.......54800
 1425 CONTINUE                                                           BUDGET.......54900
      QQUPOS = 0D0                                                       BUDGET.......55000
      QQUNEG = 0D0                                                       BUDGET.......55100
      QQUTOT = 0D0                                                       BUDGET.......55200
      QQUPOSLK = 0D0                                                     BUDGET.......55300
      QQUNEGLK = 0D0                                                     BUDGET.......55400
      QQUTOTLK = 0D0                                                     BUDGET.......55500
      NSOUI = NSOU - 1                                                   BUDGET.......55600
      IF (NSOUI.EQ.0) GOTO 1435                                          BUDGET.......55700
      DO 1430 IQU=1,NSOUI                                                BUDGET.......55800
         IF (.NOT.LKBCSOU(IQU)) CYCLE                                    BUDGET.......55900
         CALL BUDSOU(IQU,QUINVAL,QUEXGW,QUEXLK)                          BUDGET.......56000
         QQUPOS = QQUPOS + MAX(0D0, QUEXGW)                              BUDGET.......56100
         QQUNEG = QQUNEG + MIN(0D0, QUEXGW)                              BUDGET.......56200
         IF (LAKUSD) THEN                                                BUDGET.......56300
             QQUPOSLK = QQUPOSLK + MAX(0D0, QUEXLK)                      BUDGET.......56400
             QQUNEGLK = QQUNEGLK + MIN(0D0, QUEXLK)                      BUDGET.......56500
         END IF                                                          BUDGET.......56600
 1430 CONTINUE                                                           BUDGET.......56700
      QQUTOT = QQUPOS + QQUNEG                                           BUDGET.......56800
      IF (LAKUSD)  QQUTOTLK = QQUPOSLK + QQUNEGLK                        BUDGET.......56900
C                                                                        BUDGET.......57000
C.....TOTALS FOR SOLUTE/ENERGY AT SPECIFIED-CONC/TEMP NODES              BUDGET.......57100
 1435 CONTINUE                                                           BUDGET.......57200
                                                                         BUDGET.......57300
      QULPOS = 0D0                                                       BUDGET.......57400
      QULNEG = 0D0                                                       BUDGET.......57500
      QULTOT = 0D0                                                       BUDGET.......57600
      QULPOSLK = 0D0                                                     BUDGET.......57700
      QULNEGLK = 0D0                                                     BUDGET.......57800
      QULTOTLK = 0D0                                                     BUDGET.......57900
      IF (NUBC.EQ.0) GOTO 1445                                           BUDGET.......58000
      DO 1440 IU=1,NUBC                                                  BUDGET.......58100
         IUP = IU + NPBC                                                 BUDGET.......58200
         IF ((IBCUBC(IUP).EQ.2).OR.(.NOT.LKBCUBC(IUP))) CYCLE            BUDGET.......58300
         CALL BUDUBC(IUP,QUBC,QUEXGW,QUEXLK,UEX)                         BUDGET.......58400
         QULPOS = QULPOS + MAX(0D0, QUEXGW)                              BUDGET.......58500
         QULNEG = QULNEG + MIN(0D0, QUEXGW)                              BUDGET.......58600
         IF (LAKUSD) THEN                                                BUDGET.......58700
            QULPOSLK = QULPOSLK + MAX(0D0, QUEXLK)                       BUDGET.......58800
            QULNEGLK = QULNEGLK + MIN(0D0, QUEXLK)                       BUDGET.......58900
         END IF                                                          BUDGET.......59000
 1440 CONTINUE                                                           BUDGET.......59100
      QULTOT = QULPOS + QULNEG                                           BUDGET.......59200
      IF (LAKUSD) QULTOTLK = QULPOSLK + QULNEGLK                         BUDGET.......59300
C                                                                        BUDGET.......59400
C.....TOTALS FOR SOLUTE/ENERGY AT GENERALIZED-TRANSPORT NODES            BUDGET.......59500
 1445 CONTINUE                                                           BUDGET.......59600
      QUGPOS = 0D0                                                       BUDGET.......59700
      QUGNEG = 0D0                                                       BUDGET.......59800
      QUGTOT = 0D0                                                       BUDGET.......59900
      QUGPOSLK = 0D0                                                     BUDGET.......60000
      QUGNEGLK = 0D0                                                     BUDGET.......60100
      QUGTOTLK = 0D0                                                     BUDGET.......60200
      IF (NUBG.EQ.0) GOTO 1530                                           BUDGET.......60300
      DO 1450 IUG=1,NUBG                                                 BUDGET.......60400
         IF (.NOT.LKBCUBG(IUG)) CYCLE                                    BUDGET.......60500
         CALL BUDUBG(IUG,QUBG,QUEXGW,QUEXLK,UEX1,UEX2,QUEX1,QUEX2)       BUDGET.......60600
         IF (LAKUSD) THEN                                                BUDGET.......60700
            QUGPOSLK = QUGPOSLK + MAX(0D0, QUEXLK)                       BUDGET.......60800
            QUGNEGLK = QUGNEGLK + MIN(0D0, QUEXLK)                       BUDGET.......60900
         END IF                                                          BUDGET.......61000
 1450 CONTINUE                                                           BUDGET.......61100
      QUGTOT = QUGPOS + QUGNEG                                           BUDGET.......61200
      IF (LAKUSD) QUGTOTLK = QUGPOSLK + QUGNEGLK                         BUDGET.......61300
C                                                                        BUDGET.......61400
 1530 QFSPOS = QIUPOS + QPUPOS + QPGUPOS + QQUPOS + QULPOS + QUGPOS      BUDGET.......61500
      QFSNEG = QIUNEG + QPUNEG + QPGUNEG + QQUNEG + QULNEG + QUGNEG      BUDGET.......61600
      QFSTOT = QIUTOT + QPUTOT + QPGUTOT + QQUTOT + QULTOT + QUGTOT      BUDGET.......61700
      IF (LAKUSD) THEN                                                   BUDGET.......61800
         QFSPOSLK = QIUPOSLK + QPUPOSLK + QPGUPOSLK                      BUDGET.......61900
     1      + QQUPOSLK + QULPOSLK + QUGPOSLK                             BUDGET.......62000
         QFSNEGLK = QIUNEGLK + QPUNEGLK + QPGUNEGLK                      BUDGET.......62100
     1      + QQUNEGLK + QULNEGLK + QUGNEGLK                             BUDGET.......62200
         QFSTOTLK = QIUTOTLK + QPUTOTLK + QPGUTOTLK                      BUDGET.......62300
     1      + QQUTOTLK + QULTOTLK + QUGTOTLK                             BUDGET.......62400
      ELSE                                                               BUDGET.......62500
         QFSPOSLK = 0D0                                                  BUDGET.......62600
         QFSNEGLK = 0D0                                                  BUDGET.......62700
         QFSTOTLK = 0D0                                                  BUDGET.......62800
      END IF                                                             BUDGET.......62900
C                                                                        BUDGET.......63000
 1540 IF(ME) 1550,1550,1615                                              BUDGET.......63100
C                                                                        BUDGET.......63200
C.....OUTPUT SOLUTE MASS BUDGET                                          BUDGET.......63300
C                                                                        BUDGET.......63400
C.....OUTPUT GROUNDWATER SOLUTE BUDGET                                   BUDGET.......63500
 1550 ACTSMB = 5D-1*(STSPOS - STSNEG + PRSPOS - PRSNEG                   BUDGET.......63600
     1   + QFSPOS - QFSNEG)                                              BUDGET.......63700
      ERSMBA = STSTOT - PRSTOT - QFSTOT                                  BUDGET.......63800
      WRITE(K3,1600) IT,FLDPOS,FLDNEG,FLDTOT,SLDPOS,SLDNEG,SLDTOT,       BUDGET.......63900
     1   DNSPOS,DNSNEG,DNSTOT,STSPOS,STSNEG,STSTOT,                      BUDGET.......64000
     2   P1FPOS,P1FNEG,P1FTOT,P1SPOS,P1SNEG,P1STOT,                      BUDGET.......64100
     3   P0FPOS,P0FNEG,P0FTOT,P0SPOS,P0SNEG,P0STOT,PRSPOS,PRSNEG,PRSTOT, BUDGET.......64200
     4   QIUPOS,QIUNEG,QIUTOT,QPUPOS,QPUNEG,QPUTOT,                      BUDGET.......64300
     5   QPGUPOS,QPGUNEG,QPGUTOT,QQUPOS,QQUNEG,QQUTOT,                   BUDGET.......64400
     6   QULPOS,QULNEG,QULTOT,QUGPOS,QUGNEG,QUGTOT,                      BUDGET.......64500
     7   QFSPOS,QFSNEG,QFSTOT,ACTSMB,ERSMBA                              BUDGET.......64600
 1600 FORMAT(//11X,'S O L U T E   B U D G E T      AFTER TIME STEP ',I8, BUDGET.......64700
     1   ',   IN (SOLUTE MASS/SECOND)'                                   BUDGET.......64800
     2   //89X,'SUM OF',10X,'SUM OF',12X,'NET'/87X,'INCREASES(+)',4X,    BUDGET.......64900
     3   'DECREASES(-)',7X,'CHANGE'/84X,3(2X,14('='))                    BUDGET.......65000
     4   /13X,'RATE OF CHANGE IN GW SOLUTE DUE TO CONCENTRATION CHANGE', BUDGET.......65100
     5   16X,3(1X,1PE15.7)                                               BUDGET.......65200
     6   /13X,'RATE OF CHANGE OF ADSORBATE',44X,3(1X,1PE15.7)            BUDGET.......65300
     7   /13X,'RATE OF CHANGE IN GW SOLUTE DUE TO CHANGE IN MASS OF ',   BUDGET.......65400
     8   'FLUID',13X,3(1X,1PE15.7)/84X,3(2X,14('-'))                     BUDGET.......65500
     9   /13X,'TOTAL RATE OF CHANGE OF GW SOLUTE [ S+, S-, S ]',         BUDGET.......65600
     T   24X,3(1X,1PE15.7)                                               BUDGET.......65700
     1   //89X,'SUM OF',10X,'SUM OF',12X,'NET'/87X,'PRODUCTION(+)',5X,   BUDGET.......65800
     2   'DECAY(-)',7X,'PROD./DECAY'/84X,3(2X,14('='))                   BUDGET.......65900
     3   /13X,'FIRST-ORDER PRODUCTION/DECAY OF GW SOLUTE',30X,           BUDGET.......66000
     4   3(1X,1PE15.7)/13X,'FIRST-ORDER PRODUCTION/DECAY OF ADSORBATE',  BUDGET.......66100
     5   30X,3(1X,1PE15.7)                                               BUDGET.......66200
     6   /13X,'ZERO-ORDER PRODUCTION/DECAY OF GW SOLUTE',31X,            BUDGET.......66300
     7   3(1X,1PE15.7)/13X,'ZERO-ORDER PRODUCTION/DECAY OF ADSORBATE',   BUDGET.......66400
     8   31X,3(1X,1PE15.7)/84X,3(2X,14('-'))                             BUDGET.......66500
     9   /13X,'TOTAL RATE OF PRODUCTION/DECAY OF GW SOLUTE & ADSORBATE', BUDGET.......66600
     T   ' [ P+, P-, P ]',2X,3(1X,1PE15.7)                               BUDGET.......66700
     1   //89X,'SUM OF',10X,'SUM OF',12X,'NET'/89X,'GAINS(+)',7X,        BUDGET.......66800
     2   'LOSSES(-)',7X,'GAIN/LOSS'/84X,3(2X,14('='))                    BUDGET.......66900
     3   /13X,'GAIN/LOSS OF GW SOLUTE THROUGH FLUID SOURCES AND SINKS',  BUDGET.......67000
     4   17X,3(1X,1PE15.7)                                               BUDGET.......67100
     5   /13X,'GAIN/LOSS OF GW SOLUTE THROUGH INFLOWS/OUTFLOWS AT'       BUDGET.......67200
     6   ' SPECIFIED P NODES',3X,3(1X,1PE15.7)                           BUDGET.......67300
     7   /13X,'GAIN/LOSS OF GW SOLUTE THROUGH INFLOWS/OUTFLOWS AT'       BUDGET.......67400
     8   ' GEN.-FLOW NODES',5X,3(1X,1PE15.7)                             BUDGET.......67500
     1   /13X,'GAIN/LOSS OF GW SOLUTE THROUGH SOLUTE SOURCES AND SINKS', BUDGET.......67600
     2   16X,3(1X,1PE15.7)                                               BUDGET.......67700
     3   /13X,'GAIN/LOSS OF GW SOLUTE AT SPECIFIED CONCENTRATION NODES', BUDGET.......67800
     4   16X,3(1X,1PE15.7)                                               BUDGET.......67900
     5   /13X,'GAIN/LOSS OF GW SOLUTE AT GEN.-TRANSPORT NODES',          BUDGET.......68000
     6   25X,3(1X,1PE15.7)/84X,3(2X,14('-'))                             BUDGET.......68100
     7   /13X,'TOTAL RATE OF GAIN/LOSS OF GW SOLUTE',35X,3(1X,1PE15.7)   BUDGET.......68200
     8   /16X,' THROUGH FLOWS & SOURCES/SINKS [ F+, F-, F ]'             BUDGET.......68300
     9   ///13X,'GW SOL. MASS BAL. ACTIVITY [ A = ((S+) - (S-)',         BUDGET.......68400
     T   ' + (P+) - (P-) + (F+) - (F-))/2 ]',1X,1PE15.7                  BUDGET.......68500
     1   /13X,'ABSOLUTE GW SOLUTE MASS BALANCE ERROR [ S - P - F ]',     BUDGET.......68600
     2   28X,1PE15.7)                                                    BUDGET.......68700
      IF (ACTSMB.NE.0D0) THEN                                            BUDGET.......68800
         ERSMBR = 1D2*ERSMBA/ACTSMB                                      BUDGET.......68900
         WRITE(K3,1601) ERSMBR                                           BUDGET.......69000
      ELSE                                                               BUDGET.......69100
         WRITE(K3,1602)                                                  BUDGET.......69200
      END IF                                                             BUDGET.......69300
 1601 FORMAT(13X,'RELATIVE GW SOLUTE MASS BALANCE ERROR',                BUDGET.......69400
     1   ' [ 100*(S - P - F)/A ]',20X,1PE15.7,' (PERCENT)')              BUDGET.......69500
 1602 FORMAT(13X,'RELATIVE GW SOLUTE MASS BALANCE ERROR',                BUDGET.......69600
     1   ' [ 100*(S - P - F)/A ]',20X,'  UNDEFINED')                     BUDGET.......69700
      IF ((IT.EQ.1).AND.(ITER.EQ.1).AND.(ISSTRA.NE.1)) WRITE(K3,1603)    BUDGET.......69800
 1603 FORMAT(/13X,'******** NOTE: ON THE FIRST ITERATION OF THE ',       BUDGET.......69900
     1   'FIRST TIME STEP, A LARGE RELATIVE ERROR IN THE  ********'      BUDGET.......70000
     2   /13X,'******** SOLUTE MASS BUDGET DOES NOT NECESSARILY ',       BUDGET.......70100
     3   'INDICATE AN INACCURATE TRANSPORT SOLUTION.  ********'          BUDGET.......70200
     4   /13X,'******** THE BUDGET CALCULATION WILL NOT YIELD ',         BUDGET.......70300
     5   'A MEANINGFUL RESULT UNLESS THE                ********'        BUDGET.......70400
     6   /13X,'******** INITIAL CONDITIONS REPRESENT MUTUALLY ',         BUDGET.......70500
     7   'CONSISTENT SOLUTIONS FOR FLOW AND TRANSPORT   ********'        BUDGET.......70600
     8   /13X,'******** FROM A PREVIOUS SUTRA SIMULATION THAT ',         BUDGET.......70700
     9   'ARE ALSO CONSISTENT WITH THE PRESENT SOURCES  ********'        BUDGET.......70800
     T   /13X,'******** AND BOUNDARY CONDITIONS.',60X,'********')        BUDGET.......70900
C                                                                        BUDGET.......71000
C.....OUTPUT LAKE SOLUTE BUDGET                                          BUDGET.......71100
      IF (LAKUSD) THEN                                                   BUDGET.......71200
      IF (ISSTRA.NE.0) THEN                                              BUDGET.......71300
         STSPOSLK = 0D0                                                  BUDGET.......71400
         STSNEGLK = 0D0                                                  BUDGET.......71500
         STSTOTLK = 0D0                                                  BUDGET.......71600
      END IF                                                             BUDGET.......71700
      WRITE(K3,1610) STSPOSLK,STSNEGLK,STSTOTLK,                         BUDGET.......71800
     4   QIUPOSLK,QIUNEGLK,QIUTOTLK,QPUPOSLK,QPUNEGLK,QPUTOTLK,          BUDGET.......71900
     5   QPGUPOSLK,QPGUNEGLK,QPGUTOTLK,QQUPOSLK,QQUNEGLK,QQUTOTLK,       BUDGET.......72000
     6   QULPOSLK,QULNEGLK,QULTOTLK,QUGPOSLK,QUGNEGLK,QUGTOTLK,          BUDGET.......72100
     7   QFSPOSLK,QFSNEGLK,QFSTOTLK                                      BUDGET.......72200
 1610 FORMAT(//89X,'SUM OF',10X,'SUM OF',12X,'NET'/87X,'INCREASES(+)',   BUDGET.......72300
     3   4X,'DECREASES(-)',7X,'CHANGE'/84X,3(2X,14('='))                 BUDGET.......72400
     9   /13X,'RATE OF CHANGE OF LAKE SOLUTE',                           BUDGET.......72500
     T   42X,3(1X,1PE15.7)                                               BUDGET.......72600
     1   //89X,'SUM OF',10X,'SUM OF',12X,'NET'/89X,'GAINS(+)',7X,        BUDGET.......72700
     2   'LOSSES(-)',7X,'GAIN/LOSS'/84X,3(2X,14('='))                    BUDGET.......72800
     3   /13X,'GAIN/LOSS OF LAKE SOLUTE THROUGH FLUID SOURCES AND ',     BUDGET.......72900
     4   'SINKS',15X,3(1X,1PE15.7)                                       BUDGET.......73000
     5   /13X,'GAIN/LOSS OF LAKE SOLUTE THROUGH INFLOWS/OUTFLOWS AT'     BUDGET.......73100
     6   ' SPECIFIED P NODES',1X,3(1X,1PE15.7)                           BUDGET.......73200
     7   /13X,'GAIN/LOSS OF LAKE SOLUTE THROUGH INFLOWS/OUTFLOWS AT'     BUDGET.......73300
     8   ' GEN.-FLOW NODES',3X,3(1X,1PE15.7)                             BUDGET.......73400
     1   /13X,'GAIN/LOSS OF LAKE SOLUTE THROUGH SOLUTE SOURCES AND ',    BUDGET.......73500
     2   'SINKS',14X,3(1X,1PE15.7)                                       BUDGET.......73600
     3   /13X,'GAIN/LOSS OF LAKE SOLUTE AT SPECIFIED CONCENTRATION ',    BUDGET.......73700
     4   'NODES',14X,3(1X,1PE15.7)                                       BUDGET.......73800
     5   /13X,'GAIN/LOSS OF LAKE SOLUTE AT GEN.-TRANSPORT NODES',        BUDGET.......73900
     6   23X,3(1X,1PE15.7)/84X,3(2X,14('-'))                             BUDGET.......74000
     7   /13X,'TOTAL RATE OF GAIN/LOSS OF LAKE SOLUTE',33X,3(1X,1PE15.7) BUDGET.......74100
     8   /16X,' THROUGH FLOWS & SOURCES/SINKS')                          BUDGET.......74200
      END IF                                                             BUDGET.......74300
      GOTO 1665                                                          BUDGET.......74400
C                                                                        BUDGET.......74500
C.....OUTPUT ENERGY BUDGET                                               BUDGET.......74600
C                                                                        BUDGET.......74700
C.....OUTPUT GROUNDWATER ENERGY BUDGET                                   BUDGET.......74800
 1615 ACTSMB = 5D-1*(STSPOS - STSNEG + PRSPOS - PRSNEG                   BUDGET.......74900
     1   + QFSPOS - QFSNEG)                                              BUDGET.......75000
      ERSMBA = STSTOT - PRSTOT - QFSTOT                                  BUDGET.......75100
      WRITE(K3,1635) IT,FLDPOS,FLDNEG,FLDTOT,SLDPOS,SLDNEG,SLDTOT,       BUDGET.......75200
     1   DNSPOS,DNSNEG,DNSTOT,STSPOS,STSNEG,STSTOT,                      BUDGET.......75300
     2   P0FPOS,P0FNEG,P0FTOT,P0SPOS,P0SNEG,P0STOT,PRSPOS,PRSNEG,PRSTOT, BUDGET.......75400
     3   QIUPOS,QIUNEG,QIUTOT,QPUPOS,QPUNEG,QPUTOT,                      BUDGET.......75500
     5   QPGUPOS,QPGUNEG,QPGUTOT,QQUPOS,QQUNEG,QQUTOT,                   BUDGET.......75600
     4   QULPOS,QULNEG,QULTOT,QUGPOS,QUGNEG,QUGTOT,                      BUDGET.......75700
     5   QFSPOS,QFSNEG,QFSTOT,ACTSMB,ERSMBA                              BUDGET.......75800
 1635 FORMAT(//11X,'E N E R G Y   B U D G E T      AFTER TIME STEP ',I8, BUDGET.......75900
     1   ',   IN (ENERGY/SECOND)'                                        BUDGET.......76000
     2   //89X,'SUM OF',10X,'SUM OF',12X,'NET'/87X,'INCREASES(+)',4X,    BUDGET.......76100
     3   'DECREASES(-)',7X,'CHANGE'/84X,3(2X,14('='))                    BUDGET.......76200
     4   /13X,'RATE OF CHANGE OF ENERGY IN GW DUE TO ',                  BUDGET.......76300
     5   'TEMPERATURE CHANGE',15X,3(1X,1PE15.7)                          BUDGET.......76400
     6   /13X,'RATE OF CHANGE OF ENERGY IN SOLID GRAINS',                BUDGET.......76500
     7   31X,3(1X,1PE15.7)                                               BUDGET.......76600
     8   /13X,'RATE OF CHANGE OF ENERGY IN GW & SOLID GRAINS DUE TO ',   BUDGET.......76700
     9   'CHANGE',12X,3(1X,1PE15.7)                                      BUDGET.......76800
     9   /13X,'    IN MASS OF FLUID',51X,3(2X,14('-'))                   BUDGET.......76900
     T   /13X,'TOTAL RATE OF CHANGE OF ENERGY IN GW & SOLID GRAINS ',    BUDGET.......77000
     1   '[ S+, S-, S ]',6X,3(1X,1PE15.7)                                BUDGET.......77100
     2   //89X,'SUM OF',10X,'SUM OF',12X,'NET'/87X,'PRODUCTION(+)',5X,   BUDGET.......77200
     3   'DECAY(-)',7X,'PROD./DECAY'/84X,3(2X,14('='))                   BUDGET.......77300
     4   /13X,'ZERO-ORDER PRODUCTION/DECAY OF ENERGY IN GW',             BUDGET.......77400
     5   28X,3(1X,1PE15.7)                                               BUDGET.......77500
     6   /13X,'ZERO-ORDER PRODUCTION/DECAY OF ENERGY IN SOLID GRAINS',   BUDGET.......77600
     7   18X,3(1X,1PE15.7)/84X,3(2X,14('-'))                             BUDGET.......77700
     8   /13X,'TOTAL RATE OF PROD./DECAY OF ENERGY IN GW & SOLID ',      BUDGET.......77800
     9   'GRAINS [ P+, P-, P ]',1X,3(1X,1PE15.7)                         BUDGET.......77900
     T   //89X,'SUM OF',10X,'SUM OF',12X,'NET'/89X,'GAINS(+)',7X,        BUDGET.......78000
     1   'LOSSES(-)',7X,'GAIN/LOSS'/84X,3(2X,14('='))                    BUDGET.......78100
     2   /13X,'GAIN/LOSS OF ENERGY IN GW THROUGH FLUID SOURCES AND ',    BUDGET.......78200
     3   'SINKS',14X,3(1X,1PE15.7)                                       BUDGET.......78300
     4   /13X,'GAIN/LOSS OF ENERGY IN GW THROUGH INFLOWS/OUTFLOWS ',     BUDGET.......78400
     5   'AT SPEC. P NODES',4X,3(1X,1PE15.7)                             BUDGET.......78500
     6   /13X,'GAIN/LOSS OF ENERGY IN GW THROUGH INFLOWS/OUTFLOWS ',     BUDGET.......78600
     7   'AT GEN.-FLOW NODES',2X,3(1X,1PE15.7)                           BUDGET.......78700
     9   /13X,'GAIN/LOSS OF ENERGY IN GW THROUGH ENERGY SOURCES AND ',   BUDGET.......78800
     T   'SINKS',13X,3(1X,1PE15.7)                                       BUDGET.......78900
     1   /13X,'GAIN/LOSS OF ENERGY IN GW AT SPECIFIED TEMPERATURE ',     BUDGET.......79000
     2   'NODES',15X,3(1X,1PE15.7)                                       BUDGET.......79100
     3   /13X,'GAIN/LOSS OF ENERGY IN GW AT GEN.-TRANSPORT NODES',       BUDGET.......79200
     4   22X,3(1X,1PE15.7)/84X,3(2X,14('-'))                             BUDGET.......79300
     5   /13X,'TOTAL RATE OF GAIN/LOSS OF ENERGY IN GW',32X,             BUDGET.......79400
     5   3(1X,1PE15.7)                                                   BUDGET.......79500
     6   /16X,' THROUGH FLOWS & SOURCES/SINKS [ F+, F-, F ]'             BUDGET.......79600
     7   ///13X,'GW ENERGY BALANCE ACTIVITY [ A = ((S+) - (S-)',         BUDGET.......79700
     8   ' + (P+) - (P-) + (F+) - (F-))/2 ]',1X,1PE15.7                  BUDGET.......79800
     9   /13X,'ABSOLUTE GW ENERGY BALANCE ERROR [ S - P - F ]',          BUDGET.......79900
     T   33X,1PE15.7)                                                    BUDGET.......80000
      IF (ACTSMB.NE.0D0) THEN                                            BUDGET.......80100
         ERSMBR = 1D2*ERSMBA/ACTSMB                                      BUDGET.......80200
         WRITE(K3,1641) ERSMBR                                           BUDGET.......80300
      ELSE                                                               BUDGET.......80400
         WRITE(K3,1642)                                                  BUDGET.......80500
      END IF                                                             BUDGET.......80600
 1641 FORMAT(13X,'RELATIVE GW ENERGY BALANCE ERROR',                     BUDGET.......80700
     1   ' [ 100*(S - P - F)/A ]',25X,1PE15.7,' (PERCENT)')              BUDGET.......80800
 1642 FORMAT(13X,'RELATIVE GW ENERGY BALANCE ERROR',                     BUDGET.......80900
     1   ' [ 100*(S - P - F)/A ]',25X,'  UNDEFINED')                     BUDGET.......81000
      IF ((IT.EQ.1).AND.(ITER.EQ.1).AND.(ISSTRA.NE.1)) WRITE(K3,1643)    BUDGET.......81100
 1643 FORMAT(/13X,'******** NOTE: ON THE FIRST ITERATION OF THE ',       BUDGET.......81200
     1   'FIRST TIME STEP, A LARGE RELATIVE ERROR IN THE  ********'      BUDGET.......81300
     2   /13X,'******** ENERGY BUDGET DOES NOT NECESSARILY ',            BUDGET.......81400
     3   'INDICATE AN INACCURATE TRANSPORT SOLUTION.       ********'     BUDGET.......81500
     4   /13X,'******** THE BUDGET CALCULATION WILL NOT YIELD ',         BUDGET.......81600
     5   'A MEANINGFUL RESULT UNLESS THE                ********'        BUDGET.......81700
     6   /13X,'******** INITIAL CONDITIONS REPRESENT MUTUALLY ',         BUDGET.......81800
     7   'CONSISTENT SOLUTIONS FOR FLOW AND TRANSPORT   ********'        BUDGET.......81900
     8   /13X,'******** FROM A PREVIOUS SUTRA SIMULATION THAT ',         BUDGET.......82000
     9   'ARE ALSO CONSISTENT WITH THE PRESENT SOURCES  ********'        BUDGET.......82100
     T   /13X,'******** AND BOUNDARY CONDITIONS.',60X,'********')        BUDGET.......82200
C                                                                        BUDGET.......82300
C.....OUTPUT LAKE ENERGY BUDGET                                          BUDGET.......82400
      IF (LAKUSD) THEN                                                   BUDGET.......82500
      WRITE(K3,1650) STSPOSLK,STSNEGLK,STSTOTLK,                         BUDGET.......82600
     3   QIUPOSLK,QIUNEGLK,QIUTOTLK,QPUPOSLK,QPUNEGLK,QPUTOTLK,          BUDGET.......82700
     5   QPGUPOSLK,QPGUNEGLK,QPGUTOTLK,QQUPOSLK,QQUNEGLK,QQUTOTLK,       BUDGET.......82800
     4   QULPOSLK,QULNEGLK,QULTOTLK,QUGPOSLK,QUGNEGLK,QUGTOTLK,          BUDGET.......82900
     5   QFSPOSLK,QFSNEGLK,QFSTOTLK                                      BUDGET.......83000
 1650 FORMAT(//89X,'SUM OF',10X,'SUM OF',12X,'NET'/87X,'INCREASES(+)',   BUDGET.......83100
     3   4X,'DECREASES(-)',7X,'CHANGE'/84X,3(2X,14('='))                 BUDGET.......83200
     T   /13X,'RATE OF CHANGE OF ENERGY IN LAKES ',37X,3(1X,1PE15.7)     BUDGET.......83300
     T   //89X,'SUM OF',10X,'SUM OF',12X,'NET'/89X,'GAINS(+)',7X,        BUDGET.......83400
     1   'LOSSES(-)',7X,'GAIN/LOSS'/84X,3(2X,14('='))                    BUDGET.......83500
     2   /13X,'GAIN/LOSS OF ENERGY IN LAKES THROUGH FLUID SOURCES AND ', BUDGET.......83600
     3   'SINKS',11X,3(1X,1PE15.7)                                       BUDGET.......83700
     4   /13X,'GAIN/LOSS OF ENERGY IN LAKES THROUGH INFLOWS/OUTFLOWS ',  BUDGET.......83800
     5   'AT SPEC. P NODES',1X,3(1X,1PE15.7)                             BUDGET.......83900
     6   /13X,'GAIN/LOSS OF ENERGY IN LAKES THROUGH INFLOWS/OUTFL. ',    BUDGET.......84000
     7   'AT GEN.-FLOW NODES',1X,3(1X,1PE15.7)                           BUDGET.......84100
     9   /13X,'GAIN/LOSS OF ENERGY IN LAKES THROUGH ENERGY SOURCES ',    BUDGET.......84200
     T   'AND SINKS',10X,3(1X,1PE15.7)                                   BUDGET.......84300
     1   /13X,'GAIN/LOSS OF ENERGY IN LAKES AT SPECIFIED TEMPERATURE ',  BUDGET.......84400
     2   'NODES',12X,3(1X,1PE15.7)                                       BUDGET.......84500
     3   /13X,'GAIN/LOSS OF ENERGY IN LAKES AT GEN.-TRANSPORT NODES',    BUDGET.......84600
     4   19X,3(1X,1PE15.7)/84X,3(2X,14('-'))                             BUDGET.......84700
     5   /13X,'TOTAL RATE OF GAIN/LOSS OF ENERGY IN LAKES',29X,          BUDGET.......84800
     5   3(1X,1PE15.7)                                                   BUDGET.......84900
     6   /16X,' THROUGH FLOWS & SOURCES/SINKS')                          BUDGET.......85000
      END IF                                                             BUDGET.......85100
C                                                                        BUDGET.......85200
 1665 CONTINUE                                                           BUDGET.......85300
C                                                                        BUDGET.......85400
C.....SOLUTE/ENERGY AT SPECIFIED FLUID-SOURCE/SINK NODES                 BUDGET.......85500
      NSOPI=NSOP-1                                                       BUDGET.......85600
      IF(NSOPI.EQ.0) GOTO 2000                                           BUDGET.......85700
      IF (LAKUSD) THEN                                                   BUDGET.......85800
         IF(ME) 1669,1669,1679                                           BUDGET.......85900
 1669    WRITE(K3,1670)                                                  BUDGET.......86000
 1670    FORMAT(///22X,'SOLUTE SOURCES OR SINKS AT FLUID SOURCES AND ',  BUDGET.......86100
     1      'SINKS'                                                      BUDGET.......86200
     2      //22X,' NODE',2(8X,'SOURCE(+)/SINK(-)'),16X,'RUNOFF(+)'      BUDGET.......86300
     3      /33X,'TO/FROM GROUNDWATER',3X,'DIRECTLY TO/FROM LAKES',      BUDGET.......86400
     4      17X,'TO LAKES'                                               BUDGET.......86500
     5      /27X,3(5X,'(SOLUTE MASS/SECOND)')//)                         BUDGET.......86600
         GOTO 1780                                                       BUDGET.......86700
 1679    WRITE(K3,1680)                                                  BUDGET.......86800
 1680    FORMAT(///22X,'ENERGY SOURCES OR SINKS AT FLUID SOURCES AND ',  BUDGET.......86900
     1      'SINKS'                                                      BUDGET.......87000
     2      //22X,' NODE',2(8X,'SOURCE(+)/SINK(-)'),16X,'RUNOFF(+)'      BUDGET.......87100
     3      /33X,'TO/FROM GROUNDWATER',3X,'DIRECTLY TO/FROM LAKES',      BUDGET.......87200
     4      17X,'TO LAKES'                                               BUDGET.......87300
     5      /27X,3(10X,'(ENERGY/SECOND)')//)                             BUDGET.......87400
      ELSE                                                               BUDGET.......87500
         IF(ME) 1749,1749,1759                                           BUDGET.......87600
 1749    WRITE(K3,1750)                                                  BUDGET.......87700
 1750    FORMAT(///22X,'SOLUTE SOURCES OR SINKS AT FLUID SOURCES AND ',  BUDGET.......87800
     1      'SINKS'//22X,' NODE',8X,'SOURCE(+)/SINK(-)'/32X,             BUDGET.......87900
     2      '(SOLUTE MASS/SECOND)'/)                                     BUDGET.......88000
         GOTO 1780                                                       BUDGET.......88100
 1759    WRITE(K3,1760)                                                  BUDGET.......88200
 1760    FORMAT(///22X,'ENERGY SOURCES OR SINKS AT FLUID SOURCES AND ',  BUDGET.......88300
     1      'SINKS'//22X,' NODE',8X,'SOURCE(+)/SINK(-)'/37X,             BUDGET.......88400
     2      '(ENERGY/SECOND)'/)                                          BUDGET.......88500
      END IF                                                             BUDGET.......88600
 1780 DO 1900 IQP=1,NSOPI                                                BUDGET.......88700
      I=IABS(IQSOP(IQP))                                                 BUDGET.......88800
      IF (.NOT.LKBCSOP(IQP)) THEN                                        BUDGET.......88900
         WRITE(K3,450) I, 0D0, 0D0, 0D0                                  BUDGET.......89000
      ELSE                                                               BUDGET.......89100
         CALL BUDSOP(IQP,QINVAL,QIUVAL,QEXGW,QEXLK,QEXRO,                BUDGET.......89200
     1      QUEXGW,QUEXLK,QUEXRO,UEX)                                    BUDGET.......89300
         IF (LAKUSD) THEN                                                BUDGET.......89400
            WRITE(K3,450) I,QUEXGW,QUEXLK,QUEXRO                         BUDGET.......89500
         ELSE                                                            BUDGET.......89600
            WRITE(K3,450) I,QIUVAL                                       BUDGET.......89700
         END IF                                                          BUDGET.......89800
      END IF                                                             BUDGET.......89900
 1900 CONTINUE                                                           BUDGET.......90000
C                                                                        BUDGET.......90100
C.....SOLUTE/ENERGY AT SPECIFIED-PRESSURE NODES                          BUDGET.......90200
 2000 IF(NPBC.EQ.0) GOTO 3000                                            BUDGET.......90300
      IF (LAKUSD) THEN                                                   BUDGET.......90400
         IF(ME) 2090,2090,2150                                           BUDGET.......90500
 2090    WRITE(K3,2100)                                                  BUDGET.......90600
 2100    FORMAT(///22X,'SOLUTE SOURCES OR SINKS DUE TO FLUID INFLOWS ',  BUDGET.......90700
     1      'OR OUTFLOWS AT POINTS OF SPECIFIED PRESSURE'                BUDGET.......90800
     2      //22X,' NODE',2(8X,'SOURCE(+)/SINK(-)'),16X,'RUNOFF(+)'      BUDGET.......90900
     3      /33X,'TO/FROM GROUNDWATER',3X,'DIRECTLY TO/FROM LAKES',      BUDGET.......91000
     4      17X,'TO LAKES'                                               BUDGET.......91100
     5      /27X,3(5X,'(SOLUTE MASS/SECOND)')//)                         BUDGET.......91200
         GOTO 2390                                                       BUDGET.......91300
 2150    WRITE(K3,2160)                                                  BUDGET.......91400
 2160    FORMAT(///22X,'ENERGY SOURCES OR SINKS DUE TO FLUID INFLOWS ',  BUDGET.......91500
     1      'OR OUTFLOWS AT POINTS OF SPECIFIED PRESSURE'                BUDGET.......91600
     2      //22X,' NODE',2(8X,'SOURCE(+)/SINK(-)'),16X,'RUNOFF(+)'      BUDGET.......91700
     3      /33X,'TO/FROM GROUNDWATER',3X,'DIRECTLY TO/FROM LAKES',      BUDGET.......91800
     4      17X,'TO LAKES'                                               BUDGET.......91900
     5      /27X,3(10X,'(ENERGY/SECOND)')//)                             BUDGET.......92000
      ELSE                                                               BUDGET.......92100
         IF(ME) 2190,2190,2250                                           BUDGET.......92200
 2190    WRITE(K3,2200)                                                  BUDGET.......92300
 2200    FORMAT(///22X,'SOLUTE SOURCES OR SINKS DUE TO FLUID INFLOWS ',  BUDGET.......92400
     1      'OR OUTFLOWS AT POINTS OF SPECIFIED PRESSURE'//22X,' NODE',  BUDGET.......92500
     2      8X,'SOURCE(+)/SINK(-)'/32X,'(SOLUTE MASS/SECOND)'/)          BUDGET.......92600
         GOTO 2390                                                       BUDGET.......92700
 2250    WRITE(K3,2260)                                                  BUDGET.......92800
 2260    FORMAT(///22X,'ENERGY SOURCES OR SINKS DUE TO FLUID INFLOWS ',  BUDGET.......92900
     1      'OR OUTFLOWS AT POINTS OF SPECIFIED PRESSURE'//22X,' NODE',  BUDGET.......93000
     2      8X,'SOURCE(+)/SINK(-)'/37X,'(ENERGY/SECOND)'/)               BUDGET.......93100
      END IF                                                             BUDGET.......93200
 2390 DO 2400 IP=1,NPBC                                                  BUDGET.......93300
      I=IABS(IPBC(IP))                                                   BUDGET.......93400
      IF ((IBCPBC(IP).EQ.2).OR.(.NOT.LKBCPBC(IP))) THEN                  BUDGET.......93500
         WRITE(K3,450) I, 0D0, 0D0, 0D0                                  BUDGET.......93600
      ELSE                                                               BUDGET.......93700
         CALL BUDPBC(IP,QPBC,QUPBC,QEXGW,QEXLK,QEXRO,                    BUDGET.......93800
     1      QUEXGW,QUEXLK,QUEXRO,UEX,PEX)                                BUDGET.......93900
         IF (LAKUSD) THEN                                                BUDGET.......94000
            WRITE(K3,450) I,QUEXGW,QUEXLK,QUEXRO                         BUDGET.......94100
         ELSE                                                            BUDGET.......94200
            WRITE(K3,450) I,QUPBC                                        BUDGET.......94300
         END IF                                                          BUDGET.......94400
      END IF                                                             BUDGET.......94500
 2400 CONTINUE                                                           BUDGET.......94600
C                                                                        BUDGET.......94700
C.....SOLUTE/ENERGY AT GENERALIZED-FLOW NODES                            BUDGET.......94800
 3000 IF(NPBG.EQ.0) GOTO 4000                                            BUDGET.......94900
      IF (LAKUSD) THEN                                                   BUDGET.......95000
         IF(ME) 3090,3090,3150                                           BUDGET.......95100
 3090    WRITE(K3,3100)                                                  BUDGET.......95200
 3100    FORMAT(///22X,'SOLUTE SOURCES OR SINKS DUE TO FLUID INFLOWS ',  BUDGET.......95300
     1      'OR OUTFLOWS AT POINTS OF GENERALIZED FLOW'                  BUDGET.......95400
     2      //22X,' NODE',2(8X,'SOURCE(+)/SINK(-)'),16X,'RUNOFF(+)'      BUDGET.......95500
     3      /33X,'TO/FROM GROUNDWATER',3X,'DIRECTLY TO/FROM LAKES',      BUDGET.......95600
     4      17X,'TO LAKES'                                               BUDGET.......95700
     5      /27X,3(5X,'(SOLUTE MASS/SECOND)')//)                         BUDGET.......95800
         GOTO 3390                                                       BUDGET.......95900
 3150    WRITE(K3,3160)                                                  BUDGET.......96000
 3160    FORMAT(///22X,'ENERGY SOURCES OR SINKS DUE TO FLUID INFLOWS ',  BUDGET.......96100
     1      'OR OUTFLOWS AT POINTS OF GENERALIZED FLOW'                  BUDGET.......96200
     2      //22X,' NODE',2(8X,'SOURCE(+)/SINK(-)'),16X,'RUNOFF(+)'      BUDGET.......96300
     3      /33X,'TO/FROM GROUNDWATER',3X,'DIRECTLY TO/FROM LAKES',      BUDGET.......96400
     4      17X,'TO LAKES'                                               BUDGET.......96500
     5      /27X,3(10X,'(ENERGY/SECOND)')//)                             BUDGET.......96600
      ELSE                                                               BUDGET.......96700
         IF(ME) 3190,3190,3250                                           BUDGET.......96800
 3190    WRITE(K3,3200)                                                  BUDGET.......96900
 3200    FORMAT(///22X,'SOLUTE SOURCES OR SINKS DUE TO FLUID INFLOWS ',  BUDGET.......97000
     1      'OR OUTFLOWS AT POINTS OF GENERALIZED FLOW'//22X,' NODE',8X, BUDGET.......97100
     2      'SOURCE(+)/SINK(-)'/32X,'(SOLUTE MASS/SECOND)'/)             BUDGET.......97200
         GOTO 3390                                                       BUDGET.......97300
 3250    WRITE(K3,3260)                                                  BUDGET.......97400
 3260    FORMAT(///22X,'ENERGY SOURCES OR SINKS DUE TO FLUID INFLOWS ',  BUDGET.......97500
     1      'OR OUTFLOWS AT POINTS OF GENERALIZED FLOW'//22X,' NODE',8X, BUDGET.......97600
     2      'SOURCE(+)/SINK(-)'/37X,'(ENERGY/SECOND)'/)                  BUDGET.......97700
      END IF                                                             BUDGET.......97800
 3390 DO 3400 IPG=1,NPBG                                                 BUDGET.......97900
      I=IABS(IPBG(IPG))                                                  BUDGET.......98000
      IF ((IBCPBG(IPG).EQ.2).OR.(.NOT.LKBCPBG(IPG))) THEN                BUDGET.......98100
         WRITE(K3,450) I, 0D0, 0D0, 0D0                                  BUDGET.......98200
      ELSE                                                               BUDGET.......98300
         CALL BUDPBG(IPG,QPBG,QUPBG,QEXGW,QEXLK,QEXRO,                   BUDGET.......98400
     1      QUEXGW,QUEXLK,QUEXRO,UEX,PEX1,PEX2)                          BUDGET.......98500
         IF (LAKUSD) THEN                                                BUDGET.......98600
            WRITE(K3,450) I,QUEXGW,QUEXLK,QUEXRO                         BUDGET.......98700
         ELSE                                                            BUDGET.......98800
            WRITE(K3,450) I,QUPBG                                        BUDGET.......98900
         END IF                                                          BUDGET.......99000
      END IF                                                             BUDGET.......99100
 3400 CONTINUE                                                           BUDGET.......99200
C                                                                        BUDGET.......99300
C.....SOLUTE/ENERGY AT SPECIFIED SOLUTE/ENERGY-SOURCE/SINK NODES         BUDGET.......99400
C        (PRINT ONLY FOR NODES THAT ARE SET IN BCTIME OR CAN BE          BUDGET.......99500
C        AFFECTED BY LAKES)                                              BUDGET.......99600
 4000 IF ((IQSOUT.NE.-1).AND.(.NOT.LAKUSD)) GOTO 4500                    BUDGET.......99700
      NSOUI=NSOU-1                                                       BUDGET.......99800
      IF (NSOUI.EQ.0) GOTO 4500                                          BUDGET.......99900
      LAKELGSOU = .FALSE.                                                BUDGET......100000
      LAKELGSOUANY = .FALSE.                                             ! fix civ 200722b      BUDGET......100100
      IF (LAKUSD) THEN                                                   BUDGET......100200
         DO 4040 IQU=1,NSOUI                                             BUDGET......100300
            I=IQSOU(IQU)                                                 BUDGET......100400
            ISURF = ISURFACE(IABS(I))                                    BUDGET......100500
            IF (ISURF.EQ.0) CYCLE                                        BUDGET......100600
            IF (LAKNOD(ISURF)%LAKEOK) THEN                               BUDGET......100700
               LAKELGSOU(IQU) = .TRUE.                                   BUDGET......100800
               LAKELGSOUANY = .TRUE.                                     BUDGET......100900
            END IF                                                       BUDGET......101000
 4040    CONTINUE                                                        BUDGET......101100
      END IF                                                             BUDGET......101200
      IF ((IQSOUT.EQ.-1).AND.LAKELGSOUANY) THEN                          BUDGET......101300
         IF (ME.EQ.-1) THEN                                              BUDGET......101400
         WRITE(K3,4100)                                                  BUDGET......101500
 4100    FORMAT(///22X,'TIME-DEPENDENT SOLUTE SOURCES OR SINKS THAT ',   BUDGET......101600
     1      'ARE SET IN SUBROUTINE BCTIME'                               BUDGET......101700
     1      /22X,'AND/OR SPECIFIED SOLUTE ',                             BUDGET......101800
     2      'SOURCES OR SINKS THAT CAN BE MODIFIED BY LAKES')            BUDGET......101900
         ELSE                                                            BUDGET......102000
         WRITE(K3,4101)                                                  BUDGET......102100
 4101    FORMAT(///22X,'TIME-DEPENDENT ENERGY SOURCES OR SINKS THAT ',   BUDGET......102200
     1      'ARE SET IN SUBROUTINE BCTIME'                               BUDGET......102300
     1      /22X,'AND/OR SPECIFIED ENERGY ',                             BUDGET......102400
     2      'SOURCES OR SINKS THAT CAN BE MODIFIED BY LAKES')            BUDGET......102500
         END IF                                                          BUDGET......102600
      ELSE IF (IQSOPT.EQ.-1) THEN                                        BUDGET......102700
         IF (ME.EQ.-1) THEN                                              BUDGET......102800
         WRITE(K3,4110)                                                  BUDGET......102900
 4110    FORMAT(///22X,'TIME-DEPENDENT SOLUTE SOURCES OR SINKS THAT ',   BUDGET......103000
     1      'ARE SET IN SUBROUTINE BCTIME')                              BUDGET......103100
         ELSE                                                            BUDGET......103200
         WRITE(K3,4111)                                                  BUDGET......103300
 4111    FORMAT(///22X,'TIME-DEPENDENT ENERGY SOURCES OR SINKS THAT ',   BUDGET......103400
     1      'ARE SET IN SUBROUTINE BCTIME')                              BUDGET......103500
         END IF                                                          BUDGET......103600
      ELSE IF (LAKELGSOPANY) THEN                                        BUDGET......103700
         IF (ME.EQ.-1) THEN                                              BUDGET......103800
         WRITE(K3,4120)                                                  BUDGET......103900
 4120    FORMAT(///22X,'SPECIFIED SOLUTE SOURCES OR SINKS THAT CAN ',    BUDGET......104000
     1      'BE MODIFIED BY LAKES')                                      BUDGET......104100
         ELSE                                                            BUDGET......104200
         WRITE(K3,4121)                                                  BUDGET......104300
 4121    FORMAT(///22X,'SPECIFIED ENERGY SOURCES OR SINKS THAT CAN ',    BUDGET......104400
     1      'BE MODIFIED BY LAKES')                                      BUDGET......104500
         END IF                                                          BUDGET......104600
      ELSE                                                               BUDGET......104700
         GOTO 600                                                        BUDGET......104800
      END IF                                                             BUDGET......104900
      IF (LAKELGSOUANY) THEN                                             BUDGET......105000
         IF (ME.EQ.-1) THEN                                              BUDGET......105100
         WRITE(K3,4130)                                                  BUDGET......105200
 4130    FORMAT(//22X,' NODE',2(10X,'GAIN(+)/LOSS(-)')                   BUDGET......105300
     1      /27X,6X,'TO/FROM GROUNDWATER',12X,'TO/FROM LAKES',           BUDGET......105400
     1      /27X,2(5X,'(SOLUTE MASS/SECOND)')//)                         BUDGET......105500
         ELSE                                                            BUDGET......105600
         WRITE(K3,4131)                                                  BUDGET......105700
 4131    FORMAT(//22X,' NODE',2(10X,'GAIN(+)/LOSS(-)')                   BUDGET......105800
     1      /27X,6X,'TO/FROM GROUNDWATER',12X,'TO/FROM LAKES',           BUDGET......105900
     1      /27X,2(5X,'     (ENERGY/SECOND)')//)                         BUDGET......106000
         END IF                                                          BUDGET......106100
         DO 4300 IQU=1,NSOUI                                             BUDGET......106200
         I=IQSOU(IQU)                                                    BUDGET......106300
         IF ((IBCSOU(IQU).EQ.-1).OR.LAKELGSOU(IQU)) THEN                 BUDGET......106400
            IF (.NOT.LKBCSOU(IQU)) THEN                                  BUDGET......106500
               WRITE(K3,450) IABS(I), 0D0, 0D0                           BUDGET......106600
            ELSE                                                         BUDGET......106700
               CALL BUDSOU(IQU,QUINVAL,QUEXGW,QUEXLK)                    BUDGET......106800
               WRITE(K3,450) I,QUEXGW,QUEXLK                             BUDGET......106900
            END IF                                                       BUDGET......107000
         END IF                                                          BUDGET......107100
 4300    CONTINUE                                                        BUDGET......107200
      ELSE                                                               BUDGET......107300
         IF (ME.EQ.-1) THEN                                              BUDGET......107400
         WRITE(K3,4330)                                                  BUDGET......107500
 4330    FORMAT(//22X,' NODE',10X,'GAIN(+)/LOSS(-)'                      BUDGET......107600
     1      /30X,'  (SOLUTE MASS/SECOND)'//)                             BUDGET......107700
         ELSE                                                            BUDGET......107800
         WRITE(K3,4331)                                                  BUDGET......107900
 4331    FORMAT(//22X,' NODE',10X,'GAIN(+)/LOSS(-)'                      BUDGET......108000
     1      /30X,'  (ENERGY/SECOND)'//)                                  BUDGET......108100
         END IF                                                          BUDGET......108200
         DO 4400 IQU=1,NSOUI                                             BUDGET......108300
         I=IQSOU(IQU)                                                    BUDGET......108400
         IF (IBCSOU(IQU).EQ.-1) THEN                                     BUDGET......108500
            CALL BUDSOU(IQU,QUINVAL,QUEXGW,QUEXLK)                       BUDGET......108600
            WRITE(K3,450) I,QUINVAL                                      BUDGET......108700
         END IF                                                          BUDGET......108800
 4400    CONTINUE                                                        BUDGET......108900
      END IF                                                             BUDGET......109000
C                                                                        BUDGET......109100
C.....SOLUTE/ENERGY AT SPECIFIED-CONC/TEMP NODES                         BUDGET......109200
 4500 IF(NUBC.EQ.0) GOTO 5500                                            BUDGET......109300
      IF (LAKUSD) THEN                                                   BUDGET......109400
         IF(ME) 4600,4600,4655                                           BUDGET......109500
 4600    WRITE(K3,4650)                                                  BUDGET......109600
 4650    FORMAT(///22X,'SOLUTE SOURCES OR SINKS DUE TO SPECIFIED ',      BUDGET......109700
     1      'CONCENTRATIONS'                                             BUDGET......109800
     2      //22X,' NODE',2(10X,'GAIN(+)/LOSS(-)')                       BUDGET......109900
     3      /33X,'TO/FROM GROUNDWATER',12X,'TO/FROM LAKES',              BUDGET......110000
     4      /27X,2(5X,'(SOLUTE MASS/SECOND)')/)                          BUDGET......110100
         GOTO 4690                                                       BUDGET......110200
 4655    WRITE(K3,4660)                                                  BUDGET......110300
 4660    FORMAT(///22X,'ENERGY SOURCES OR SINKS DUE TO SPECIFIED ',      BUDGET......110400
     1      'TEMPERATURES'                                               BUDGET......110500
     2      //22X,' NODE',2(10X,'GAIN(+)/LOSS(-)')                       BUDGET......110600
     3      /33X,'TO/FROM GROUNDWATER',12X,'TO/FROM LAKES',              BUDGET......110700
     4      /27X,2(10X,'(ENERGY/SECOND)')/)                              BUDGET......110800
 4690    CONTINUE                                                        BUDGET......110900
         DO 4700 IU=1,NUBC                                               BUDGET......111000
         IUP=IU+NPBC                                                     BUDGET......111100
         I=IABS(IUBC(IUP))                                               BUDGET......111200
         IF ((IBCUBC(IUP).EQ.2).OR.(.NOT.LKBCUBC(IUP))) THEN             BUDGET......111300
            WRITE(K3,450) I, 0D0, 0D0                                    BUDGET......111400
         ELSE                                                            BUDGET......111500
            CALL BUDUBC(IUP,QUBC,QUEXGW,QUEXLK,UEX)                      BUDGET......111600
            WRITE(K3,450) I, QUEXGW, QUEXLK                              BUDGET......111700
         END IF                                                          BUDGET......111800
 4700    CONTINUE                                                        BUDGET......111900
      ELSE                                                               BUDGET......112000
         IF(ME) 4800,4800,4855                                           BUDGET......112100
 4800    WRITE(K3,4850)                                                  BUDGET......112200
 4850    FORMAT(///22X,'SOLUTE SOURCES OR SINKS DUE TO SPECIFIED ',      BUDGET......112300
     1      'CONCENTRATIONS'//22X,' NODE',10X,'GAIN(+)/LOSS(-)'/30X,     BUDGET......112400
     2      '  (SOLUTE MASS/SECOND)'/)                                   BUDGET......112500
         GOTO 4890                                                       BUDGET......112600
 4855    WRITE(K3,4860)                                                  BUDGET......112700
 4860    FORMAT(///22X,'ENERGY SOURCES OR SINKS DUE TO SPECIFIED ',      BUDGET......112800
     1      'TEMPERATURES'//22X,' NODE',10X,'GAIN(+)/LOSS(-)'/35X,       BUDGET......112900
     2      '  (ENERGY/SECOND)'/)                                        BUDGET......113000
 4890    CONTINUE                                                        BUDGET......113100
         DO 4900 IU=1,NUBC                                               BUDGET......113200
         IUP=IU+NPBC                                                     BUDGET......113300
         I=IABS(IUBC(IUP))                                               BUDGET......113400
         IF (IBCUBC(IUP).EQ.2) THEN                                      BUDGET......113500
            WRITE(K3,450) I, 0D0                                         BUDGET......113600
         ELSE                                                            BUDGET......113700
            CALL BUDUBC(IUP,QUBC,QUEXGW,QUEXLK,UEX)                      BUDGET......113800
            WRITE(K3,450) I, QUBC                                        BUDGET......113900
         END IF                                                          BUDGET......114000
 4900    CONTINUE                                                        BUDGET......114100
      END IF                                                             BUDGET......114200
C                                                                        BUDGET......114300
C.....SOLUTE/ENERGY AT GENERALIZED-TRANSPORT NODES                       BUDGET......114400
 5500 IF(NUBG.EQ.0) GOTO 6500                                            BUDGET......114500
      IF (LAKUSD) THEN                                                   BUDGET......114600
         IF(ME) 5600,5600,5655                                           BUDGET......114700
 5600    WRITE(K3,5650)                                                  BUDGET......114800
 5650    FORMAT(///22X,'SOLUTE SOURCES OR SINKS DUE TO GENERALIZED-',    BUDGET......114900
     1      'TRANSPORT CONDITIONS'                                       BUDGET......115000
     2      //22X,' NODE',2(10X,'GAIN(+)/LOSS(-)')                       BUDGET......115100
     3      /33X,'TO/FROM GROUNDWATER',12X,'TO/FROM LAKES',              BUDGET......115200
     4      /27X,2(5X,'(SOLUTE MASS/SECOND)')/)                          BUDGET......115300
         GOTO 5690                                                       BUDGET......115400
 5655    WRITE(K3,5660)                                                  BUDGET......115500
 5660    FORMAT(///22X,'ENERGY SOURCES OR SINKS DUE TO GENERALIZED-',    BUDGET......115600
     1      'TRANSPORT CONDITIONS'                                       BUDGET......115700
     2      //22X,' NODE',2(10X,'GAIN(+)/LOSS(-)')                       BUDGET......115800
     3      /33X,'TO/FROM GROUNDWATER',12X,'TO/FROM LAKES',              BUDGET......115900
     4      /27X,2(10X,'(ENERGY/SECOND)')/)                              BUDGET......116000
 5690    CONTINUE                                                        BUDGET......116100
         DO 5700 IUG=1,NUBG                                              BUDGET......116200
         I=IABS(IUBG(IUG))                                               BUDGET......116300
         IF ((IBCUBG(IUG).EQ.2).OR.(.NOT.LKBCUBG(IUG))) THEN             BUDGET......116400
            WRITE(K3,450) I, 0D0, 0D0                                    BUDGET......116500
         ELSE                                                            BUDGET......116600
            CALL BUDUBG(IUG,QUBG,QUEXGW,QUEXLK,UEX1,UEX2,QUEX1,QUEX2)    BUDGET......116700
            WRITE(K3,450) I, QUEXGW, QUEXLK                              BUDGET......116800
         END IF                                                          BUDGET......116900
 5700    CONTINUE                                                        BUDGET......117000
      ELSE                                                               BUDGET......117100
         IF(ME) 5800,5800,5855                                           BUDGET......117200
 5800    WRITE(K3,5850)                                                  BUDGET......117300
 5850    FORMAT(///22X,'SOLUTE SOURCES OR SINKS DUE TO GENERALIZED-',    BUDGET......117400
     1      'TRANSPORT CONDITIONS'//22X,' NODE',10X,'GAIN(+)/LOSS(-)'    BUDGET......117500
     2      /30X,'  (SOLUTE MASS/SECOND)'/)                              BUDGET......117600
         GOTO 5890                                                       BUDGET......117700
 5855    WRITE(K3,5860)                                                  BUDGET......117800
 5860    FORMAT(///22X,'ENERGY SOURCES OR SINKS DUE TO GENERALIZED-',    BUDGET......117900
     1      'TRANSPORT CONDITIONS'//22X,' NODE',10X,'GAIN(+)/LOSS(-)'    BUDGET......118000
     2      /35X,'  (ENERGY/SECOND)'/)                                   BUDGET......118100
 5890    CONTINUE                                                        BUDGET......118200
         DO 5900 IUG=1,NUBG                                              BUDGET......118300
         I=IABS(IUBG(IUG))                                               BUDGET......118400
         IF (IBCUBG(IUG).EQ.2) THEN                                      BUDGET......118500
            WRITE(K3,450) I, 0D0                                         BUDGET......118600
         ELSE                                                            BUDGET......118700
            CALL BUDUBG(IUG,QUBG,QUEXGW,QUEXLK,UEX1,UEX2,QUEX1,QUEX2)    BUDGET......118800
            WRITE(K3,450) I, QUBG                                        BUDGET......118900
         END IF                                                          BUDGET......119000
 5900    CONTINUE                                                        BUDGET......119100
      END IF                                                             BUDGET......119200
C                                                                        BUDGET......119300
C                                                                        BUDGET......119400
 6500 CONTINUE                                                           BUDGET......119500
C                                                                        BUDGET......119600
      RETURN                                                             BUDGET......119700
      END                                                                BUDGET......119800
C                                                                        BUDGET......119900
C     SUBROUTINE        B  U  D  P  B  C           SUTRA VERSION 3.0     BUDPBC.........100
C                                                                        BUDPBC.........200
C *** PURPOSE :                                                          BUDPBC.........300
C ***  TO COMPUTE THE FLOWS OF WATER AND SOLUTE/ENERGY IN OR OUT OF A    BUDPBC.........400
C ***  SPECIFIED-PRESSURE NODE, AND TO KEEP TRACK OF LAKE EXCHANGES,     BUDPBC.........500
C ***  IF APPLICABLE.                                                    BUDPBC.........600
C                                                                        BUDPBC.........700
      SUBROUTINE BUDPBC(IP,QPBC,QUPBC,QEXGW,QEXLK,QEXRO,                 BUDPBC.........800
     1   QUEXGW,QUEXLK,QUEXRO,UEX,PEX,II,ISURFI)                         BUDPBC.........900
      USE LARR                                                           BUDPBC........1000
      USE ALLARR, ONLY : UVEC,IPBC,UBC,PBC,PVEC,PZERO,GNUPP,QPLITR,      BUDPBC........1100
     1   IBCPBC                                                          BUDPBC........1200
      IMPLICIT DOUBLE PRECISION (A-H, O-Z)                               BUDPBC........1300
      LOGICAL LAKELG,LAKUSD                                              BUDPBC........1400
      INTEGER, OPTIONAL :: II,ISURFI                                     BUDPBC........1500
      COMMON /DIMS/ NN,NE,NIN,NBI,NCBI,NB,NBHALF,NPBC,NUBC,              BUDPBC........1600
     1   NSOP,NSOU,NBCN,NPBG,NUBG,NCIDB                                  BUDPBC........1700
      COMMON /DIMSRF/ MAXCON, NNSURF, NNVERT                             BUDPBC........1800
      COMMON /LAKU/ LAKUSD                                               BUDPBC........1900
      COMMON /PARAMS/ COMPFL,COMPMA,DRWDU,CW,CS,RHOS,SIGMAW,SIGMAS,      BUDPBC........2000
     1   RHOW0,URHOW0,VISC0,PRODF1,PRODS1,PRODF0,PRODS0,CHI1,CHI2        BUDPBC........2100
      COMMON /SOLVI/ KSOLVP,KSOLVU,NN1,NN2,NN3                           BUDPBC........2200
C                                                                        BUDPBC........2300
C.....COMPUTE THE FLOWS OF WATER AND SOLUTE/ENERGY IN OR OUT OF A        BUDPBC........2400
C        SPECIFIED-PRESSURE NODE.  KEEP TRACK OF LAKE EXCHANGES,         BUDPBC........2500
C        IF APPLICABLE.                                                  BUDPBC........2600
C                                                                        BUDPBC........2700
C.....NOTE: MULTIPLYING TEMPERATURES BY CW CONVERTS THEM TO              BUDPBC........2800
C        SPECIFIC ENERGY CONTENTS IN THE CASE OF ENERGY TRANSPORT.       BUDPBC........2900
C        (UWO IS ALREADY AN ENERGY CONTENT, SO IT IS NOT CONVERTED.)     BUDPBC........3000
C        NO EFFECT IN THE CASE OF SOLUTE TRANSPORT, SINCE CW=1.          BUDPBC........3100
C                                                                        BUDPBC........3200
      IF (PRESENT(II)) THEN                                              BUDPBC........3300
C........THIS CALL TO THIS SUBROUTINE IS FROM LAKES, SO I AND ISURF      BUDPBC........3400
C           ARE PASSED IN (ALONG WITH IP). SET LAKELG TO .TRUE.          BUDPBC........3500
         I = II                                                          BUDPBC........3600
         ISURF = ISURFI                                                  BUDPBC........3700
         LAKELG = .TRUE.                                                 BUDPBC........3800
      ELSE                                                               BUDPBC........3900
C........THIS CALL TO THIS SUBROUTINE IS NOT FROM LAKES, SO DETERMINE    BUDPBC........4000
C           I, ISURF, AND LAKELG (GIVEN IP).                             BUDPBC........4100
         I=IABS(IPBC(IP))                                                BUDPBC........4200
         ISURF = 0                                                       BUDPBC........4300
         LAKELG = .FALSE.                                                BUDPBC........4400
         IF (LAKUSD) THEN                                                BUDPBC........4500
            ISURF = ISURFACE(I)                                          BUDPBC........4600
            IF (ISURF.NE.0) LAKELG = LAKNOD(ISURF)%LAKEOK                BUDPBC........4700
         END IF                                                          BUDPBC........4800
      END IF                                                             BUDPBC........4900
C                                                                        BUDPBC........5000
      IF (ISLAKE(I)) THEN                                                BUDPBC........5100
C........THIS IS A LAKE NODE (INUNDATED).                                BUDPBC........5200
C                                                                        BUDPBC........5300
C........GET FLOW AND ASSOCIATED CONC/TEMP, DEPENDING ON WHETHER         BUDPBC........5400
C           GROUNDWATER IS RECHARGING OR DISCHARGING.                    BUDPBC........5500
         PLAK = PLK(ISURF)                                               BUDPBC........5600
         PEX = PBC(IP) + PLAK                                            BUDPBC........5700
         CALL GETQPL(1,IP,I,PVEC,PLAK,QPBC)                              BUDPBC........5800
         QEXGW = QPBC                                                    BUDPBC........5900
         QEXLK = -QPBC                                                   BUDPBC........6000
         QEXRO = 0D0                                                     BUDPBC........6100
         IF (QPLITR(IP).GT.0D0) THEN                                     BUDPBC........6200
            QUPBC = QPLITR(IP)*CW*ULKITR(ISURF)                          BUDPBC........6300
            UEX = ULKITR(ISURF)                                          BUDPBC........6400
         ELSE                                                            BUDPBC........6500
            QUPBC = QPLITR(IP)*CW*UVEC(I)                                BUDPBC........6600
            UEX = UVEC(I)                                                BUDPBC........6700
         END IF                                                          BUDPBC........6800
         QUEXGW = QUPBC                                                  BUDPBC........6900
         QUEXLK = -QUPBC                                                 BUDPBC........7000
         QUEXRO = 0D0                                                    BUDPBC........7100
C                                                                        BUDPBC........7200
      ELSE                                                               BUDPBC........7300
C........THIS IS NOT A LAKE NODE (NOT INUNDATED).                        BUDPBC........7400
C                                                                        BUDPBC........7500
C........GET FLOW AND ASSOCIATED CONC/TEMP, DEPENDING ON WHETHER         BUDPBC........7600
C           GROUNDWATER IS RECHARGING OR DISCHARGING.                    BUDPBC........7700
         PLAK = 0D0                                                      BUDPBC........7800
         PEX = PBC(IP)                                                   BUDPBC........7900
         CALL GETQPL(1,IP,I,PVEC,PLAK,QPBC)                              BUDPBC........8000
         QEXGW = QPBC                                                    BUDPBC........8100
         QEXLK = 0D0                                                     BUDPBC........8200
         QEXRO = 0D0                                                     BUDPBC........8300
         IF (LAKELG) THEN                                                BUDPBC........8400
            LK = LAKNOD(ISURF)%KLUSTR                                    BUDPBC........8500
            IF (QPBC.GT.0D0) THEN                                        BUDPBC........8600
               QEXRO = FRRO(LK)*QPBC                                     BUDPBC........8700
            ELSE                                                         BUDPBC........8800
               QEXRO = -FDRO(LK)*QPBC                                    BUDPBC........8900
            END IF                                                       BUDPBC........9000
         END IF                                                          BUDPBC........9100
         QUEXLK = 0D0                                                    BUDPBC........9200
         QUEXRO = 0D0                                                    BUDPBC........9300
         IF (QPLITR(IP).GT.0D0) THEN                                     BUDPBC........9400
            QUPBC = QPLITR(IP)*CW*UBC(IP)                                BUDPBC........9500
            UEX = UBC(IP)                                                BUDPBC........9600
            IF (LAKELG) THEN                                             BUDPBC........9700
               LK = LAKNOD(ISURF)%KLUSTR                                 BUDPBC........9800
               QUEXRO = FRRO(LK)*QUPBC                                   BUDPBC........9900
            END IF                                                       BUDPBC.......10000
         ELSE                                                            BUDPBC.......10100
            QUPBC = QPLITR(IP)*CW*UVEC(I)                                BUDPBC.......10200
            UEX = UVEC(I)                                                BUDPBC.......10300
            IF (LAKELG) THEN                                             BUDPBC.......10400
               LK = LAKNOD(ISURF)%KLUSTR                                 BUDPBC.......10500
               QUEXRO = -FDRO(LK)*QUPBC                                  BUDPBC.......10600
            END IF                                                       BUDPBC.......10700
         END IF                                                          BUDPBC.......10800
         QUEXGW = QUPBC                                                  BUDPBC.......10900
C                                                                        BUDPBC.......11000
      END IF                                                             BUDPBC.......11100
C                                                                        BUDPBC.......11200
999   RETURN                                                             BUDPBC.......11300
      END                                                                BUDPBC.......11400
C                                                                        BUDPBC.......11500
C     SUBROUTINE        B  U  D  P  B  G           SUTRA VERSION 3.0     BUDPBG.........100
C                                                                        BUDPBG.........200
C *** PURPOSE :                                                          BUDPBG.........300
C ***  TO COMPUTE THE FLOWS OF WATER AND SOLUTE/ENERGY IN OR OUT OF A    BUDPBG.........400
C ***  GENERALIZED-FLOW NODE, AND TO KEEP TRACK OF LAKE EXCHANGES,       BUDPBG.........500
C ***  IF APPLICABLE.                                                    BUDPBG.........600
C                                                                        BUDPBG.........700
      SUBROUTINE BUDPBG(IPG,QPBG,QUPBG,QEXGW,QEXLK,QEXRO,                BUDPBG.........800
     1   QUEXGW,QUEXLK,QUEXRO,UEX,PEX1,PEX2,II,ISURFI)                   BUDPBG.........900
      USE LARR                                                           BUDPBG........1000
      USE ALLARR, ONLY : UVEC,IPBG,PBG1,PBG2,QPBG1,QPBG2,                BUDPBG........1100
     1   UPBGI,UPBGO,CUPBGO,CPQL1,CPQL2,PVEC,PZERG,GNUPG,QPBGIC,QPGITR,  BUDPBG........1200
     2   IBCPBG,ISPBG,LPBGSP                                             BUDPBG........1300
      IMPLICIT DOUBLE PRECISION (A-H, O-Z)                               BUDPBG........1400
      CHARACTER*80 ERRCOD,CHERR(10)                                      BUDPBG........1500
      DIMENSION INERR(10),RLERR(10)                                      BUDPBG........1600
      LOGICAL LAKELG,LAKUSD                                              BUDPBG........1700
      INTEGER, OPTIONAL :: II,ISURFI                                     BUDPBG........1800
      COMMON /DIMS/ NN,NE,NIN,NBI,NCBI,NB,NBHALF,NPBC,NUBC,              BUDPBG........1900
     1   NSOP,NSOU,NBCN,NPBG,NUBG,NCIDB                                  BUDPBG........2000
      COMMON /DIMSRF/ MAXCON, NNSURF, NNVERT                             BUDPBG........2100
      COMMON /LAKU/ LAKUSD                                               BUDPBG........2200
      COMMON /PARAMS/ COMPFL,COMPMA,DRWDU,CW,CS,RHOS,SIGMAW,SIGMAS,      BUDPBG........2300
     1   RHOW0,URHOW0,VISC0,PRODF1,PRODS1,PRODF0,PRODS0,CHI1,CHI2        BUDPBG........2400
      COMMON /SOLVI/ KSOLVP,KSOLVU,NN1,NN2,NN3                           BUDPBG........2500
C                                                                        BUDPBG........2600
C.....COMPUTE THE FLOWS OF WATER AND SOLUTE/ENERGY IN OR OUT OF A        BUDPBG........2700
C        GENERALIZED-FLOW NODE.  KEEP TRACK OF LAKE EXCHANGES,           BUDPBG........2800
C        IF APPLICABLE.                                                  BUDPBG........2900
C                                                                        BUDPBG........3000
C.....NOTE: MULTIPLYING TEMPERATURES BY CW CONVERTS THEM TO              BUDPBG........3100
C        SPECIFIC ENERGY CONTENTS IN THE CASE OF ENERGY TRANSPORT.       BUDPBG........3200
C        (UWO IS ALREADY AN ENERGY CONTENT, SO IT IS NOT CONVERTED.)     BUDPBG........3300
C        NO EFFECT IN THE CASE OF SOLUTE TRANSPORT, SINCE CW=1.          BUDPBG........3400
C                                                                        BUDPBG........3500
      IF (PRESENT(II)) THEN                                              BUDPBG........3600
C........THIS CALL TO THIS SUBROUTINE IS FROM LAKES, SO I AND ISURF      BUDPBG........3700
C           ARE PASSED IN (ALONG WITH IPG). SET LAKELG TO .TRUE.         BUDPBG........3800
         I = II                                                          BUDPBG........3900
         ISURF = ISURFI                                                  BUDPBG........4000
         LAKELG = .TRUE.                                                 BUDPBG........4100
      ELSE                                                               BUDPBG........4200
C........THIS CALL TO THIS SUBROUTINE IS NOT FROM LAKES, SO DETERMINE    BUDPBG........4300
C           I, ISURF, AND LAKELG (GIVEN IPG).                            BUDPBG........4400
         I=IABS(IPBG(IPG))                                               BUDPBG........4500
         ISURF = 0                                                       BUDPBG........4600
         LAKELG = .FALSE.                                                BUDPBG........4700
         IF (LAKUSD) THEN                                                BUDPBG........4800
            ISURF = ISURFACE(I)                                          BUDPBG........4900
            IF (ISURF.NE.0) LAKELG = LAKNOD(ISURF)%LAKEOK                BUDPBG........5000
         END IF                                                          BUDPBG........5100
      END IF                                                             BUDPBG........5200
C                                                                        BUDPBG........5300
      IF (ISLAKE(I)) THEN                                                BUDPBG........5400
C........THIS IS A LAKE NODE (INUNDATED).                                BUDPBG........5500
C                                                                        BUDPBG........5600
C........GET FLOW AND ASSOCIATED CONC/TEMP, DEPENDING ON WHETHER         BUDPBG........5700
C           GROUNDWATER IS RECHARGING OR DISCHARGING.                    BUDPBG........5800
         NFB = IBCSPG(IPG)                                               BUDPBG........5900
         LIT = ITIPG(NFB)                                                BUDPBG........6000
         IF (LIT.EQ.1) THEN                                              BUDPBG........6100
C...........ACTS ANALOGOUSLY TO A FLUID SOURCE/SINK NODE.                BUDPBG........6200
            PLAK = 0D0                                                   BUDPBG........6300
            CALL GETQPG(1,IPG,I,PVEC,PLAK,QPBG)                          BUDPBG........6400
            QEXGW = 0D0                                                  BUDPBG........6500
            QEXLK = QPBG                                                 BUDPBG........6600
            QEXRO = 0D0                                                  BUDPBG........6700
ccc            IF (QPGITR(I).GT.0D0) THEN                                   BUDPBG........6800
            IF (QPGITR(IPG).GT.0D0) THEN                                 ! fix rbw 200520
               QUPBG = QPGITR(IPG)*CW*UPBGI(IPG)                         BUDPBG........6900
               UEX = UPBGI(IPG)                                          BUDPBG........7000
            ELSE                                                         BUDPBG........7100
               QUPBG = QPGITR(IPG)*CW*ULKITR(ISURF)                      BUDPBG........7200
               UEX = ULKITR(ISURF)                                       BUDPBG........7300
            END IF                                                       BUDPBG........7400
            QUEXGW = 0D0                                                 BUDPBG........7500
            QUEXLK = QUPBG                                               BUDPBG........7600
            QUEXRO = 0D0                                                 BUDPBG........7700
         ELSE IF (LIT.EQ.2) THEN                                         BUDPBG........7800
C...........ACTS ANALOGOUSLY TO A SPECIFIED-PRESSURE NODE.               BUDPBG........7900
            PLAK = PLK(ISURF)                                            BUDPBG........8000
            CALL GETQPG(1,IPG,I,PVEC,PLAK,QPBG)                          BUDPBG........8100
            QEXGW = QPBG                                                 BUDPBG........8200
            QEXLK = -QPBG                                                BUDPBG........8300
            QEXRO = 0D0                                                  BUDPBG........8400
            IF (QPGITR(IPG).GT.0D0) THEN                                 BUDPBG........8500
               QUPBG = QPGITR(IPG)*CW*ULKITR(ISURF)                      BUDPBG........8600
               UEX = ULKITR(ISURF)                                       BUDPBG........8700
            ELSE                                                         BUDPBG........8800
               IF (CUPBGO(IPG).EQ.'DIR') THEN                            BUDPBG........8900
                  UEX = UPBGO(IPG)                                       BUDPBG........9000
               ELSE                                                      BUDPBG........9100
                  UEX = UVEC(I) + UPBGO(IPG)                             BUDPBG........9200
               END IF                                                    BUDPBG........9300
               QUPBG = QPGITR(IPG)*CW*UEX                                BUDPBG........9400
            END IF                                                       BUDPBG........9500
            QUEXGW = QUPBG                                               BUDPBG........9600
            QUEXLK = -QUPBG                                              BUDPBG........9700
            QUEXRO = 0D0                                                 BUDPBG........9800
         ELSE                                                            BUDPBG........9900
            ERRCOD = 'COD-BUDPBG-1'                                      BUDPBG.......10000
            CALL SUTERR(ERRCOD,CHERR,INERR,RLERR)                        BUDPBG.......10100
         END IF                                                          BUDPBG.......10200
C                                                                        BUDPBG.......10300
      ELSE                                                               BUDPBG.......10400
C........THIS IS NOT A LAKE NODE (NOT INUNDATED).                        BUDPBG.......10500
C                                                                        BUDPBG.......10600
C........GET FLOW AND ASSOCIATED CONC/TEMP, DEPENDING ON WHETHER         BUDPBG.......10700
C           GROUNDWATER IS RECHARGING OR DISCHARGING.                    BUDPBG.......10800
         PLAK = 0D0                                                      BUDPBG.......10900
         CALL GETQPG(1,IPG,I,PVEC,PLAK,QPBG)                             BUDPBG.......11000
         QEXGW = QPBG                                                    BUDPBG.......11100
         QEXLK = 0D0                                                     BUDPBG.......11200
         QEXRO = 0D0                                                     BUDPBG.......11300
         IF (LAKELG) THEN                                                BUDPBG.......11400
            LK = LAKNOD(ISURF)%KLUSTR                                    BUDPBG.......11500
            IF (QPBG.GT.0D0) THEN                                        BUDPBG.......11600
               QEXRO = FRRO(LK)*QPBG                                     BUDPBG.......11700
            ELSE                                                         BUDPBG.......11800
               QEXRO = -FDRO(LK)*QPBG                                    BUDPBG.......11900
            END IF                                                       BUDPBG.......12000
         END IF                                                          BUDPBG.......12100
         QUEXLK = 0D0                                                    BUDPBG.......12200
         QUEXRO = 0D0                                                    BUDPBG.......12300
         IF (QPGITR(IPG).GT.0D0) THEN                                    BUDPBG.......12400
            QUPBG = QPGITR(IPG)*CW*UPBGI(IPG)                            BUDPBG.......12500
            UEX = UPBGI(IPG)                                             BUDPBG.......12600
            IF (LAKELG) THEN                                             BUDPBG.......12700
               LK = LAKNOD(ISURF)%KLUSTR                                 BUDPBG.......12800
               QUEXRO = FRRO(LK)*QUPBG                                   BUDPBG.......12900
            END IF                                                       BUDPBG.......13000
         ELSE                                                            BUDPBG.......13100
            IF (CUPBGO(IPG).EQ.'DIR') THEN                               BUDPBG.......13200
               UEX = UPBGO(IPG)                                          BUDPBG.......13300
            ELSE                                                         BUDPBG.......13400
               UEX = UVEC(I) + UPBGO(IPG)                                BUDPBG.......13500
            END IF                                                       BUDPBG.......13600
            QUPBG = QPGITR(IPG)*CW*UEX                                   BUDPBG.......13700
            IF (LAKELG) THEN                                             BUDPBG.......13800
               LK = LAKNOD(ISURF)%KLUSTR                                 BUDPBG.......13900
               QUEXRO = -FDRO(LK)*QUPBG                                  BUDPBG.......14000
            END IF                                                       BUDPBG.......14100
         END IF                                                          BUDPBG.......14200
         QUEXGW = QUPBG                                                  BUDPBG.......14300
C                                                                        BUDPBG.......14400
      END IF                                                             BUDPBG.......14500
C                                                                        BUDPBG.......14600
      PEX1 = PBG1(IPG) + PLAK                                            BUDPBG.......14700
      PEX2 = PBG2(IPG) + PLAK                                            BUDPBG.......14800
C                                                                        BUDPBG.......14900
999   RETURN                                                             BUDPBG.......15000
      END                                                                BUDPBG.......15100
C                                                                        BUDPBG.......15200
C     SUBROUTINE        B  U  D  S  O  P           SUTRA VERSION 3.0     BUDSOP.........100
C                                                                        BUDSOP.........200
C *** PURPOSE :                                                          BUDSOP.........300
C ***  TO COMPUTE THE FLOWS OF WATER AND SOLUTE/ENERGY IN OR OUT OF A    BUDSOP.........400
C ***  FLUID SOURCE/SINK NODE, AND TO KEEP TRACK OF LAKE EXCHANGES,      BUDSOP.........500
C ***  IF APPLICABLE.                                                    BUDSOP.........600
C                                                                        BUDSOP.........700
      SUBROUTINE BUDSOP(IQP,QINVAL,QIUVAL,QEXGW,QEXLK,QEXRO,             BUDSOP.........800
     1   QUEXGW,QUEXLK,QUEXRO,UEX)                                       BUDSOP.........900
      USE LARR                                                           BUDSOP........1000
      USE ALLARR, ONLY : UVEC,IQSOP,UIN,QIN,QINITR,IBCSOP                BUDSOP........1100
      IMPLICIT DOUBLE PRECISION (A-H, O-Z)                               BUDSOP........1200
      LOGICAL LAKELG,LAKUSD                                              BUDSOP........1300
      COMMON /DIMS/ NN,NE,NIN,NBI,NCBI,NB,NBHALF,NPBC,NUBC,              BUDSOP........1400
     1   NSOP,NSOU,NBCN,NPBG,NUBG,NCIDB                                  BUDSOP........1500
      COMMON /DIMSRF/ MAXCON, NNSURF, NNVERT                             BUDSOP........1600
      COMMON /LAKU/ LAKUSD                                               BUDSOP........1700
      COMMON /PARAMS/ COMPFL,COMPMA,DRWDU,CW,CS,RHOS,SIGMAW,SIGMAS,      BUDSOP........1800
     1   RHOW0,URHOW0,VISC0,PRODF1,PRODS1,PRODF0,PRODS0,CHI1,CHI2        BUDSOP........1900
C                                                                        BUDSOP........2000
C.....COMPUTE THE FLOWS OF WATER AND SOLUTE/ENERGY IN OR OUT OF A        BUDSOP........2100
C        FLUID SOURCE/SINK NODE.  KEEP TRACK OF LAKE EXCHANGES,          BUDSOP........2200
C        IF APPLICABLE.                                                  BUDSOP........2300
C                                                                        BUDSOP........2400
C.....NOTE: MULTIPLYING TEMPERATURES BY CW CONVERTS THEM TO              BUDSOP........2500
C        SPECIFIC ENERGY CONTENTS IN THE CASE OF ENERGY TRANSPORT.       BUDSOP........2600
C        (UWO IS ALREADY AN ENERGY CONTENT, SO IT IS NOT CONVERTED.)     BUDSOP........2700
C        NO EFFECT IN THE CASE OF SOLUTE TRANSPORT, SINCE CW=1.          BUDSOP........2800
C                                                                        BUDSOP........2900
      I=IABS(IQSOP(IQP))                                                 BUDSOP........3000
      ISURF = 0                                                          BUDSOP........3100
      LAKELG = .FALSE.                                                   BUDSOP........3200
      IF (LAKUSD) THEN                                                   BUDSOP........3300
         ISURF = ISURFACE(I)                                             BUDSOP........3400
         IF (ISURF.NE.0) LAKELG = LAKNOD(ISURF)%LAKEOK                   BUDSOP........3500
      END IF                                                             BUDSOP........3600
C                                                                        BUDSOP........3700
      IF (ISLAKE(I)) THEN                                                BUDSOP........3800
C........THIS IS A LAKE NODE (INUNDATED).                                BUDSOP........3900
C                                                                        BUDSOP........4000
         QINVAL = QIN(I)                                                 BUDSOP........4100
         QEXGW = 0D0                                                     BUDSOP........4200
         QEXLK = QINVAL                                                  BUDSOP........4300
         QEXRO = 0D0                                                     BUDSOP........4400
         IF (QINITR(I).GT.0D0) THEN                                      BUDSOP........4500
            QIUVAL = QINITR(I)*CW*UIN(I)                                 BUDSOP........4600
            UEX = UIN(I)                                                 BUDSOP........4700
         ELSE                                                            BUDSOP........4800
            QIUVAL = QINITR(I)*CW*ULKITR(ISURF)                          BUDSOP........4900
            UEX = ULKITR(ISURF)                                          BUDSOP........5000
         END IF                                                          BUDSOP........5100
         QUEXGW = 0D0                                                    BUDSOP........5200
         QUEXLK = QIUVAL                                                 BUDSOP........5300
         QUEXRO = 0D0                                                    BUDSOP........5400
C                                                                        BUDSOP........5500
      ELSE                                                               BUDSOP........5600
C........THIS IS NOT A LAKE NODE (NOT INUNDATED).                        BUDSOP........5700
C                                                                        BUDSOP........5800
C........GET FLOW AND ASSOCIATED CONC/TEMP, DEPENDING ON WHETHER         BUDSOP........5900
C           GROUNDWATER IS RECHARGING OR DISCHARGING.                    BUDSOP........6000
         QINVAL = QIN(I)                                                 BUDSOP........6100
         QEXGW = QINVAL                                                  BUDSOP........6200
         QEXLK = 0D0                                                     BUDSOP........6300
         QEXRO = 0D0                                                     BUDSOP........6400
         IF (LAKELG) THEN                                                BUDSOP........6500
            LK = LAKNOD(ISURF)%KLUSTR                                    BUDSOP........6600
            IF (QINVAL.GT.0D0) THEN                                      BUDSOP........6700
               QEXRO = FRRO(LK)*QINVAL                                   BUDSOP........6800
            ELSE                                                         BUDSOP........6900
               QEXRO = -FDRO(LK)*QINVAL                                  BUDSOP........7000
            END IF                                                       BUDSOP........7100
         END IF                                                          BUDSOP........7200
         QUEXLK = 0D0                                                    BUDSOP........7300
         QUEXRO = 0D0                                                    BUDSOP........7400
         IF (QINITR(I).GT.0D0) THEN                                      BUDSOP........7500
            QIUVAL = QINITR(I)*CW*UIN(I)                                 BUDSOP........7600
            UEX = UIN(I)                                                 BUDSOP........7700
            IF (LAKELG) THEN                                             BUDSOP........7800
               LK = LAKNOD(ISURF)%KLUSTR                                 BUDSOP........7900
               QUEXRO = FRRO(LK)*QIUVAL                                  BUDSOP........8000
            END IF                                                       BUDSOP........8100
         ELSE                                                            BUDSOP........8200
            QIUVAL = QINITR(I)*CW*UVEC(I)                                BUDSOP........8300
            UEX = UVEC(I)                                                BUDSOP........8400
            IF (LAKELG) THEN                                             BUDSOP........8500
               LK = LAKNOD(ISURF)%KLUSTR                                 BUDSOP........8600
               QUEXRO = -FDRO(LK)*QIUVAL                                 BUDSOP........8700
            END IF                                                       BUDSOP........8800
         END IF                                                          BUDSOP........8900
         QUEXGW = QIUVAL                                                 BUDSOP........9000
C                                                                        BUDSOP........9100
      END IF                                                             BUDSOP........9200
C                                                                        BUDSOP........9300
999   RETURN                                                             BUDSOP........9400
      END                                                                BUDSOP........9500
C                                                                        BUDSOP........9600
C     SUBROUTINE        B  U  D  S  O  U           SUTRA VERSION 3.0     BUDSOU.........100
C                                                                        BUDSOU.........200
C *** PURPOSE :                                                          BUDSOU.........300
C ***  TO COMPUTE THE FLOW OF SOLUTE/ENERGY IN OR OUT OF A SOLUTE/ENERGY BUDSOU.........400
C ***  SOURCE/SINK NODE, AND TO KEEP TRACK OF LAKE EXCHANGES, IF         BUDSOU.........500
C ***  APPLICABLE.                                                       BUDSOU.........600
C                                                                        BUDSOU.........700
      SUBROUTINE BUDSOU(IPU,QUINVAL,QUEXGW,QUEXLK)                       BUDSOU.........800
      USE LARR                                                           BUDSOU.........900
      USE ALLARR, ONLY : IQSOU,QUIN,IBCSOU                               BUDSOU........1000
      IMPLICIT DOUBLE PRECISION (A-H, O-Z)                               BUDSOU........1100
      COMMON /DIMS/ NN,NE,NIN,NBI,NCBI,NB,NBHALF,NPBC,NUBC,              BUDSOU........1200
     1   NSOP,NSOU,NBCN,NPBG,NUBG,NCIDB                                  BUDSOU........1300
      COMMON /DIMSRF/ MAXCON, NNSURF, NNVERT                             BUDSOU........1400
      COMMON /PARAMS/ COMPFL,COMPMA,DRWDU,CW,CS,RHOS,SIGMAW,SIGMAS,      BUDSOU........1500
     1   RHOW0,URHOW0,VISC0,PRODF1,PRODS1,PRODF0,PRODS0,CHI1,CHI2        BUDSOU........1600
C                                                                        BUDSOU........1700
C.....COMPUTE THE FLOW OF SOLUTE/ENERGY IN OR OUT OF A SOLUTE/ENERGY     BUDSOU........1800
C        SOURCE/SINK NODE.  KEEP TRACK OF LAKE EXCHANGES,                BUDSOU........1900
C        IF APPLICABLE.                                                  BUDSOU........2000
C                                                                        BUDSOU........2100
C.....NOTE: MULTIPLYING TEMPERATURES BY CW CONVERTS THEM TO              BUDSOU........2200
C        SPECIFIC ENERGY CONTENTS IN THE CASE OF ENERGY TRANSPORT.       BUDSOU........2300
C        (UWO IS ALREADY AN ENERGY CONTENT, SO IT IS NOT CONVERTED.)     BUDSOU........2400
C        NO EFFECT IN THE CASE OF SOLUTE TRANSPORT, SINCE CW=1.          BUDSOU........2500
C                                                                        BUDSOU........2600
      I=IABS(IQSOU(IPU))                                                 BUDSOU........2700
C                                                                        BUDSOU........2800
      IF (ISLAKE(I)) THEN                                                BUDSOU........2900
C........THIS IS A LAKE NODE (INUNDATED).                                BUDSOU........3000
C                                                                        BUDSOU........3100
         QUINVAL = QUIN(I)                                               BUDSOU........3200
         QUEXGW = 0D0                                                    BUDSOU........3300
         QUEXLK = QUINVAL                                                BUDSOU........3400
C                                                                        BUDSOU........3500
      ELSE                                                               BUDSOU........3600
C........THIS IS NOT A LAKE NODE (NOT INUNDATED).                        BUDSOU........3700
C                                                                        BUDSOU........3800
C........GET FLOW OF SOLUTE/ENERGY.                                      BUDSOU........3900
         QUINVAL = QUIN(I)                                               BUDSOU........4000
         QUEXGW = QUINVAL                                                BUDSOU........4100
         QUEXLK = 0D0                                                    BUDSOU........4200
C                                                                        BUDSOU........4300
      END IF                                                             BUDSOU........4400
C                                                                        BUDSOU........4500
999   RETURN                                                             BUDSOU........4600
      END                                                                BUDSOU........4700
C                                                                        BUDSOU........4800
C     SUBROUTINE        B  U  D  U  B  C           SUTRA VERSION 3.0     BUDUBC.........100
C                                                                        BUDUBC.........200
C *** PURPOSE :                                                          BUDUBC.........300
C ***  TO COMPUTE THE FLOW OF SOLUTE/ENERGY IN OR OUT OF A               BUDUBC.........400
C ***  SPECIFIED-CONC/TEMP NODE, AND TO KEEP TRACK OF LAKE EXCHANGES,    BUDUBC.........500
C ***  IF APPLICABLE.                                                    BUDUBC.........600
C                                                                        BUDUBC.........700
      SUBROUTINE BUDUBC(IUP,QUBC,QUEXGW,QUEXLK,UEX)                      BUDUBC.........800
      USE LARR                                                           BUDUBC.........900
      USE ALLARR, ONLY : UVEC,IUBC,UBC,UVEC,UZERO,GNUUU,IBCUBC           BUDUBC........1000
      IMPLICIT DOUBLE PRECISION (A-H, O-Z)                               BUDUBC........1100
      LOGICAL LAKUSD                                                     BUDUBC........1200
      COMMON /DIMS/ NN,NE,NIN,NBI,NCBI,NB,NBHALF,NPBC,NUBC,              BUDUBC........1300
     1   NSOP,NSOU,NBCN,NPBG,NUBG,NCIDB                                  BUDUBC........1400
      COMMON /DIMSRF/ MAXCON, NNSURF, NNVERT                             BUDUBC........1500
      COMMON /LAKU/ LAKUSD                                               BUDUBC........1600
      COMMON /PARAMS/ COMPFL,COMPMA,DRWDU,CW,CS,RHOS,SIGMAW,SIGMAS,      BUDUBC........1700
     1   RHOW0,URHOW0,VISC0,PRODF1,PRODS1,PRODF0,PRODS0,CHI1,CHI2        BUDUBC........1800
      COMMON /SOLVI/ KSOLVP,KSOLVU,NN1,NN2,NN3                           BUDUBC........1900
C                                                                        BUDUBC........2000
C.....COMPUTE THE FLOW OF SOLUTE/ENERGY IN OR OUT OF A                   BUDUBC........2100
C        SPECIFIED-CONC/TEMP NODE.  KEEP TRACK OF LAKE EXCHANGES,        BUDUBC........2200
C        IF APPLICABLE.                                                  BUDUBC........2300
C                                                                        BUDUBC........2400
C.....NOTE: MULTIPLYING TEMPERATURES BY CW CONVERTS THEM TO              BUDUBC........2500
C        SPECIFIC ENERGY CONTENTS IN THE CASE OF ENERGY TRANSPORT.       BUDUBC........2600
C        (UWO IS ALREADY AN ENERGY CONTENT, SO IT IS NOT CONVERTED.)     BUDUBC........2700
C        NO EFFECT IN THE CASE OF SOLUTE TRANSPORT, SINCE CW=1.          BUDUBC........2800
C                                                                        BUDUBC........2900
      I=IABS(IUBC(IUP))                                                  BUDUBC........3000
      IU = IUP - NPBC                                                    BUDUBC........3100
C                                                                        BUDUBC........3200
      IF (ISLAKE(I)) THEN                                                BUDUBC........3300
C........THIS IS A LAKE NODE (INUNDATED).                                BUDUBC........3400
C                                                                        BUDUBC........3500
C........GET FLOW OF SOLUTE/ENERGY.                                      BUDUBC........3600
         ISURF = ISURFACE(I)                                             BUDUBC........3700
         CALL GETQPU(IU,ULKITR(ISURF),QUBC)                              BUDUBC........3800
         QUEXGW = 0D0                                                    BUDUBC........3900
         QUEXLK = QUBC                                                   BUDUBC........4000
         UEX = ULKITR(ISURF)                                             BUDUBC........4100
C                                                                        BUDUBC........4200
      ELSE                                                               BUDUBC........4300
C........THIS IS NOT A LAKE NODE (NOT INUNDATED).                        BUDUBC........4400
C                                                                        BUDUBC........4500
C........GET FLOW OF SOLUTE/ENERGY.                                      BUDUBC........4600
         CALL GETQPU(IU,UBC(IUP),QUBC)                                   BUDUBC........4700
         QUEXGW = QUBC                                                   BUDUBC........4800
         QUEXLK = 0D0                                                    BUDUBC........4900
         UEX = UBC(IUP)                                                  BUDUBC........5000
C                                                                        BUDUBC........5100
      END IF                                                             BUDUBC........5200
C                                                                        BUDUBC........5300
999   RETURN                                                             BUDUBC........5400
      END                                                                BUDUBC........5500
C                                                                        BUDUBC........5600
C     SUBROUTINE        B  U  D  U  B  G           SUTRA VERSION 3.0     BUDUBG.........100
C                                                                        BUDUBG.........200
C *** PURPOSE :                                                          BUDUBG.........300
C ***  TO COMPUTE THE FLOW OF SOLUTE/ENERGY IN OR OUT OF A               BUDUBG.........400
C ***  GENERALIZED-TRANSPORT NODE, AND TO KEEP TRACK OF LAKE EXCHANGES,  BUDUBG.........500
C ***  IF APPLICABLE.                                                    BUDUBG.........600
C                                                                        BUDUBG.........700
      SUBROUTINE BUDUBG(IUG,QUBG,QUEXGW,QUEXLK,UEX1,UEX2,QUEX1,QUEX2)    BUDUBG.........800
      USE LARR                                                           BUDUBG.........900
      USE ALLARR, ONLY : UVEC,IUBG,UVEC,QUBGIC,GNUUG,IBCUBG,             BUDUBG........1000
     1   UBG1,QUBG1,UBG2,QUBG2                                           BUDUBG........1100
      IMPLICIT DOUBLE PRECISION (A-H, O-Z)                               BUDUBG........1200
      LOGICAL LAKUSD                                                     BUDUBG........1300
      CHARACTER*80 ERRCOD,CHERR(10)                                      BUDUBG........1400
      DIMENSION INERR(10),RLERR(10)                                      BUDUBG........1500
      COMMON /DIMS/ NN,NE,NIN,NBI,NCBI,NB,NBHALF,NPBC,NUBC,              BUDUBG........1600
     1   NSOP,NSOU,NBCN,NPBG,NUBG,NCIDB                                  BUDUBG........1700
      COMMON /DIMSRF/ MAXCON, NNSURF, NNVERT                             BUDUBG........1800
      COMMON /LAKU/ LAKUSD                                               BUDUBG........1900
      COMMON /PARAMS/ COMPFL,COMPMA,DRWDU,CW,CS,RHOS,SIGMAW,SIGMAS,      BUDUBG........2000
     1   RHOW0,URHOW0,VISC0,PRODF1,PRODS1,PRODF0,PRODS0,CHI1,CHI2        BUDUBG........2100
C                                                                        BUDUBG........2200
C.....COMPUTE THE FLOW OF SOLUTE/ENERGY IN OR OUT OF A GENERALIZED-      BUDUBG........2300
C        TRANSPORT NODE.  KEEP TRACK OF LAKE EXCHANGES,                  BUDUBG........2400
C        IF APPLICABLE.                                                  BUDUBG........2500
C                                                                        BUDUBG........2600
C.....NOTE: MULTIPLYING TEMPERATURES BY CW CONVERTS THEM TO              BUDUBG........2700
C        SPECIFIC ENERGY CONTENTS IN THE CASE OF ENERGY TRANSPORT.       BUDUBG........2800
C        (UWO IS ALREADY AN ENERGY CONTENT, SO IT IS NOT CONVERTED.)     BUDUBG........2900
C        NO EFFECT IN THE CASE OF SOLUTE TRANSPORT, SINCE CW=1.          BUDUBG........3000
C                                                                        BUDUBG........3100
      I=IABS(IUBG(IUG))                                                  BUDUBG........3200
C                                                                        BUDUBG........3300
      IF (ISLAKE(I)) THEN                                                BUDUBG........3400
C........THIS IS A LAKE NODE (INUNDATED).                                BUDUBG........3500
C                                                                        BUDUBG........3600
C........GET FLOW OF SOLUTE/ENERGY.                                      BUDUBG........3700
         ISURF = ISURFACE(I)                                             BUDUBG........3800
!!         LAKELG = LAKNOD(ISURF)%LAKEOK                                 ! fix civ 200722c   BUDUBG........3900
         NFB = IBCSUG(IUG)                                               BUDUBG........4000
         LIT = ITIUG(NFB)                                                BUDUBG........4100
         IF (LIT.EQ.1) THEN                                              BUDUBG........4200
C...........ACTS ANALOGOUSLY TO A SOLUTE/ENERGY SOURCE/SINK NODE.        BUDUBG........4300
            UEX1 = UBG1(IUG)                                             BUDUBG........4400
            UEX2 = UBG2(IUG)                                             BUDUBG........4500
            QUEX1 = QUBG1(IUG)                                           BUDUBG........4600
            QUEX2 = QUBG2(IUG)                                           BUDUBG........4700
            QUBG = GNUUG(IUG)*(UEX1 - UVEC(I))                           BUDUBG........4800
            QUEXGW = 0D0                                                 BUDUBG........4900
            QUEXLK = QUBG                                                BUDUBG........5000
         ELSE IF (LIT.EQ.2) THEN                                         BUDUBG........5100
C...........ACTS ANALOGOUSLY TO A SPECIFIED-CONC/TEMP NODE.              BUDUBG........5200
            UEX1 = ULKITR(ISURF)                                         BUDUBG........5300
            UEX2 = UEX1 + (UBG2(IUG) - UBG1(IUG))                        BUDUBG........5400
            QUEX1 = 0D0                                                  BUDUBG........5500
            QUEX2 = QUEX1 + (QUBG2(IUG) - QUBG2(IUG))                    BUDUBG........5600
            QUBG = GNUUG(IUG)*(UEX1 - UVEC(I))                           BUDUBG........5700
            QUEXGW = QUBG                                                BUDUBG........5800
            QUEXLK = -QUBG                                               BUDUBG........5900
         ELSE                                                            BUDUBG........6000
            ERRCOD = 'COD-BUDUBG-1'                                      BUDUBG........6100
            CALL SUTERR(ERRCOD,CHERR,INERR,RLERR)                        BUDUBG........6200
         END IF                                                          BUDUBG........6300
C                                                                        BUDUBG........6400
      ELSE                                                               BUDUBG........6500
C........THIS IS NOT A LAKE NODE (NOT INUNDATED).                        BUDUBG........6600
C                                                                        BUDUBG........6700
C........GET FLOW OF SOLUTE/ENERGY.                                      BUDUBG........6800
         UEX1 = UBG1(IUG)                                                BUDUBG........6900
         UEX2 = UBG2(IUG)                                                BUDUBG........7000
         QUEX1 = QUBG1(IUG)                                              BUDUBG........7100
         QUEX2 = QUBG2(IUG)                                              BUDUBG........7200
         QUBG = QUBGIC(IUG)-GNUUG(IUG)*UVEC(I)                           BUDUBG........7300
         QUEXGW = QUBG                                                   BUDUBG........7400
         QUEXLK = 0D0                                                    BUDUBG........7500
C                                                                        BUDUBG........7600
      END IF                                                             BUDUBG........7700
C                                                                        BUDUBG........7800
999   RETURN                                                             BUDUBG........7900
      END                                                                BUDUBG........8000
C                                                                        BUDUBG........8100
C     SUBROUTINE        C  O  N  N  E  C           SUTRA VERSION 3.0     CONNEC.........100
C                                                                        CONNEC.........200
C *** PURPOSE :                                                          CONNEC.........300
C ***  TO READ, ORGANIZE, AND CHECK DATA ON NODE INCIDENCES.             CONNEC.........400
C                                                                        CONNEC.........500
      SUBROUTINE CONNEC(IN)                                              CONNEC.........600
      USE EXPINT                                                         CONNEC.........700
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                CONNEC.........800
      CHARACTER INTFIL*1000                                              CONNEC.........900
      CHARACTER CDUM10*10                                                CONNEC........1000
      CHARACTER*80 ERRCOD,CHERR(10),UNAME,FNAME(0:23)                    CONNEC........1100
      DIMENSION IN(NIN)                                                  CONNEC........1200
      DIMENSION IIN(8)                                                   CONNEC........1300
      DIMENSION INERR(10),RLERR(10)                                      CONNEC........1400
      COMMON /DIMS/ NN,NE,NIN,NBI,NCBI,NB,NBHALF,NPBC,NUBC,              CONNEC........1500
     1   NSOP,NSOU,NBCN,NPBG,NUBG,NCIDB                                  CONNEC........1600
      COMMON /DIMX/ NWI,NWF,NWL,NELT,NNNX,NEX,N48                        CONNEC........1700
      COMMON /FNAMES/ UNAME,FNAME                                        CONNEC........1800
      COMMON /FUNITS/ K00,K0,K1,K2,K3,K4,K5,K6,K7,K8,K9,                 CONNEC........1900
     1   K10,K11,K12,K13,K14,K15,K16,K17,K18,K19,K20,K21,K22,K23         CONNEC........2000
      COMMON /KPRINT/ KNODAL,KELMNT,KINCID,KPLOTP,KPLOTU,                CONNEC........2100
     1   KPANDS,KVEL,KCORT,KBUDG,KSCRN,KPAUSE                            CONNEC........2200
C                                                                        CONNEC........2300
      IPIN=0                                                             CONNEC........2400
      IF(KINCID.EQ.0) WRITE(K3,1)                                        CONNEC........2500
    1 FORMAT('1'////11X,'M E S H   C O N N E C T I O N   D A T A'//      CONNEC........2600
     1   16X,'PRINTOUT OF NODAL INCIDENCES CANCELLED.')                  CONNEC........2700
      IF(KINCID.EQ.+1) WRITE(K3,2)                                       CONNEC........2800
    2 FORMAT('1'////11X,'M E S H   C O N N E C T I O N   D A T A',       CONNEC........2900
     1   ///11X,'**** NODAL INCIDENCES ****'///)                         CONNEC........3000
C                                                                        CONNEC........3100
C.....INPUT DATASET 22 AND CHECK FOR ERRORS                              CONNEC........3200
      ERRCOD = 'REA-INP-22'                                              CONNEC........3300
      CALL READIF(K1, 0, INTFIL, ERRCOD)                                 CONNEC........3400
      READ(INTFIL,*,IOSTAT=INERR(1)) CDUM10                              CONNEC........3500
      IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)        CONNEC........3600
      IF (CDUM10.NE.'INCIDENCE ') THEN                                   CONNEC........3700
         ERRCOD = 'INP-22-1'                                             CONNEC........3800
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        CONNEC........3900
      END IF                                                             CONNEC........4000
      DO 1000 L=1,NE                                                     CONNEC........4100
      ERRCOD = 'REA-INP-22'                                              CONNEC........4200
      CALL READIF(K1, 0, INTFIL, ERRCOD)                                 CONNEC........4300
      READ(INTFIL,*,IOSTAT=INERR(1)) LL,(IIN(II),II=1,N48)               CONNEC........4400
      IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)        CONNEC........4500
C.....PREPARE NODE INCIDENCE LIST FOR MESH, IN.                          CONNEC........4600
      DO 5 II=1,N48                                                      CONNEC........4700
      III=II+(L-1)*N48                                                   CONNEC........4800
    5 IN(III)=IIN(II)                                                    CONNEC........4900
      IF(IABS(LL).EQ.L) GOTO 500                                         CONNEC........5000
      ERRCOD = 'INP-22-2'                                                CONNEC........5100
      INERR(1) = LL                                                      CONNEC........5200
      CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                           CONNEC........5300
C                                                                        CONNEC........5400
C                                                                        CONNEC........5500
  500 M1=(L-1)*N48+1                                                     CONNEC........5600
      M8=M1+N48-1                                                        CONNEC........5700
      IF(KINCID.EQ.0) GOTO 1000                                          CONNEC........5800
      WRITE(K3,650) L,(IN(M),M=M1,M8)                                    CONNEC........5900
  650 FORMAT(11X,'ELEMENT',I9,5X,' NODES AT : ',6X,'CORNERS ',           CONNEC........6000
     1   5('*'),8I9,1X,5('*'))                                           CONNEC........6100
C                                                                        CONNEC........6200
 1000 CONTINUE                                                           CONNEC........6300
C                                                                        CONNEC........6400
C                                                                        CONNEC........6500
 5000 RETURN                                                             CONNEC........6600
      END                                                                CONNEC........6700
C                                                                        CONNEC........6800
C     FUNCTION          C  U  T  S  M  L           SUTRA VERSION 3.0     CUTSML.........100
C                                                                        CUTSML.........200
C *** PURPOSE :                                                          CUTSML.........300
C ***  TO RETURN ARGUMENT DPNUM IF ITS MAGNITUDE IS GREATER THAN OR      CUTSML.........400
C ***  EQUAL TO 1.D-99, AND ZERO OTHERWISE.                              CUTSML.........500
C                                                                        CUTSML.........600
      DOUBLE PRECISION FUNCTION CUTSML(DPNUM)                            CUTSML.........700
      IMPLICIT DOUBLE PRECISION (A-H, O-Z)                               CUTSML.........800
C                                                                        CUTSML.........900
C.....RETURN DPNUM IF ITS ABSOLUTE VALUE IS >= 1.D-99, OTHERWISE         CUTSML........1000
C        RETURN ZERO                                                     CUTSML........1100
      IF (DABS(DPNUM).LT.1.D-99) THEN                                    CUTSML........1200
         CUTSML = 0D0                                                    CUTSML........1300
      ELSE                                                               CUTSML........1400
         CUTSML = DPNUM                                                  CUTSML........1500
      END IF                                                             CUTSML........1600
C                                                                        CUTSML........1700
      RETURN                                                             CUTSML........1800
      END                                                                CUTSML........1900
C                                                                        CUTSML........2000
C     SUBROUTINE        D  I  M  W  R  K           SUTRA VERSION 3.0     DIMWRK.........100
C                                                                        DIMWRK.........200
C *** PURPOSE :                                                          DIMWRK.........300
C ***  TO RETURN DIMENSIONS FOR THE SOLVER WORK ARRAYS, WHICH DEPEND ON  DIMWRK.........400
C ***  THE PARTICULAR SOLVER CHOSEN.                                     DIMWRK.........500
C                                                                        DIMWRK.........600
      SUBROUTINE DIMWRK(KSOLVR, NSAVE, NN, NELT, NWI, NWF)               DIMWRK.........700
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                DIMWRK.........800
C                                                                        DIMWRK.........900
C.....COMPUTE SOLVER WORK ARRAY DIMENSIONS                               DIMWRK........1000
      IF (KSOLVR.EQ.1) THEN                                              DIMWRK........1100
         NL = (NELT + NN)/2                                              DIMWRK........1200
         NWI = 11 + 2*NL                                                 DIMWRK........1300
         NWF = NL + 5*NN + 1                                             DIMWRK........1400
      ELSE IF (KSOLVR.EQ.2) THEN                                         DIMWRK........1500
         NWI = 31 + 2*NELT                                               DIMWRK........1600
         NWF = 2 + NN*(NSAVE + 7) + NSAVE*(NSAVE + 3) + (NELT - NN)      DIMWRK........1700
      ELSE IF (KSOLVR.EQ.3) THEN                                         DIMWRK........1800
         NWI = 11 + 2*NELT                                               DIMWRK........1900
         NWF = 1 + 3*NN*(NSAVE + 1) + 7*NN + NSAVE + (NELT - NN)         DIMWRK........2000
      END IF                                                             DIMWRK........2100
C                                                                        DIMWRK........2200
      RETURN                                                             DIMWRK........2300
      END                                                                DIMWRK........2400
C                                                                        DIMWRK........2500
C     SUBROUTINE        D  I  S  P  R  3           SUTRA VERSION 3.0     DISPR3.........100
C                                                                        DISPR3.........200
C *** PURPOSE :                                                          DISPR3.........300
C ***  TO COMPUTE THE COMPONENTS OF THE 3D DISPERSION TENSOR IN          DISPR3.........400
C ***  X,Y,Z-COORDINATES USING AN AD HOC, 3D ANISOTROPIC DISPERSION      DISPR3.........500
C ***  MODEL.                                                            DISPR3.........600
C                                                                        DISPR3.........700
      SUBROUTINE DISPR3(VX,VY,VZ,VMAG,ANG1,ANG2,ANG3,ALMAX,ALMID,ALMIN,  DISPR3.........800
     1   ATMAX,ATMID,ATMIN,DXX,DXY,DXZ,DYX,DYY,DYZ,DZX,DZY,DZZ)          DISPR3.........900
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                DISPR3........1000
      LOGICAL LISO,TISO                                                  DISPR3........1100
      DIMENSION AL(3),AT(3),VN(3),UN(3),WN(3)                            DISPR3........1200
      DIMENSION J(3)                                                     DISPR3........1300
C                                                                        DISPR3........1400
C.....HANDLE CASE OF ZERO VELOCITY.  (THIS CASE IS ALREADY HANDLED       DISPR3........1500
C        BY SUBROUTINE ELEMN3.  THE BLOCK IF STATEMENT BELOW CAN BE      DISPR3........1600
C        UNCOMMENTED IF NEEDED IN THE FUTURE.)                           DISPR3........1700
C     IF (VMAG.EQ.0D0) THEN                                              DISPR3........1800
C        DXX = 0D0                                                       DISPR3........1900
C        DXY = 0D0                                                       DISPR3........2000
C        DXZ = 0D0                                                       DISPR3........2100
C        DYX = 0D0                                                       DISPR3........2200
C        DYY = 0D0                                                       DISPR3........2300
C        DYZ = 0D0                                                       DISPR3........2400
C        DZX = 0D0                                                       DISPR3........2500
C        DZY = 0D0                                                       DISPR3........2600
C        DZZ = 0D0                                                       DISPR3........2700
C        RETURN                                                          DISPR3........2800
C     END IF                                                             DISPR3........2900
C                                                                        DISPR3........3000
C.....SET TOLERANCES USED TO DETERMINE WHETHER CERTAIN DEGENERATE        DISPR3........3100
C        CONDITIONS ARE TRUE:                                            DISPR3........3200
C        TOLISO -- IS DISPERSION ESSENTIALLY ISOTROPIC?                  DISPR3........3300
C        TOLVRT -- IS FLOW ESSENTIALLY VERTICAL?                         DISPR3........3400
C        TOLCIR -- IS SLICING ELLIPSE ESSENTIALLY A CIRCLE?              DISPR3........3500
      TOLISO = 1D-7                                                      DISPR3........3600
      TOLVRT = 1D-7                                                      DISPR3........3700
      TOLCIR = 9.999999D-1                                               DISPR3........3800
C                                                                        DISPR3........3900
C.....NORMALIZE THE VELOCITY VECTOR.                                     DISPR3........4000
      VNX = VX/VMAG                                                      DISPR3........4100
      VNY = VY/VMAG                                                      DISPR3........4200
      VNZ = VZ/VMAG                                                      DISPR3........4300
C                                                                        DISPR3........4400
C.....DETERMINE WHETHER LONGITUDINAL DISPERSION IS ESSENTIALLY           DISPR3........4500
C        ISOTROPIC.                                                      DISPR3........4600
      AL(1) = ALMAX                                                      DISPR3........4700
      AL(2) = ALMID                                                      DISPR3........4800
      AL(3) = ALMIN                                                      DISPR3........4900
      ALMXVL = MAXVAL(AL)                                                DISPR3........5000
      ALMNVL = MINVAL(AL)                                                DISPR3........5100
      IF (ALMXVL.EQ.0D0) THEN                                            DISPR3........5200
         LISO = .TRUE.                                                   DISPR3........5300
      ELSE                                                               DISPR3........5400
         LISO = ((ALMXVL - ALMNVL)/ALMXVL.LT.TOLISO)                     DISPR3........5500
      END IF                                                             DISPR3........5600
C                                                                        DISPR3........5700
C.....COMPUTE THE LONGITUDINAL DISPERSION COEFFICIENT.                   DISPR3........5800
      IF (LISO) THEN                                                     DISPR3........5900
C........ISOTROPIC CASE.                                                 DISPR3........6000
         DL = ALMAX*VMAG                                                 DISPR3........6100
      ELSE                                                               DISPR3........6200
C........ANISOTROPIC CASE.                                               DISPR3........6300
C........ROTATE V TO "MAX-MID-MIN" COORDINATES.                          DISPR3........6400
         CALL ROTMAT(ANG1,ANG2,ANG3,G11,G12,G13,G21,G22,G23,             DISPR3........6500
     1      G31,G32,G33)                                                 DISPR3........6600
         CALL ROTATE(G11,G21,G31,G12,G22,G32,G13,G23,G33,                DISPR3........6700
     1      VNX,VNY,VNZ,VNXX,VNYY,VNZZ)                                  DISPR3........6800
C........EVALUATE DL FROM THE LONGITUDINAL DISPERSIVITY ELLIPSOID.       DISPR3........6900
         DL = VMAG/(VNXX*VNXX/ALMAX+VNYY*VNYY/ALMID+VNZZ*VNZZ/ALMIN)     DISPR3........7000
      END IF                                                             DISPR3........7100
C                                                                        DISPR3........7200
C.....DETERMINE WHETHER TRANSVERSE DISPERSION IS ESSENTIALLY             DISPR3........7300
C        ISOTROPIC.                                                      DISPR3........7400
      AT(1) = ATMAX                                                      DISPR3........7500
      AT(2) = ATMID                                                      DISPR3........7600
      AT(3) = ATMIN                                                      DISPR3........7700
      ATMXVL = MAXVAL(AT)                                                DISPR3........7800
      ATMNVL = MINVAL(AT)                                                DISPR3........7900
      IF (ATMXVL.EQ.0D0) THEN                                            DISPR3........8000
         TISO = .TRUE.                                                   DISPR3........8100
      ELSE                                                               DISPR3........8200
         TISO = ((ATMXVL - ATMNVL)/ATMXVL.LT.TOLISO)                     DISPR3........8300
      END IF                                                             DISPR3........8400
C                                                                        DISPR3........8500
C.....COMPUTE THE TRANSVERSE DISPERSION DIRECTIONS AND COEFFICIENTS.     DISPR3........8600
      IF (TISO) THEN                                                     DISPR3........8700
C........ISOTROPIC CASE.                                                 DISPR3........8800
         TERM = 1D0 - VNZ*VNZ                                            DISPR3........8900
         IF (TERM.LT.TOLVRT) THEN                                        DISPR3........9000
C...........FLOW IS ESSENTIALLY IN Z-DIRECTION (VERTICAL)                DISPR3........9100
            UNX = 1D0                                                    DISPR3........9200
            UNY = 0D0                                                    DISPR3........9300
            UNZ = 0D0                                                    DISPR3........9400
            WNX = 0D0                                                    DISPR3........9500
            WNY = 1D0                                                    DISPR3........9600
            WNZ = 0D0                                                    DISPR3........9700
         ELSE                                                            DISPR3........9800
C...........FLOW IS NOT IN Z-DIRECTION (NOT VERTICAL)                    DISPR3........9900
            TERMH = DSQRT(TERM)                                          DISPR3.......10000
            UNX = -VNY/TERMH                                             DISPR3.......10100
            UNY = VNX/TERMH                                              DISPR3.......10200
            UNZ = 0D0                                                    DISPR3.......10300
            WNX = -VNZ*UNY                                               DISPR3.......10400
            WNY = VNZ*UNX                                                DISPR3.......10500
            WNZ = TERMH                                                  DISPR3.......10600
         END IF                                                          DISPR3.......10700
         AT1 = ATMAX                                                     DISPR3.......10800
         AT2 = AT1                                                       DISPR3.......10900
      ELSE                                                               DISPR3.......11000
C........ANISOTROPIC CASE.                                               DISPR3.......11100
C........ROTATE V TO "MAX-MID-MIN" COORDINATES, IF NOT DONE PREVIOUSLY.  DISPR3.......11200
         IF (LISO) THEN                                                  DISPR3.......11300
            CALL ROTMAT(ANG1,ANG2,ANG3,G11,G12,G13,G21,G22,G23,          DISPR3.......11400
     1         G31,G32,G33)                                              DISPR3.......11500
            CALL ROTATE(G11,G21,G31,G12,G22,G32,G13,G23,G33,             DISPR3.......11600
     1         VNX,VNY,VNZ,VNXX,VNYY,VNZZ)                               DISPR3.......11700
         END IF                                                          DISPR3.......11800
C........TRANSPOSE AXES SO THAT THE LONGEST AXIS OF THE TRANSVERSE       DISPR3.......11900
C           DISPERSIVITY ELLIPSOID IS "MAX", THE SECOND LONGEST IS       DISPR3.......12000
C           "MID", AND THE SHORTEST IS "MIN".                            DISPR3.......12100
         J(1:1) = MAXLOC(AT)                                             DISPR3.......12200
         J(3:3) = MINLOC(AT)                                             DISPR3.......12300
         J(2) = 6 - J(1) - J(3)                                          DISPR3.......12400
         VN(1) = VNXX                                                    DISPR3.......12500
         VN(2) = VNYY                                                    DISPR3.......12600
         VN(3) = VNZZ                                                    DISPR3.......12700
         VNTXX = VN(J(1))                                                DISPR3.......12800
         VNTYY = VN(J(2))                                                DISPR3.......12900
         VNTZZ = VN(J(3))                                                DISPR3.......13000
         A2 = AT(J(1))                                                   DISPR3.......13100
         B2 = AT(J(2))                                                   DISPR3.......13200
         C2 = AT(J(3))                                                   DISPR3.......13300
C........APPLY THE BIOT-FRESNEL CONSTRUCTION TO THE TRANSVERSE           DISPR3.......13400
C           DISPERSIVITY ELLIPSOID.                                      DISPR3.......13500
         A2B2 = A2*B2                                                    DISPR3.......13600
         A2C2 = A2*C2                                                    DISPR3.......13700
         B2C2 = B2*C2                                                    DISPR3.......13800
         COS2AV = (A2C2 - B2C2)/(A2B2 - B2C2)                            DISPR3.......13900
         SIN2AV = 1D0 - COS2AV                                           DISPR3.......14000
         COSAV = DSQRT(COS2AV)                                           DISPR3.......14100
         SINAV = DSQRT(SIN2AV)                                           DISPR3.......14200
         TERM1 = COSAV*VNTXX                                             DISPR3.......14300
         TERM2 = SINAV*VNTZZ                                             DISPR3.......14400
         OA1V = TERM1 + TERM2                                            DISPR3.......14500
         OA2V = TERM1 - TERM2                                            DISPR3.......14600
         IF (MAX(DABS(OA1V),DABS(OA2V)).GT.TOLCIR) THEN                  DISPR3.......14700
C...........SLICING ELLIPSE IS ESSENTIALLY A CIRCLE                      DISPR3.......14800
            UNTXX = -VNTZZ                                               DISPR3.......14900
            UNTYY = 0D0                                                  DISPR3.......15000
            UNTZZ = VNTXX                                                DISPR3.......15100
            WNTXX = 0D0                                                  DISPR3.......15200
            WNTYY = 1D0                                                  DISPR3.......15300
            WNTZZ = 0D0                                                  DISPR3.......15400
            AT1 = B2                                                     DISPR3.......15500
            AT2 = B2                                                     DISPR3.......15600
         ELSE                                                            DISPR3.......15700
C...........SLICING ELLIPSE IS NOT A CIRCLE                              DISPR3.......15800
            RVJ1MG = 1D0/DSQRT(1D0 - OA1V*OA1V)                          DISPR3.......15900
            RVJ2MG = 1D0/DSQRT(1D0 - OA2V*OA2V)                          DISPR3.......16000
            RSUM = RVJ1MG + RVJ2MG                                       DISPR3.......16100
            RDIF = RVJ1MG - RVJ2MG                                       DISPR3.......16200
            OAUXX = COSAV*RSUM                                           DISPR3.......16300
            OAUZZ = SINAV*RDIF                                           DISPR3.......16400
            OAWXX = COSAV*RDIF                                           DISPR3.......16500
            OAWZZ = SINAV*RSUM                                           DISPR3.......16600
            OAUV = OAUXX*VNTXX + OAUZZ*VNTZZ                             DISPR3.......16700
            OAWV = OAWXX*VNTXX + OAWZZ*VNTZZ                             DISPR3.......16800
            OAUOAU = OAUXX*OAUXX + OAUZZ*OAUZZ                           DISPR3.......16900
            OAWOAW = OAWXX*OAWXX + OAWZZ*OAWZZ                           DISPR3.......17000
            UMTERM = OAUOAU - OAUV*OAUV                                  DISPR3.......17100
            WMTERM = OAWOAW - OAWV*OAWV                                  DISPR3.......17200
C...........COMPUTE THE LARGER OF U AND W DIRECTLY, THEN COMPUTE THE     DISPR3.......17300
C              OTHER BY CROSS-PRODUCT WITH V.                            DISPR3.......17400
            IF (UMTERM.GT.WMTERM) THEN                                   DISPR3.......17500
               RUMAGH = 1D0/DSQRT(UMTERM)                                DISPR3.......17600
               UNTXX = (OAUXX - OAUV*VNTXX)*RUMAGH                       DISPR3.......17700
               UNTYY = -OAUV*VNTYY*RUMAGH                                DISPR3.......17800
               UNTZZ = (OAUZZ - OAUV*VNTZZ)*RUMAGH                       DISPR3.......17900
               WNTXX = UNTYY*VNTZZ - UNTZZ*VNTYY                         DISPR3.......18000
               WNTYY = UNTZZ*VNTXX - UNTXX*VNTZZ                         DISPR3.......18100
               WNTZZ = UNTXX*VNTYY - UNTYY*VNTXX                         DISPR3.......18200
            ELSE                                                         DISPR3.......18300
               RWMAGH = 1D0/DSQRT(WMTERM)                                DISPR3.......18400
               WNTXX = (OAWXX - OAWV*VNTXX)*RWMAGH                       DISPR3.......18500
               WNTYY = -OAWV*VNTYY*RWMAGH                                DISPR3.......18600
               WNTZZ = (OAWZZ - OAWV*VNTZZ)*RWMAGH                       DISPR3.......18700
               UNTXX = WNTYY*VNTZZ - WNTZZ*VNTYY                         DISPR3.......18800
               UNTYY = WNTZZ*VNTXX - WNTXX*VNTZZ                         DISPR3.......18900
               UNTZZ = WNTXX*VNTYY - WNTYY*VNTXX                         DISPR3.......19000
            END IF                                                       DISPR3.......19100
            A2B2C2 = A2B2*C2                                             DISPR3.......19200
            DEN1 = B2C2*UNTXX*UNTXX+A2C2*UNTYY*UNTYY+A2B2*UNTZZ*UNTZZ    DISPR3.......19300
            DEN2 = B2C2*WNTXX*WNTXX+A2C2*WNTYY*WNTYY+A2B2*WNTZZ*WNTZZ    DISPR3.......19400
            AT1 = A2B2C2/DEN1                                            DISPR3.......19500
            AT2 = A2B2C2/DEN2                                            DISPR3.......19600
         END IF                                                          DISPR3.......19700
C........TRANSPOSE AXES BACK TO ORIGINAL "MAX-MID-MIN" AXES.             DISPR3.......19800
         UN(J(1)) = UNTXX                                                DISPR3.......19900
         UN(J(2)) = UNTYY                                                DISPR3.......20000
         UN(J(3)) = UNTZZ                                                DISPR3.......20100
         UNXX = UN(1)                                                    DISPR3.......20200
         UNYY = UN(2)                                                    DISPR3.......20300
         UNZZ = UN(3)                                                    DISPR3.......20400
         WN(J(1)) = WNTXX                                                DISPR3.......20500
         WN(J(2)) = WNTYY                                                DISPR3.......20600
         WN(J(3)) = WNTZZ                                                DISPR3.......20700
         WNXX = WN(1)                                                    DISPR3.......20800
         WNYY = WN(2)                                                    DISPR3.......20900
         WNZZ = WN(3)                                                    DISPR3.......21000
C........ROTATE THE TRANSVERSE DISPERSION DIRECTIONS FROM "MAX-MID-MIN"  DISPR3.......21100
C           COORDINATES TO X,Y,Z-COORDINATES.                            DISPR3.......21200
         CALL ROTATE(G11,G12,G13,G21,G22,G23,G31,G32,G33,UNXX,UNYY,UNZZ, DISPR3.......21300
     1      UNX,UNY,UNZ)                                                 DISPR3.......21400
         CALL ROTATE(G11,G12,G13,G21,G22,G23,G31,G32,G33,WNXX,WNYY,WNZZ, DISPR3.......21500
     1      WNX,WNY,WNZ)                                                 DISPR3.......21600
      END IF                                                             DISPR3.......21700
C.....COMPUTE TRANSVERSE DISPERSION COEFFICIENTS FROM DISPERSIVITIES     DISPR3.......21800
      DT1 = AT1*VMAG                                                     DISPR3.......21900
      DT2 = AT2*VMAG                                                     DISPR3.......22000
C                                                                        DISPR3.......22100
C.....ROTATE THE DISPERSION TENSOR FROM EIGENVECTOR COORDINATES TO       DISPR3.......22200
C     X,Y,Z-COORDINATES.                                                 DISPR3.......22300
      CALL TENSYM(DL,DT1,DT2,VNX,UNX,WNX,VNY,UNY,WNY,VNZ,UNZ,WNZ,        DISPR3.......22400
     1   DXX,DXY,DXZ,DYX,DYY,DYZ,DZX,DZY,DZZ)                            DISPR3.......22500
C                                                                        DISPR3.......22600
      RETURN                                                             DISPR3.......22700
      END                                                                DISPR3.......22800
C                                                                        DISPR3.......22900
C     FUNCTION          D  P  3  S  T  R           SUTRA VERSION 3.0     DP3STR.........100
C                                                                        DP3STR.........200
C *** PURPOSE :                                                          DP3STR.........300
C ***  TO RETURN THREE DOUBLE-PRECISION NUMBERS IN THE FORM OF A         DP3STR.........400
C ***  STRING.  THE THREE NUMBERS ARE PASSED IN THROUGH ARRAY DPA        DP3STR.........500
C ***  AND ARE ROUNDED USING FUNCTION CUTSML IN PREPARATION FOR OUTPUT.  DP3STR.........600
C                                                                        DP3STR.........700
      FUNCTION DP3STR(DPA)                                               DP3STR.........800
      IMPLICIT DOUBLE PRECISION (A-H, O-Z)                               DP3STR.........900
      DIMENSION DPA(3)                                                   DP3STR........1000
      CHARACTER DP3STR*45                                                DP3STR........1100
C                                                                        DP3STR........1200
C.....WRITE NUMBERS TO STRING                                            DP3STR........1300
      WRITE(UNIT=DP3STR,FMT="(3(1PE15.7))")                              DP3STR........1400
     1   CUTSML(DPA(1)), CUTSML(DPA(2)), CUTSML(DPA(3))                  DP3STR........1500
C                                                                        DP3STR........1600
      RETURN                                                             DP3STR........1700
      END                                                                DP3STR........1800
C                                                                        DP3STR........1900
C     SUBROUTINE        E  L  E  M  N  2           SUTRA VERSION 3.0     ELEMN2.........100
C                                                                        ELEMN2.........200
C *** PURPOSE :                                                          ELEMN2.........300
C ***  TO CONTROL AND CARRY OUT ALL CALCULATIONS FOR EACH ELEMENT BY     ELEMN2.........400
C ***  OBTAINING ELEMENT INFORMATION FROM THE BASIS FUNCTION ROUTINE,    ELEMN2.........500
C ***  CARRYING OUT GAUSSIAN INTEGRATION OF FINITE ELEMENT INTEGRALS,    ELEMN2.........600
C ***  AND ASSEMBLING RESULTS OF ELEMENTWISE INTEGRATIONS INTO           ELEMN2.........700
C ***  A GLOBAL MATRIX AND GLOBAL VECTOR FOR BOTH FLOW AND TRANSPORT     ELEMN2.........800
C ***  EQUATIONS. ALSO CALCULATES VELOCITY AT EACH ELEMENT CENTROID FOR  ELEMN2.........900
C ***  PRINTED OUTPUT. THIS SUBROUTINE HANDLES 2D CALCULATIONS ONLY;     ELEMN2........1000
C ***  3D CALCULATIONS ARE PERFORMED IN SUBROUTINE ELEMN3.               ELEMN2........1100
C                                                                        ELEMN2........1200
C                                                                        ELEMN2........1300
      SUBROUTINE ELEMN2(ML,IN,X,Y,THICK,PITER,UITER,RCIT,RCITM1,POR,     ELEMN2........1400
     1   ALMAX,ALMIN,ATMAX,ATMIN,PERMXX,PERMXY,PERMYX,PERMYY,PANGLE,     ELEMN2........1500
     2   VMAG,VANG,VOL,PMAT,PVEC,UMAT,UVEC,GXSI,GETA,PVEL,LREG,          ELEMN2........1600
     3   IA,JA,PBC,ISPBC,UBC,ISUBC,ISPBG,LPBGSP,PBG1,PBG2,               ELEMN2........1700
     4   IBCPBC,IBCUBC)                                                  ELEMN2........1800
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                ELEMN2........1900
      PARAMETER (NCOLMX=9)                                               ELEMN2........2000
      CHARACTER*80 ERRCOD,CHERR(10),UNAME,FNAME(0:23)                    ELEMN2........2100
      DIMENSION IN(NIN),X(NN),Y(NN),THICK(NN),PITER(NN),                 ELEMN2........2200
     1   UITER(NN),RCIT(NN),RCITM1(NN),POR(NN),PVEL(NN)                  ELEMN2........2300
      DIMENSION PERMXX(NE),PERMXY(NE),PERMYX(NE),PERMYY(NE),PANGLE(NE),  ELEMN2........2400
     1   ALMAX(NE),ALMIN(NE),ATMAX(NE),ATMIN(NE),VMAG(NE),VANG(NE),      ELEMN2........2500
     2   GXSI(NE,4),GETA(NE,4),LREG(NE)                                  ELEMN2........2600
      DIMENSION VOL(NN),PMAT(NELT,NCBI),PVEC(NNVEC),UMAT(NELT,NCBI),     ELEMN2........2700
     1   UVEC(NNVEC),PBC(NBCN),UBC(NBCN),PBG1(NPBG),PBG2(NPBG)           ELEMN2........2800
      DIMENSION BFLOWE(8,8),DFLOWE(8),BTRANE(8,8),DTRANE(8,8),VOLE(8)    ELEMN2........2900
      DIMENSION F(4,4),W(4,4),DET(4),DFDXG(4,4),DFDYG(4,4),              ELEMN2........3000
     1   DWDXG(4,4),DWDYG(4,4)                                           ELEMN2........3100
      DIMENSION SWG(4),RHOG(4),VISCG(4),PORG(4),VXG(4),VYG(4),           ELEMN2........3200
     1   RELKG(4),RGXG(4),RGYG(4),VGMAG(4),THICKG(4)                     ELEMN2........3300
      DIMENSION RXXG(4),RXYG(4),RYXG(4),RYYG(4)                          ELEMN2........3400
      DIMENSION BXXG(4),BXYG(4),BYXG(4),BYYG(4),EXG(4),EYG(4)            ELEMN2........3500
      DIMENSION GXLOC(4),GYLOC(4)                                        ELEMN2........3600
      DIMENSION IA(NDIMIA),JA(NDIMJA),ISPBC(NN),ISUBC(NN),ISPBG(NN)      ELEMN2........3700
      LOGICAL LPBGSP(NPBG)                                               ELEMN2........3800
      INTEGER(1) IBCPBC(NBCN),IBCUBC(NBCN)                               ELEMN2........3900
      DIMENSION INERR(10), RLERR(10)                                     ELEMN2........4000
      DIMENSION J5COL(NCOLMX), J6COL(NCOLMX)                             ELEMN2........4100
      DIMENSION KTYPE(2)                                                 ELEMN2........4200
      COMMON /CONTRL/ GNUP,GNUU,UP,DTMULT,DTMAX,ME,ISSFLO,ISSTRA,ITCYC,  ELEMN2........4300
     1   NPCYC,NUCYC,NPRINT,NBCFPR,NBCSPR,NBCPPR,NBCUPR,NLAKPR,IREAD,    ELEMN2........4400
     1   NBGPPR,NBGUPR,ISTORE,NOUMAT,IUNSAT,IALSAT,KTYPE                 ELEMN2........4500
      COMMON /DIMS/ NN,NE,NIN,NBI,NCBI,NB,NBHALF,NPBC,NUBC,              ELEMN2........4600
     1   NSOP,NSOU,NBCN,NPBG,NUBG,NCIDB                                  ELEMN2........4700
      COMMON /DIMX/ NWI,NWF,NWL,NELT,NNNX,NEX,N48                        ELEMN2........4800
      COMMON /DIMX2/ NELTA,NNVEC,NDIMIA,NDIMJA                           ELEMN2........4900
      COMMON /FNAMES/ UNAME,FNAME                                        ELEMN2........5000
      COMMON /FUNITS/ K00,K0,K1,K2,K3,K4,K5,K6,K7,K8,K9,                 ELEMN2........5100
     1   K10,K11,K12,K13,K14,K15,K16,K17,K18,K19,K20,K21,K22,K23         ELEMN2........5200
      COMMON /GRAVEC/ GRAVX,GRAVY,GRAVZ                                  ELEMN2........5300
      COMMON /ITERAT/ RPM,RPMAX,RUM,RUMAX,ITER,ITRMAX,IPWORS,IUWORS      ELEMN2........5400
      COMMON /JCOLS/ NCOLPR,LCOLPR,NCOLS5,NCOLS6,J5COL,J6COL             ELEMN2........5500
      COMMON /KPRINT/ KNODAL,KELMNT,KINCID,KPLOTP,KPLOTU,                ELEMN2........5600
     1   KPANDS,KVEL,KCORT,KBUDG,KSCRN,KPAUSE                            ELEMN2........5700
      COMMON /PARAMS/ COMPFL,COMPMA,DRWDU,CW,CS,RHOS,SIGMAW,SIGMAS,      ELEMN2........5800
     1   RHOW0,URHOW0,VISC0,PRODF1,PRODS1,PRODF0,PRODS0,CHI1,CHI2        ELEMN2........5900
      COMMON /SOLVI/ KSOLVP,KSOLVU,NN1,NN2,NN3                           ELEMN2........6000
      COMMON /TIMES/ DELT,TSEC,TMIN,THOUR,TDAY,TWEEK,TMONTH,TYEAR,       ELEMN2........6100
     1   TMAX,DELTP,DELTU,DLTPM1,DLTUM1,IT,ITBCS,ITRST,ITMAX,TSTART      ELEMN2........6200
      DATA GLOC/0.577350269189626D0/                                     ELEMN2........6300
      DATA INTIM/0/,ISTOP/0/,GXLOC/-1.D0,1.D0,1.D0,-1.D0/,               ELEMN2........6400
     1   GYLOC/-1.D0,-1.D0,1.D0,1.D0/                                    ELEMN2........6500
      SAVE GLOC,INTIM,ISTOP,GXLOC,GYLOC                                  ELEMN2........6600
C                                                                        ELEMN2........6700
C.....DECIDE WHETHER TO CALCULATE CENTROID VELOCITIES ON THIS CALL       ELEMN2........6800
      IVCALC = 0                                                         ELEMN2........6900
      JVCALC = 0                                                         ELEMN2........7000
      IF ((ML.NE.2).AND.(ITER.EQ.1)) IVCALC = 1                          ELEMN2........7100
      IF (IT.EQ.1) IVCALC = 1                                            ELEMN2........7200
      IF ((KVEL.EQ.1).OR.(K6.NE.-1)) JVCALC = 1                          ELEMN2........7300
      KVCALC = IVCALC + JVCALC                                           ELEMN2........7400
C                                                                        ELEMN2........7500
C.....ON FIRST TIME STEP, PREPARE GRAVITY VECTOR COMPONENTS,             ELEMN2........7600
C        GXSI AND GETA, FOR CONSISTENT VELOCITIES,                       ELEMN2........7700
C        AND CHECK ELEMENT SHAPES                                        ELEMN2........7800
      IF(INTIM) 100,100,2000                                             ELEMN2........7900
  100 INTIM=1                                                            ELEMN2........8000
C.....LOOP THROUGH ALL ELEMENTS TO OBTAIN THE JACOBIAN                   ELEMN2........8100
C        AT EACH OF THE FOUR NODES IN EACH ELEMENT                       ELEMN2........8200
      DO 1000 L=1,NE                                                     ELEMN2........8300
       DO 500 IL=1,4                                                     ELEMN2........8400
        XLOC=GXLOC(IL)                                                   ELEMN2........8500
        YLOC=GYLOC(IL)                                                   ELEMN2........8600
        CALL BASIS2(0000,L,XLOC,YLOC,IN,X,Y,F(1,IL),W(1,IL),DET(IL),     ELEMN2........8700
     1     DFDXG(1,IL),DFDYG(1,IL),DWDXG(1,IL),DWDYG(1,IL),              ELEMN2........8800
     2     PITER,UITER,PVEL,POR,THICK,THICKG(IL),VXG(IL),VYG(IL),        ELEMN2........8900
     3     SWG(IL),RHOG(IL),VISCG(IL),PORG(IL),VGMAG(IL),                ELEMN2........9000
     4     RELKG(IL),PERMXX,PERMXY,PERMYX,PERMYY,CJ11,CJ12,CJ21,CJ22,    ELEMN2........9100
     5     GXSI,GETA,RCIT,RCITM1,RGXG(IL),RGYG(IL),LREG)                 ELEMN2........9200
        GXSI(L,IL)=CJ11*GRAVX+CJ12*GRAVY                                 ELEMN2........9300
        GETA(L,IL)=CJ21*GRAVX+CJ22*GRAVY                                 ELEMN2........9400
C.....CHECK FOR NEGATIVE- OR ZERO-AREA ERRORS IN ELEMENT SHAPES          ELEMN2........9500
        IF(DET(IL)) 200,200,500                                          ELEMN2........9600
  200   ISTOP=ISTOP+1                                                    ELEMN2........9700
        WRITE(K3,400) IN((L-1)*4+IL),L,DET(IL)                           ELEMN2........9800
        WRITE(K00,401) IN((L-1)*4+IL),L,DET(IL)                          ELEMN2........9900
  400   FORMAT(11X,'THE DETERMINANT OF THE JACOBIAN AT NODE ',I9,        ELEMN2.......10000
     1     ' IN ELEMENT ',I9,' IS NEGATIVE OR ZERO, ',1PE15.7)           ELEMN2.......10100
  401   FORMAT(1X,'THE DETERMINANT OF THE JACOBIAN AT NODE ',I9,         ELEMN2.......10200
     1     ' IN ELEMENT ',I9,' IS NEGATIVE OR ZERO, ',1PE15.7)           ELEMN2.......10300
  500  CONTINUE                                                          ELEMN2.......10400
 1000 CONTINUE                                                           ELEMN2.......10500
C                                                                        ELEMN2.......10600
      IF(ISTOP.EQ.0) GOTO 2000                                           ELEMN2.......10700
      ERRCOD = 'INP-14B,22-1'                                            ELEMN2.......10800
      CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                           ELEMN2.......10900
C                                                                        ELEMN2.......11000
C.....LOOP THROUGH ALL ELEMENTS TO CARRY OUT SPATIAL INTEGRATION         ELEMN2.......11100
C        OF FLUX TERMS IN P AND/OR U EQUATIONS                           ELEMN2.......11200
 2000 IF(IUNSAT.NE.0) IUNSAT=2                                           ELEMN2.......11300
      IF(IALSAT.NE.0) IALSAT=2                                           ELEMN2.......11400
C - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  ELEMN2.......11500
C - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  ELEMN2.......11600
C - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  ELEMN2.......11700
      DO 9999 L=1,NE                                                     ELEMN2.......11800
       XIX=-1.D0                                                         ELEMN2.......11900
       YIY=-1.D0                                                         ELEMN2.......12000
       KG=0                                                              ELEMN2.......12100
C.....OBTAIN BASIS FUNCTION AND RELATED INFORMATION AT EACH OF           ELEMN2.......12200
C        FOUR GAUSS POINTS IN THE ELEMENT                                ELEMN2.......12300
       DO 2200 IYL=1,2                                                   ELEMN2.......12400
        DO 2100 IXL=1,2                                                  ELEMN2.......12500
         KG=KG+1                                                         ELEMN2.......12600
         XLOC=XIX*GLOC                                                   ELEMN2.......12700
         YLOC=YIY*GLOC                                                   ELEMN2.......12800
         CALL BASIS2(0001,L,XLOC,YLOC,IN,X,Y,F(1,KG),W(1,KG),DET(KG),    ELEMN2.......12900
     1      DFDXG(1,KG),DFDYG(1,KG),DWDXG(1,KG),DWDYG(1,KG),             ELEMN2.......13000
     2      PITER,UITER,PVEL,POR,THICK,THICKG(KG),VXG(KG),VYG(KG),       ELEMN2.......13100
     3      SWG(KG),RHOG(KG),VISCG(KG),PORG(KG),VGMAG(KG),               ELEMN2.......13200
     4      RELKG(KG),PERMXX,PERMXY,PERMYX,PERMYY,CJ11,CJ12,CJ21,CJ22,   ELEMN2.......13300
     5      GXSI,GETA,RCIT,RCITM1,RGXG(KG),RGYG(KG),LREG)                ELEMN2.......13400
 2100    XIX=-XIX                                                        ELEMN2.......13500
 2200   YIY=-YIY                                                         ELEMN2.......13600
C                                                                        ELEMN2.......13700
C.....CALCULATE VELOCITY AT ELEMENT CENTROID WHEN REQUIRED               ELEMN2.......13800
       IF(KVCALC-2) 3000,2300,3000                                       ELEMN2.......13900
 2300  AXSUM=0.0D0                                                       ELEMN2.......14000
       AYSUM=0.0D0                                                       ELEMN2.......14100
       DO 2400 KG=1,4                                                    ELEMN2.......14200
        AXSUM=AXSUM+VXG(KG)                                              ELEMN2.......14300
 2400   AYSUM=AYSUM+VYG(KG)                                              ELEMN2.......14400
       VMAG(L)=DSQRT(AXSUM*AXSUM+AYSUM*AYSUM)                            ELEMN2.......14500
       IF (VMAG(L).NE.0D0) THEN                                          ELEMN2.......14600
          VMAG(L)=VMAG(L)*2.5D-1                                         ELEMN2.......14700
          VANG(L)=DATAN2(AYSUM,AXSUM)*5.729577951308232D+1               ELEMN2.......14800
       ELSE                                                              ELEMN2.......14900
          VANG(L)=0D0                                                    ELEMN2.......15000
       END IF                                                            ELEMN2.......15100
C                                                                        ELEMN2.......15200
C.....INCLUDE MESH THICKNESS IN NUMERICAL INTEGRATION                    ELEMN2.......15300
 3000  DO 3300 KG=1,4                                                    ELEMN2.......15400
 3300   DET(KG)=THICKG(KG)*DET(KG)                                       ELEMN2.......15500
C                                                                        ELEMN2.......15600
C.....CALCULATE PARAMETERS FOR FLUID MASS BALANCE AT GAUSS POINTS        ELEMN2.......15700
       IF(ML-1) 3400,3400,6100                                           ELEMN2.......15800
 3400  SWTEST=0.D0                                                       ELEMN2.......15900
       DO 4000 KG=1,4                                                    ELEMN2.......16000
        SWTEST=SWTEST+SWG(KG)                                            ELEMN2.......16100
        ROMG=RHOG(KG)*RELKG(KG)/VISCG(KG)                                ELEMN2.......16200
        RXXG(KG)=PERMXX(L)*ROMG                                          ELEMN2.......16300
        RXYG(KG)=PERMXY(L)*ROMG                                          ELEMN2.......16400
        RYXG(KG)=PERMYX(L)*ROMG                                          ELEMN2.......16500
        RYYG(KG)=PERMYY(L)*ROMG                                          ELEMN2.......16600
 4000   CONTINUE                                                         ELEMN2.......16700
C                                                                        ELEMN2.......16800
C.....INTEGRATE FLUID MASS BALANCE IN AN UNSATURATED ELEMENT             ELEMN2.......16900
C        USING ASYMMETRIC WEIGHTING FUNCTIONS                            ELEMN2.......17000
       IF(UP.LE.1.0D-6) GOTO 5200                                        ELEMN2.......17100
       IF(SWTEST-3.999D0) 4200,5200,5200                                 ELEMN2.......17200
 4200  DO 4300 I=1,4                                                     ELEMN2.......17300
        VOLE(I) = 0.D0                                                   ELEMN2.......17400
        DFLOWE(I) = 0.D0                                                 ELEMN2.......17500
        DO 4300 J=1,4                                                    ELEMN2.......17600
         BFLOWE(I,J) = 0.D0                                              ELEMN2.......17700
 4300  CONTINUE                                                          ELEMN2.......17800
       DO 5000 KG=1,4                                                    ELEMN2.......17900
        RXXGD = RXXG(KG)*DET(KG)                                         ELEMN2.......18000
        RXYGD = RXYG(KG)*DET(KG)                                         ELEMN2.......18100
        RYXGD = RYXG(KG)*DET(KG)                                         ELEMN2.......18200
        RYYGD = RYYG(KG)*DET(KG)                                         ELEMN2.......18300
        RDRX = RXXGD*RGXG(KG) + RXYGD*RGYG(KG)                           ELEMN2.......18400
        RDRY = RYXGD*RGXG(KG) + RYYGD*RGYG(KG)                           ELEMN2.......18500
        DO 4400 I=1,4                                                    ELEMN2.......18600
         VOLE(I) = VOLE(I) + F(I,KG)*DET(KG)                             ELEMN2.......18700
         DFLOWE(I) = DFLOWE(I) + RDRX*DWDXG(I,KG) + RDRY*DWDYG(I,KG)     ELEMN2.......18800
 4400   CONTINUE                                                         ELEMN2.......18900
        DO 5000 J=1,4                                                    ELEMN2.......19000
         RDDFJX = RXXGD*DFDXG(J,KG) + RXYGD*DFDYG(J,KG)                  ELEMN2.......19100
         RDDFJY = RYXGD*DFDXG(J,KG) + RYYGD*DFDYG(J,KG)                  ELEMN2.......19200
         DO 5000 I=1,4                                                   ELEMN2.......19300
          BFLOWE(I,J) = BFLOWE(I,J) + DWDXG(I,KG)*RDDFJX                 ELEMN2.......19400
     1                  + DWDYG(I,KG)*RDDFJY                             ELEMN2.......19500
 5000  CONTINUE                                                          ELEMN2.......19600
       GOTO 6050                                                         ELEMN2.......19700
C                                                                        ELEMN2.......19800
C.....INTEGRATE FLUID MASS BALANCE IN A SATURATED OR UNSATURATED         ELEMN2.......19900
C        ELEMENT USING SYMMETRIC WEIGHTING FUNCTIONS                     ELEMN2.......20000
 5200  DO 5300 I=1,4                                                     ELEMN2.......20100
        VOLE(I) = 0.D0                                                   ELEMN2.......20200
        DFLOWE(I) = 0.D0                                                 ELEMN2.......20300
        DO 5300 J=1,4                                                    ELEMN2.......20400
         BFLOWE(I,J) = 0.D0                                              ELEMN2.......20500
 5300  CONTINUE                                                          ELEMN2.......20600
       DO 6000 KG=1,4                                                    ELEMN2.......20700
        RXXGD = RXXG(KG)*DET(KG)                                         ELEMN2.......20800
        RXYGD = RXYG(KG)*DET(KG)                                         ELEMN2.......20900
        RYXGD = RYXG(KG)*DET(KG)                                         ELEMN2.......21000
        RYYGD = RYYG(KG)*DET(KG)                                         ELEMN2.......21100
        RDRX = RXXGD*RGXG(KG) + RXYGD*RGYG(KG)                           ELEMN2.......21200
        RDRY = RYXGD*RGXG(KG) + RYYGD*RGYG(KG)                           ELEMN2.......21300
        DO 5400 I=1,4                                                    ELEMN2.......21400
         VOLE(I) = VOLE(I) + F(I,KG)*DET(KG)                             ELEMN2.......21500
         DFLOWE(I) = DFLOWE(I) + RDRX*DFDXG(I,KG) + RDRY*DFDYG(I,KG)     ELEMN2.......21600
 5400   CONTINUE                                                         ELEMN2.......21700
        DO 6000 J=1,4                                                    ELEMN2.......21800
         RDDFJX = RXXGD*DFDXG(J,KG) + RXYGD*DFDYG(J,KG)                  ELEMN2.......21900
         RDDFJY = RYXGD*DFDXG(J,KG) + RYYGD*DFDYG(J,KG)                  ELEMN2.......22000
         DO 6000 I=1,4                                                   ELEMN2.......22100
          BFLOWE(I,J) = BFLOWE(I,J) + DFDXG(I,KG)*RDDFJX                 ELEMN2.......22200
     1                  + DFDYG(I,KG)*RDDFJY                             ELEMN2.......22300
 6000  CONTINUE                                                          ELEMN2.......22400
 6050  CONTINUE                                                          ELEMN2.......22500
       IF(ML-1) 6100,9000,6100                                           ELEMN2.......22600
 6100  IF(NOUMAT.EQ.1) GOTO 9000                                         ELEMN2.......22700
C                                                                        ELEMN2.......22800
C                                                                        ELEMN2.......22900
C.....CALCULATE PARAMETERS FOR ENERGY BALANCE OR SOLUTE MASS BALANCE     ELEMN2.......23000
C        AT GAUSS POINTS                                                 ELEMN2.......23100
       DO 7000 KG=1,4                                                    ELEMN2.......23200
        ESWG=PORG(KG)*SWG(KG)                                            ELEMN2.......23300
        RHOCWG=RHOG(KG)*CW                                               ELEMN2.......23400
        ESRCG=ESWG*RHOCWG                                                ELEMN2.......23500
        IF(VGMAG(KG)) 6300,6300,6600                                     ELEMN2.......23600
 6300   EXG(KG)=0.0D0                                                    ELEMN2.......23700
        EYG(KG)=0.0D0                                                    ELEMN2.......23800
        DXXG=0.0D0                                                       ELEMN2.......23900
        DXYG=0.0D0                                                       ELEMN2.......24000
        DYXG=0.0D0                                                       ELEMN2.......24100
        DYYG=0.0D0                                                       ELEMN2.......24200
        GOTO 6900                                                        ELEMN2.......24300
 6600   EXG(KG)=ESRCG*VXG(KG)                                            ELEMN2.......24400
        EYG(KG)=ESRCG*VYG(KG)                                            ELEMN2.......24500
C                                                                        ELEMN2.......24600
C.....DISPERSIVITY MODEL FOR 2D ANISOTROPIC MEDIA                        ELEMN2.......24700
C        WITH PRINCIPAL DISPERSIVITIES ALMAX, ALMIN, ATMAX, AND ATMIN    ELEMN2.......24800
        VANGG=1.570796327D0                                              ELEMN2.......24900
        IF(VXG(KG)*VXG(KG).GT.0.D0) VANGG=DATAN(VYG(KG)/VXG(KG))         ELEMN2.......25000
        VKANGG=VANGG-PANGLE(L)                                           ELEMN2.......25100
        DCO=DCOS(VKANGG)                                                 ELEMN2.......25200
        DSI=DSIN(VKANGG)                                                 ELEMN2.......25300
C.....EFFECTIVE LONGITUDINAL DISPERSIVITY IN FLOW DIRECTION, ALEFF       ELEMN2.......25400
        ALEFF=0.0D0                                                      ELEMN2.......25500
        IF(ALMAX(L)+ALMIN(L)) 6800,6800,6700                             ELEMN2.......25600
 6700   ALEFF=ALMAX(L)*ALMIN(L)/(ALMIN(L)*DCO*DCO+ALMAX(L)*DSI*DSI)      ELEMN2.......25700
 6800   DLG=ALEFF*VGMAG(KG)                                              ELEMN2.......25800
C.....EFFECTIVE TRANSVERSE DISPERSIVITY IN FLOW DIRECTION, ATEFF.        ELEMN2.......25900
C        NOTE THAT, STARTING WITH VERSION 2D3D.1, ATMAX AND ATMIN        ELEMN2.......26000
C        HAVE EXCHANGED IDENTITIES TO MAKE THE 2D DISPERSION MODEL       ELEMN2.......26100
C        CONCEPTUALLY CONSISTENT WITH THE 3D MODEL.                      ELEMN2.......26200
        ATEFF=0.0D0                                                      ELEMN2.......26300
        IF(ATMAX(L)+ATMIN(L)) 6860,6860,6840                             ELEMN2.......26400
 6840   ATEFF=ATMAX(L)*ATMIN(L)/(ATMAX(L)*DCO*DCO+ATMIN(L)*DSI*DSI)      ELEMN2.......26500
 6860   DTG=ATEFF*VGMAG(KG)                                              ELEMN2.......26600
C                                                                        ELEMN2.......26700
        VXVG=VXG(KG)/VGMAG(KG)                                           ELEMN2.......26800
        VYVG=VYG(KG)/VGMAG(KG)                                           ELEMN2.......26900
        VXVG2=VXVG*VXVG                                                  ELEMN2.......27000
        VYVG2=VYVG*VYVG                                                  ELEMN2.......27100
C.....DISPERSION TENSOR                                                  ELEMN2.......27200
        DXXG=DLG*VXVG2+DTG*VYVG2                                         ELEMN2.......27300
        DYYG=DTG*VXVG2+DLG*VYVG2                                         ELEMN2.......27400
        DXYG=(DLG-DTG)*VXVG*VYVG                                         ELEMN2.......27500
        DYXG=DXYG                                                        ELEMN2.......27600
C                                                                        ELEMN2.......27700
C.....IN-PARALLEL CONDUCTIVITIES (DIFFUSIVITIES) FORMULA                 ELEMN2.......27800
 6900   IF (ME.EQ.1) THEN                                                ELEMN2.......27900
C..........FOR ENERGY TRANSPORT:                                         ELEMN2.......28000
           ESE = ESWG*SIGMAW + (1D0-PORG(KG))*SIGMAS                     ELEMN2.......28100
        ELSE                                                             ELEMN2.......28200
C..........FOR SOLUTE TRANSPORT:                                         ELEMN2.......28300
           ESE = ESRCG*SIGMAW                                            ELEMN2.......28400
        END IF                                                           ELEMN2.......28500
C.....ADD DIFFUSION AND DISPERSION TERMS TO TOTAL DISPERSION TENSOR      ELEMN2.......28600
        BXXG(KG)=ESRCG*DXXG+ESE                                          ELEMN2.......28700
        BXYG(KG)=ESRCG*DXYG                                              ELEMN2.......28800
        BYXG(KG)=ESRCG*DYXG                                              ELEMN2.......28900
 7000   BYYG(KG)=ESRCG*DYYG+ESE                                          ELEMN2.......29000
C                                                                        ELEMN2.......29100
C.....INTEGRATE SOLUTE MASS BALANCE OR ENERGY BALANCE                    ELEMN2.......29200
C        USING SYMMETRIC WEIGHTING FUNCTIONS FOR DISPERSION TERM AND     ELEMN2.......29300
C        USING EITHER SYMMETRIC OR ASYMMETRIC WEIGHTING FUNCTIONS        ELEMN2.......29400
C        FOR ADVECTION TERM                                              ELEMN2.......29500
         DO 7400 I=1,4                                                   ELEMN2.......29600
         DO 7400 J=1,4                                                   ELEMN2.......29700
            BTRANE(I,J) = 0.D0                                           ELEMN2.......29800
            DTRANE(I,J) = 0.D0                                           ELEMN2.......29900
 7400    CONTINUE                                                        ELEMN2.......30000
         DO 8000 KG=1,4                                                  ELEMN2.......30100
            BXXGD = BXXG(KG)*DET(KG)                                     ELEMN2.......30200
            BXYGD = BXYG(KG)*DET(KG)                                     ELEMN2.......30300
            BYXGD = BYXG(KG)*DET(KG)                                     ELEMN2.......30400
            BYYGD = BYYG(KG)*DET(KG)                                     ELEMN2.......30500
            EXGD = EXG(KG)*DET(KG)                                       ELEMN2.......30600
            EYGD = EYG(KG)*DET(KG)                                       ELEMN2.......30700
            DO 8000 J=1,4                                                ELEMN2.......30800
               BDDFJX = BXXGD*DFDXG(J,KG) + BXYGD*DFDYG(J,KG)            ELEMN2.......30900
               BDDFJY = BYXGD*DFDXG(J,KG) + BYYGD*DFDYG(J,KG)            ELEMN2.......31000
               EDDFJ = EXGD*DFDXG(J,KG) + EYGD*DFDYG(J,KG)               ELEMN2.......31100
               DO 8000 I=1,4                                             ELEMN2.......31200
                  BTRANE(I,J) = BTRANE(I,J) + DFDXG(I,KG)*BDDFJX         ELEMN2.......31300
     1               + DFDYG(I,KG)*BDDFJY                                ELEMN2.......31400
                  DTRANE(I,J) = DTRANE(I,J) + EDDFJ*W(I,KG)              ELEMN2.......31500
 8000    CONTINUE                                                        ELEMN2.......31600
 9000  CONTINUE                                                          ELEMN2.......31700
C                                                                        ELEMN2.......31800
C                                                                        ELEMN2.......31900
C.....SEND RESULTS OF INTEGRATIONS FOR THIS ELEMENT                      ELEMN2.......32000
C        TO GLOBAL ASSEMBLY ROUTINE:                                     ELEMN2.......32100
C        GLOBAN -- SUTRA'S ORIGINAL BANDED FORMAT                        ELEMN2.......32200
C        GLOCOL -- SLAP COLUMN FORMAT                                    ELEMN2.......32300
      IF (KSOLVP.EQ.0) THEN                                              ELEMN2.......32400
         CALL GLOBAN(L,ML,VOLE,BFLOWE,DFLOWE,BTRANE,DTRANE,              ELEMN2.......32500
     1      IN,VOL,PMAT,PVEC,UMAT,UVEC,PBC,UBC)                          ELEMN2.......32600
      ELSE                                                               ELEMN2.......32700
         CALL GLOCOL(L,ML,VOLE,BFLOWE,DFLOWE,BTRANE,DTRANE,              ELEMN2.......32800
     1      IN,VOL,PMAT,PVEC,UMAT,UVEC,IA,JA)                            ELEMN2.......32900
      END IF                                                             ELEMN2.......33000
 9999 CONTINUE                                                           ELEMN2.......33100
C - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  ELEMN2.......33200
C - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  ELEMN2.......33300
C - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  ELEMN2.......33400
C                                                                        ELEMN2.......33500
C                                                                        ELEMN2.......33600
      RETURN                                                             ELEMN2.......33700
      END                                                                ELEMN2.......33800
C                                                                        ELEMN2.......33900
C     SUBROUTINE        E  L  E  M  N  3           SUTRA VERSION 3.0     ELEMN3.........100
C                                                                        ELEMN3.........200
C *** PURPOSE :                                                          ELEMN3.........300
C ***  TO CONTROL AND CARRY OUT ALL CALCULATIONS FOR EACH ELEMENT BY     ELEMN3.........400
C ***  OBTAINING ELEMENT INFORMATION FROM THE BASIS FUNCTION ROUTINE,    ELEMN3.........500
C ***  CARRYING OUT GAUSSIAN INTEGRATION OF FINITE ELEMENT INTEGRALS,    ELEMN3.........600
C ***  AND ASSEMBLING RESULTS OF ELEMENTWISE INTEGRATIONS INTO           ELEMN3.........700
C ***  A GLOBAL MATRIX AND GLOBAL VECTOR FOR BOTH FLOW AND TRANSPORT     ELEMN3.........800
C ***  EQUATIONS. ALSO CALCULATES VELOCITY AT EACH ELEMENT CENTROID FOR  ELEMN3.........900
C ***  PRINTED OUTPUT. THIS SUBROUTINE HANDLES 3D CALCULATIONS ONLY.     ELEMN3........1000
C ***  2D CALCULATIONS ARE PERFORMED IN SUBROUTINE ELEMN2.               ELEMN3........1100
C                                                                        ELEMN3........1200
C                                                                        ELEMN3........1300
      SUBROUTINE ELEMN3(ML,IN,X,Y,Z,PITER,UITER,RCIT,RCITM1,POR,         ELEMN3........1400
     1   ALMAX,ALMID,ALMIN,ATMAX,ATMID,ATMIN,                            ELEMN3........1500
     2   PERMXX,PERMXY,PERMXZ,PERMYX,PERMYY,PERMYZ,PERMZX,PERMZY,PERMZZ, ELEMN3........1600
     3   PANGL1,PANGL2,PANGL3,VMAG,VANG1,VANG2,VOL,PMAT,PVEC,            ELEMN3........1700
     4   UMAT,UVEC,GXSI,GETA,GZET,PVEL,LREG,IA,JA,PBC,ISPBC,UBC,ISUBC,   ELEMN3........1800
     5   ISPBG,LPBGSP,PBG1,PBG2,IBCPBC,IBCUBC)                           ELEMN3........1900
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                ELEMN3........2000
      PARAMETER (NCOLMX=9)                                               ELEMN3........2100
      CHARACTER*80 ERRCOD,CHERR(10),UNAME,FNAME(0:23)                    ELEMN3........2200
      DIMENSION IN(NIN),X(NN),Y(NN),Z(NN),PITER(NN),                     ELEMN3........2300
     1   UITER(NN),RCIT(NN),RCITM1(NN),POR(NN),PVEL(NN)                  ELEMN3........2400
      DIMENSION PERMXX(NE),PERMXY(NE),PERMXZ(NE),PERMYX(NE),             ELEMN3........2500
     1   PERMYY(NE),PERMYZ(NE),PERMZX(NE),PERMZY(NE),PERMZZ(NE),         ELEMN3........2600
     2   PANGL1(NE),PANGL2(NE),PANGL3(NE),                               ELEMN3........2700
     3   ALMAX(NE),ALMID(NE),ALMIN(NE),ATMAX(NE),ATMID(NE),ATMIN(NE),    ELEMN3........2800
     4   VMAG(NE),VANG1(NE),VANG2(NE),                                   ELEMN3........2900
     5   GXSI(NE,8),GETA(NE,8),GZET(NE,8),LREG(NE)                       ELEMN3........3000
      DIMENSION VOL(NN),PMAT(NELT,NCBI),PVEC(NNVEC),UMAT(NELT,NCBI),     ELEMN3........3100
     1   UVEC(NNVEC),PBC(NBCN),UBC(NBCN),PBG1(NPBG),PBG2(NPBG)           ELEMN3........3200
      DIMENSION BFLOWE(8,8),DFLOWE(8),BTRANE(8,8),DTRANE(8,8),VOLE(8)    ELEMN3........3300
      DIMENSION F(8,8),W(8,8),DET(8),DFDXG(8,8),DFDYG(8,8),DFDZG(8,8),   ELEMN3........3400
     1   DWDXG(8,8),DWDYG(8,8),DWDZG(8,8)                                ELEMN3........3500
      DIMENSION SWG(8),RHOG(8),VISCG(8),PORG(8),VXG(8),VYG(8),           ELEMN3........3600
     1   VZG(8),                                                         ELEMN3........3700
     2   RELKG(8),RGXG(8),RGYG(8),RGZG(8),VGMAG(8)                       ELEMN3........3800
      DIMENSION RXXG(8),RXYG(8),RXZG(8),RYXG(8),RYYG(8),RYZG(8),         ELEMN3........3900
     1   RZXG(8),RZYG(8),RZZG(8)                                         ELEMN3........4000
      DIMENSION BXXG(8),BXYG(8),BXZG(8),BYXG(8),BYYG(8),BYZG(8),         ELEMN3........4100
     1   BZXG(8),BZYG(8),BZZG(8),EXG(8),EYG(8),EZG(8)                    ELEMN3........4200
      DIMENSION GXLOC(8),GYLOC(8),GZLOC(8)                               ELEMN3........4300
      DIMENSION IA(NDIMIA),JA(NDIMJA),ISPBC(NN),ISUBC(NN),ISPBG(NN)      ELEMN3........4400
      LOGICAL LPBGSP(NPBG)                                               ELEMN3........4500
      INTEGER(1) IBCPBC(NBCN),IBCUBC(NBCN)                               ELEMN3........4600
      DIMENSION INERR(10),RLERR(10)                                      ELEMN3........4700
      DIMENSION J5COL(NCOLMX), J6COL(NCOLMX)                             ELEMN3........4800
      DIMENSION KTYPE(2)                                                 ELEMN3........4900
      COMMON /CONTRL/ GNUP,GNUU,UP,DTMULT,DTMAX,ME,ISSFLO,ISSTRA,ITCYC,  ELEMN3........5000
     1   NPCYC,NUCYC,NPRINT,NBCFPR,NBCSPR,NBCPPR,NBCUPR,NLAKPR,IREAD,    ELEMN3........5100
     1   NBGPPR,NBGUPR,ISTORE,NOUMAT,IUNSAT,IALSAT,KTYPE                 ELEMN3........5200
      COMMON /DIMS/ NN,NE,NIN,NBI,NCBI,NB,NBHALF,NPBC,NUBC,              ELEMN3........5300
     1   NSOP,NSOU,NBCN,NPBG,NUBG,NCIDB                                  ELEMN3........5400
      COMMON /DIMX/ NWI,NWF,NWL,NELT,NNNX,NEX,N48                        ELEMN3........5500
      COMMON /DIMX2/ NELTA, NNVEC, NDIMIA, NDIMJA                        ELEMN3........5600
      COMMON /FNAMES/ UNAME,FNAME                                        ELEMN3........5700
      COMMON /FUNITS/ K00,K0,K1,K2,K3,K4,K5,K6,K7,K8,K9,                 ELEMN3........5800
     1   K10,K11,K12,K13,K14,K15,K16,K17,K18,K19,K20,K21,K22,K23         ELEMN3........5900
      COMMON /GRAVEC/ GRAVX,GRAVY,GRAVZ                                  ELEMN3........6000
      COMMON /ITERAT/ RPM,RPMAX,RUM,RUMAX,ITER,ITRMAX,IPWORS,IUWORS      ELEMN3........6100
      COMMON /JCOLS/ NCOLPR, LCOLPR, NCOLS5, NCOLS6, J5COL, J6COL        ELEMN3........6200
      COMMON /KPRINT/ KNODAL,KELMNT,KINCID,KPLOTP,KPLOTU,                ELEMN3........6300
     1   KPANDS,KVEL,KCORT,KBUDG,KSCRN,KPAUSE                            ELEMN3........6400
      COMMON /PARAMS/ COMPFL,COMPMA,DRWDU,CW,CS,RHOS,SIGMAW,SIGMAS,      ELEMN3........6500
     1   RHOW0,URHOW0,VISC0,PRODF1,PRODS1,PRODF0,PRODS0,CHI1,CHI2        ELEMN3........6600
      COMMON /SOLVI/ KSOLVP,KSOLVU,NN1,NN2,NN3                           ELEMN3........6700
      COMMON /TIMES/ DELT,TSEC,TMIN,THOUR,TDAY,TWEEK,TMONTH,TYEAR,       ELEMN3........6800
     1   TMAX,DELTP,DELTU,DLTPM1,DLTUM1,IT,ITBCS,ITRST,ITMAX,TSTART      ELEMN3........6900
      DATA GLOC/0.577350269189626D0/                                     ELEMN3........7000
      DATA INTIM/0/,ISTOP/0/                                             ELEMN3........7100
      DATA GXLOC/-1.D0,1.D0,1.D0,-1.D0,-1.D0,1.D0,1.D0,-1.D0/            ELEMN3........7200
      DATA GYLOC/-1.D0,-1.D0,1.D0,1.D0,-1.D0,-1.D0,1.D0,1.D0/            ELEMN3........7300
      DATA GZLOC/-1.D0,-1.D0,-1.D0,-1.D0,1.D0,1.D0,1.D0,1.D0/            ELEMN3........7400
      SAVE GLOC,INTIM,ISTOP,GXLOC,GYLOC,GZLOC                            ELEMN3........7500
C                                                                        ELEMN3........7600
C.....DECIDE WHETHER TO CALCULATE CENTROID VELOCITIES ON THIS CALL       ELEMN3........7700
      IVCALC = 0                                                         ELEMN3........7800
      JVCALC = 0                                                         ELEMN3........7900
      IF ((ML.NE.2).AND.(ITER.EQ.1)) IVCALC = 1                          ELEMN3........8000
      IF (IT.EQ.1) IVCALC = 1                                            ELEMN3........8100
      IF ((KVEL.EQ.1).OR.(K6.NE.-1)) JVCALC = 1                          ELEMN3........8200
      KVCALC = IVCALC + JVCALC                                           ELEMN3........8300
C                                                                        ELEMN3........8400
C.....ON FIRST TIME STEP, PREPARE GRAVITY VECTOR COMPONENTS,             ELEMN3........8500
C        GXSI, GETA, AND GZET FOR CONSISTENT VELOCITIES,                 ELEMN3........8600
C        AND CHECK ELEMENT SHAPES                                        ELEMN3........8700
      IF(INTIM) 100,100,2000                                             ELEMN3........8800
  100 INTIM=1                                                            ELEMN3........8900
C.....LOOP THROUGH ALL ELEMENTS TO OBTAIN THE JACOBIAN                   ELEMN3........9000
C        AT EACH OF THE EIGHT NODES IN EACH ELEMENT                      ELEMN3........9100
      DO 1000 L=1,NE                                                     ELEMN3........9200
       DO 500 IL=1,8                                                     ELEMN3........9300
        XLOC=GXLOC(IL)                                                   ELEMN3........9400
        YLOC=GYLOC(IL)                                                   ELEMN3........9500
        ZLOC=GZLOC(IL)                                                   ELEMN3........9600
        CALL BASIS3(0000,L,XLOC,YLOC,ZLOC,IN,X,Y,Z,F(1,IL),W(1,IL),      ELEMN3........9700
     1     DET(IL),DFDXG(1,IL),DFDYG(1,IL),DFDZG(1,IL),                  ELEMN3........9800
     2     DWDXG(1,IL),DWDYG(1,IL),DWDZG(1,IL),PITER,UITER,PVEL,POR,     ELEMN3........9900
     3     VXG(IL),VYG(IL),VZG(IL),SWG(IL),RHOG(IL),VISCG(IL),           ELEMN3.......10000
     4     PORG(IL),VGMAG(IL),RELKG(IL),PERMXX,PERMXY,PERMXZ,            ELEMN3.......10100
     5     PERMYX,PERMYY,PERMYZ,PERMZX,PERMZY,PERMZZ,                    ELEMN3.......10200
     6     CJ11,CJ12,CJ13,CJ21,CJ22,CJ23,CJ31,CJ32,CJ33,                 ELEMN3.......10300
     7     GXSI,GETA,GZET,RCIT,RCITM1,RGXG(IL),RGYG(IL),RGZG(IL),LREG)   ELEMN3.......10400
        GXSI(L,IL)=CJ11*GRAVX+CJ12*GRAVY+CJ13*GRAVZ                      ELEMN3.......10500
        GETA(L,IL)=CJ21*GRAVX+CJ22*GRAVY+CJ23*GRAVZ                      ELEMN3.......10600
        GZET(L,IL)=CJ31*GRAVX+CJ32*GRAVY+CJ33*GRAVZ                      ELEMN3.......10700
C.....CHECK FOR NEGATIVE- OR ZERO-AREA ERRORS IN ELEMENT SHAPES          ELEMN3.......10800
        IF(DET(IL)) 200,200,500                                          ELEMN3.......10900
  200   ISTOP=ISTOP+1                                                    ELEMN3.......11000
        WRITE(K3,400) IN((L-1)*8+IL),L,DET(IL)                           ELEMN3.......11100
        WRITE(K00,401) IN((L-1)*8+IL),L,DET(IL)                          ELEMN3.......11200
  400   FORMAT(11X,'THE DETERMINANT OF THE JACOBIAN AT NODE ',I9,        ELEMN3.......11300
     1     ' IN ELEMENT ',I9,' IS NEGATIVE OR ZERO, ',1PE15.7)           ELEMN3.......11400
  401   FORMAT(1X,'THE DETERMINANT OF THE JACOBIAN AT NODE ',I9,         ELEMN3.......11500
     1     ' IN ELEMENT ',I9,' IS NEGATIVE OR ZERO, ',1PE15.7)           ELEMN3.......11600
  500  CONTINUE                                                          ELEMN3.......11700
 1000 CONTINUE                                                           ELEMN3.......11800
C                                                                        ELEMN3.......11900
      IF(ISTOP.EQ.0) GOTO 2000                                           ELEMN3.......12000
      ERRCOD = 'INP-14B,22-1'                                            ELEMN3.......12100
      CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                           ELEMN3.......12200
C                                                                        ELEMN3.......12300
C.....LOOP THROUGH ALL ELEMENTS TO CARRY OUT SPATIAL INTEGRATION         ELEMN3.......12400
C        OF FLUX TERMS IN P AND/OR U EQUATIONS                           ELEMN3.......12500
 2000 IF(IUNSAT.NE.0) IUNSAT=2                                           ELEMN3.......12600
      IF(IALSAT.NE.0) IALSAT=2                                           ELEMN3.......12700
C - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  ELEMN3.......12800
C - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  ELEMN3.......12900
C - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  ELEMN3.......13000
      DO 9999 L=1,NE                                                     ELEMN3.......13100
       XIX=-1.D0                                                         ELEMN3.......13200
       YIY=-1.D0                                                         ELEMN3.......13300
       ZIZ=-1.D0                                                         ELEMN3.......13400
       KG=0                                                              ELEMN3.......13500
C.....OBTAIN BASIS FUNCTION AND RELATED INFORMATION AT EACH OF           ELEMN3.......13600
C        EIGHT GAUSS POINTS IN THE ELEMENT                               ELEMN3.......13700
       DO 2250 IZL=1,2                                                   ELEMN3.......13800
        DO 2200 IYL=1,2                                                  ELEMN3.......13900
         DO 2100 IXL=1,2                                                 ELEMN3.......14000
          KG=KG+1                                                        ELEMN3.......14100
          XLOC=XIX*GLOC                                                  ELEMN3.......14200
          YLOC=YIY*GLOC                                                  ELEMN3.......14300
          ZLOC=ZIZ*GLOC                                                  ELEMN3.......14400
          CALL BASIS3(0001,L,XLOC,YLOC,ZLOC,IN,X,Y,Z,F(1,KG),W(1,KG),    ELEMN3.......14500
     1       DET(KG),DFDXG(1,KG),DFDYG(1,KG),DFDZG(1,KG),                ELEMN3.......14600
     2       DWDXG(1,KG),DWDYG(1,KG),DWDZG(1,KG),PITER,UITER,PVEL,POR,   ELEMN3.......14700
     3       VXG(KG),VYG(KG),VZG(KG),SWG(KG),RHOG(KG),VISCG(KG),         ELEMN3.......14800
     4       PORG(KG),VGMAG(KG),RELKG(KG),PERMXX,PERMXY,PERMXZ,          ELEMN3.......14900
     5       PERMYX,PERMYY,PERMYZ,PERMZX,PERMZY,PERMZZ,                  ELEMN3.......15000
     6       CJ11,CJ12,CJ13,CJ21,CJ22,CJ23,CJ31,CJ32,CJ33,               ELEMN3.......15100
     7       GXSI,GETA,GZET,RCIT,RCITM1,RGXG(KG),RGYG(KG),RGZG(KG),LREG) ELEMN3.......15200
 2100     XIX=-XIX                                                       ELEMN3.......15300
 2200    YIY=-YIY                                                        ELEMN3.......15400
 2250   ZIZ=-ZIZ                                                         ELEMN3.......15500
C                                                                        ELEMN3.......15600
C.....CALCULATE VELOCITY AT ELEMENT CENTROID WHEN REQUIRED               ELEMN3.......15700
       IF(KVCALC-2) 3000,2300,3000                                       ELEMN3.......15800
 2300  AXSUM=0.0D0                                                       ELEMN3.......15900
       AYSUM=0.0D0                                                       ELEMN3.......16000
       AZSUM=0.0D0                                                       ELEMN3.......16100
       DO 2400 KG=1,8                                                    ELEMN3.......16200
        AXSUM=AXSUM+VXG(KG)                                              ELEMN3.......16300
        AYSUM=AYSUM+VYG(KG)                                              ELEMN3.......16400
 2400   AZSUM=AZSUM+VZG(KG)                                              ELEMN3.......16500
       VMAG(L)=DSQRT(AXSUM*AXSUM+AYSUM*AYSUM+AZSUM*AZSUM)                ELEMN3.......16600
       IF (VMAG(L).NE.0D0) THEN                                          ELEMN3.......16700
          VANG2(L)=DASIN(AZSUM/VMAG(L))*5.729577951308232D+1             ELEMN3.......16800
          VMAG(L)=VMAG(L)*1.25D-1                                        ELEMN3.......16900
          VANG1(L)=DATAN2(AYSUM,AXSUM)*5.729577951308232D+1              ELEMN3.......17000
       ELSE                                                              ELEMN3.......17100
          VANG1(L)=0D0                                                   ELEMN3.......17200
          VANG2(L)=0D0                                                   ELEMN3.......17300
       END IF                                                            ELEMN3.......17400
C                                                                        ELEMN3.......17500
 3000  CONTINUE                                                          ELEMN3.......17600
C                                                                        ELEMN3.......17700
C.....CALCULATE PARAMETERS FOR FLUID MASS BALANCE AT GAUSS POINTS        ELEMN3.......17800
       IF(ML-1) 3400,3400,6100                                           ELEMN3.......17900
 3400  SWTEST=0.D0                                                       ELEMN3.......18000
       DO 4000 KG=1,8                                                    ELEMN3.......18100
        SWTEST=SWTEST+SWG(KG)                                            ELEMN3.......18200
        ROMG=RHOG(KG)*RELKG(KG)/VISCG(KG)                                ELEMN3.......18300
        RXXG(KG)=PERMXX(L)*ROMG                                          ELEMN3.......18400
        RXYG(KG)=PERMXY(L)*ROMG                                          ELEMN3.......18500
        RXZG(KG)=PERMXZ(L)*ROMG                                          ELEMN3.......18600
        RYXG(KG)=PERMYX(L)*ROMG                                          ELEMN3.......18700
        RYYG(KG)=PERMYY(L)*ROMG                                          ELEMN3.......18800
        RYZG(KG)=PERMYZ(L)*ROMG                                          ELEMN3.......18900
        RZXG(KG)=PERMZX(L)*ROMG                                          ELEMN3.......19000
        RZYG(KG)=PERMZY(L)*ROMG                                          ELEMN3.......19100
        RZZG(KG)=PERMZZ(L)*ROMG                                          ELEMN3.......19200
 4000   CONTINUE                                                         ELEMN3.......19300
C                                                                        ELEMN3.......19400
C.....INTEGRATE FLUID MASS BALANCE IN AN UNSATURATED ELEMENT             ELEMN3.......19500
C        USING ASYMMETRIC WEIGHTING FUNCTIONS                            ELEMN3.......19600
       IF(UP.LE.1.0D-6) GOTO 5200                                        ELEMN3.......19700
       IF(SWTEST-3.999D0) 4200,5200,5200                                 ELEMN3.......19800
 4200  DO 4300 I=1,8                                                     ELEMN3.......19900
        VOLE(I) = 0.D0                                                   ELEMN3.......20000
        DFLOWE(I) = 0.D0                                                 ELEMN3.......20100
        DO 4300 J=1,8                                                    ELEMN3.......20200
         BFLOWE(I,J) = 0.D0                                              ELEMN3.......20300
 4300  CONTINUE                                                          ELEMN3.......20400
       DO 5000 KG=1,8                                                    ELEMN3.......20500
        RXXGD = RXXG(KG)*DET(KG)                                         ELEMN3.......20600
        RXYGD = RXYG(KG)*DET(KG)                                         ELEMN3.......20700
        RXZGD = RXZG(KG)*DET(KG)                                         ELEMN3.......20800
        RYXGD = RYXG(KG)*DET(KG)                                         ELEMN3.......20900
        RYYGD = RYYG(KG)*DET(KG)                                         ELEMN3.......21000
        RYZGD = RYZG(KG)*DET(KG)                                         ELEMN3.......21100
        RZXGD = RZXG(KG)*DET(KG)                                         ELEMN3.......21200
        RZYGD = RZYG(KG)*DET(KG)                                         ELEMN3.......21300
        RZZGD = RZZG(KG)*DET(KG)                                         ELEMN3.......21400
        RDRX = RXXGD*RGXG(KG) + RXYGD*RGYG(KG) + RXZGD*RGZG(KG)          ELEMN3.......21500
        RDRY = RYXGD*RGXG(KG) + RYYGD*RGYG(KG) + RYZGD*RGZG(KG)          ELEMN3.......21600
        RDRZ = RZXGD*RGXG(KG) + RZYGD*RGYG(KG) + RZZGD*RGZG(KG)          ELEMN3.......21700
        DO 4400 I=1,8                                                    ELEMN3.......21800
         VOLE(I) = VOLE(I) + F(I,KG)*DET(KG)                             ELEMN3.......21900
         DFLOWE(I) = DFLOWE(I) + RDRX*DWDXG(I,KG) + RDRY*DWDYG(I,KG)     ELEMN3.......22000
     1               + RDRZ*DWDZG(I,KG)                                  ELEMN3.......22100
 4400   CONTINUE                                                         ELEMN3.......22200
        DO 5000 J=1,8                                                    ELEMN3.......22300
         RDDFJX = RXXGD*DFDXG(J,KG) + RXYGD*DFDYG(J,KG)                  ELEMN3.......22400
     1            + RXZGD*DFDZG(J,KG)                                    ELEMN3.......22500
         RDDFJY = RYXGD*DFDXG(J,KG) + RYYGD*DFDYG(J,KG)                  ELEMN3.......22600
     1            + RYZGD*DFDZG(J,KG)                                    ELEMN3.......22700
         RDDFJZ = RZXGD*DFDXG(J,KG) + RZYGD*DFDYG(J,KG)                  ELEMN3.......22800
     1            + RZZGD*DFDZG(J,KG)                                    ELEMN3.......22900
         DO 5000 I=1,8                                                   ELEMN3.......23000
          BFLOWE(I,J) = BFLOWE(I,J) + DWDXG(I,KG)*RDDFJX                 ELEMN3.......23100
     1                  + DWDYG(I,KG)*RDDFJY + DWDZG(I,KG)*RDDFJZ        ELEMN3.......23200
 5000  CONTINUE                                                          ELEMN3.......23300
       GOTO 6050                                                         ELEMN3.......23400
C                                                                        ELEMN3.......23500
C.....INTEGRATE FLUID MASS BALANCE IN A SATURATED OR UNSATURATED         ELEMN3.......23600
C        ELEMENT USING SYMMETRIC WEIGHTING FUNCTIONS                     ELEMN3.......23700
 5200  DO 5300 I=1,8                                                     ELEMN3.......23800
        VOLE(I) = 0.D0                                                   ELEMN3.......23900
        DFLOWE(I) = 0.D0                                                 ELEMN3.......24000
        DO 5300 J=1,8                                                    ELEMN3.......24100
         BFLOWE(I,J) = 0.D0                                              ELEMN3.......24200
 5300  CONTINUE                                                          ELEMN3.......24300
       DO 6000 KG=1,8                                                    ELEMN3.......24400
        RXXGD = RXXG(KG)*DET(KG)                                         ELEMN3.......24500
        RXYGD = RXYG(KG)*DET(KG)                                         ELEMN3.......24600
        RXZGD = RXZG(KG)*DET(KG)                                         ELEMN3.......24700
        RYXGD = RYXG(KG)*DET(KG)                                         ELEMN3.......24800
        RYYGD = RYYG(KG)*DET(KG)                                         ELEMN3.......24900
        RYZGD = RYZG(KG)*DET(KG)                                         ELEMN3.......25000
        RZXGD = RZXG(KG)*DET(KG)                                         ELEMN3.......25100
        RZYGD = RZYG(KG)*DET(KG)                                         ELEMN3.......25200
        RZZGD = RZZG(KG)*DET(KG)                                         ELEMN3.......25300
        RDRX = RXXGD*RGXG(KG) + RXYGD*RGYG(KG) + RXZGD*RGZG(KG)          ELEMN3.......25400
        RDRY = RYXGD*RGXG(KG) + RYYGD*RGYG(KG) + RYZGD*RGZG(KG)          ELEMN3.......25500
        RDRZ = RZXGD*RGXG(KG) + RZYGD*RGYG(KG) + RZZGD*RGZG(KG)          ELEMN3.......25600
        DO 5400 I=1,8                                                    ELEMN3.......25700
         VOLE(I) = VOLE(I) + F(I,KG)*DET(KG)                             ELEMN3.......25800
         DFLOWE(I) = DFLOWE(I) + RDRX*DFDXG(I,KG) + RDRY*DFDYG(I,KG)     ELEMN3.......25900
     1               + RDRZ*DFDZG(I,KG)                                  ELEMN3.......26000
 5400   CONTINUE                                                         ELEMN3.......26100
        DO 6000 J=1,8                                                    ELEMN3.......26200
         RDDFJX = RXXGD*DFDXG(J,KG) + RXYGD*DFDYG(J,KG)                  ELEMN3.......26300
     1            + RXZGD*DFDZG(J,KG)                                    ELEMN3.......26400
         RDDFJY = RYXGD*DFDXG(J,KG) + RYYGD*DFDYG(J,KG)                  ELEMN3.......26500
     1            + RYZGD*DFDZG(J,KG)                                    ELEMN3.......26600
         RDDFJZ = RZXGD*DFDXG(J,KG) + RZYGD*DFDYG(J,KG)                  ELEMN3.......26700
     1            + RZZGD*DFDZG(J,KG)                                    ELEMN3.......26800
         DO 6000 I=1,8                                                   ELEMN3.......26900
          BFLOWE(I,J) = BFLOWE(I,J) + DFDXG(I,KG)*RDDFJX                 ELEMN3.......27000
     1                  + DFDYG(I,KG)*RDDFJY + DFDZG(I,KG)*RDDFJZ        ELEMN3.......27100
 6000  CONTINUE                                                          ELEMN3.......27200
 6050  CONTINUE                                                          ELEMN3.......27300
       IF(ML-1) 6100,9000,6100                                           ELEMN3.......27400
 6100  IF(NOUMAT.EQ.1) GOTO 9000                                         ELEMN3.......27500
C                                                                        ELEMN3.......27600
C                                                                        ELEMN3.......27700
C.....CALCULATE PARAMETERS FOR ENERGY BALANCE OR SOLUTE MASS BALANCE     ELEMN3.......27800
C        AT GAUSS POINTS                                                 ELEMN3.......27900
       DO 7000 KG=1,8                                                    ELEMN3.......28000
        ESWG=PORG(KG)*SWG(KG)                                            ELEMN3.......28100
        RHOCWG=RHOG(KG)*CW                                               ELEMN3.......28200
        ESRCG=ESWG*RHOCWG                                                ELEMN3.......28300
        IF(VGMAG(KG)) 6300,6300,6600                                     ELEMN3.......28400
 6300   EXG(KG)=0.0D0                                                    ELEMN3.......28500
        EYG(KG)=0.0D0                                                    ELEMN3.......28600
        EZG(KG)=0.0D0                                                    ELEMN3.......28700
        DXXG=0.0D0                                                       ELEMN3.......28800
        DXYG=0.0D0                                                       ELEMN3.......28900
        DXZG=0.0D0                                                       ELEMN3.......29000
        DYXG=0.0D0                                                       ELEMN3.......29100
        DYYG=0.0D0                                                       ELEMN3.......29200
        DYZG=0.0D0                                                       ELEMN3.......29300
        DZXG=0.0D0                                                       ELEMN3.......29400
        DZYG=0.0D0                                                       ELEMN3.......29500
        DZZG=0.0D0                                                       ELEMN3.......29600
        GOTO 6900                                                        ELEMN3.......29700
 6600   EXG(KG)=ESRCG*VXG(KG)                                            ELEMN3.......29800
        EYG(KG)=ESRCG*VYG(KG)                                            ELEMN3.......29900
        EZG(KG)=ESRCG*VZG(KG)                                            ELEMN3.......30000
C                                                                        ELEMN3.......30100
C                                                                        ELEMN3.......30200
C.....DISPERSIVITY MODEL FOR 3D ANISOTROPIC MEDIA                        ELEMN3.......30300
C        WITH PRINCIPAL DISPERSIVITIES ALMAX, ALMID, ALMIN,              ELEMN3.......30400
C        ATMAX, ATMID, ATMIN                                             ELEMN3.......30500
        CALL DISPR3(VXG(KG),VYG(KG),VZG(KG),VGMAG(KG),PANGL1(L),         ELEMN3.......30600
     1     PANGL2(L),PANGL3(L),ALMAX(L),ALMID(L),ALMIN(L),               ELEMN3.......30700
     2     ATMAX(L),ATMID(L),ATMIN(L),DXXG,DXYG,DXZG,DYXG,DYYG,DYZG,     ELEMN3.......30800
     3     DZXG,DZYG,DZZG)                                               ELEMN3.......30900
C                                                                        ELEMN3.......31000
C.....IN-PARALLEL CONDUCTIVITIES (DIFFUSIVITIES) FORMULA                 ELEMN3.......31100
 6900   IF (ME.EQ.1) THEN                                                ELEMN3.......31200
C..........FOR ENERGY TRANSPORT:                                         ELEMN3.......31300
           ESE = ESWG*SIGMAW + (1D0-PORG(KG))*SIGMAS                     ELEMN3.......31400
        ELSE                                                             ELEMN3.......31500
C..........FOR SOLUTE TRANSPORT:                                         ELEMN3.......31600
           ESE = ESRCG*SIGMAW                                            ELEMN3.......31700
        END IF                                                           ELEMN3.......31800
C.....ADD DIFFUSION AND DISPERSION TERMS TO TOTAL DISPERSION TENSOR      ELEMN3.......31900
        BXXG(KG)=ESRCG*DXXG+ESE                                          ELEMN3.......32000
        BXYG(KG)=ESRCG*DXYG                                              ELEMN3.......32100
        BXZG(KG)=ESRCG*DXZG                                              ELEMN3.......32200
        BYXG(KG)=ESRCG*DYXG                                              ELEMN3.......32300
        BYYG(KG)=ESRCG*DYYG+ESE                                          ELEMN3.......32400
        BYZG(KG)=ESRCG*DYZG                                              ELEMN3.......32500
        BZXG(KG)=ESRCG*DZXG                                              ELEMN3.......32600
        BZYG(KG)=ESRCG*DZYG                                              ELEMN3.......32700
 7000   BZZG(KG)=ESRCG*DZZG+ESE                                          ELEMN3.......32800
C                                                                        ELEMN3.......32900
C.....INTEGRATE SOLUTE MASS BALANCE OR ENERGY BALANCE                    ELEMN3.......33000
C        USING SYMMETRIC WEIGHTING FUNCTIONS FOR DISPERSION TERM AND     ELEMN3.......33100
C        USING EITHER SYMMETRIC OR ASYMMETRIC WEIGHTING FUNCTIONS        ELEMN3.......33200
C        FOR ADVECTION TERM                                              ELEMN3.......33300
         DO 7400 I=1,8                                                   ELEMN3.......33400
         DO 7400 J=1,8                                                   ELEMN3.......33500
            BTRANE(I,J) = 0.D0                                           ELEMN3.......33600
            DTRANE(I,J) = 0.D0                                           ELEMN3.......33700
 7400    CONTINUE                                                        ELEMN3.......33800
         DO 8000 KG=1,8                                                  ELEMN3.......33900
            BXXGD = BXXG(KG)*DET(KG)                                     ELEMN3.......34000
            BXYGD = BXYG(KG)*DET(KG)                                     ELEMN3.......34100
            BXZGD = BXZG(KG)*DET(KG)                                     ELEMN3.......34200
            BYXGD = BYXG(KG)*DET(KG)                                     ELEMN3.......34300
            BYYGD = BYYG(KG)*DET(KG)                                     ELEMN3.......34400
            BYZGD = BYZG(KG)*DET(KG)                                     ELEMN3.......34500
            BZXGD = BZXG(KG)*DET(KG)                                     ELEMN3.......34600
            BZYGD = BZYG(KG)*DET(KG)                                     ELEMN3.......34700
            BZZGD = BZZG(KG)*DET(KG)                                     ELEMN3.......34800
            EXGD = EXG(KG)*DET(KG)                                       ELEMN3.......34900
            EYGD = EYG(KG)*DET(KG)                                       ELEMN3.......35000
            EZGD = EZG(KG)*DET(KG)                                       ELEMN3.......35100
            DO 8000 J=1,8                                                ELEMN3.......35200
               BDDFJX = BXXGD*DFDXG(J,KG) + BXYGD*DFDYG(J,KG)            ELEMN3.......35300
     1                 + BXZGD*DFDZG(J,KG)                               ELEMN3.......35400
               BDDFJY = BYXGD*DFDXG(J,KG) + BYYGD*DFDYG(J,KG)            ELEMN3.......35500
     1                 + BYZGD*DFDZG(J,KG)                               ELEMN3.......35600
               BDDFJZ = BZXGD*DFDXG(J,KG) + BZYGD*DFDYG(J,KG)            ELEMN3.......35700
     1                 + BZZGD*DFDZG(J,KG)                               ELEMN3.......35800
               EDDFJ = EXGD*DFDXG(J,KG) + EYGD*DFDYG(J,KG)               ELEMN3.......35900
     1                 + EZGD*DFDZG(J,KG)                                ELEMN3.......36000
               DO 8000 I=1,8                                             ELEMN3.......36100
                  BTRANE(I,J) = BTRANE(I,J) + DFDXG(I,KG)*BDDFJX         ELEMN3.......36200
     1               + DFDYG(I,KG)*BDDFJY + DFDZG(I,KG)*BDDFJZ           ELEMN3.......36300
                  DTRANE(I,J) = DTRANE(I,J) + EDDFJ*W(I,KG)              ELEMN3.......36400
 8000    CONTINUE                                                        ELEMN3.......36500
 9000  CONTINUE                                                          ELEMN3.......36600
C                                                                        ELEMN3.......36700
C                                                                        ELEMN3.......36800
C.....SEND RESULTS OF INTEGRATIONS FOR THIS ELEMENT                      ELEMN3.......36900
C        TO GLOBAL ASSEMBLY ROUTINE:                                     ELEMN3.......37000
C        GLOBAN -- SUTRA'S ORIGINAL BANDED FORMAT                        ELEMN3.......37100
C        GLOCOL -- SLAP COLUMN FORMAT                                    ELEMN3.......37200
      IF (KSOLVP.EQ.0) THEN                                              ELEMN3.......37300
         CALL GLOBAN(L,ML,VOLE,BFLOWE,DFLOWE,BTRANE,DTRANE,              ELEMN3.......37400
     1      IN,VOL,PMAT,PVEC,UMAT,UVEC,PBC,UBC)                          ELEMN3.......37500
      ELSE                                                               ELEMN3.......37600
         CALL GLOCOL(L,ML,VOLE,BFLOWE,DFLOWE,BTRANE,DTRANE,              ELEMN3.......37700
     1      IN,VOL,PMAT,PVEC,UMAT,UVEC,IA,JA)                            ELEMN3.......37800
      END IF                                                             ELEMN3.......37900
 9999 CONTINUE                                                           ELEMN3.......38000
C - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  ELEMN3.......38100
C - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  ELEMN3.......38200
C - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  ELEMN3.......38300
C                                                                        ELEMN3.......38400
C                                                                        ELEMN3.......38500
      RETURN                                                             ELEMN3.......38600
      END                                                                ELEMN3.......38700
C                                                                        ELEMN3.......38800
C     SUBROUTINE        F  I  N  A  L  P           SUTRA VERSION 3.0     FINALP.........100
C                                                                        FINALP.........200
C *** PURPOSE :                                                          FINALP.........300
C ***  TO SAVE P(0) SOLUTION AND FINALIZE PVEC.                          FINALP.........400
C                                                                        FINALP.........500
      SUBROUTINE FINALP()                                                FINALP.........600
      USE ALLARR                                                         FINALP.........700
      USE LARR, ONLY : ISLAKE,LAKNOD,PLK,LKBCPBC,LKBCPBG,ISURFACE        FINALP.........800
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                FINALP.........900
      COMMON /DIMS/ NN,NE,NIN,NBI,NCBI,NB,NBHALF,NPBC,NUBC,              FINALP........1000
     1   NSOP,NSOU,NBCN,NPBG,NUBG,NCIDB                                  FINALP........1100
      COMMON /DIMSRF/ MAXCON, NNSURF, NNVERT                             FINALP........1200
C                                                                        FINALP........1300
      IF (NPBC.GT.0) THEN                                                FINALP........1400
      DO 5100 IP=1,NPBC                                                  FINALP........1500
         IF ((IBCPBC(IP).EQ.2).OR.(.NOT.LKBCPBC(IP))) CYCLE              FINALP........1600
         I = IABS(IPBC(IP))                                              FINALP........1700
         PZERO(IP) = PVEC(I)                                             FINALP........1800
         IF (ISLAKE(I)) THEN                                             FINALP........1900
            ISURF = ISURFACE(I)                                          FINALP........2000
            PLAK = PLK(ISURF)                                            FINALP........2100
         ELSE                                                            FINALP........2200
            PLAK = 0D0                                                   FINALP........2300
         END IF                                                          FINALP........2400
         PVEC(I) = PBC(IP) + PLAK                                        FINALP........2500
 5100 CONTINUE                                                           FINALP........2600
      END IF                                                             FINALP........2700
C                                                                        FINALP........2800
      IF (NPBG.GT.0) THEN                                                FINALP........2900
      DO 6100 IPG=1,NPBG                                                 FINALP........3000
         I = IABS(IPBG(IPG))                                             FINALP........3100
         IF (.NOT.LPBGSP(IPG)) CYCLE                                     FINALP........3200
         PZERG(IPG) = PVEC(I)                                            FINALP........3300
         IF (ISLAKE(I)) THEN                                             FINALP........3400
            ISURF = ISURFACE(I)                                          FINALP........3500
            PLAK = PLK(ISURF)                                            FINALP........3600
         ELSE                                                            FINALP........3700
            PLAK = 0D0                                                   FINALP........3800
         END IF                                                          FINALP........3900
         IF (ISPBG(I).LT.0) THEN                                         FINALP........4000
            PVEC(I) = PBG1(IPG) + PLAK                                   FINALP........4100
         ELSE                                                            FINALP........4200
            PVEC(I) = PBG2(IPG) + PLAK                                   FINALP........4300
         END IF                                                          FINALP........4400
 6100 CONTINUE                                                           FINALP........4500
      END IF                                                             FINALP........4600
C                                                                        FINALP........4700
      RETURN                                                             FINALP........4800
      END                                                                FINALP........4900
C                                                                        FINALP........5000
C     SUBROUTINE        F  I  N  A  L  U           SUTRA VERSION 3.0     FINALU.........100
C                                                                        FINALU.........200
C *** PURPOSE :                                                          FINALU.........300
C ***  TO SAVE U(0) SOLUTION AND FINALIZE UVEC.                          FINALU.........400
C                                                                        FINALU.........500
      SUBROUTINE FINALU()                                                FINALU.........600
      USE ALLARR                                                         FINALU.........700
      USE LARR, ONLY : ISLAKE,LAKNOD,ULK,ISURFACE,LKBCUBC                FINALU.........800
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                FINALU.........900
      COMMON /DIMS/ NN,NE,NIN,NBI,NCBI,NB,NBHALF,NPBC,NUBC,              FINALU........1000
     1   NSOP,NSOU,NBCN,NPBG,NUBG,NCIDB                                  FINALU........1100
      COMMON /DIMSRF/ MAXCON, NNSURF, NNVERT                             FINALU........1200
C                                                                        FINALU........1300
      DO 5900 IU=1,NUBC                                                  FINALU........1400
         IUP = NPBC + IU                                                 FINALU........1500
         IF ((IBCUBC(IUP).EQ.2).OR.(.NOT.LKBCUBC(IUP))) CYCLE            FINALU........1600
         I = IABS(IUBC(IUP))                                             FINALU........1700
         UZERO(IU) = UVEC(I)                                             FINALU........1800
         IF (ISLAKE(I)) THEN                                             FINALU........1900
            ISURF = ISURFACE(I)                                          FINALU........2000
            UVEC(I) = ULK(ISURF)                                         FINALU........2100
         ELSE                                                            FINALU........2200
            UVEC(I) = UBC(IUP)                                           FINALU........2300
         END IF                                                          FINALU........2400
 5900 CONTINUE                                                           FINALU........2500
C                                                                        FINALU........2600
      RETURN                                                             FINALU........2700
      END                                                                FINALU........2800
C                                                                        FINALU........2900
C     SUBROUTINE        F  I  N  D  L  2           SUTRA VERSION 3.0     FINDL2.........100
C                                                                        FINDL2.........200
C *** PURPOSE :                                                          FINDL2.........300
C ***  TO DETERMINE WHETHER POINT (XK, YK) IN 2D GLOBAL COORDINATES      FINDL2.........400
C ***  IS CONTAINED WITHIN ELEMENT LL.  IF THE POINT IS INSIDE THE       FINDL2.........500
C ***  ELEMENT, SET INOUT = 1; IF OUTSIDE, SET INOUT = 0.  CONDITION     FINDL2.........600
C ***  INOUT = 99 SIGNALS CONVERGENCE FAILURE.  ADAPTED FROM SUTRAPLOT   FINDL2.........700
C ***  SUBROUTINE ITER2D.                                                FINDL2.........800
C                                                                        FINDL2.........900
      SUBROUTINE FINDL2(X,Y,IN,LL,XK,YK,XSI,ETA,INOUT)                   FINDL2........1000
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                FINDL2........1100
      COMMON /DIMS/ NN,NE,NIN,NBI,NCBI,NB,NBHALF,NPBC,NUBC,              FINDL2........1200
     1   NSOP,NSOU,NBCN,NPBG,NUBG,NCIDB                                  FINDL2........1300
      DIMENSION IN(NE*4)                                                 FINDL2........1400
      DIMENSION X(NN), Y(NN)                                             FINDL2........1500
      DATA TOL /0.001/, ITRMAX /25/, EPSILON /0.001/                     FINDL2........1600
C                                                                        FINDL2........1700
C.....DEFINE OPE = (1. + EPSILON) FOR CONVENIENCE.                       FINDL2........1800
      OPE = 1D0 + EPSILON                                                FINDL2........1900
C                                                                        FINDL2........2000
C.....SET CORNER COORDINATES.                                            FINDL2........2100
      M0 = (LL - 1)*4                                                    FINDL2........2200
      X1 = X(IN(M0+1))                                                   FINDL2........2300
      X2 = X(IN(M0+2))                                                   FINDL2........2400
      X3 = X(IN(M0+3))                                                   FINDL2........2500
      X4 = X(IN(M0+4))                                                   FINDL2........2600
      Y1 = Y(IN(M0+1))                                                   FINDL2........2700
      Y2 = Y(IN(M0+2))                                                   FINDL2........2800
      Y3 = Y(IN(M0+3))                                                   FINDL2........2900
      Y4 = Y(IN(M0+4))                                                   FINDL2........3000
C                                                                        FINDL2........3100
C.....CALCULATE COEFFICIENTS.                                            FINDL2........3200
      AX = +X1+X2+X3+X4                                                  FINDL2........3300
      BX = -X1+X2+X3-X4                                                  FINDL2........3400
      CX = -X1-X2+X3+X4                                                  FINDL2........3500
      DX = +X1-X2+X3-X4                                                  FINDL2........3600
      AY = +Y1+Y2+Y3+Y4                                                  FINDL2........3700
      BY = -Y1+Y2+Y3-Y4                                                  FINDL2........3800
      CY = -Y1-Y2+Y3+Y4                                                  FINDL2........3900
      DY = +Y1-Y2+Y3-Y4                                                  FINDL2........4000
C                                                                        FINDL2........4100
C                                                                        FINDL2........4200
C.....INITIAL GUESS OF ZERO FOR XSI AND ETA.                             FINDL2........4300
      XSI=0.0                                                            FINDL2........4400
      ETA=0.0                                                            FINDL2........4500
C                                                                        FINDL2........4600
C.....ITERATION LOOP TO SOLVE FOR LOCAL COORDINATES.                     FINDL2........4700
C                                                                        FINDL2........4800
      DO 800 I=1,ITRMAX                                                  FINDL2........4900
C                                                                        FINDL2........5000
         F10 = AX - 4.*XK + BX*XSI + CX*ETA + DX*XSI*ETA                 FINDL2........5100
         F20 = AY - 4.*YK + BY*XSI + CY*ETA + DY*XSI*ETA                 FINDL2........5200
         FP11 = BX + DX*ETA                                              FINDL2........5300
         FP12 = CX + DX*XSI                                              FINDL2........5400
         FP21 = BY + DY*ETA                                              FINDL2........5500
         FP22 = CY + DY*XSI                                              FINDL2........5600
C                                                                        FINDL2........5700
         DETXSI = -F10*FP22 + F20*FP12                                   FINDL2........5800
         DETETA = -F20*FP11 + F10*FP21                                   FINDL2........5900
         DETERM = FP11*FP22 - FP12*FP21                                  FINDL2........6000
         DELXSI = DETXSI/DETERM                                          FINDL2........6100
         DELETA = DETETA/DETERM                                          FINDL2........6200
C                                                                        FINDL2........6300
         XSI = XSI + DELXSI                                              FINDL2........6400
         ETA = ETA + DELETA                                              FINDL2........6500
C                                                                        FINDL2........6600
C........STOP ITERATING IF CHANGE IN XSI AND ETA < TOL.                  FINDL2........6700
         IF ((ABS(DELXSI).LT.TOL).AND.(ABS(DELETA).LT.TOL)) GOTO 900     FINDL2........6800
C                                                                        FINDL2........6900
  800 CONTINUE                                                           FINDL2........7000
C                                                                        FINDL2........7100
C.....ITERATONS FAILED TO CONVERGE.  SET INOUT = 99 AND RETURN.          FINDL2........7200
      INOUT = 99                                                         FINDL2........7300
      GOTO 1000                                                          FINDL2........7400
C                                                                        FINDL2........7500
C.....ITERATIONS CONVERGED.  IF POINT IS INSIDE THE ELEMENT,             FINDL2........7600
C        SET INOUT = 1.  IF OUTSIDE, SET INOUT = 0.                      FINDL2........7700
  900 INOUT = 1                                                          FINDL2........7800
      IF ((ABS(XSI).GT.OPE).OR.(ABS(ETA).GT.OPE)) INOUT = 0              FINDL2........7900
C                                                                        FINDL2........8000
 1000 RETURN                                                             FINDL2........8100
      END                                                                FINDL2........8200
C                                                                        FINDL2........8300
C     SUBROUTINE        F  I  N  D  L  3           SUTRA VERSION 3.0     FINDL3.........100
C                                                                        FINDL3.........200
C *** PURPOSE :                                                          FINDL3.........300
C ***  TO DETERMINE WHETHER POINT (XK, YK, ZK) IN 3D GLOBAL COORDINATES  FINDL3.........400
C ***  IS CONTAINED WITHIN ELEMENT LL.  IF THE POINT IS INSIDE THE       FINDL3.........500
C ***  ELEMENT, SET INOUT = 1; IF OUTSIDE, SET INOUT = 0.  CONDITION     FINDL3.........600
C ***  INOUT = 99 SIGNALS CONVERGENCE FAILURE.  ADAPTED FROM SUTRAPLOT   FINDL3.........700
C ***  SUBROUTINE ITER3D.                                                FINDL3.........800
C                                                                        FINDL3.........900
      SUBROUTINE FINDL3(X,Y,Z,IN,LL,XK,YK,ZK,XSI,ETA,ZET,INOUT)          FINDL3........1000
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                FINDL3........1100
      COMMON /DIMS/ NN,NE,NIN,NBI,NCBI,NB,NBHALF,NPBC,NUBC,              FINDL3........1200
     1   NSOP,NSOU,NBCN,NPBG,NUBG,NCIDB                                  FINDL3........1300
      DIMENSION IN(NE*8)                                                 FINDL3........1400
      DIMENSION X(NN), Y(NN), Z(NN)                                      FINDL3........1500
      DATA TOL /0.001/, ITRMAX /25/, EPSILON /0.001/                     FINDL3........1600
C                                                                        FINDL3........1700
C.....DEFINE OPE = (1. + EPSILON) FOR CONVENIENCE.                       FINDL3........1800
      OPE = 1D0 + EPSILON                                                FINDL3........1900
C                                                                        FINDL3........2000
C.....SET CORNER COORDINATES.                                            FINDL3........2100
      M0 = (LL - 1)*8                                                    FINDL3........2200
      X1 = X(IN(M0+1))                                                   FINDL3........2300
      X2 = X(IN(M0+2))                                                   FINDL3........2400
      X3 = X(IN(M0+3))                                                   FINDL3........2500
      X4 = X(IN(M0+4))                                                   FINDL3........2600
      X5 = X(IN(M0+5))                                                   FINDL3........2700
      X6 = X(IN(M0+6))                                                   FINDL3........2800
      X7 = X(IN(M0+7))                                                   FINDL3........2900
      X8 = X(IN(M0+8))                                                   FINDL3........3000
      Y1 = Y(IN(M0+1))                                                   FINDL3........3100
      Y2 = Y(IN(M0+2))                                                   FINDL3........3200
      Y3 = Y(IN(M0+3))                                                   FINDL3........3300
      Y4 = Y(IN(M0+4))                                                   FINDL3........3400
      Y5 = Y(IN(M0+5))                                                   FINDL3........3500
      Y6 = Y(IN(M0+6))                                                   FINDL3........3600
      Y7 = Y(IN(M0+7))                                                   FINDL3........3700
      Y8 = Y(IN(M0+8))                                                   FINDL3........3800
      Z1 = Z(IN(M0+1))                                                   FINDL3........3900
      Z2 = Z(IN(M0+2))                                                   FINDL3........4000
      Z3 = Z(IN(M0+3))                                                   FINDL3........4100
      Z4 = Z(IN(M0+4))                                                   FINDL3........4200
      Z5 = Z(IN(M0+5))                                                   FINDL3........4300
      Z6 = Z(IN(M0+6))                                                   FINDL3........4400
      Z7 = Z(IN(M0+7))                                                   FINDL3........4500
      Z8 = Z(IN(M0+8))                                                   FINDL3........4600
C                                                                        FINDL3........4700
C.....CALCULATE COEFFICIENTS.                                            FINDL3........4800
      AX = +X1+X2+X3+X4+X5+X6+X7+X8                                      FINDL3........4900
      BX = -X1+X2+X3-X4-X5+X6+X7-X8                                      FINDL3........5000
      CX = -X1-X2+X3+X4-X5-X6+X7+X8                                      FINDL3........5100
      DX = -X1-X2-X3-X4+X5+X6+X7+X8                                      FINDL3........5200
      EX = +X1-X2+X3-X4+X5-X6+X7-X8                                      FINDL3........5300
      FX = +X1-X2-X3+X4-X5+X6+X7-X8                                      FINDL3........5400
      GX = +X1+X2-X3-X4-X5-X6+X7+X8                                      FINDL3........5500
      HX = -X1+X2-X3+X4+X5-X6+X7-X8                                      FINDL3........5600
      AY = +Y1+Y2+Y3+Y4+Y5+Y6+Y7+Y8                                      FINDL3........5700
      BY = -Y1+Y2+Y3-Y4-Y5+Y6+Y7-Y8                                      FINDL3........5800
      CY = -Y1-Y2+Y3+Y4-Y5-Y6+Y7+Y8                                      FINDL3........5900
      DY = -Y1-Y2-Y3-Y4+Y5+Y6+Y7+Y8                                      FINDL3........6000
      EY = +Y1-Y2+Y3-Y4+Y5-Y6+Y7-Y8                                      FINDL3........6100
      FY = +Y1-Y2-Y3+Y4-Y5+Y6+Y7-Y8                                      FINDL3........6200
      GY = +Y1+Y2-Y3-Y4-Y5-Y6+Y7+Y8                                      FINDL3........6300
      HY = -Y1+Y2-Y3+Y4+Y5-Y6+Y7-Y8                                      FINDL3........6400
      AZ = +Z1+Z2+Z3+Z4+Z5+Z6+Z7+Z8                                      FINDL3........6500
      BZ = -Z1+Z2+Z3-Z4-Z5+Z6+Z7-Z8                                      FINDL3........6600
      CZ = -Z1-Z2+Z3+Z4-Z5-Z6+Z7+Z8                                      FINDL3........6700
      DZ = -Z1-Z2-Z3-Z4+Z5+Z6+Z7+Z8                                      FINDL3........6800
      EZ = +Z1-Z2+Z3-Z4+Z5-Z6+Z7-Z8                                      FINDL3........6900
      FZ = +Z1-Z2-Z3+Z4-Z5+Z6+Z7-Z8                                      FINDL3........7000
      GZ = +Z1+Z2-Z3-Z4-Z5-Z6+Z7+Z8                                      FINDL3........7100
      HZ = -Z1+Z2-Z3+Z4+Z5-Z6+Z7-Z8                                      FINDL3........7200
C                                                                        FINDL3........7300
C.....INITIAL GUESS OF ZERO FOR XSI, ETA, AND ZETA.                      FINDL3........7400
      XSI=0.0                                                            FINDL3........7500
      ETA=0.0                                                            FINDL3........7600
      ZET=0.0                                                            FINDL3........7700
C                                                                        FINDL3........7800
C.....ITERATION LOOP TO SOLVE FOR LOCAL COORDINATES.                     FINDL3........7900
C                                                                        FINDL3........8000
      DO 800 I=1,ITRMAX                                                  FINDL3........8100
C                                                                        FINDL3........8200
         F10 = AX - 8.*XK + BX*XSI + CX*ETA + DX*ZET + EX*XSI*ETA        FINDL3........8300
     1        + FX*XSI*ZET + GX*ETA*ZET + HX*XSI*ETA*ZET                 FINDL3........8400
         F20 = AY - 8.*YK + BY*XSI + CY*ETA + DY*ZET + EY*XSI*ETA        FINDL3........8500
     1        + FY*XSI*ZET + GY*ETA*ZET + HY*XSI*ETA*ZET                 FINDL3........8600
         F30 = AZ - 8.*ZK + BZ*XSI + CZ*ETA + DZ*ZET + EZ*XSI*ETA        FINDL3........8700
     1        + FZ*XSI*ZET + GZ*ETA*ZET + HZ*XSI*ETA*ZET                 FINDL3........8800
         FP11 = BX + EX*ETA + FX*ZET + HX*ETA*ZET                        FINDL3........8900
         FP12 = CX + EX*XSI + GX*ZET + HX*XSI*ZET                        FINDL3........9000
         FP13 = DX + FX*XSI + GX*ETA + HX*XSI*ETA                        FINDL3........9100
         FP21 = BY + EY*ETA + FY*ZET + HY*ETA*ZET                        FINDL3........9200
         FP22 = CY + EY*XSI + GY*ZET + HY*XSI*ZET                        FINDL3........9300
         FP23 = DY + FY*XSI + GY*ETA + HY*XSI*ETA                        FINDL3........9400
         FP31 = BZ + EZ*ETA + FZ*ZET + HZ*ETA*ZET                        FINDL3........9500
         FP32 = CZ + EZ*XSI + GZ*ZET + HZ*XSI*ZET                        FINDL3........9600
         FP33 = DZ + FZ*XSI + GZ*ETA + HZ*XSI*ETA                        FINDL3........9700
C                                                                        FINDL3........9800
         S11 = FP22*FP33 - FP32*FP23                                     FINDL3........9900
         S12 = FP21*FP33 - FP31*FP23                                     FINDL3.......10000
         S13 = FP21*FP32 - FP31*FP22                                     FINDL3.......10100
         CF12 = -F20*FP33 + F30*FP23                                     FINDL3.......10200
         CF34 = -F20*FP32 + F30*FP22                                     FINDL3.......10300
         CF43 = -CF34                                                    FINDL3.......10400
         CF56 = -F30*FP21 + F20*FP31                                     FINDL3.......10500
C                                                                        FINDL3.......10600
         DETXSI = -F10*S11 - FP12*CF12 + FP13*CF34                       FINDL3.......10700
         DETETA = FP11*CF12 + F10*S12 + FP13*CF56                        FINDL3.......10800
         DETZET = FP11*CF43 - FP12*CF56 - F10*S13                        FINDL3.......10900
         DETERM = FP11*S11 - FP12*S12 + FP13*S13                         FINDL3.......11000
         DELXSI = DETXSI/DETERM                                          FINDL3.......11100
         DELETA = DETETA/DETERM                                          FINDL3.......11200
         DELZET = DETZET/DETERM                                          FINDL3.......11300
C                                                                        FINDL3.......11400
         XSI = XSI + DELXSI                                              FINDL3.......11500
         ETA = ETA + DELETA                                              FINDL3.......11600
         ZET = ZET + DELZET                                              FINDL3.......11700
C                                                                        FINDL3.......11800
C........STOP ITERATING IF CHANGE IN XSI, ETA, AND ZETA < TOL.           FINDL3.......11900
         IF ((ABS(DELXSI).LT.TOL).AND.(ABS(DELETA).LT.TOL).AND.          FINDL3.......12000
     1       (ABS(DELZET).LT.TOL)) GOTO 900                              FINDL3.......12100
C                                                                        FINDL3.......12200
  800 CONTINUE                                                           FINDL3.......12300
C                                                                        FINDL3.......12400
C.....ITERATONS FAILED TO CONVERGE.  SET INOUT = 99 AND RETURN.          FINDL3.......12500
      INOUT = 99                                                         FINDL3.......12600
      GOTO 1000                                                          FINDL3.......12700
C                                                                        FINDL3.......12800
C.....ITERATIONS CONVERGED.  IF POINT IS INSIDE THE ELEMENT,             FINDL3.......12900
C        SET INOUT = 1.  IF OUTSIDE, SET INOUT = 0.                      FINDL3.......13000
  900 INOUT = 1                                                          FINDL3.......13100
      IF ((ABS(XSI).GT.OPE).OR.(ABS(ETA).GT.OPE).OR.(ABS(ZET).GT.OPE))   FINDL3.......13200
     1   INOUT = 0                                                       FINDL3.......13300
C                                                                        FINDL3.......13400
 1000 RETURN                                                             FINDL3.......13500
      END                                                                FINDL3.......13600
C                                                                        FINDL3.......13700
C     SUBROUTINE        F  O  P  E  N              SUTRA VERSION 3.0     FOPEN..........100
C                                                                        FOPEN..........200
C *** PURPOSE :                                                          FOPEN..........300
C ***  OPENS FILES FOR SUTRA SIMULATION.  READS AND PROCESSES FILE       FOPEN..........400
C ***  SPECIFICATIONS FROM "SUTRA.FIL" AND OPENS INPUT AND OUTPUT FILES. FOPEN..........500
C                                                                        FOPEN..........600
      SUBROUTINE FOPEN()                                                 FOPEN..........700
      USE EXPINT                                                         FOPEN..........800
      USE SCHDEF                                                         FOPEN..........900
      USE BCSDEF                                                         FOPEN.........1000
      USE FINDEF                                                         FOPEN.........1100
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                FOPEN.........1200
      PARAMETER (IUNMIN=11)                                              FOPEN.........1300
      CHARACTER*80 FT,FN,UNAME,FNAME,ENAME,ENDEF,FTSTR                   FOPEN.........1400
      CHARACTER*80 FNROOT,FNEXTN                                         FOPEN.........1500
      CHARACTER*80 ERRCOD,CHERR(10)                                      FOPEN.........1600
      CHARACTER*8 VERNUM, VERNIN                                         FOPEN.........1700
      CHARACTER INTFIL*1000                                              FOPEN.........1800
      LOGICAL IS                                                         FOPEN.........1900
      LOGICAL ONCEFO                                                     FOPEN.........2000
      LOGICAL ALCBCS,ALCFIN,ALCOBS                                       FOPEN.........2100
      LOGICAL LAKUSD                                                     FOPEN.........2200
      DIMENSION FNAME(0:23),IUNIT(0:23)                                  FOPEN.........2300
      DIMENSION FTSTR(0:23)                                              FOPEN.........2400
      DIMENSION INERR(10),RLERR(10)                                      FOPEN.........2500
      DIMENSION KTYPE(2)                                                 FOPEN.........2600
      INTEGER RMVDIM,IMVDIM,I1VDIM,CMVDIM,LMVDIM,PMVDIM                  FOPEN.........2700
      COMMON /ALC/ ALCBCS,ALCFIN,ALCOBS                                  FOPEN.........2800
      COMMON /CONTRL/ GNUP,GNUU,UP,DTMULT,DTMAX,ME,ISSFLO,ISSTRA,ITCYC,  FOPEN.........2900
     1   NPCYC,NUCYC,NPRINT,NBCFPR,NBCSPR,NBCPPR,NBCUPR,NLAKPR,IREAD,    FOPEN.........3000
     1   NBGPPR,NBGUPR,ISTORE,NOUMAT,IUNSAT,IALSAT,KTYPE                 FOPEN.........3100
      COMMON /FNAMES/ UNAME,FNAME                                        FOPEN.........3200
      COMMON /FO/ONCEFO                                                  FOPEN.........3300
      COMMON /FUNIB/ NFBCS                                               FOPEN.........3400
      COMMON /FUNITA/ IUNIT                                              FOPEN.........3500
      COMMON /FUNITS/ K00,K0,K1,K2,K3,K4,K5,K6,K7,K8,K9,                 FOPEN.........3600
     1   K10,K11,K12,K13,K14,K15,K16,K17,K18,K19,K20,K21,K22,K23         FOPEN.........3700
      COMMON /LAKU/ LAKUSD                                               FOPEN.........3800
      COMMON /MEMCNT/ RMVDIM,IMVDIM,I1VDIM,CMVDIM,LMVDIM,PMVDIM          FOPEN.........3900
      COMMON /OBS/ NOBSN,NTOBS,NOBCYC,NOBLIN,NFLOMX                      FOPEN.........4000
      COMMON /SCH/ NSCH,ISCHTS,NSCHAU                                    FOPEN.........4100
      COMMON /VER/ VERNUM, VERNIN                                        FOPEN.........4200
      DATA (FTSTR(NFT),NFT=0,23)/'SMY','INP','ICS','LST','RST',          FOPEN.........4300
     1   'NOD','ELE','OBS','OBC','BCS','BCOF','BCOS','BCOP','BCOU',      FOPEN.........4400
     2   'BCOPG','BCOUG','LKIN','LKBC','LKAR','LKBU','LKST','LKRS',      FOPEN.........4500
     3   'LKN','LKH'/                                                    FOPEN.........4600
C                                                                        FOPEN.........4700
C.....IF THIS IS THE FIRST CALL, READ AND PROCESS FILE SPECIFICATIONS    FOPEN.........4800
C        FROM "SUTRA.FIL" AND OPEN ALL OUTPUT FILES EXCEPT OBSERVATION   FOPEN.........4900
C        OUTPUT.  OBSERVATION OUTPUT FILES ARE CREATED ON THE SECOND     FOPEN.........5000
C        CALL, AFTER DATASET 8D HAS BEEN READ.                           FOPEN.........5100
      IF (.NOT.ONCEFO) THEN                                              FOPEN.........5200
C                                                                        FOPEN.........5300
C........INITIALIZE FLAGS THAT INDICATE WHETHER CERTAIN ARRAYS           FOPEN.........5400
C           HAVE BEEN ALLOCATED.  THEY ARE USED BY SUBROUTINE NAFU.      FOPEN.........5500
         ALCBCS = .FALSE.                                                FOPEN.........5600
         ALCFIN = .FALSE.                                                FOPEN.........5700
         ALCOBS = .FALSE.                                                FOPEN.........5800
C                                                                        FOPEN.........5900
C........INITIALIZE UNIT NUMBERS AND FILENAMES                           FOPEN.........6000
         K1 = -1                                                         FOPEN.........6100
         K2 = -1                                                         FOPEN.........6200
         K3 = -1                                                         FOPEN.........6300
         K4 = -1                                                         FOPEN.........6400
         K5 = -1                                                         FOPEN.........6500
         K6 = -1                                                         FOPEN.........6600
         K7 = -1                                                         FOPEN.........6700
         K8 = -1                                                         FOPEN.........6800
         K9 = -1                                                         FOPEN.........6900
         K10 = -1                                                        FOPEN.........7000
         K11 = -1                                                        FOPEN.........7100
         K12 = -1                                                        FOPEN.........7200
         K13 = -1                                                        FOPEN.........7300
         K14 = -1                                                        FOPEN.........7400
         K15 = -1                                                        FOPEN.........7500
         K16 = -1                                                        FOPEN.........7600
         K17 = -1                                                        FOPEN.........7700
         K18 = -1                                                        FOPEN.........7800
         K19 = -1                                                        FOPEN.........7900
         K20 = -1                                                        FOPEN.........8000
         K21 = -1                                                        FOPEN.........8100
         K22 = -1                                                        FOPEN.........8200
         K23 = -1                                                        FOPEN.........8300
         DO 20 NF=0,23                                                   FOPEN.........8400
            IUNIT(NF) = -1                                               FOPEN.........8500
            FNAME(NF) = ""                                               FOPEN.........8600
   20    CONTINUE                                                        FOPEN.........8700
C                                                                        FOPEN.........8800
C........SET DEFAULT VALUES FOR THE SMY FILE.  THE DEFAULT FILE WILL     FOPEN.........8900
C           NOT ACTUALLY BE CREATED UNLESS IT IS NEEDED.                 FOPEN.........9000
         K00 = K0 + 1                                                    FOPEN.........9100
         ENDEF = 'SUTRA.SMY'                                             FOPEN.........9200
C                                                                        FOPEN.........9300
C........OPEN FILE UNIT CONTAINING UNIT NUMBERS AND FILE ASSIGNMENTS     FOPEN.........9400
         IU=K0                                                           FOPEN.........9500
         FN=UNAME                                                        FOPEN.........9600
         INQUIRE(FILE=UNAME,EXIST=IS)                                    FOPEN.........9700
         IF (IS) THEN                                                    FOPEN.........9800
            OPEN(UNIT=IU,FILE=UNAME,STATUS='OLD',FORM='FORMATTED',       FOPEN.........9900
     1         IOSTAT=KERR)                                              FOPEN........10000
            IF(KERR.GT.0) GOTO 9000                                      FOPEN........10100
         ELSE                                                            FOPEN........10200
            CALL NAFU(K00,0,ENDEF)                                       FOPEN........10300
            OPEN(UNIT=K00,FILE=ENDEF,STATUS='REPLACE')                   FOPEN........10400
            GOTO 8000                                                    FOPEN........10500
         ENDIF                                                           FOPEN........10600
C                                                                        FOPEN........10700
C........COUNT HOW MANY BCS FILES LISTED, THEN REWIND.  ALLOCATE AND     FOPEN........10800
C           INITIALIZE BCS-RELATED ARRAYS IUNIB AND FNAMB, AS WELL AS    FOPEN........10900
C           NKS, KLIST, AND FNAIN.                                       FOPEN........11000
         NFBCS = 0                                                       FOPEN........11100
   30    READ(K0,'(A)',IOSTAT=INERR(1),END=32) INTFIL                    FOPEN........11200
         IF (INERR(1).NE.0) THEN                                         FOPEN........11300
            CALL NAFU(K00,0,ENDEF)                                       FOPEN........11400
            OPEN(UNIT=K00,FILE=ENDEF,STATUS='REPLACE')                   FOPEN........11500
            ERRCOD = 'REA-FIL'                                           FOPEN........11600
            CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                     FOPEN........11700
         END IF                                                          FOPEN........11800
         FT = ''                                                         FOPEN........11900
         READ(INTFIL,*,IOSTAT=INERR(1)) FT                               FOPEN........12000
         IF (FT.EQ.'BCS') NFBCS = NFBCS + 1                              FOPEN........12100
         GOTO 30                                                         FOPEN........12200
   32    REWIND(K0)                                                      FOPEN........12300
         ALLOCATE (IUNIB(NFBCS),NKS(2+NFBCS),KLIST(2+NFBCS,20))          FOPEN........12400
         IMVDIM = IMVDIM + NFBCS + (2 + NFBCS)*21                        FOPEN........12500
         ALLOCATE (FNAMB(NFBCS),FNAIN(2+NFBCS,20))                       FOPEN........12600
         CMVDIM = CMVDIM + 80*(NFBCS + (2 + NFBCS)*20)                   FOPEN........12700
         ALCBCS = .TRUE.                                                 FOPEN........12800
         ALCFIN = .TRUE.                                                 FOPEN........12900
         DO 33 N=1,2+NFBCS                                               FOPEN........13000
            NKS(N) = 0                                                   FOPEN........13100
   33    CONTINUE                                                        FOPEN........13200
         DO 35 NFB=1,NFBCS                                               FOPEN........13300
            IUNIB(NFB) = -1                                              FOPEN........13400
            FNAMB(NFB) = ""                                              FOPEN........13500
   35    CONTINUE                                                        FOPEN........13600
C........COMPUTE TOTAL NUMBER OF FILE SPECIFICATIONS.                    FOPEN........13700
         NFSPEC = 20 + NFBCS                                             FOPEN........13800
C                                                                        FOPEN........13900
C........READ IN UNIT NUMBERS AND FILE ASSIGNMENTS.  ASSIGN COMPATIBLE   FOPEN........14000
C           UNIT NUMBERS.  CLOSE UNIT K0.                                FOPEN........14100
         NFB = 0                                                         FOPEN........14200
         DO 90 NF=0,NFSPEC                                               FOPEN........14300
C...........READ A FILE SPECIFICATION                                    FOPEN........14400
            READ(K0,'(A)',IOSTAT=INERR(1),END=99) INTFIL                 FOPEN........14500
            IF (INERR(1).NE.0) THEN                                      FOPEN........14600
               CALL NAFU(K00,0,ENDEF)                                    FOPEN........14700
               OPEN(UNIT=K00,FILE=ENDEF,STATUS='REPLACE')                FOPEN........14800
               ERRCOD = 'REA-FIL'                                        FOPEN........14900
               CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                  FOPEN........15000
            END IF                                                       FOPEN........15100
            IF (VERIFY(INTFIL,' ').EQ.0) GOTO 99                         FOPEN........15200
            READ(INTFIL,*,IOSTAT=INERR(1)) FT, IU, FN                    FOPEN........15300
            IF (INERR(1).NE.0) THEN                                      FOPEN........15400
               CALL NAFU(K00,0,ENDEF)                                    FOPEN........15500
               OPEN(UNIT=K00,FILE=ENDEF,STATUS='REPLACE')                FOPEN........15600
               ERRCOD = 'REA-FIL'                                        FOPEN........15700
               CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                  FOPEN........15800
            END IF                                                       FOPEN........15900
C...........CHECK FOR ILLEGAL SPECIFICATIONS                             FOPEN........16000
            IF (FN.EQ.UNAME) THEN                                        FOPEN........16100
               CALL NAFU(K00,0,ENDEF)                                    FOPEN........16200
               OPEN(UNIT=K00,FILE=ENDEF,STATUS='REPLACE')                FOPEN........16300
               ERRCOD = 'FIL-9'                                          FOPEN........16400
               CHERR(1) = UNAME                                          FOPEN........16500
               CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                  FOPEN........16600
            END IF                                                       FOPEN........16700
C...........IF THE SPECIFIED UNIT NUMBER IS LESS THAN IUNMIN,            FOPEN........16800
C              SET IT TO IUNMIN                                          FOPEN........16900
            IU = MAX(IU, IUNMIN)                                         FOPEN........17000
C...........STORE THE FILE INFORMATION, CHECKING FOR INVALID AND         FOPEN........17100
C              REPEATED FILE TYPE SPECIFICATIONS AND ASSIGNING UNIT      FOPEN........17200
C              NUMBERS TO NON-OBSERVATION FILES ALONG THE WAY            FOPEN........17300
            IF (FT.EQ.'BCS') THEN                                        FOPEN........17400
               CALL NAFU(IU,0,FN)                                        FOPEN........17500
               IUNIT(9) = IU                                             FOPEN........17600
               FNAME(9) = FN                                             FOPEN........17700
               NFB = NFB + 1                                             FOPEN........17800
               IUNIB(NFB) = IU                                           FOPEN........17900
               FNAMB(NFB) = FN                                           FOPEN........18000
               GOTO 60                                                   FOPEN........18100
            END IF                                                       FOPEN........18200
            DO 50 NFT=0,23                                               FOPEN........18300
               IF (FT.EQ.FTSTR(NFT)) THEN                                FOPEN........18400
                  IF (IUNIT(NFT).EQ.-1) THEN                             FOPEN........18500
                     IF ((NFT.LE.6).OR.(NFT.GE.9)) CALL NAFU(IU,0,FN)    FOPEN........18600
                     IUNIT(NFT) = IU                                     FOPEN........18700
                     FNAME(NFT) = FN                                     FOPEN........18800
                     GOTO 60                                             FOPEN........18900
                  ELSE                                                   FOPEN........19000
                     CALL NAFU(K00,0,ENDEF)                              FOPEN........19100
                     OPEN(UNIT=K00,FILE=ENDEF,STATUS='REPLACE')          FOPEN........19200
                     ERRCOD = 'FIL-6'                                    FOPEN........19300
                     CHERR(1) = UNAME                                    FOPEN........19400
                     CHERR(2) = FT                                       FOPEN........19500
                     CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)            FOPEN........19600
                  END IF                                                 FOPEN........19700
               END IF                                                    FOPEN........19800
   50       CONTINUE                                                     FOPEN........19900
            CALL NAFU(K00,0,ENDEF)                                       FOPEN........20000
            OPEN(UNIT=K00,FILE=ENDEF,STATUS='REPLACE')                   FOPEN........20100
            ERRCOD = 'FIL-5'                                             FOPEN........20200
            CHERR(1) = UNAME                                             FOPEN........20300
            CHERR(2) = FT                                                FOPEN........20400
            CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                     FOPEN........20500
   60       CONTINUE                                                     FOPEN........20600
   90    CONTINUE                                                        FOPEN........20700
   99    CLOSE(K0)                                                       FOPEN........20800
C                                                                        FOPEN........20900
C........OPEN THE SMY FILE.                                              FOPEN........21000
C                                                                        FOPEN........21100
C........IF NO SMY SPECIFICATION, USE THE DEFAULT.                       FOPEN........21200
         IF (IUNIT(0).EQ.-1) THEN                                        FOPEN........21300
            CALL NAFU(K00,0,ENDEF)                                       FOPEN........21400
            IUNIT(0) = K00                                               FOPEN........21500
            FNAME(0) = ENDEF                                             FOPEN........21600
         END IF                                                          FOPEN........21700
         IU = IUNIT(0)                                                   FOPEN........21800
         FN = FNAME(0)                                                   FOPEN........21900
         OPEN(UNIT=IU,FILE=FN,STATUS='REPLACE',IOSTAT=KERR)              FOPEN........22000
C........IN CASE OF ERROR WHILE OPENING SMY FILE, WRITE ERROR            FOPEN........22100
C           MESSAGE TO DEFAULT FILE                                      FOPEN........22200
         IF (KERR.GT.0) THEN                                             FOPEN........22300
            CALL NAFU(K00,0,ENDEF)                                       FOPEN........22400
            OPEN(UNIT=K00,FILE=ENDEF,STATUS='REPLACE')                   FOPEN........22500
            GOTO 9000                                                    FOPEN........22600
         END IF                                                          FOPEN........22700
C........SET K00 AND ENAME                                               FOPEN........22800
         K00 = IU                                                        FOPEN........22900
         ENAME = FN                                                      FOPEN........23000
C                                                                        FOPEN........23100
C........DETERMINE WHETHER THE LAKES CAPABILITY IS BEING USED BASED      FOPEN........23200
C           ON WHETHER THE LKIN INPUT FILE IS LISTED.  IF LAKES NOT      FOPEN........23300
C           USED, IGNORE THE REMAINING LAKE-RELATED FILES.               FOPEN........23400
         IF (IUNIT(16).EQ.-1) THEN                                       FOPEN........23500
            LAKUSD = .FALSE.                                             FOPEN........23600
            IUNIT(17) = -1                                               FOPEN........23700
            IUNIT(18) = -1                                               FOPEN........23800
            IUNIT(19) = -1                                               FOPEN........23900
            IUNIT(20) = -1                                               FOPEN........24000
            IUNIT(21) = -1                                               FOPEN........24100
            IUNIT(22) = -1                                               FOPEN........24200
            IUNIT(23) = -1                                               FOPEN........24300
         ELSE                                                            FOPEN........24400
            LAKUSD = .TRUE.                                              FOPEN........24500
         END IF                                                          FOPEN........24600
C                                                                        FOPEN........24700
C........CHECK FOR REPEATED FILENAMES (EXCEPT OBS AND OBC FILES)         FOPEN........24800
C           AND MISSING SPECIFICATIONS FOR REQUIRED FILE TYPES           FOPEN........24900
         DO 260 NF=0,23                                                  FOPEN........25000
            IF ((NF.GE.7).AND.(NF.LE.9)) CYCLE                           FOPEN........25100
            IF (IUNIT(NF).EQ.-1) THEN                                    FOPEN........25200
               IF (((NF.GE.1).AND.(NF.LE.3)).OR.(LAKUSD.AND.             FOPEN........25300
     1            ((NF.EQ.16).OR.(NF.EQ.17).OR.(NF.EQ.19).OR.            FOPEN........25400
     2             (NF.EQ.21)))) THEN                                    FOPEN........25500
                  ERRCOD = 'FIL-7'                                       FOPEN........25600
                  CHERR(1) = UNAME                                       FOPEN........25700
                  CHERR(2) = FTSTR(NF)                                   FOPEN........25800
                  CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)               FOPEN........25900
               ELSE                                                      FOPEN........26000
                  CYCLE                                                  FOPEN........26100
               END IF                                                    FOPEN........26200
            END IF                                                       FOPEN........26300
            DO 250 NF2=NF+1,23                                           FOPEN........26400
               IF ((NF2.GE.7).AND.(NF2.LE.9)) CYCLE                      FOPEN........26500
               IF (FNAME(NF2).EQ.FNAME(NF)) THEN                         FOPEN........26600
                  ERRCOD = 'FIL-4'                                       FOPEN........26700
                  CHERR(1) = UNAME                                       FOPEN........26800
                  CHERR(2) = FNAME(NF)                                   FOPEN........26900
                  CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)               FOPEN........27000
               END IF                                                    FOPEN........27100
  250       CONTINUE                                                     FOPEN........27200
            DO 255 NFB=1,NFBCS                                           FOPEN........27300
               IF (FNAMB(NFB).EQ.FNAME(NF)) THEN                         FOPEN........27400
                  ERRCOD = 'FIL-4'                                       FOPEN........27500
                  CHERR(1) = UNAME                                       FOPEN........27600
                  CHERR(2) = FNAME(NF)                                   FOPEN........27700
                  CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)               FOPEN........27800
               END IF                                                    FOPEN........27900
  255       CONTINUE                                                     FOPEN........28000
  260    CONTINUE                                                        FOPEN........28100
         DO 280 NFB=1,NFBCS                                              FOPEN........28200
            DO 270 NFB2=NFB+1,NFBCS                                      FOPEN........28300
               IF (FNAMB(NFB2).EQ.FNAMB(NFB)) THEN                       FOPEN........28400
                  ERRCOD = 'FIL-4'                                       FOPEN........28500
                  CHERR(1) = UNAME                                       FOPEN........28600
                  CHERR(2) = FNAMB(NF)                                   FOPEN........28700
                  CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)               FOPEN........28800
               END IF                                                    FOPEN........28900
  270       CONTINUE                                                     FOPEN........29000
  280    CONTINUE                                                        FOPEN........29100
C                                                                        FOPEN........29200
C........SET UNIT NUMBERS K1 - K23.  (K00 HAS BEEN SET PREVIOUSLY.)      FOPEN........29300
         K1=IUNIT(1)                                                     FOPEN........29400
         K2=IUNIT(2)                                                     FOPEN........29500
         K3=IUNIT(3)                                                     FOPEN........29600
         K4=IUNIT(4)                                                     FOPEN........29700
         K5=IUNIT(5)                                                     FOPEN........29800
         K6=IUNIT(6)                                                     FOPEN........29900
         K7=IUNIT(7)                                                     FOPEN........30000
         K8=IUNIT(8)                                                     FOPEN........30100
         K9=IUNIT(9)                                                     FOPEN........30200
         K10=IUNIT(10)                                                   FOPEN........30300
         K11=IUNIT(11)                                                   FOPEN........30400
         K12=IUNIT(12)                                                   FOPEN........30500
         K13=IUNIT(13)                                                   FOPEN........30600
         K14=IUNIT(14)                                                   FOPEN........30700
         K15=IUNIT(15)                                                   FOPEN........30800
         K16=IUNIT(16)                                                   FOPEN........30900
         K17=IUNIT(17)                                                   FOPEN........31000
         K18=IUNIT(18)                                                   FOPEN........31100
         K19=IUNIT(19)                                                   FOPEN........31200
         K20=IUNIT(20)                                                   FOPEN........31300
         K21=IUNIT(21)                                                   FOPEN........31400
         K22=IUNIT(22)                                                   FOPEN........31500
         K23=IUNIT(23)                                                   FOPEN........31600
C                                                                        FOPEN........31700
C........CHECK FOR EXISTENCE OF INPUT FILES AND OPEN INPUT AND OUTPUT    FOPEN........31800
C           FILES (EXCEPT SMY, OBS, AND OBC)                             FOPEN........31900
         DO 300 NF=1,23                                                  FOPEN........32000
            IF ((NF.EQ.7).OR.(NF.EQ.8)) CYCLE                            FOPEN........32100
            IU=IUNIT(NF)                                                 FOPEN........32200
            FN=FNAME(NF)                                                 FOPEN........32300
            IF (IU.EQ.-1) GOTO 300                                       FOPEN........32400
            IF ((NF.LE.2).OR.((NF.GE.16).AND.(NF.LE.18))) THEN           FOPEN........32500
               INQUIRE(FILE=FN,EXIST=IS)                                 FOPEN........32600
               IF(IS) THEN                                               FOPEN........32700
                  OPEN(UNIT=IU,FILE=FN,STATUS='OLD',FORM='FORMATTED',    FOPEN........32800
     1               IOSTAT=KERR)                                        FOPEN........32900
               ELSE                                                      FOPEN........33000
                  GOTO 8000                                              FOPEN........33100
               ENDIF                                                     FOPEN........33200
            ELSE IF (NF.EQ.9) THEN                                       FOPEN........33300
               DO 290 NFB=1,NFBCS                                        FOPEN........33400
                  IU = IUNIB(NFB)                                        FOPEN........33500
                  FN = FNAMB(NFB)                                        FOPEN........33600
                  INQUIRE(FILE=FN,EXIST=IS)                              FOPEN........33700
                  IF(IS) THEN                                            FOPEN........33800
                     OPEN(UNIT=IU,FILE=FN,STATUS='OLD',FORM='FORMATTED', FOPEN........33900
     1                  IOSTAT=KERR)                                     FOPEN........34000
                  ELSE                                                   FOPEN........34100
                     GOTO 8000                                           FOPEN........34200
                  ENDIF                                                  FOPEN........34300
  290          CONTINUE                                                  FOPEN........34400
            ELSE                                                         FOPEN........34500
               OPEN(UNIT=IU,FILE=FN,STATUS='REPLACE',FORM='FORMATTED',   FOPEN........34600
     1            IOSTAT=KERR)                                           FOPEN........34700
            ENDIF                                                        FOPEN........34800
            IF(KERR.GT.0) GOTO 9000                                      FOPEN........34900
  300    CONTINUE                                                        FOPEN........35000
C                                                                        FOPEN........35100
C........SET FLAG TO INDICATE THAT FIRST CALL IS COMPLETED, THEN RETURN  FOPEN........35200
         ONCEFO = .TRUE.                                                 FOPEN........35300
         RETURN                                                          FOPEN........35400
C                                                                        FOPEN........35500
      ELSE                                                               FOPEN........35600
C                                                                        FOPEN........35700
C........ALLOCATE AND INITIALIZE OBSERVATION-RELATED UNIT NUMBERS        FOPEN........35800
C           AND FILENAMES                                                FOPEN........35900
         ALLOCATE(IUNIO(NFLOMX))                                         FOPEN........36000
         IMVDIM = IMVDIM + NFLOMX                                        FOPEN........36100
         ALLOCATE(FNAMO(NFLOMX))                                         FOPEN........36200
         CMVDIM = CMVDIM + 80*NFLOMX                                     FOPEN........36300
         ALCOBS = .TRUE.                                                 FOPEN........36400
         DO 330 NFO=1,NFLOMX                                             FOPEN........36500
            IUNIO(NFO) = -1                                              FOPEN........36600
            FNAMO(NFO) = ""                                              FOPEN........36700
  330    CONTINUE                                                        FOPEN........36800
C                                                                        FOPEN........36900
C........OPEN OBS AND OBC FILES, AUTOMATICALLY GENERATING UNIT NUMBERS   FOPEN........37000
C           AND FILENAMES                                                FOPEN........37100
C                                                                        FOPEN........37200
C........LOOP OVER THE TWO FILE TYPES                                    FOPEN........37300
         DO 400 NF=7,8                                                   FOPEN........37400
C...........IF NO FILE SPECIFICATION OF THIS TYPE, MOVE ON               FOPEN........37500
            IF (IUNIT(NF).EQ.-1) CYCLE                                   FOPEN........37600
C...........DETERMINE LENGTH OF THE SPECIFIED FILENAME AND ITS ROOT      FOPEN........37700
            LNAME = LEN_TRIM(FNAME(NF))                                  FOPEN........37800
            LROOT = SCAN(FNAME(NF),'.',BACK=.TRUE.) - 1                  FOPEN........37900
C...........SET THE ROOT NAME AND EXTENSION THAT WILL BE USED FOR FILES  FOPEN........38000
C              OF THIS TYPE                                              FOPEN........38100
            IF (LROOT.NE.-1) THEN                                        FOPEN........38200
               IF (LROOT.NE.0) THEN                                      FOPEN........38300
                  FNROOT = FNAME(NF)(1:LROOT)                            FOPEN........38400
               ELSE                                                      FOPEN........38500
                  FNROOT = "SUTRA"                                       FOPEN........38600
               END IF                                                    FOPEN........38700
               IF (LROOT.NE.LNAME-1) THEN                                FOPEN........38800
                  FNEXTN = FNAME(NF)(LROOT+1:LNAME)                      FOPEN........38900
               ELSE                                                      FOPEN........39000
                  FNEXTN = "." // FTSTR(NF)                              FOPEN........39100
               END IF                                                    FOPEN........39200
            ELSE                                                         FOPEN........39300
               IF (LNAME.NE.0) THEN                                      FOPEN........39400
                  FNROOT = FNAME(NF)                                     FOPEN........39500
               ELSE                                                      FOPEN........39600
                  FNROOT = "SUTRA"                                       FOPEN........39700
               END IF                                                    FOPEN........39800
               FNEXTN = "." // FTSTR(NF)                                 FOPEN........39900
            END IF                                                       FOPEN........40000
C...........INITIALIZE UNIT NUMBER                                       FOPEN........40100
            IUNEXT = IUNIT(NF)                                           FOPEN........40200
C...........LOOP OVER OBSERVATION OUTPUT FILES                           FOPEN........40300
            DO 380 J=1,NFLOMX                                            FOPEN........40400
               JM1 = J - 1                                               FOPEN........40500
C..............IF FILE IS NOT OF THE TYPE CURRENTLY BEING PROCESSED,     FOPEN........40600
C                 SKIP FILE                                              FOPEN........40700
               IF (OFP(J)%FRMT.NE.FTSTR(NF)) CYCLE                       FOPEN........40800
C..............CONSTRUCT FILENAME FROM ROOT NAME, SCHEDULE NAME,         FOPEN........40900
C                 AND EXTENSION                                          FOPEN........41000
               IF ((ISSTRA.NE.1).AND.                                    FOPEN........41100
     1             (SCHDLS(OFP(J)%ISCHED)%NAME.NE."-")) THEN             FOPEN........41200
                  FN = TRIM(FNROOT) // "_"                               FOPEN........41300
     1               // TRIM(SCHDLS(OFP(J)%ISCHED)%NAME) // FNEXTN       FOPEN........41400
               ELSE                                                      FOPEN........41500
                  FN = TRIM(FNROOT) // FNEXTN                            FOPEN........41600
               END IF                                                    FOPEN........41700
C..............CHECK FOR DUPLICATE FILENAME AMONG NON-OBSERVATION        FOPEN........41800
C                 FILES                                                  FOPEN........41900
               DO 350 NFF=0,23                                           FOPEN........42000
                  IF ((NFF.GE.7).AND.(NFF.LE.9)) CYCLE                   FOPEN........42100
                  IF (FN.EQ.FNAME(NFF)) THEN                             FOPEN........42200
                     ERRCOD = 'FIL-4'                                    FOPEN........42300
                     CHERR(1) = UNAME                                    FOPEN........42400
                     CHERR(2) = FN                                       FOPEN........42500
                     CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)            FOPEN........42600
                  END IF                                                 FOPEN........42700
  350          CONTINUE                                                  FOPEN........42800
               DO 352 NFB=1,NFBCS                                        FOPEN........42900
                  IF (FN.EQ.FNAMB(NFB)) THEN                             FOPEN........43000
                     ERRCOD = 'FIL-4'                                    FOPEN........43100
                     CHERR(1) = UNAME                                    FOPEN........43200
                     CHERR(2) = FN                                       FOPEN........43300
                     CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)            FOPEN........43400
                  END IF                                                 FOPEN........43500
  352          CONTINUE                                                  FOPEN........43600
C..............CHECK FOR DUPLICATE FILENAME AMONG PREVIOUSLY DEFINED     FOPEN........43700
C                 OBSERVATION OUTPUT FILES                               FOPEN........43800
               DO 355 NJ=1,J-1                                           FOPEN........43900
                  IF (FN.EQ.FNAMO(NJ)) THEN                              FOPEN........44000
                     ERRCOD = 'FIL-4'                                    FOPEN........44100
                     CHERR(1) = UNAME                                    FOPEN........44200
                     CHERR(2) = FN                                       FOPEN........44300
                     CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)            FOPEN........44400
                  END IF                                                 FOPEN........44500
  355          CONTINUE                                                  FOPEN........44600
C..............ASSIGN NEXT AVAILABLE UNIT NUMBER, RECORD FILE            FOPEN........44700
C                 INFORMATION, AND OPEN THE FILE                         FOPEN........44800
               CALL NAFU(IUNEXT,JM1,FN)                                  FOPEN........44900
               IU = IUNEXT                                               FOPEN........45000
               IUNIO(J) = IU                                             FOPEN........45100
               FNAMO(J) = FN                                             FOPEN........45200
               INQUIRE(UNIT=IU, OPENED=IS)                               FOPEN........45300
               OPEN(UNIT=IU,FILE=FN,STATUS='REPLACE',FORM='FORMATTED',   FOPEN........45400
     1            IOSTAT=KERR)                                           FOPEN........45500
               IF(KERR.GT.0) GOTO 9000                                   FOPEN........45600
  380       CONTINUE                                                     FOPEN........45700
  400    CONTINUE                                                        FOPEN........45800
C                                                                        FOPEN........45900
C........SECOND CALL IS COMPLETED, SO RETURN                             FOPEN........46000
         RETURN                                                          FOPEN........46100
C                                                                        FOPEN........46200
      END IF                                                             FOPEN........46300
C                                                                        FOPEN........46400
 8000 CONTINUE                                                           FOPEN........46500
C.....GENERATE ERROR                                                     FOPEN........46600
      ERRCOD = 'FIL-1'                                                   FOPEN........46700
      CHERR(1) = UNAME                                                   FOPEN........46800
      CHERR(2) = FN                                                      FOPEN........46900
      CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                           FOPEN........47000
C                                                                        FOPEN........47100
 9000 CONTINUE                                                           FOPEN........47200
C.....GENERATE ERROR                                                     FOPEN........47300
      ERRCOD = 'FIL-2'                                                   FOPEN........47400
      CHERR(1) = UNAME                                                   FOPEN........47500
      CHERR(2) = FN                                                      FOPEN........47600
      INERR(1) = IU                                                      FOPEN........47700
      CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                           FOPEN........47800
C                                                                        FOPEN........47900
      END                                                                FOPEN........48000
C                                                                        FOPEN........48100
C     FUNCTION          F  R  C  S  T  P           SUTRA VERSION 3.0     FRCSTP.........100
C                                                                        FRCSTP.........200
C *** PURPOSE :                                                          FRCSTP.........300
C ***  TO RETURN THE FRACTIONAL TIME STEP FOR A GIVEN TIME.  IF THE      FRCSTP.........400
C ***  SPECIFIED TIME IS GREATER THAN THE MAXIMUM, A VALUE OF            FRCSTP.........500
C ***  +HUGE(1D0) (THE LARGEST NUMBER THAT CAN BE REPRESENTED IN DOUBLE  FRCSTP.........600
C ***  PRECISION) IS RETURNED.  IF THE SPECIFIED TIME IS LESS THAN       FRCSTP.........700
C ***  TSTART, A VALUE OF -HUGE(1D0) IS RETURNED.  IF THE TIME STEP      FRCSTP.........800
C ***  SCHEDULE HAS NOT YET BEEN DEFINED, A VALUE OF ZERO IS RETURNED.   FRCSTP.........900
C                                                                        FRCSTP........1000
      DOUBLE PRECISION FUNCTION FRCSTP(TIME)                             FRCSTP........1100
      USE LLDEF                                                          FRCSTP........1200
      USE SCHDEF                                                         FRCSTP........1300
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                FRCSTP........1400
      COMMON /SCH/ NSCH,ISCHTS,NSCHAU                                    FRCSTP........1500
C                                                                        FRCSTP........1600
      IF (ISCHTS.EQ.0) THEN                                              FRCSTP........1700
         FRCSTP = DNINT(DBLE(0))                                         FRCSTP........1800
         RETURN                                                          FRCSTP........1900
      END IF                                                             FRCSTP........2000
C                                                                        FRCSTP........2100
      NSMAX = SCHDLS(ISCHTS)%LLEN - 1                                    FRCSTP........2200
C                                                                        FRCSTP........2300
      LCNT = 1                                                           FRCSTP........2400
      T1 = SCHDLS(ISCHTS)%SLIST(LCNT)%DVALU1                             FRCSTP........2500
      IF (TIME.EQ.T1) THEN                                               FRCSTP........2600
         FRCSTP = DNINT(DBLE(0))                                         FRCSTP........2700
         RETURN                                                          FRCSTP........2800
      ELSE IF (TIME.LT.T1) THEN                                          FRCSTP........2900
         FRCSTP = -HUGE(1D0)                                             FRCSTP........3000
         RETURN                                                          FRCSTP........3100
      END IF                                                             FRCSTP........3200
      DO 100 NS=1,NSMAX                                                  FRCSTP........3300
         LCNT = LCNT + 1                                                 FRCSTP........3400
         T2 = SCHDLS(ISCHTS)%SLIST(LCNT)%DVALU1                          FRCSTP........3500
         IF (TIME.EQ.T2) THEN                                            FRCSTP........3600
            FRCSTP = DNINT(DBLE(NS))                                     FRCSTP........3700
            RETURN                                                       FRCSTP........3800
         ELSE IF (TIME.LT.T2) THEN                                       FRCSTP........3900
            WT = (TIME - T1)/(T2 - T1)                                   FRCSTP........4000
            S1 = DBLE(NS - 1)                                            FRCSTP........4100
            S2 = DBLE(NS)                                                FRCSTP........4200
            FRCSTP = (1D0 - WT)*S1 + WT*S2                               FRCSTP........4300
            RETURN                                                       FRCSTP........4400
         END IF                                                          FRCSTP........4500
         T1 = T2                                                         FRCSTP........4600
  100 CONTINUE                                                           FRCSTP........4700
      FRCSTP = +HUGE(1D0)                                                FRCSTP........4800
C                                                                        FRCSTP........4900
      RETURN                                                             FRCSTP........5000
      END                                                                FRCSTP........5100
C                                                                        FRCSTP........5200
C     SUBROUTINE        G  E  T  I  S  P  B  G     SUTRA VERSION 3.0     GETISPBG.......100
C                                                                        GETISPBG.......200
C *** PURPOSE :                                                          GETISPBG.......300
C ***  TO IDENTIFY GENERALIZED-FLOW NODES THAT ARE ACTING AS             GETISPBG.......400
C ***  SPECIFIED-PRESSURE NODES BECAUSE OF USER-SPECIFIED PRESSURE       GETISPBG.......500
C ***  LIMITS.                                                           GETISPBG.......600
C                                                                        GETISPBG.......700
      SUBROUTINE GETISPBG()                                              GETISPBG.......800
      USE ALLARR                                                         GETISPBG.......900
      USE LARR, ONLY : LKBCPBC,LKBCPBG,ITIPG,ISLAKE,IBCSPG,ISURFACE,PLK  GETISPBG......1000
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                GETISPBG......1100
      INTEGER KTYPE(2)                                                   ! fix civ 200723a
      COMMON /CONTRL/ GNUP,GNUU,UP,DTMULT,DTMAX,ME,ISSFLO,ISSTRA,ITCYC,  GETISPBG......1200
     1   NPCYC,NUCYC,NPRINT,NBCFPR,NBCSPR,NBCPPR,NBCUPR,NLAKPR,IREAD,    GETISPBG......1300
     1   NBGPPR,NBGUPR,ISTORE,NOUMAT,IUNSAT,IALSAT,KTYPE                 GETISPBG......1400
      COMMON /DIMS/ NN,NE,NIN,NBI,NCBI,NB,NBHALF,NPBC,NUBC,              GETISPBG......1500
     1   NSOP,NSOU,NBCN,NPBG,NUBG,NCID                                   GETISPBG......1600
C                                                                        GETISPBG......1700
      DO 200 IPG=1,NPBG                                                  GETISPBG......1800
         IF ((IBCPBG(IPG).EQ.2).OR.(.NOT.LKBCPBG(IPG))) CYCLE            GETISPBG......1900
         I=IABS(IPBG(IPG))                                               GETISPBG......2000
         NFB = IBCSPG(IPG)                                               GETISPBG......2100
         LIT = ITIPG(NFB)                                                GETISPBG......2200
         IF (ISLAKE(I).AND.(LIT.EQ.2)) THEN                              GETISPBG......2300
            ISURF = ISURFACE(I)                                          GETISPBG......2400
            PLAK = PLK(ISURF)                                            GETISPBG......2500
         ELSE                                                            GETISPBG......2600
            PLAK = 0D0                                                   GETISPBG......2700
         END IF                                                          GETISPBG......2800
         IF (CPQL1(IPG).EQ."P") THEN                                     GETISPBG......2900
            IF ((LPBGSP(IPG)).AND.(QPGITR(IPG).LT.QPBG1(IPG))) THEN      GETISPBG......3000
C..............NOT PAST LOWER P LIMIT; IN LINEAR RANGE OF PBG            GETISPBG......3100
               LPBGSP(IPG) = .FALSE.                                     GETISPBG......3200
               ISPBG(I) = IPG                                            GETISPBG......3300
            ELSE IF ((.NOT.LPBGSP(IPG)).AND.                             GETISPBG......3400
     1               (PITER(I).LT.PBG1(IPG)+PLAK)) THEN                  GETISPBG......3500
C..............PAST LOWER P LIMIT; SPEC-P IF ACTIVE PBC NODE DOES NOT    GETISPBG......3600
C                 TAKE PRECEDENCE                                        GETISPBG......3700
               IP = ISPBC(I)                                             GETISPBG......3800
               IF (IP.NE.0) THEN                                         GETISPBG......3900
                  IF ((IBCPBC(IP).NE.2).AND.LKBCPBC(IP)) CYCLE           GETISPBG......4000
               END IF                                                    GETISPBG......4100
               LPBGSP(IPG) = .TRUE.                                      GETISPBG......4200
               ISPBG(I) = -IPG                                           GETISPBG......4300
            END IF                                                       GETISPBG......4400
         ELSE IF (CPQL2(IPG).EQ."P") THEN                                GETISPBG......4500
            IF ((LPBGSP(IPG)).AND.(QPGITR(IPG).GT.QPBG2(IPG))) THEN      GETISPBG......4600
C..............NOT PAST UPPER P LIMIT; IN LINEAR RANGE OF PBG            GETISPBG......4700
               LPBGSP(IPG) = .FALSE.                                     GETISPBG......4800
               ISPBG(I) = IPG                                            GETISPBG......4900
            ELSE IF ((.NOT.LPBGSP(IPG)).AND.                             GETISPBG......5000
     1               (PITER(I).GT.PBG2(IPG)+PLAK)) THEN                  GETISPBG......5100
C..............PAST UPPER P LIMIT; SPEC-P IF ACTIVE PBC NODE DOES NOT    GETISPBG......5200
C                 TAKE PRECEDENCE                                        GETISPBG......5300
               IP = ISPBC(I)                                             GETISPBG......5400
               IF (IP.NE.0) THEN                                         GETISPBG......5500
                  IF ((IBCPBC(IP).NE.2).AND.LKBCPBC(IP)) CYCLE           GETISPBG......5600
               END IF                                                    GETISPBG......5700
               LPBGSP(IPG) = .TRUE.                                      GETISPBG......5800
               ISPBG(I) = IPG                                            GETISPBG......5900
            END IF                                                       GETISPBG......6000
         ELSE                                                            GETISPBG......6100
C...........NO P LIMITS                                                  GETISPBG......6200
            LPBGSP(IPG) = .FALSE.                                        GETISPBG......6300
            ISPBG(I) = IPG                                               GETISPBG......6400
         END IF                                                          GETISPBG......6500
  200 CONTINUE                                                           GETISPBG......6600
C                                                                        GETISPBG......6700
      RETURN                                                             GETISPBG......6800
      END                                                                GETISPBG......6900
C                                                                        GETISPBG......7000
C     SUBROUTINE        G  E  T  Q  P  G           SUTRA VERSION 3.0     GETQPG.........100
C                                                                        GETQPG.........200
C *** PURPOSE :                                                          GETQPG.........300
C ***  TO COMPUTE FLOW IN OR OUT OF A GENERALIZED-FLOW NODE, TAKING      GETQPG.........400
C ***  INTO ACCOUNT USER-SPECIFIED LIMITS.                               GETQPG.........500
C                                                                        GETQPG.........600
      SUBROUTINE GETQPG(IMODE,IPG,I,PVAL,PLAK,QPG)                       GETQPG.........700
      USE ALLARR                                                         GETQPG.........800
      USE LARR, ONLY : IBCSPG,ITIPG                                      GETQPG.........900
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                GETQPG........1000
      INTEGER KTYPE(2)                                                   ! fix civ 200723a
      DIMENSION PVAL(NN)                                                 GETQPG........1100
      COMMON /CONTRL/ GNUP,GNUU,UP,DTMULT,DTMAX,ME,ISSFLO,ISSTRA,ITCYC,  GETQPG........1200
     1   NPCYC,NUCYC,NPRINT,NBCFPR,NBCSPR,NBCPPR,NBCUPR,NLAKPR,IREAD,    GETQPG........1300
     1   NBGPPR,NBGUPR,ISTORE,NOUMAT,IUNSAT,IALSAT,KTYPE                 GETQPG........1400
      COMMON /DIMS/ NN,NE,NIN,NBI,NCBI,NB,NBHALF,NPBC,NUBC,              GETQPG........1500
     1   NSOP,NSOU,NBCN,NPBG,NUBG,NCIDB                                  GETQPG........1600
      COMMON /DIMX/ NWI,NWF,NWL,NELT,NNNX,NEX,N48                        GETQPG........1700
      COMMON /SOLVI/ KSOLVP,KSOLVU,NN1,NN2,NN3                           GETQPG........1800
C                                                                        GETQPG........1900
      IF (.NOT.LPBGSP(IPG)) THEN                                         GETQPG........2000
C........NOT ACTING AS A SPECIFIED-P NODE                                GETQPG........2100
         IF (ISPBG(I).NE.0) THEN                                         GETQPG........2200
            IF ((CPQL1(IPG).EQ."Q").AND.                                 GETQPG........2300
     1          (PVAL(I).LT.PBG1(IPG)+PLAK)) THEN                        GETQPG........2400
               QPG = QPBG1(IPG)                                          GETQPG........2500
            ELSE IF ((CPQL2(IPG).EQ."Q").AND.                            GETQPG........2600
     1               (PVAL(I).GT.PBG2(IPG)+PLAK))                        GETQPG........2700
     1         THEN                                                      GETQPG........2800
               QPG = QPBG2(IPG)                                          GETQPG........2900
            ELSE                                                         GETQPG........3000
               QPG = QPBGIC(IPG) + GNUPG(IPG)*(PLAK - PVAL(I))           GETQPG........3100
            END IF                                                       GETQPG........3200
         ELSE                                                            GETQPG........3300
            QPG = 0D0                                                    GETQPG........3400
         END IF                                                          GETQPG........3500
      ELSE                                                               GETQPG........3600
C........ACTING AS A SPECIFIED-P NODE                                    GETQPG........3700
         IF (KSOLVP.EQ.0) THEN                                           GETQPG........3800
            IF (IMODE.EQ.0) THEN                                         GETQPG........3900
C..............EVALUATE QPG IN "RESIDUAL" FORM FOR BANDED MATRIX.        GETQPG........4000
               QPG = 0D0                                                 GETQPG........4100
               IB = I                                                    GETQPG........4200
               DO 1050 JB=1,NB                                           GETQPG........4300
                  J=JB+IB-NBHALF                                         GETQPG........4400
                  IF ((J.LT.1).OR.(J.GT.NN)) CYCLE                       GETQPG........4500
                  QPG = QPG + PMAT(IB,JB)*PVAL(J)                        GETQPG........4600
 1050          CONTINUE                                                  GETQPG........4700
               QPG = QPG - BPBG(IPG)                                     GETQPG........4800
            ELSE                                                         GETQPG........4900
C..............EVALUATE QPL IN "DIFFERENCE" FORM FOR BANDED MATRIX.      GETQPG........5000
               IF (ISPBG(I).LT.0) THEN                                   GETQPG........5100
                  QPG = (PBG1(IPG) + PLAK - PZERG(IPG))*BPBG(IPG)        GETQPG........5200
               ELSE                                                      GETQPG........5300
                  QPG = (PBG2(IPG) + PLAK - PZERG(IPG))*BPBG(IPG)        GETQPG........5400
               END IF                                                    GETQPG........5500
            END IF                                                       GETQPG........5600
         ELSE                                                            GETQPG........5700
C........EVALUATE QPG IN "RESIDUAL" FORM FOR "SLAP-COLUMN" MATRIX.       GETQPG........5800
            MDBEG = JA(I)                                                GETQPG........5900
            MDEND = JA(I + 1) - 1                                        GETQPG........6000
            RGNUP = 1D0/GNUP                                             GETQPG........6100
            QPG = RGNUP*PMAT(MDBEG,1)*PVAL(I)                            GETQPG........6200
            DO 2060 MJ=MDBEG+1,MDEND                                     GETQPG........6300
               J = IA(MJ)                                                GETQPG........6400
C..............ASSUME MATRIX STRUCTURE IS SYMMETRIC, EVEN IF             GETQPG........6500
C                 MATRIX VALUES ARE NOT                                  GETQPG........6600
               MBEG = JA(J)                                              GETQPG........6700
               MEND = JA(J + 1) - 1                                      GETQPG........6800
               DO 2050 MM=MBEG,MEND                                      GETQPG........6900
                  IF (I.EQ.IA(MM)) THEN                                  GETQPG........7000
                     M = MM                                              GETQPG........7100
                     GOTO 2052                                           GETQPG........7200
                  END IF                                                 GETQPG........7300
 2050          CONTINUE                                                  GETQPG........7400
 2052          QPG = QPG + PMAT(M,1)*PVAL(J)                             GETQPG........7500
 2060       CONTINUE                                                     GETQPG........7600
            QPG = QPG - BPBG(IPG)                                        GETQPG........7700
         END IF                                                          GETQPG........7800
      END IF                                                             GETQPG........7900
C                                                                        GETQPG........8000
      RETURN                                                             GETQPG........8100
      END                                                                GETQPG........8200
C                                                                        GETQPG........8300
C     SUBROUTINE        G  E  T  Q  P  G  I  T  R  SUTRA VERSION 3.0     GETQPGITR......100
C                                                                        GETQPGITR......200
C *** PURPOSE :                                                          GETQPGITR......300
C ***  TO COMPUTE FLOW QPGITR IN OR OUT OF A GENERALIZED-FLOW NODE.      GETQPGITR......400
C                                                                        GETQPGITR......500
      SUBROUTINE GETQPGITR(ONCEP)                                        GETQPGITR......600
      USE ALLARR                                                         GETQPGITR......700
      USE LARR, ONLY : ISLAKE,LAKNOD,PLK,IBCSPG,ITIPG,LKBCPBG,ISURFACE   GETQPGITR......800
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                GETQPGITR......900
      INTEGER KTYPE(2)                                                   ! fix civ 200723a
      LOGICAL ONCEP                                                      GETQPGITR.....1000
      COMMON /CONTRL/ GNUP,GNUU,UP,DTMULT,DTMAX,ME,ISSFLO,ISSTRA,ITCYC,  GETQPGITR.....1100
     1   NPCYC,NUCYC,NPRINT,NBCFPR,NBCSPR,NBCPPR,NBCUPR,NLAKPR,IREAD,    GETQPGITR.....1200
     1   NBGPPR,NBGUPR,ISTORE,NOUMAT,IUNSAT,IALSAT,KTYPE                 GETQPGITR.....1300
      COMMON /DIMS/ NN,NE,NIN,NBI,NCBI,NB,NBHALF,NPBC,NUBC,              GETQPGITR.....1400
     1   NSOP,NSOU,NBCN,NPBG,NUBG,NCIDB                                  GETQPGITR.....1500
      COMMON /DIMSRF/ MAXCON, NNSURF, NNVERT                             GETQPGITR.....1600
      COMMON /SOLVI/ KSOLVP,KSOLVU,NN1,NN2,NN3                           GETQPGITR.....1700
C                                                                        GETQPGITR.....1800
      IF (.NOT.ONCEP) THEN                                               GETQPGITR.....1900
         IMODE = 0                                                       GETQPGITR.....2000
         DO 500 IPG=1,NPBG                                               GETQPGITR.....2100
            I = IABS(IPBG(IPG))                                          GETQPGITR.....2200
            BPBG(IPG) = PVEC(I)                                          GETQPGITR.....2300
  500    CONTINUE                                                        GETQPGITR.....2400
      ELSE                                                               GETQPGITR.....2500
         IMODE = 1                                                       GETQPGITR.....2600
      END IF                                                             GETQPGITR.....2700
C                                                                        GETQPGITR.....2800
      DO 2058 IPG=1,NPBG                                                 GETQPGITR.....2900
         IF ((IBCPBG(IPG).EQ.2).OR.(.NOT.LKBCPBG(IPG))) CYCLE            GETQPGITR.....3000
         I=IABS(IPBG(IPG))                                               GETQPGITR.....3100
         IF (.NOT.ISLAKE(I)) THEN                                        GETQPGITR.....3200
            PLAK = 0D0                                                   GETQPGITR.....3300
            CALL GETQPG(IMODE,IPG,I,PITER,PLAK,QPGITR(IPG))              GETQPGITR.....3400
         ELSE                                                            GETQPGITR.....3500
            NFB = IBCSPG(IPG)                                            GETQPGITR.....3600
            LIT = ITIPG(NFB)                                             GETQPGITR.....3700
            IF (LIT.EQ.2) THEN                                           GETQPGITR.....3800
               ISURF = ISURFACE(I)                                       GETQPGITR.....3900
               PLAK = PLK(ISURF)                                         GETQPGITR.....4000
               CALL GETQPG(IMODE,IPG,I,PITER,PLAK,QPGITR(IPG))           GETQPGITR.....4100
            ELSE                                                         GETQPGITR.....4200
               PLAK = 0D0                                                GETQPGITR.....4300
               QPGITR(IPG) = 0D0                                         GETQPGITR.....4400
            END IF                                                       GETQPGITR.....4500
         END IF                                                          GETQPGITR.....4600
 2058 CONTINUE                                                           GETQPGITR.....4700
C                                                                        GETQPGITR.....4800
      RETURN                                                             GETQPGITR.....4900
      END                                                                GETQPGITR.....5000
C                                                                        GETQPGITR.....5100
C     SUBROUTINE        G  E  T  Q  P  L           SUTRA VERSION 3.0     GETQPL.........100
C                                                                        GETQPL.........200
C *** PURPOSE :                                                          GETQPL.........300
C ***  TO COMPUTE FLOW IN OR OUT OF A SPECIFIED-PRESSURE NODE.           GETQPL.........400
C                                                                        GETQPL.........500
      SUBROUTINE GETQPL(IMODE,IP,I,PVAL,PLAK,QPL)                        GETQPL.........600
      USE ALLARR                                                         GETQPL.........700
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                GETQPL.........800
      DIMENSION PVAL(NN)                                                 GETQPL.........900
      INTEGER KTYPE(2)                                                   ! fix civ 200723a
      COMMON /CONTRL/ GNUP,GNUU,UP,DTMULT,DTMAX,ME,ISSFLO,ISSTRA,ITCYC,  GETQPL........1000
     1   NPCYC,NUCYC,NPRINT,NBCFPR,NBCSPR,NBCPPR,NBCUPR,NLAKPR,IREAD,    GETQPL........1100
     1   NBGPPR,NBGUPR,ISTORE,NOUMAT,IUNSAT,IALSAT,KTYPE                 GETQPL........1200
      COMMON /DIMS/ NN,NE,NIN,NBI,NCBI,NB,NBHALF,NPBC,NUBC,              GETQPL........1300
     1   NSOP,NSOU,NBCN,NPBG,NUBG,NCIDB                                  GETQPL........1400
      COMMON /DIMX/ NWI,NWF,NWL,NELT,NNNX,NEX,N48                        GETQPL........1500
      COMMON /SOLVI/ KSOLVP,KSOLVU,NN1,NN2,NN3                           GETQPL........1600
C                                                                        GETQPL........1700
      IF (KSOLVP.EQ.0) THEN                                              GETQPL........1800
         IF (IMODE.EQ.0) THEN                                            GETQPL........1900
C...........EVALUATE QPL IN "RESIDUAL" FORM FOR BANDED MATRIX.           GETQPL........2000
            QPL = 0D0                                                    GETQPL........2100
            IB = I                                                       GETQPL........2200
            DO 1050 JB=1,NB                                              GETQPL........2300
               J=JB+IB-NBHALF                                            GETQPL........2400
               IF ((J.LT.1).OR.(J.GT.NN)) CYCLE                          GETQPL........2500
               QPL = QPL + PMAT(IB,JB)*PVAL(J)                           GETQPL........2600
 1050       CONTINUE                                                     GETQPL........2700
            QPL = QPL - BPBC(IP)                                         GETQPL........2800
         ELSE                                                            GETQPL........2900
C...........EVALUATE QPL IN "DIFFERENCE" FORM FOR BANDED MATRIX.         GETQPL........3000
            QPL = (PBC(IP) + PLAK - PZERO(IP))*BPBC(IP)                  GETQPL........3100
         END IF                                                          GETQPL........3200
      ELSE                                                               GETQPL........3300
C........EVALUATE QPL IN "RESIDUAL" FORM FOR "SLAP-COLUMN" MATRIX.       GETQPL........3400
         MDBEG = JA(I)                                                   GETQPL........3500
         MDEND = JA(I + 1) - 1                                           GETQPL........3600
         RGNUP = 1D0/GNUP                                                GETQPL........3700
         QPL = RGNUP*PMAT(MDBEG,1)*PVAL(I)                               GETQPL........3800
         DO 2060 MJ=MDBEG+1,MDEND                                        GETQPL........3900
            J = IA(MJ)                                                   GETQPL........4000
C...........ASSUME MATRIX STRUCTURE IS SYMMETRIC, EVEN IF                GETQPL........4100
C              MATRIX VALUES ARE NOT                                     GETQPL........4200
            MBEG = JA(J)                                                 GETQPL........4300
            MEND = JA(J + 1) - 1                                         GETQPL........4400
            DO 2050 MM=MBEG,MEND                                         GETQPL........4500
               IF (I.EQ.IA(MM)) THEN                                     GETQPL........4600
                  M = MM                                                 GETQPL........4700
                  GOTO 2052                                              GETQPL........4800
               END IF                                                    GETQPL........4900
 2050       CONTINUE                                                     GETQPL........5000
 2052       QPL = QPL + PMAT(M,1)*PVAL(J)                                GETQPL........5100
 2060    CONTINUE                                                        GETQPL........5200
         QPL = QPL - BPBC(IP)                                            GETQPL........5300
      END IF                                                             GETQPL........5400
C                                                                        GETQPL........5500
      RETURN                                                             GETQPL........5600
      END                                                                GETQPL........5700
C                                                                        GETQPL........5800
C     SUBROUTINE        G  E  T  Q  P  L  I  T  R  SUTRA VERSION 3.0     GETQPLITR......100
C                                                                        GETQPLITR......200
C *** PURPOSE :                                                          GETQPLITR......300
C ***  TO COMPUTE FLOW QPLITR IN OR OUT OF A SPECIFIED-PRESSURE NODE.    GETQPLITR......400
C                                                                        GETQPLITR......500
      SUBROUTINE GETQPLITR(ONCEP)                                        GETQPLITR......600
      USE ALLARR                                                         GETQPLITR......700
      USE LARR, ONLY : ISLAKE,LAKNOD,PLK,LKBCPBC,ISURFACE                GETQPLITR......800
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                GETQPLITR......900
      INTEGER KTYPE(2)                                                   ! fix civ 200723a
      LOGICAL ONCEP                                                      GETQPLITR.....1000
      COMMON /CONTRL/ GNUP,GNUU,UP,DTMULT,DTMAX,ME,ISSFLO,ISSTRA,ITCYC,  GETQPLITR.....1100
     1   NPCYC,NUCYC,NPRINT,NBCFPR,NBCSPR,NBCPPR,NBCUPR,NLAKPR,IREAD,    GETQPLITR.....1200
     1   NBGPPR,NBGUPR,ISTORE,NOUMAT,IUNSAT,IALSAT,KTYPE                 GETQPLITR.....1300
      COMMON /DIMS/ NN,NE,NIN,NBI,NCBI,NB,NBHALF,NPBC,NUBC,              GETQPLITR.....1400
     1   NSOP,NSOU,NBCN,NPBG,NUBG,NCIDB                                  GETQPLITR.....1500
      COMMON /DIMSRF/ MAXCON, NNSURF, NNVERT                             GETQPLITR.....1600
      COMMON /SOLVI/ KSOLVP,KSOLVU,NN1,NN2,NN3                           GETQPLITR.....1700
C                                                                        GETQPLITR.....1800
      IF (.NOT.ONCEP) THEN                                               GETQPLITR.....1900
         IMODE = 0                                                       GETQPLITR.....2000
         DO 500 IP=1,NPBC                                                GETQPLITR.....2100
            I = IABS(IPBC(IP))                                           GETQPLITR.....2200
            BPBC(IP) = PVEC(I)                                           GETQPLITR.....2300
  500    CONTINUE                                                        GETQPLITR.....2400
      ELSE                                                               GETQPLITR.....2500
         IMODE = 1                                                       GETQPLITR.....2600
      END IF                                                             GETQPLITR.....2700
C                                                                        GETQPLITR.....2800
      DO 2080 IP=1,NPBC                                                  GETQPLITR.....2900
         IF ((IBCPBC(IP).EQ.2).OR.(.NOT.LKBCPBC(IP))) CYCLE              GETQPLITR.....3000
         I=IABS(IPBC(IP))                                                GETQPLITR.....3100
         IF (.NOT.ISLAKE(I)) THEN                                        GETQPLITR.....3200
            PLAK = 0D0                                                   GETQPLITR.....3300
         ELSE                                                            GETQPLITR.....3400
            ISURF = ISURFACE(I)                                          GETQPLITR.....3500
            PLAK = PLK(ISURF)                                            GETQPLITR.....3600
         END IF                                                          GETQPLITR.....3700
         CALL GETQPL(IMODE,IP,I,PITER,PLAK,QPLITR(IP))                   GETQPLITR.....3800
 2080 CONTINUE                                                           GETQPLITR.....3900
C                                                                        GETQPLITR.....4000
      RETURN                                                             GETQPLITR.....4100
      END                                                                GETQPLITR.....4200
C                                                                        GETQPLITR.....4300
C     SUBROUTINE        G  E  T  Q  P  U           SUTRA VERSION 3.0     GETQPU.........100
C                                                                        GETQPU.........200
C *** PURPOSE :                                                          GETQPU.........300
C ***  TO COMPUTE SOLUTE/ENERGY IN OR OUT OF A SPECIFIED-CONC/TEMP NODE. GETQPU.........400
C                                                                        GETQPU.........500
      SUBROUTINE GETQPU(IU,UVAL,QPU)                                     GETQPU.........600
      USE ALLARR                                                         GETQPU.........700
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                GETQPU.........800
C                                                                        GETQPU.........900
      QPU = (UVAL - UZERO(IU))*BUBC(IU)                                  GETQPU........1000
C                                                                        GETQPU........1100
      RETURN                                                             GETQPU........1200
      END                                                                GETQPU........1300
C                                                                        GETQPU........1400
C     SUBROUTINE        G  E  T  S  A  T           SUTRA VERSION 3.0     GETSAT.........100
C                                                                        GETSAT.........200
C *** PURPOSE :                                                          GETSAT.........300
C ***  TO CALCULATE WATER SATURATION AND RELATIVE PERMEABILITY.          GETSAT.........400
C                                                                        GETSAT.........500
      SUBROUTINE GETSAT(SW,DSWDP,RELK,PRES,KREG)                         GETSAT.........600
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                GETSAT.........700
      DIMENSION KTYPE(2)                                                 GETSAT.........800
      COMMON /CONTRL/ GNUP,GNUU,UP,DTMULT,DTMAX,ME,ISSFLO,ISSTRA,ITCYC,  GETSAT.........900
     1   NPCYC,NUCYC,NPRINT,NBCFPR,NBCSPR,NBCPPR,NBCUPR,NLAKPR,IREAD,    GETSAT........1000
     1   NBGPPR,NBGUPR,ISTORE,NOUMAT,IUNSAT,IALSAT,KTYPE                 GETSAT........1100
C                                                                        GETSAT........1200
C.....COMPUTE WATER SATURATION, SW, AND IF NECESSARY, ITS DERIVATIVE,    GETSAT........1300
C        DSWDP.                                                          GETSAT........1400
      IF ((IUNSAT.NE.0).AND.(PRES.LT.0D0)) THEN                          GETSAT........1500
         CALL UNSAT(SW,DSWDP,PRES,KREG)                                  GETSAT........1600
      ELSE                                                               GETSAT........1700
         SW = 1.D0                                                       GETSAT........1800
         DSWDP = 0.D0                                                    GETSAT........1900
      END IF                                                             GETSAT........2000
C                                                                        GETSAT........2100
C.....IF NECESSARY, COMPUTE RELATIVE PERMEABILITY, RELK, AS A FUNCTION   GETSAT........2200
C        OF WATER SATURATION, SW.                                        GETSAT........2300
      IF ((IALSAT.EQ.2).AND.(SW.LT.1D0)) THEN                            GETSAT........2400
         CALL RKSAT(RELK,SW,PRES,KREG)                                   GETSAT........2500
      ELSE                                                               GETSAT........2600
         RELK = 1.D0                                                     GETSAT........2700
      END IF                                                             GETSAT........2800
C                                                                        GETSAT........2900
      RETURN                                                             GETSAT........3000
      END                                                                GETSAT........3100
C                                                                        GETSAT........3200
C     SUBROUTINE        G  L  O  B  A  N           SUTRA VERSION 3.0     GLOBAN.........100
C                                                                        GLOBAN.........200
C *** PURPOSE :                                                          GLOBAN.........300
C ***  TO ASSEMBLE RESULTS OF ELEMENTWISE INTEGRATIONS INTO              GLOBAN.........400
C ***  A GLOBAL BANDED MATRIX AND GLOBAL VECTOR FOR BOTH                 GLOBAN.........500
C ***  FLOW AND TRANSPORT EQUATIONS.                                     GLOBAN.........600
C                                                                        GLOBAN.........700
      SUBROUTINE GLOBAN(L,ML,VOLE,BFLOWE,DFLOWE,BTRANE,DTRANE,           GLOBAN.........800
     1      IN,VOL,PMAT,PVEC,UMAT,UVEC,PBC,UBC)                          GLOBAN.........900
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                GLOBAN........1000
      DIMENSION BFLOWE(8,8),DFLOWE(8),BTRANE(8,8),DTRANE(8,8),VOLE(8)    GLOBAN........1100
      DIMENSION VOL(NN),PMAT(NELT,NCBI),PVEC(NNVEC),PBC(NBCN),UBC(NBCN)  GLOBAN........1200
      DIMENSION UMAT(NELT,NCBI),UVEC(NNVEC)                              GLOBAN........1300
      DIMENSION IN(NIN)                                                  GLOBAN........1400
      DIMENSION KTYPE(2)                                                 GLOBAN........1500
      COMMON /CONTRL/ GNUP,GNUU,UP,DTMULT,DTMAX,ME,ISSFLO,ISSTRA,ITCYC,  GLOBAN........1600
     1   NPCYC,NUCYC,NPRINT,NBCFPR,NBCSPR,NBCPPR,NBCUPR,NLAKPR,IREAD,    GLOBAN........1700
     1   NBGPPR,NBGUPR,ISTORE,NOUMAT,IUNSAT,IALSAT,KTYPE                 GLOBAN........1800
      COMMON /DIMS/ NN,NE,NIN,NBI,NCBI,NB,NBHALF,NPBC,NUBC,              GLOBAN........1900
     1   NSOP,NSOU,NBCN,NPBG,NUBG,NCIDB                                  GLOBAN........2000
      COMMON /DIMSRF/ MAXCON, NNSURF, NNVERT                             GLOBAN........2100
      COMMON /DIMX/ NWI,NWF,NWL,NELT,NNNX,NEX,N48                        GLOBAN........2200
      COMMON /DIMX2/ NELTA,NNVEC,NDIMIA,NDIMJA                           GLOBAN........2300
C                                                                        GLOBAN........2400
      N1=(L-1)*N48+1                                                     GLOBAN........2500
      N8=N1+N48-1                                                        GLOBAN........2600
C                                                                        GLOBAN........2700
C.....ADD RESULTS OF INTEGRATIONS OVER ELEMENT L TO GLOBAL               GLOBAN........2800
C        P-MATRIX AND P-VECTOR                                           GLOBAN........2900
      IF(ML-1) 9050,9050,9150                                            GLOBAN........3000
 9050 IE=0                                                               GLOBAN........3100
      DO 9100 II=N1,N8                                                   GLOBAN........3200
      IE=IE+1                                                            GLOBAN........3300
      IB=IN(II)                                                          GLOBAN........3400
      VOL(IB)=VOL(IB)+VOLE(IE)                                           GLOBAN........3500
      PVEC(IB)=PVEC(IB)+DFLOWE(IE)                                       GLOBAN........3600
      JE=0                                                               GLOBAN........3700
      DO 9100 JJ=N1,N8                                                   GLOBAN........3800
      JE=JE+1                                                            GLOBAN........3900
      JB=IN(JJ)-IB+NBHALF                                                GLOBAN........4000
      PMAT(IB,JB)=PMAT(IB,JB)+BFLOWE(IE,JE)                              GLOBAN........4100
 9100 CONTINUE                                                           GLOBAN........4200
      IF(ML-1) 9150,9300,9150                                            GLOBAN........4300
C                                                                        GLOBAN........4400
C.....ADD RESULTS OF INTEGRATIONS OVER ELEMENT L TO GLOBAL               GLOBAN........4500
C        U-MATRIX                                                        GLOBAN........4600
 9150 IF(NOUMAT.EQ.1) GOTO 9300                                          GLOBAN........4700
      IE=0                                                               GLOBAN........4800
      DO 9200 II=N1,N8                                                   GLOBAN........4900
      IE=IE+1                                                            GLOBAN........5000
      IB=IN(II)                                                          GLOBAN........5100
C.....POSITION FOR ADDITION TO U-VECTOR                                  GLOBAN........5200
C        UVEC(IB)=UVEC(IB)+ ((   ))                                      GLOBAN........5300
      JE=0                                                               GLOBAN........5400
      DO 9200 JJ=N1,N8                                                   GLOBAN........5500
      JE=JE+1                                                            GLOBAN........5600
      DBSUM = DTRANE(IE,JE)+BTRANE(IE,JE)                                GLOBAN........5700
      JB=IN(JJ)-IB+NBHALF                                                GLOBAN........5800
      UMAT(IB,JB)=UMAT(IB,JB)+DBSUM                                      GLOBAN........5900
 9200 CONTINUE                                                           GLOBAN........6000
C                                                                        GLOBAN........6100
 9300 CONTINUE                                                           GLOBAN........6200
C - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  GLOBAN........6300
C - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  GLOBAN........6400
C - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  GLOBAN........6500
C                                                                        GLOBAN........6600
C                                                                        GLOBAN........6700
      RETURN                                                             GLOBAN........6800
      END                                                                GLOBAN........6900
C                                                                        GLOBAN........7000
C     SUBROUTINE        G  L  O  C  O  L           SUTRA VERSION 3.0     GLOCOL.........100
C                                                                        GLOCOL.........200
C *** PURPOSE :                                                          GLOCOL.........300
C ***  TO ASSEMBLE RESULTS OF ELEMENTWISE INTEGRATIONS INTO              GLOCOL.........400
C ***  A GLOBAL "SLAP COLUMN"-FORMAT MATRIX AND GLOBAL VECTOR            GLOCOL.........500
C ***  FOR BOTH FLOW AND TRANSPORT EQUATIONS.                            GLOCOL.........600
C                                                                        GLOCOL.........700
      SUBROUTINE GLOCOL(L,ML,VOLE,BFLOWE,DFLOWE,BTRANE,DTRANE,           GLOCOL.........800
     1      IN,VOL,PMAT,PVEC,UMAT,UVEC,IA,JA)                            GLOCOL.........900
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                GLOCOL........1000
      DIMENSION BFLOWE(8,8),DFLOWE(8),BTRANE(8,8),DTRANE(8,8),VOLE(8)    GLOCOL........1100
      DIMENSION VOL(NN),PMAT(NELT,NCBI),PVEC(NNVEC)                      GLOCOL........1200
      DIMENSION UMAT(NELT,NCBI),UVEC(NNVEC)                              GLOCOL........1300
      DIMENSION IN(NIN),IA(NDIMIA),JA(NDIMJA)                            GLOCOL........1400
      DIMENSION KTYPE(2)                                                 GLOCOL........1500
      COMMON /CONTRL/ GNUP,GNUU,UP,DTMULT,DTMAX,ME,ISSFLO,ISSTRA,ITCYC,  GLOCOL........1600
     1   NPCYC,NUCYC,NPRINT,NBCFPR,NBCSPR,NBCPPR,NBCUPR,NLAKPR,IREAD,    GLOCOL........1700
     1   NBGPPR,NBGUPR,ISTORE,NOUMAT,IUNSAT,IALSAT,KTYPE                 GLOCOL........1800
      COMMON /DIMS/ NN,NE,NIN,NBI,NCBI,NB,NBHALF,NPBC,NUBC,              GLOCOL........1900
     1   NSOP,NSOU,NBCN,NPBG,NUBG,NCIDB                                  GLOCOL........2000
      COMMON /DIMX/ NWI,NWF,NWL,NELT,NNNX,NEX,N48                        GLOCOL........2100
      COMMON /DIMX2/ NELTA, NNVEC, NDIMIA, NDIMJA                        GLOCOL........2200
C                                                                        GLOCOL........2300
      N1=(L-1)*N48+1                                                     GLOCOL........2400
      N8=N1+N48-1                                                        GLOCOL........2500
C                                                                        GLOCOL........2600
C.....ADD RESULTS OF INTEGRATIONS OVER ELEMENT L TO GLOBAL               GLOCOL........2700
C        P-MATRIX AND P-VECTOR                                           GLOCOL........2800
      IF(ML-1) 9050,9050,9150                                            GLOCOL........2900
 9050 IE=0                                                               GLOCOL........3000
      DO 9100 II=N1,N8                                                   GLOCOL........3100
      IE=IE+1                                                            GLOCOL........3200
      IB=IN(II)                                                          GLOCOL........3300
      VOL(IB)=VOL(IB)+VOLE(IE)                                           GLOCOL........3400
      PVEC(IB)=PVEC(IB)+DFLOWE(IE)                                       GLOCOL........3500
      JE=0                                                               GLOCOL........3600
      DO 9100 JJ=N1,N8                                                   GLOCOL........3700
      JE=JE+1                                                            GLOCOL........3800
      JB = IN(JJ)                                                        GLOCOL........3900
      MBEG = JA(JB)                                                      GLOCOL........4000
      MEND = JA(JB + 1) - 1                                              GLOCOL........4100
      DO 9060 MM=MBEG,MEND                                               GLOCOL........4200
         IF (IB.EQ.IA(MM)) THEN                                          GLOCOL........4300
            M = MM                                                       GLOCOL........4400
            GOTO 9100                                                    GLOCOL........4500
         END IF                                                          GLOCOL........4600
 9060 CONTINUE                                                           GLOCOL........4700
 9100 PMAT(M,1)=PMAT(M,1)+BFLOWE(IE,JE)                                  GLOCOL........4800
      IF(ML-1) 9150,9300,9150                                            GLOCOL........4900
C                                                                        GLOCOL........5000
C.....ADD RESULTS OF INTEGRATIONS OVER ELEMENT L TO GLOBAL               GLOCOL........5100
C        U-MATRIX                                                        GLOCOL........5200
 9150 IF(NOUMAT.EQ.1) GOTO 9300                                          GLOCOL........5300
      IE=0                                                               GLOCOL........5400
      DO 9200 II=N1,N8                                                   GLOCOL........5500
      IE=IE+1                                                            GLOCOL........5600
      IB=IN(II)                                                          GLOCOL........5700
C.....POSITION FOR ADDITION TO U-VECTOR                                  GLOCOL........5800
C        UVEC(IB)=UVEC(IB)+ ((   ))                                      GLOCOL........5900
      JE=0                                                               GLOCOL........6000
      DO 9200 JJ=N1,N8                                                   GLOCOL........6100
      JE=JE+1                                                            GLOCOL........6200
      JB = IN(JJ)                                                        GLOCOL........6300
      MBEG = JA(JB)                                                      GLOCOL........6400
      MEND = JA(JB + 1) - 1                                              GLOCOL........6500
      DO 9160 MM=MBEG,MEND                                               GLOCOL........6600
         IF (IB.EQ.IA(MM)) THEN                                          GLOCOL........6700
            M = MM                                                       GLOCOL........6800
            GOTO 9180                                                    GLOCOL........6900
         END IF                                                          GLOCOL........7000
 9160 CONTINUE                                                           GLOCOL........7100
 9180 DBSUM = DTRANE(IE,JE)+BTRANE(IE,JE)                                GLOCOL........7200
      UMAT(M,1)=UMAT(M,1)+DBSUM                                          GLOCOL........7300
 9200 CONTINUE                                                           GLOCOL........7400
C                                                                        GLOCOL........7500
 9300 CONTINUE                                                           GLOCOL........7600
 9999 CONTINUE                                                           GLOCOL........7700
C - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  GLOCOL........7800
C - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  GLOCOL........7900
C - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  GLOCOL........8000
C                                                                        GLOCOL........8100
C                                                                        GLOCOL........8200
      RETURN                                                             GLOCOL........8300
      END                                                                GLOCOL........8400
C                                                                        GLOCOL........8500
C     SUBROUTINE        I  N  D  A  T  0           SUTRA VERSION 3.0     INDAT0.........100
C                                                                        INDAT0.........200
C *** PURPOSE :                                                          INDAT0.........300
C ***  TO INPUT, OUTPUT, AND ORGANIZE A PORTION OF THE INP FILE          INDAT0.........400
C ***  INPUT DATA (DATASETS 5 THROUGH 7)                                 INDAT0.........500
C                                                                        INDAT0.........600
      SUBROUTINE INDAT0()                                                INDAT0.........700
      USE EXPINT                                                         INDAT0.........800
      USE LLDEF                                                          INDAT0.........900
      USE SCHDEF                                                         INDAT0........1000
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                INDAT0........1100
      CHARACTER INTFIL*1000                                              INDAT0........1200
      CHARACTER*10 ADSMOD,ADSMOD1(10)                                    INDAT0........1300
      CHARACTER SOLWRD(0:10)*10,SOLNAM(0:10)*40                          INDAT0........1400
      CHARACTER*10 CSOLVP,CSOLVU                                         INDAT0........1500
      CHARACTER*80 ERRCOD,CHERR(10),UNAME,FNAME(0:23)                    INDAT0........1600
      CHARACTER SCHTYP*12, CDUM10*10, CDUM80*80                          INDAT0........1700
      CHARACTER*10 SCHNAM                                                INDAT0........1800
      CHARACTER CTICS*20, CREFT*8                                        INDAT0........1900
      DIMENSION INERR(10),RLERR(10)                                      INDAT0........2000
      DIMENSION KTYPE(2)                                                 INDAT0........2100
      INTEGER RMVDIM,IMVDIM,I1VDIM,CMVDIM,LMVDIM,PMVDIM                  INDAT0........2200
      ALLOCATABLE :: ISLIST(:), TLIST(:), DTMP1(:), DTMP2(:)             INDAT0........2300
      CHARACTER*8 VERNUM, VERNIN                                         INDAT0........2400
      LOGICAL, ALLOCATABLE :: SBASED(:), ELAPSD(:)                       INDAT0........2500
      LOGICAL TSYES                                                      INDAT0........2600
      LOGICAL LAKUSD                                                     INDAT0........2700
      COMMON /CONTRL/ GNUP,GNUU,UP,DTMULT,DTMAX,ME,ISSFLO,ISSTRA,ITCYC,  INDAT0........2800
     1   NPCYC,NUCYC,NPRINT,NBCFPR,NBCSPR,NBCPPR,NBCUPR,NLAKPR,IREAD,    INDAT0........2900
     1   NBGPPR,NBGUPR,ISTORE,NOUMAT,IUNSAT,IALSAT,KTYPE                 INDAT0........3000
      COMMON /DIMS/ NN,NE,NIN,NBI,NCBI,NB,NBHALF,NPBC,NUBC,              INDAT0........3100
     1   NSOP,NSOU,NBCN,NPBG,NUBG,NCIDB                                  INDAT0........3200
      COMMON /DIMX/ NWI,NWF,NWL,NELT,NNNX,NEX,N48                        INDAT0........3300
      COMMON /DIMX2/ NELTA,NNVEC,NDIMIA,NDIMJA                           INDAT0........3400
      COMMON /FNAMES/ UNAME,FNAME                                        INDAT0........3500
      COMMON /FUNITS/ K00,K0,K1,K2,K3,K4,K5,K6,K7,K8,K9,                 INDAT0........3600
     1   K10,K11,K12,K13,K14,K15,K16,K17,K18,K19,K20,K21,K22,K23         INDAT0........3700
      COMMON /GRAVEC/ GRAVX,GRAVY,GRAVZ                                  INDAT0........3800
      COMMON /ITERAT/ RPM,RPMAX,RUM,RUMAX,ITER,ITRMAX,IPWORS,IUWORS      INDAT0........3900
      COMMON /ITSOLI/ ITRMXP,ITOLP,NSAVEP,ITRMXU,ITOLU,NSAVEU            INDAT0........4000
      COMMON /ITSOLR/ TOLP,TOLU                                          INDAT0........4100
      COMMON /KPRINT/ KNODAL,KELMNT,KINCID,KPLOTP,KPLOTU,                INDAT0........4200
     1   KPANDS,KVEL,KCORT,KBUDG,KSCRN,KPAUSE                            INDAT0........4300
      COMMON /LAKU/ LAKUSD                                               INDAT0........4400
      COMMON /MEMCNT/ RMVDIM,IMVDIM,I1VDIM,CMVDIM,LMVDIM,PMVDIM          INDAT0........4500
      COMMON /MODSOR/ ADSMOD,ADSMOD1                                     INDAT0........4600
      COMMON /SCH/ NSCH,ISCHTS,NSCHAU                                    INDAT0........4700
      COMMON /PARAMS/ COMPFL,COMPMA,DRWDU,CW,CS,RHOS,SIGMAW,SIGMAS,      INDAT0........4800
     1   RHOW0,URHOW0,VISC0,PRODF1,PRODS1,PRODF0,PRODS0,CHI1,CHI2        INDAT0........4900
      COMMON /SOLVC/ SOLWRD,SOLNAM                                       INDAT0........5000
      COMMON /SOLVI/ KSOLVP,KSOLVU,NN1,NN2,NN3                           INDAT0........5100
      COMMON /SOLVN/ NSLVRS                                              INDAT0........5200
      COMMON /TIMES/ DELT,TSEC,TMIN,THOUR,TDAY,TWEEK,TMONTH,TYEAR,       INDAT0........5300
     1   TMAX,DELTP,DELTU,DLTPM1,DLTUM1,IT,ITBCS,ITRST,ITMAX,TSTART      INDAT0........5400
      COMMON /VER/ VERNUM, VERNIN                                        INDAT0........5500
C                                                                        INDAT0........5600
      INSTOP=0                                                           INDAT0........5700
C                                                                        INDAT0........5800
C.....INPUT DATASET 5: NUMERICAL CONTROL PARAMETERS                      INDAT0........5900
      ERRCOD = 'REA-INP-5'                                               INDAT0........6000
      CALL READIF(K1, 0, INTFIL, ERRCOD)                                 INDAT0........6100
      READ(INTFIL,*,IOSTAT=INERR(1)) UP                                  INDAT0........6200
      IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)        INDAT0........6300
      WRITE(K3,70) UP                                                    INDAT0........6400
   70 FORMAT(////11X,'N U M E R I C A L   C O N T R O L   D A T A'//     INDAT0........6500
     1   11X,F15.5,5X,'"UPSTREAM WEIGHTING" FACTOR')                     INDAT0........6600
C                                                                        INDAT0........6700
C.....INPUT DATASET 6: TEMPORAL CONTROL AND SOLUTION CYCLING DATA        INDAT0........6800
      ERRCOD = 'REA-ICS-1'                                               INDAT0........6900
      CALL READIF(K2, 0, INTFIL, ERRCOD)                                 INDAT0........7000
      IF (IREAD.EQ.+1) THEN                                              INDAT0........7100
         READ(INTFIL,*,IOSTAT=INERR(1)) TICS                             INDAT0........7200
      ELSE                                                               INDAT0........7300
         READ(INTFIL,*,IOSTAT=INERR(1)) TICS,DUM,DUM,IDUM,TICS0          INDAT0........7400
      END IF                                                             INDAT0........7500
      IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)        INDAT0........7600
      REWIND(K2)                                                         INDAT0........7700
      WRITE(CTICS,'(E20.10)') TICS                                       INDAT0........7800
      WRITE(K3,120)                                                      INDAT0........7900
  120 FORMAT('1'////11X,'T E M P O R A L   C O N T R O L   A N D   ',    INDAT0........8000
     1   'S O L U T I O N   C Y C L I N G   D A T A')                    INDAT0........8100
      ERRCOD = 'REA-INP-6'                                               INDAT0........8200
      CALL READIF(K1, 0, INTFIL, ERRCOD)                                 INDAT0........8300
      READ(INTFIL,*,IOSTAT=INERR(1)) NSCH                                INDAT0........8400
      IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)        INDAT0........8500
C.....SET NUMBER OF USUAL AUTOMATIC SCHEDULES THAT WILL BE CREATED.      INDAT0........8600
C        CURRENTLY, THESE ARE "STEPS_1&UP", "STEP_0", AND "STEP_1".      INDAT0........8700
      NSCHAU = 3                                                         INDAT0........8800
C.....IF VERSION 2.0 INPUT, RE-READ DATASET IN OLD FORMAT.  ELSE IF      INDAT0........8900
C        NSCH>0, RE-READ FIRST LINE OF DATASET IN NEW FORMAT.  ELSE      INDAT0........9000
C        IF NSCH<0, OR NSCH=0 AND TRANSPORT IS NOT STEADY-STATE,         INDAT0........9100
C        GENERATE ERROR.                                                 INDAT0........9200
      IF (VERNIN.EQ."2.0") THEN                                          INDAT0........9300
C........READ TEMPORAL AND SOLUTION CYCLING CONTROLS.                    INDAT0........9400
         READ(INTFIL,*,IOSTAT=INERR(1)) ITMAX,DELT,TMAX,ITCYC,DTMULT,    INDAT0........9500
     1      DTMAX,NPCYC,NUCYC                                            INDAT0........9600
         IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)     INDAT0........9700
C........ERROR CHECKING SPECIFIC TO OLD FORMAT.                          INDAT0........9800
         IF (DELT.GT.DTMAX) THEN                                         INDAT0........9900
            ERRCOD = 'INP-6-3'                                           INDAT0.......10000
            CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                     INDAT0.......10100
         END IF                                                          INDAT0.......10200
      ELSE IF (NSCH.GT.0) THEN                                           INDAT0.......10300
C........READ FIRST LINE OF DATASET.                                     INDAT0.......10400
         READ(INTFIL,*,IOSTAT=INERR(1)) NSCH, NPCYC, NUCYC               INDAT0.......10500
         IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)     INDAT0.......10600
      ELSE IF (NSCH.LT.0) THEN                                           INDAT0.......10700
            ERRCOD = 'INP-6-8'                                           INDAT0.......10800
            CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                     INDAT0.......10900
      ELSE                                                               INDAT0.......11000
         IF (ISSTRA.EQ.0) THEN                                           INDAT0.......11100
            ERRCOD = 'INP-6-13'                                          INDAT0.......11200
            CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                     INDAT0.......11300
         END IF                                                          INDAT0.......11400
         NPCYC = 1                                                       INDAT0.......11500
         NUCYC = 1                                                       INDAT0.......11600
      END IF                                                             INDAT0.......11700
C.....ERROR CHECKING COMMON TO BOTH FORMATS.                             INDAT0.......11800
      IF (NPCYC.LT.1.OR.NUCYC.LT.1) THEN                                 INDAT0.......11900
         ERRCOD = 'INP-6-1'                                              INDAT0.......12000
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        INDAT0.......12100
      ELSE IF (NPCYC.NE.1.AND.NUCYC.NE.1) THEN                           INDAT0.......12200
         ERRCOD = 'INP-6-2'                                              INDAT0.......12300
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        INDAT0.......12400
      ELSE IF ((NPCYC.NE.1.OR.NUCYC.NE.1).AND.LAKUSD) THEN               INDAT0.......12500
         ERRCOD = 'INP-6-16'                                             INDAT0.......12600
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        INDAT0.......12700
      END IF                                                             INDAT0.......12800
C.....IF TRANSPORT IS STEADY-STATE, SKIP THROUGH THE REST OF THE         INDAT0.......12900
C        DATASET AND CREATE A TRIVIAL "TIME_STEPS" SCHEDULE.             INDAT0.......13000
C        (NOTE THAT IF TRANSPORT IS STEADY-STATE, SO IS FLOW.)           INDAT0.......13100
C        EVENTUALLY, IN ADDITION, THE USUAL AUTOMATIC SCHEDULES WILL     INDAT0.......13200
C        BE CREATED.                                                     INDAT0.......13300
      IF (ISSTRA.EQ.1) THEN                                              INDAT0.......13400
         TSTART = TICS                                                   INDAT0.......13500
         IF (VERNIN.NE."2.0") THEN                                       INDAT0.......13600
            ERRCOD = 'REA-INP-6'                                         INDAT0.......13700
            CDUM10 = ''                                                  INDAT0.......13800
            DO WHILE (CDUM10.NE.'-')                                     INDAT0.......13900
               CALL READIF(K1, 0, INTFIL, ERRCOD)                        INDAT0.......14000
               IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR,      INDAT0.......14100
     1            RLERR)                                                 INDAT0.......14200
               READ(INTFIL,*,IOSTAT=INERR(1)) CDUM10                     INDAT0.......14300
            END DO                                                       INDAT0.......14400
            DELT = MAX(1D-1*DABS(TSTART), 1D0)                           INDAT0.......14500
         END IF                                                          INDAT0.......14600
         NSCH = 1 + NSCHAU                                               INDAT0.......14700
         ALLOCATE(SCHDLS(NSCH))                                          INDAT0.......14800
         CMVDIM = CMVDIM + 10*NSCH                                       INDAT0.......14900
         IMVDIM = IMVDIM + NSCH                                          INDAT0.......15000
         ISCHTS = 1                                                      INDAT0.......15100
         ALLOCATE(SCHDLS(ISCHTS)%SLIST(2))                               INDAT0.......15200
         RMVDIM = RMVDIM + 2*2                                           INDAT0.......15300
         SCHDLS(ISCHTS)%NAME = 'TIME_STEPS'                              INDAT0.......15400
         NS1UP = 2                                                       INDAT0.......15500
         ALLOCATE(SCHDLS(NS1UP)%SLIST(1))                                INDAT0.......15600
         RMVDIM = RMVDIM + 2*1                                           INDAT0.......15700
         SCHDLS(NS1UP)%NAME = 'STEPS_1&UP'                               INDAT0.......15800
         NS0 = 3                                                         INDAT0.......15900
         ALLOCATE(SCHDLS(NS0)%SLIST(1))                                  INDAT0.......16000
         RMVDIM = RMVDIM + 2*1                                           INDAT0.......16100
         SCHDLS(NS0)%NAME = 'STEP_0'                                     INDAT0.......16200
         NS1 = 4                                                         INDAT0.......16300
         ALLOCATE(SCHDLS(NS1)%SLIST(1))                                  INDAT0.......16400
         RMVDIM = RMVDIM + 2*1                                           INDAT0.......16500
         SCHDLS(NS1)%NAME = 'STEP_1'                                     INDAT0.......16600
         TIME = TSTART                                                   INDAT0.......16700
         STEP = 0D0                                                      INDAT0.......16800
         SCHDLS(ISCHTS)%SLIST(1)%DVALU1 = TIME                           INDAT0.......16900
         SCHDLS(ISCHTS)%SLIST(1)%DVALU2 = STEP                           INDAT0.......17000
         SCHDLS(NS0)%SLIST(1)%DVALU1 = TIME                              INDAT0.......17100
         SCHDLS(NS0)%SLIST(1)%DVALU2 = STEP                              INDAT0.......17200
         SCHDLS(NS0)%LLEN = 1                                            INDAT0.......17300
         TIME = TIME + DELT                                              INDAT0.......17400
         STEP = 1D0                                                      INDAT0.......17500
         SCHDLS(ISCHTS)%SLIST(2)%DVALU1 = TIME                           INDAT0.......17600
         SCHDLS(ISCHTS)%SLIST(2)%DVALU2 = STEP                           INDAT0.......17700
         SCHDLS(ISCHTS)%LLEN = 2                                         INDAT0.......17800
         SCHDLS(NS1)%SLIST(1)%DVALU1 = TIME                              INDAT0.......17900
         SCHDLS(NS1)%SLIST(1)%DVALU2 = STEP                              INDAT0.......18000
         SCHDLS(NS1)%LLEN = 1                                            INDAT0.......18100
         SCHDLS(NS1UP)%SLIST(1)%DVALU1 = TIME                            INDAT0.......18200
         SCHDLS(NS1UP)%SLIST(1)%DVALU2 = STEP                            INDAT0.......18300
         SCHDLS(NS1UP)%LLEN = 1                                          INDAT0.......18400
         ITMAX = 1                                                       INDAT0.......18500
C........WRITE STEADY-STATE OUTPUT INFORMATION AND BEGIN WRITING         INDAT0.......18600
C           DESCRIPTIONS OF SCHEDULES DEFINED BY SUTRA.                  INDAT0.......18700
         WRITE(K3,138) NSCH                                              INDAT0.......18800
  138    FORMAT (/13X,'NOTE: BECAUSE FLOW AND TRANSPORT ARE STEADY-',    INDAT0.......18900
     1      'STATE, USER-DEFINED SCHEDULES ARE NOT IN EFFECT.  '         INDAT0.......19000
     2      /13X,'STEADY-STATE RESULTS WILL BE WRITTEN TO THE ',         INDAT0.......19100
     3      'APPROPRIATE OUTPUT FILES.'                                  INDAT0.......19200
     4      //13X,'THE FOLLOWING ',I1,' SCHEDULES CAN BE USED ',         INDAT0.......19300
     5      'TO CONTROL SPECIFICATION OF STEADY-STATE BOUNDARY'          INDAT0.......19400
     6      /13X,'CONDITIONS IN (OPTIONAL) .BCS FILES:')                 INDAT0.......19500
         WRITE(K3,139) "TIME_STEPS"                                      INDAT0.......19600
  139    FORMAT(/16X,'SCHEDULE ',A10, 3X,'CONSISTS OF TIME STEPS 0 ',    INDAT0.......19700
     1      '(STEADY FLOW) AND 1 (STEADY TRANSPORT);',                   INDAT0.......19800
     2      /41X,'THIS SCHEDULE IS DEFINED AUTOMATICALLY BY SUTRA')      INDAT0.......19900
C........SKIP OVER PROCESSING AND WRITING OF TEMPORAL DATA.              INDAT0.......20000
         GOTO 846                                                        INDAT0.......20100
      END IF                                                             INDAT0.......20200
C.....IF DATASET IN OLD FORMAT, WRITE SPECIFICATIONS AND                 INDAT0.......20300
C        CREATE A CORRESPONDING SCHEDULE CALLED "TIME_STEPS".            INDAT0.......20400
C        IF NSCH=0, GENERATE AN ERROR.  IF IN NEW FORMAT, READ           INDAT0.......20500
C        AND PROCESS USER-DEFINED SCHEDULES.                             INDAT0.......20600
      IF (VERNIN.EQ."2.0") THEN                                          INDAT0.......20700
         TSTART = TICS                                                   INDAT0.......20800
         WRITE(K3,150) ITMAX,DELT,TMAX,ITCYC,DTMULT,DTMAX                INDAT0.......20900
  150    FORMAT (/13X,'NOTE: BECAUSE TEMPORAL CONTROL AND SOLUTION ',    INDAT0.......21000
     1      'CYCLING DATA WERE ENTERED USING THE OLD (VERSION 2D3D.1) ', INDAT0.......21100
     2      'INPUT FORMAT,'/13X,'A CORRESPONDING SCHEDULE, ',            INDAT0.......21200
     3      '"TIME_STEPS", WAS CREATED AUTOMATICALLY FROM THE ',         INDAT0.......21300
     4      'FOLLOWING PARAMETERS:'                                      INDAT0.......21400
     5      //11X,I15,5X,'MAXIMUM ALLOWED NUMBER OF TIME STEPS'          INDAT0.......21500
     6      /11X,1PE15.4,5X,'INITIAL TIME STEP (IN SECONDS)'             INDAT0.......21600
     7      /11X,1PE15.4,5X,'MAXIMUM ALLOWED SIMULATION TIME ',          INDAT0.......21700
     8      '(IN SECONDS)'                                               INDAT0.......21800
     9      //11X,I15,5X,'TIME STEP MULTIPLIER CYCLE (IN TIME STEPS)'    INDAT0.......21900
     1      /11X,0PF15.5,5X,'MULTIPLICATION FACTOR FOR TIME STEP CHANGE' INDAT0.......22000
     2      /11X,1PE15.4,5X,'MAXIMUM ALLOWED TIME STEP (IN SECONDS)')    INDAT0.......22100
C........FIVE DEFAULT SCHEDULES WILL EVENTUALLY BE DEFINED:              INDAT0.......22200
C           "TIME_STEPS", WHICH CONTROLS TIME STEPPING; "STEPS_1&UP",    INDAT0.......22300
C           WHICH IS IDENTICAL TO "TIME_STEPS" EXCEPT THAT IT OMITS      INDAT0.......22400
C           TIME STEP 0; "STEP_0", WHICH CONSISTS ONLY OF TIME STEP 0;   INDAT0.......22500
C           "STEP_1", WHICH CONSISTS ONLY OF TIME STEP 1; AND "OBS",     INDAT0.......22600
C           WHICH CONTROLS TIMING OF OBSERVATION OUTPUT.  SET THE        INDAT0.......22700
C           NUMBER OF SCHEDULES ACCORDINGLY AND ALLOCATE THE SCHEDULE    INDAT0.......22800
C           ARRAY.                                                       INDAT0.......22900
         NSCH = 5                                                        INDAT0.......23000
         ALLOCATE(SCHDLS(NSCH))                                          INDAT0.......23100
         CMVDIM = CMVDIM + 10*NSCH                                       INDAT0.......23200
         IMVDIM = IMVDIM + NSCH                                          INDAT0.......23300
         PMVDIM = PMVDIM + 2*NSCH                                        INDAT0.......23400
C........DEFINE THE DEFAULT "TIME_STEPS" SCHEDULE BASED ON THE           INDAT0.......23500
C           TEMPORAL CONTROLS.  NOTE THAT, FOR BACKWARD COMPATIBILITY    INDAT0.......23600
C           WITH OLD DATASETS, THE ORIGINAL METHOD OF HANDLING CHANGES   INDAT0.......23700
C           IN TIME STEP SIZE [BASED ON MOD(JT,ITCYC).EQ.0, NOT          INDAT0.......23800
C           MOD(JT-1,ITCYC).EQ.0] HAS BEEN RETAINED.                     INDAT0.......23900
C           AT THE SAME TIME, DEFINE SCHEDULE "STEPS_1&UP".              INDAT0.......24000
         SCHDLS(1)%NAME = "TIME_STEPS"                                   INDAT0.......24100
         SCHDLS(3)%NAME = "STEPS_1&UP"                                   INDAT0.......24200
         TIME = TSTART                                                   INDAT0.......24300
         DTIME = DELT                                                    INDAT0.......24400
         ITTOT = 0                                                       INDAT0.......24500
         DO 570 JT=1,ITMAX                                               INDAT0.......24600
            IF (MOD(JT,ITCYC).EQ.0 .AND. JT.GT.1) DTIME=DTIME*DTMULT     INDAT0.......24700
            IF (DTIME.GT.DTMAX) DTIME = DTMAX                            INDAT0.......24800
            TIME = TIME + DTIME                                          INDAT0.......24900
            ITTOT = ITTOT + 1                                            INDAT0.......25000
            IF (TIME.GE.TMAX) EXIT                                       INDAT0.......25100
  570    CONTINUE                                                        INDAT0.......25200
         ALLOCATE(SCHDLS(1)%SLIST(ITOT+1))                               INDAT0.......25300
         RMVDIM = RMVDIM + 2*(ITOT+1)                                    INDAT0.......25400
         TIME = TSTART                                                   INDAT0.......25500
         STEP = 0D0                                                      INDAT0.......25600
         SCHDLS(1)%SLIST(1)%DVALU1 = TIME                                INDAT0.......25700
         SCHDLS(1)%SLIST(1)%DVALU2 = STEP                                INDAT0.......25800
         DTIME = DELT                                                    INDAT0.......25900
         DO 580 JT=1,ITMAX                                               INDAT0.......26000
            JTP1 = JT + 1                                                INDAT0.......26100
            IF (MOD(JT,ITCYC).EQ.0 .AND. JT.GT.1) DTIME=DTIME*DTMULT     INDAT0.......26200
            IF (DTIME.GT.DTMAX) DTIME = DTMAX                            INDAT0.......26300
            TIME = TIME + DTIME                                          INDAT0.......26400
            STEP = DBLE(JT)                                              INDAT0.......26500
            SCHDLS(1)%SLIST(JTP1)%DVALU1 = TIME                          INDAT0.......26600
            SCHDLS(1)%SLIST(JTP1)%DVALU2 = STEP                          INDAT0.......26700
            SCHDLS(3)%SLIST(JTP1)%DVALU1 = TIME                          INDAT0.......26800
            SCHDLS(3)%SLIST(JTP1)%DVALU2 = STEP                          INDAT0.......26900
            IF (TIME.GE.TMAX) EXIT                                       INDAT0.......27000
  580    CONTINUE                                                        INDAT0.......27100
         SCHDLS(1)%LLEN = ITTOT + 1                                      INDAT0.......27200
         SCHDLS(3)%LLEN = ITTOT                                          INDAT0.......27300
         ITMAX = ITTOT                                                   INDAT0.......27400
         ISCHTS = 1                                                      INDAT0.......27500
C........SKIP OVER THE CODE THAT READS SCHEDULE SPECIFICATIONS.          INDAT0.......27600
         GOTO 850                                                        INDAT0.......27700
      END IF                                                             INDAT0.......27800
C.....INCREMENT NSCH TO ACCOUNT FOR THREE AUTOMATICALLY DEFINED          INDAT0.......27900
C        SCHEDULES: "STEPS_1&UP", WHICH IS IDENTICAL TO "TIME_STEPS"     INDAT0.......28000
C        EXCEPT THAT IT OMITS TIME STEP 0; "STEP_0", WHICH CONSISTS      INDAT0.......28100
C        ONLY OF TIME STEP 0; AND "STEP_1", WHICH CONSISTS ONLY OF       INDAT0.......28200
C        TIME STEP 1.                                                    INDAT0.......28300
      NSCH = NSCH + NSCHAU                                               INDAT0.......28400
C.....WRITE SCHEDULE PARAMETERS.                                         INDAT0.......28500
      WRITE(K3,700) NSCH                                                 INDAT0.......28600
  700 FORMAT(/13X,'THE ',I5,' SCHEDULES ARE LISTED BELOW.'               INDAT0.......28700
     1   '  SCHEDULE "TIME_STEPS" CONTROLS TIME STEPPING.')              INDAT0.......28800
C.....ALLOCATE SCHEDULE-RELATED ARRAYS.                                  INDAT0.......28900
      ALLOCATE(SCHDLS(NSCH))                                             INDAT0.......29000
      CMVDIM = CMVDIM + 10*NSCH                                          INDAT0.......29100
      IMVDIM = IMVDIM + NSCH                                             INDAT0.......29200
      PMVDIM = PMVDIM + 2*NSCH                                           INDAT0.......29300
      ALLOCATE(SBASED(NSCH), ELAPSD(NSCH))                               INDAT0.......29400
C.....LOOP THROUGH THE LIST OF SCHEDULE SPECIFICATIONS, CONSTRUCTING     INDAT0.......29500
C        SCHEDULES.                                                      INDAT0.......29600
      DO 800 I=1,NSCH-NSCHAU                                             INDAT0.......29700
C........READ SCHEDULE NAME AND DO SOME ERROR CHECKING.                  INDAT0.......29800
         ERRCOD = 'REA-INP-6'                                            INDAT0.......29900
         CALL READIF(K1, 0, INTFIL, ERRCOD)                              INDAT0.......30000
         READ(INTFIL,*,IOSTAT=INERR(1)) CDUM80                           INDAT0.......30100
         IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)     INDAT0.......30200
         IF (LEN_TRIM(CDUM80).GT.10) THEN                                INDAT0.......30300
            ERRCOD = 'INP-6-15'                                          INDAT0.......30400
            CHERR(1) = CDUM80                                            INDAT0.......30500
            CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                     INDAT0.......30600
         ELSE IF (CDUM80.EQ."-") THEN                                    INDAT0.......30700
            ERRCOD = 'INP-6-4'                                           INDAT0.......30800
            CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                     INDAT0.......30900
         ELSE IF (((VERNIN.NE."2.0").AND.(VERNIN.NE."2.1").AND.          INDAT0.......31000
     1        (VERNIN.NE."2.2")).AND.(I.EQ.1).AND.                       INDAT0.......31100
     1        (CDUM80.NE."TIME_STEPS")) THEN                             INDAT0.......31200
            ERRCOD = 'INP-6-18'                                          INDAT0.......31300
            CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                     INDAT0.......31400
         ELSE IF ((CDUM80.EQ."STEPS_1&UP").OR.                           INDAT0.......31500
     1            (CDUM80.EQ."STEP_0").OR.(CDUM80.EQ."STEP_1")) THEN     INDAT0.......31600
            ERRCOD = 'INP-6-11'                                          INDAT0.......31700
            CHERR(1) = CDUM80                                            INDAT0.......31800
            CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                     INDAT0.......31900
         ELSE                                                            INDAT0.......32000
            DO 710 II=1,I-1                                              INDAT0.......32100
               IF (CDUM80.EQ.SCHDLS(II)%NAME) THEN                       INDAT0.......32200
                  ERRCOD = 'INP-6-5'                                     INDAT0.......32300
                  CHERR(1) = CDUM80                                      INDAT0.......32400
                  CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)               INDAT0.......32500
               END IF                                                    INDAT0.......32600
  710       CONTINUE                                                     INDAT0.......32700
         END IF                                                          INDAT0.......32800
C........(RE)READ SCHEDULE NAME AND TYPE.                                INDAT0.......32900
         READ(INTFIL,*,IOSTAT=INERR(1)) SCHNAM, SCHTYP                   INDAT0.......33000
         IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)     INDAT0.......33100
         IF (SCHNAM.EQ."TIME_STEPS") ISCHTS = I                          INDAT0.......33200
C........BASED ON THE SCHEDULE TYPE, READ IN THE SPECIFICATIONS AND      INDAT0.......33300
C           CONSTRUCT THE SCHEDULE.                                      INDAT0.......33400
         IF (SCHTYP.EQ."STEP CYCLE") THEN                                INDAT0.......33500
            SBASED(I) = .TRUE.                                           INDAT0.......33600
C...........READ ALL THE SPECIFICATIONS.                                 INDAT0.......33700
            READ(INTFIL,*,IOSTAT=INERR(1)) SCHNAM, SCHTYP,               INDAT0.......33800
     1         NSMAX, ISTEPI, ISTEPL, ISTEPC                             INDAT0.......33900
            IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)  INDAT0.......34000
            SCHDLS(I)%NAME = SCHNAM                                      INDAT0.......34100
            ELAPSD(I) = .FALSE.                                          INDAT0.......34200
C...........CONSTRUCT THE SCHEDULE BY STEPPING THROUGH THE STEP CYCLE    INDAT0.......34300
C              AND COMPUTING CORRESPONDING TIMES. INTERNALLY, TRIM       INDAT0.......34400
C              ENTRIES THAT FALL OUTSIDE OF SCHEDULE "TIME_STEPS".       INDAT0.......34500
            NSTEP = ISTEPI                                               INDAT0.......34600
            NDSTEP = ISTEPC                                              INDAT0.......34700
            LCNT = 1                                                     INDAT0.......34800
            DO 715 NS=1,NSMAX                                            INDAT0.......34900
               NSTEP = NSTEP + NDSTEP                                    INDAT0.......35000
               IF (NSTEP.GT.ISTEPL) EXIT                                 INDAT0.......35100
               IF (NSTEP.LT.0) CYCLE                                     INDAT0.......35200
               IF (NSTEP.GT.ITMAX) EXIT                                  INDAT0.......35300
               LCNT = LCNT + 1                                           INDAT0.......35400
  715       CONTINUE                                                     INDAT0.......35500
            SCHDLS(I)%LLEN = LCNT                                        INDAT0.......35600
            ALLOCATE(SCHDLS(I)%SLIST(LCNT))                              INDAT0.......35700
            RMVDIM = RMVDIM + 2*LCNT                                     INDAT0.......35800
            NSTEP = ISTEPI                                               INDAT0.......35900
            STEP = DNINT(DBLE(NSTEP))                                    INDAT0.......36000
            TIME = STEP                                                  INDAT0.......36100
            LCNT = 1                                                     INDAT0.......36200
            SCHDLS(I)%SLIST(1)%DVALU1 = TIME                             INDAT0.......36300
            SCHDLS(I)%SLIST(1)%DVALU2 = STEP                             INDAT0.......36400
            DO 717 NS=1,NSMAX                                            INDAT0.......36500
               NSTEP = NSTEP + NDSTEP                                    INDAT0.......36600
               IF (NSTEP.GT.ISTEPL) EXIT                                 INDAT0.......36700
               IF (NSTEP.LT.0) CYCLE                                     INDAT0.......36800
               IF (NSTEP.GT.ITMAX) EXIT                                  INDAT0.......36900
               STEP = DNINT(DBLE(NSTEP))                                 INDAT0.......37000
               TIME = TIMETS(NSTEP)                                      INDAT0.......37100
               LCNT = LCNT + 1                                           INDAT0.......37200
               SCHDLS(I)%SLIST(LCNT)%DVALU1 = TIME                       INDAT0.......37300
               SCHDLS(I)%SLIST(LCNT)%DVALU2 = STEP                       INDAT0.......37400
  717       CONTINUE                                                     INDAT0.......37500
C...........WRITE OUT THE SPECIFICATIONS.                                INDAT0.......37600
            WRITE(K3,722) SCHDLS(I)%NAME, NSMAX, ISTEPI, ISTEPL, ISTEPC  INDAT0.......37700
  722       FORMAT(/16X,'SCHEDULE ',A, 3X,'STEP CYCLE WITH THE ',        INDAT0.......37800
     1         'FOLLOWING SPECIFICATIONS:'                               INDAT0.......37900
     2         /40X, I8, 5X, 'MAXIMUM NUMBER OF TIME STEPS AFTER ',      INDAT0.......38000
     3            'INITIAL TIME STEP NUMBER'                             INDAT0.......38100
     4         /40X, I8, 5X, 'INITIAL TIME STEP NUMBER'                  INDAT0.......38200
     5         /40X, I8, 5X, 'LIMITING TIME STEP NUMBER'                 INDAT0.......38300
     6         /40X, I8, 5X, 'TIME STEP INCREMENT')                      INDAT0.......38400
         ELSE IF (SCHTYP.EQ."TIME CYCLE") THEN                           INDAT0.......38500
            SBASED(I) = .FALSE.                                          INDAT0.......38600
C...........READ ALL THE SPECIFICATIONS.                                 INDAT0.......38700
            READ(INTFIL,*,IOSTAT=INERR(1)) SCHNAM, SCHTYP, CREFT,        INDAT0.......38800
     1         SCALT, NTMAX, TIMEI, TIMEL, TIMEC, NTCYC,                 INDAT0.......38900
     2         TCMULT, TCMIN, TCMAX                                      INDAT0.......39000
            IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)  INDAT0.......39100
            SCHDLS(I)%NAME = SCHNAM                                      INDAT0.......39200
            IF (CREFT.EQ.'ELAPSED ') THEN                                INDAT0.......39300
               IF ((SCHNAM.EQ.'TIME_STEPS').AND.(TIMEI.NE.0D0)) THEN     INDAT0.......39400
                  ERRCOD = 'INP-6-7'                                     INDAT0.......39500
                  CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)               INDAT0.......39600
               END IF                                                    INDAT0.......39700
               ELAPSD(I) = .TRUE.                                        INDAT0.......39800
            ELSE IF (CREFT.EQ.'ABSOLUTE') THEN                           INDAT0.......39900
               ELAPSD(I) = .FALSE.                                       INDAT0.......40000
            ELSE                                                         INDAT0.......40100
               ERRCOD = 'INP-6-6'                                        INDAT0.......40200
               CHERR(1) = CREFT                                          INDAT0.......40300
               CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                  INDAT0.......40400
            END IF                                                       INDAT0.......40500
C...........SCALE ALL TIME SPECIFICATIONS                                INDAT0.......40600
            TIMEI = TIMEI*SCALT                                          INDAT0.......40700
            TIMEL = TIMEL*SCALT                                          INDAT0.......40800
            TIMEC = TIMEC*SCALT                                          INDAT0.......40900
            TCMIN = TCMIN*SCALT                                          INDAT0.......41000
            TCMAX = TCMAX*SCALT                                          INDAT0.......41100
C...........CONSTRUCT THE SCHEDULE BY STEPPING THROUGH THE TIME CYCLE    INDAT0.......41200
C              AND COMPUTING CORRESPONDING STEPS. INTERNALLY, TRIM       INDAT0.......41300
C              ENTRIES THAT FALL OUTSIDE OF SCHEDULE "TIME_STEPS".       INDAT0.......41400
            IF (ELAPSD(I)) THEN                                          INDAT0.......41500
               IF (IREAD.EQ.+1) THEN                                     INDAT0.......41600
                  TREF = TICS                                            INDAT0.......41700
               ELSE                                                      INDAT0.......41800
                  TREF = TICS0                                           INDAT0.......41900
               END IF                                                    INDAT0.......42000
            ELSE                                                         INDAT0.......42100
               TREF = 0D0                                                INDAT0.......42200
            END IF                                                       INDAT0.......42300
            IF (I.NE.ISCHTS) THEN                                        INDAT0.......42400
               T0 = SCHDLS(ISCHTS)%SLIST(1)%DVALU1                       INDAT0.......42500
               LENTS = SCHDLS(ISCHTS)%LLEN                               INDAT0.......42600
               TF = SCHDLS(ISCHTS)%SLIST(LENTS)%DVALU1                   INDAT0.......42700
            END IF                                                       INDAT0.......42800
            TIME = TIMEI                                                 INDAT0.......42900
            DTIME = TIMEC                                                INDAT0.......43000
            LCNT = 1                                                     INDAT0.......43100
            DO 725 NT=1,NTMAX                                            INDAT0.......43200
               IF (MOD(NT-1,NTCYC).EQ.0 .AND. NT.GT.1)                   INDAT0.......43300
     1            DTIME=DTIME*TCMULT                                     INDAT0.......43400
               IF (DTIME.GT.TCMAX) DTIME = TCMAX                         INDAT0.......43500
               IF (DTIME.LT.TCMIN) DTIME = TCMIN                         INDAT0.......43600
               TIME = TIME + DTIME                                       INDAT0.......43700
               IF (TIME.GT.TIMEL) EXIT                                   INDAT0.......43800
               IF (I.NE.ISCHTS) THEN                                     INDAT0.......43900
                  IF (TIME.LT.T0) CYCLE                                  INDAT0.......44000
                  IF (TIME.GT.TF) EXIT                                   INDAT0.......44100
               END IF                                                    INDAT0.......44200
               LCNT = LCNT + 1                                           INDAT0.......44300
  725       CONTINUE                                                     INDAT0.......44400
            SCHDLS(I)%LLEN = LCNT                                        INDAT0.......44500
            IF (I.EQ.ISCHTS) ITMAX = LCNT - 1                            INDAT0.......44600
            ALLOCATE(SCHDLS(I)%SLIST(LCNT))                              INDAT0.......44700
            RMVDIM = RMVDIM + 2*LCNT                                     INDAT0.......44800
            TIME = TIMEI + TREF                                          INDAT0.......44900
            IF (I.NE.ISCHTS) THEN                                        INDAT0.......45000
               STEP = FRCSTP(TIME)                                       INDAT0.......45100
            ELSE                                                         INDAT0.......45200
               STEP = 0                                                  INDAT0.......45300
            END IF                                                       INDAT0.......45400
            DTIME = TIMEC                                                INDAT0.......45500
            LCNT = 1                                                     INDAT0.......45600
            SCHDLS(I)%SLIST(1)%DVALU1 = TIME                             INDAT0.......45700
            SCHDLS(I)%SLIST(1)%DVALU2 = STEP                             INDAT0.......45800
            DO 727 NT=1,NTMAX                                            INDAT0.......45900
               NTP1 = NT + 1                                             INDAT0.......46000
               IF (MOD(NT-1,NTCYC).EQ.0 .AND. NT.GT.1)                   INDAT0.......46100
     1            DTIME=DTIME*TCMULT                                     INDAT0.......46200
               IF (DTIME.GT.TCMAX) DTIME = TCMAX                         INDAT0.......46300
               IF (DTIME.LT.TCMIN) DTIME = TCMIN                         INDAT0.......46400
               TIME = TIME + DTIME                                       INDAT0.......46500
               IF (TIME.GT.TIMEL) EXIT                                   INDAT0.......46600
               IF (I.NE.ISCHTS) THEN                                     INDAT0.......46700
                  IF (TIME.LT.T0) CYCLE                                  INDAT0.......46800
                  IF (TIME.GT.TF) EXIT                                   INDAT0.......46900
                  STEP = FRCSTP(TIME)                                    INDAT0.......47000
               ELSE                                                      INDAT0.......47100
                  STEP = DNINT(DBLE(NT))                                 INDAT0.......47200
               END IF                                                    INDAT0.......47300
               LCNT = LCNT + 1                                           INDAT0.......47400
               SCHDLS(I)%SLIST(LCNT)%DVALU1 = TIME                       INDAT0.......47500
               SCHDLS(I)%SLIST(LCNT)%DVALU2 = STEP                       INDAT0.......47600
  727       CONTINUE                                                     INDAT0.......47700
C...........WRITE OUT THE SPECIFICATIONS.                                INDAT0.......47800
            WRITE(K3,732) SCHDLS(I)%NAME, TRIM(CREFT), NTMAX, TIMEI,     INDAT0.......47900
     1          TIMEL, TIMEC, NTCYC, TCMULT, TCMIN, TCMAX                INDAT0.......48000
  732       FORMAT(/16X,'SCHEDULE ',A, 3X,'TIME CYCLE WITH THE ',        INDAT0.......48100
     1         'FOLLOWING SPECIFICATIONS IN TERMS OF ', A, ' TIMES:'     INDAT0.......48200
     2         /46X, I8, 5X, 'MAXIMUM NUMBER OF TIMES AFTER ',           INDAT0.......48300
     3            'INITIAL TIME'                                         INDAT0.......48400
     4         /39X, 1PE15.7, 5X, 'INITIAL TIME'                         INDAT0.......48500
     5         /39X, 1PE15.7, 5X, 'LIMITING TIME'                        INDAT0.......48600
     6         /39X, 1PE15.7, 5X, 'INITIAL TIME INCREMENT'               INDAT0.......48700
     7         /46X, I8, 5X, 'TIME INCREMENT CHANGE CYCLE '              INDAT0.......48800
     8         /39X, 1PE15.7, 5X, 'TIME INCREMENT MULTIPLIER'            INDAT0.......48900
     9         /39X, 1PE15.7, 5X, 'MINIMUM TIME INCREMENT'               INDAT0.......49000
     1         /39X, 1PE15.7, 5X, 'MAXIMUM TIME INCREMENT')              INDAT0.......49100
         ELSE IF (SCHTYP.EQ."STEP LIST") THEN                            INDAT0.......49200
            SBASED(I) = .TRUE.                                           INDAT0.......49300
C...........READ THE SCHEDULE NAME, TYPE, AND LENGTH.                    INDAT0.......49400
            BACKSPACE(K1)                                                INDAT0.......49500
            READ(K1,*,IOSTAT=INERR(1)) SCHNAM, SCHTYP, NSLIST            INDAT0.......49600
            IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)  INDAT0.......49700
C...........ALLOCATE A TEMPORARY ARRAY TO HOLD THE STEP LIST.            INDAT0.......49800
            ALLOCATE (ISLIST(NSLIST))                                    INDAT0.......49900
C...........READ ALL THE SPECIFICATIONS.                                 INDAT0.......50000
            BACKSPACE(K1)                                                INDAT0.......50100
            READ(K1,*,IOSTAT=INERR(1)) SCHNAM, SCHTYP,                   INDAT0.......50200
     1         NSLIST, (ISLIST(NS),NS=1,NSLIST)                          INDAT0.......50300
            IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)  INDAT0.......50400
            SCHDLS(I)%NAME = SCHNAM                                      INDAT0.......50500
            DO 735 NS=2,NSLIST                                           INDAT0.......50600
               IF (ISLIST(NS).EQ.ISLIST(NS-1)) THEN                      INDAT0.......50700
                  ERRCOD = 'INP-6-12'                                    INDAT0.......50800
                  CHERR(1) = "time step"                                 INDAT0.......50900
                  CHERR(2) = SCHDLS(I)%NAME                              INDAT0.......51000
                  RLERR(1) = ISLIST(NS)                                  INDAT0.......51100
                  CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)               INDAT0.......51200
               ELSE IF (((VERNIN.NE."2.0").AND.(VERNIN.NE."2.1").AND.    INDAT0.......51300
     1              (VERNIN.NE."2.2")).AND.(ISLIST(NS).LT.ISLIST(NS-1))) INDAT0.......51400
     1            THEN                                                   INDAT0.......51500
                  ERRCOD = 'INP-6-17'                                    INDAT0.......51600
                  CHERR(1) = "time step"                                 INDAT0.......51700
                  CHERR(2) = SCHDLS(I)%NAME                              INDAT0.......51800
                  RLERR(1) = ISLIST(NS)                                  INDAT0.......51900
                  CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)               INDAT0.......52000
               END IF                                                    INDAT0.......52100
  735       CONTINUE                                                     INDAT0.......52200
            ELAPSD(I) = .FALSE.                                          INDAT0.......52300
C...........CONSTRUCT THE SCHEDULE BY COPYING STEPS FROM ARRAY ISLIST    INDAT0.......52400
C              AND COMPUTING CORRESPONDING TIMES. INTERNALLY, TRIM       INDAT0.......52500
C              ENTRIES THAT FALL OUTSIDE OF SCHEDULE "TIME_STEPS".       INDAT0.......52600
            ALLOCATE(SCHDLS(I)%SLIST(NSLIST))                            INDAT0.......52700
            RMVDIM = RMVDIM + 2*NSLIST                                   INDAT0.......52800
            LCNT = 0                                                     INDAT0.......52900
            DO 740 NS=1,NSLIST                                           INDAT0.......53000
               NSTEP = ISLIST(NS)                                        INDAT0.......53100
               IF ((NSTEP.LT.0).OR.(NSTEP.GT.ITMAX)) CYCLE               INDAT0.......53200
               LCNT = LCNT + 1                                           INDAT0.......53300
               STEP = DNINT(DBLE(NSTEP))                                 INDAT0.......53400
               TIME = TIMETS(NSTEP)                                      INDAT0.......53500
               SCHDLS(I)%SLIST(LCNT)%DVALU1 = TIME                       INDAT0.......53600
               SCHDLS(I)%SLIST(LCNT)%DVALU2 = STEP                       INDAT0.......53700
  740       CONTINUE                                                     INDAT0.......53800
            SCHDLS(I)%LLEN = LCNT                                        INDAT0.......53900
C...........WRITE OUT THE SPECIFICATIONS.                                INDAT0.......54000
            WRITE(K3,742) SCHDLS(I)%NAME, (ISLIST(NS),NS=1,NSLIST)       INDAT0.......54100
  742       FORMAT(/16X,'SCHEDULE ',A, 3X,'STEP LIST THAT INCLUDES ',    INDAT0.......54200
     1         'THE FOLLOWING TIME STEPS:'/:(38X,8(2X,I8)))              INDAT0.......54300
C...........DEALLOCATE THE TEMPORARY ARRAY.                              INDAT0.......54400
            DEALLOCATE (ISLIST)                                          INDAT0.......54500
         ELSE IF (SCHTYP.EQ."TIME LIST") THEN                            INDAT0.......54600
            SBASED(I) = .FALSE.                                          INDAT0.......54700
C...........READ THE SCHEDULE NAME, TYPE, SCALE FACTOR, AND LENGTH.      INDAT0.......54800
            BACKSPACE(K1)                                                INDAT0.......54900
            READ(K1,*,IOSTAT=INERR(1)) SCHNAM, SCHTYP, CREFT,            INDAT0.......55000
     1         SCALT, NTLIST                                             INDAT0.......55100
            IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)  INDAT0.......55200
C...........ALLOCATE A TEMPORARY ARRAY TO HOLD THE TIME LIST.            INDAT0.......55300
            ALLOCATE (TLIST(NTLIST))                                     INDAT0.......55400
C...........READ ALL THE SPECIFICATIONS.                                 INDAT0.......55500
            BACKSPACE(K1)                                                INDAT0.......55600
            READ(K1,*,IOSTAT=INERR(1)) SCHNAM, SCHTYP, CREFT,            INDAT0.......55700
     1         SCALT, NTLIST, (TLIST(NT),NT=1,NTLIST)                    INDAT0.......55800
            IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)  INDAT0.......55900
            SCHDLS(I)%NAME = SCHNAM                                      INDAT0.......56000
            IF (CREFT.EQ.'ELAPSED ') THEN                                INDAT0.......56100
               IF ((SCHNAM.EQ.'TIME_STEPS').AND.(TLIST(1).NE.0D0)) THEN  INDAT0.......56200
                  ERRCOD = 'INP-6-7'                                     INDAT0.......56300
                  CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)               INDAT0.......56400
               END IF                                                    INDAT0.......56500
               ELAPSD(I) = .TRUE.                                        INDAT0.......56600
            ELSE IF (CREFT.EQ.'ABSOLUTE') THEN                           INDAT0.......56700
               ELAPSD(I) = .FALSE.                                       INDAT0.......56800
            ELSE                                                         INDAT0.......56900
               ERRCOD = 'INP-6-6'                                        INDAT0.......57000
               CHERR(1) = CREFT                                          INDAT0.......57100
               CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                  INDAT0.......57200
            END IF                                                       INDAT0.......57300
            DO 744 NT=2,NTLIST                                           INDAT0.......57400
               IF (TLIST(NT).EQ.TLIST(NT-1)) THEN                        INDAT0.......57500
                  ERRCOD = 'INP-6-12'                                    INDAT0.......57600
                  IF (ELAPSD(I)) THEN                                    INDAT0.......57700
                     CHERR(1) = "elapsed time"                           INDAT0.......57800
                  ELSE                                                   INDAT0.......57900
                     CHERR(1) = "absolute time"                          INDAT0.......58000
                  END IF                                                 INDAT0.......58100
                  CHERR(2) = SCHDLS(I)%NAME                              INDAT0.......58200
                  RLERR(1) = TLIST(NT)                                   INDAT0.......58300
                  CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)               INDAT0.......58400
               ELSE IF (((VERNIN.NE."2.0").AND.(VERNIN.NE."2.1").AND.    INDAT0.......58500
     1              (VERNIN.NE."2.2")).AND.(TLIST(NT).LT.TLIST(NT-1)))   INDAT0.......58600
     1            THEN                                                   INDAT0.......58700
                  ERRCOD = 'INP-6-17'                                    INDAT0.......58800
                  IF (ELAPSD(I)) THEN                                    INDAT0.......58900
                     CHERR(1) = "elapsed time"                           INDAT0.......59000
                  ELSE                                                   INDAT0.......59100
                     CHERR(1) = "absolute time"                          INDAT0.......59200
                  END IF                                                 INDAT0.......59300
                  CHERR(2) = SCHDLS(I)%NAME                              INDAT0.......59400
                  RLERR(1) = TLIST(NT)                                   INDAT0.......59500
                  CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)               INDAT0.......59600
               END IF                                                    INDAT0.......59700
  744       CONTINUE                                                     INDAT0.......59800
C...........SCALE AND SHIFT ALL TIME SPECIFICATIONS TO OBTAIN            INDAT0.......59900
C              ABSOLUTE TIMES.                                           INDAT0.......60000
            IF (ELAPSD(I)) THEN                                          INDAT0.......60100
               IF (IREAD.EQ.+1) THEN                                     INDAT0.......60200
                  TREF = TICS                                            INDAT0.......60300
               ELSE                                                      INDAT0.......60400
                  TREF = TICS0                                           INDAT0.......60500
               END IF                                                    INDAT0.......60600
            ELSE                                                         INDAT0.......60700
               TREF = 0D0                                                INDAT0.......60800
            END IF                                                       INDAT0.......60900
            DO 745 NT=1,NTLIST                                           INDAT0.......61000
               TLIST(NT) = TLIST(NT)*SCALT + TREF                        INDAT0.......61100
  745       CONTINUE                                                     INDAT0.......61200
C...........CONSTRUCT THE SCHEDULE BY COPYING TIMES FROM ARRAY TLIST     INDAT0.......61300
C              AND COMPUTING CORRESPONDING STEPS. INTERNALLY, TRIM       INDAT0.......61400
C              ENTRIES THAT FALL OUTSIDE OF SCHEDULE "TIME_STEPS".       INDAT0.......61500
            ALLOCATE(SCHDLS(I)%SLIST(NTLIST))                            INDAT0.......61600
            RMVDIM = RMVDIM + 2*NTLIST                                   INDAT0.......61700
            IF (I.NE.ISCHTS) THEN                                        INDAT0.......61800
               T0 = SCHDLS(ISCHTS)%SLIST(1)%DVALU1                       INDAT0.......61900
               LENTS = SCHDLS(ISCHTS)%LLEN                               INDAT0.......62000
               TF = SCHDLS(ISCHTS)%SLIST(LENTS)%DVALU1                   INDAT0.......62100
            END IF                                                       INDAT0.......62200
            LCNT = 0                                                     INDAT0.......62300
            DO 750 NT=1,NTLIST                                           INDAT0.......62400
               TIME = TLIST(NT)                                          INDAT0.......62500
               IF (I.NE.ISCHTS) THEN                                     INDAT0.......62600
                  IF (TIME.LT.T0) CYCLE                                  INDAT0.......62700
                  IF (TIME.GT.TF) EXIT                                   INDAT0.......62800
                  STEP = FRCSTP(TLIST(NT))                               INDAT0.......62900
               ELSE                                                      INDAT0.......63000
                  STEP = DNINT(DBLE(NT-1))                               INDAT0.......63100
               END IF                                                    INDAT0.......63200
               LCNT = LCNT + 1                                           INDAT0.......63300
               SCHDLS(I)%SLIST(LCNT)%DVALU1 = TIME                       INDAT0.......63400
               SCHDLS(I)%SLIST(LCNT)%DVALU2 = STEP                       INDAT0.......63500
  750       CONTINUE                                                     INDAT0.......63600
            SCHDLS(I)%LLEN = LCNT                                        INDAT0.......63700
            IF (I.EQ.ISCHTS) ITMAX = LCNT - 1                            ! fix rbw itmax 200427
C...........WRITE OUT THE SPECIFICATIONS.                                INDAT0.......63800
            WRITE(K3,752) SCHDLS(I)%NAME, TRIM(CREFT),                   INDAT0.......63900
     1         (TLIST(NT),NT=1,NTLIST)                                   INDAT0.......64000
  752       FORMAT(/16X,'SCHEDULE ',A, 3X,'TIME LIST THAT INCLUDES ',    INDAT0.......64100
     1         'THE FOLLOWING ', A, ' TIMES (SEC):'                      INDAT0.......64200
     2         /:(38X,4(1X,1PE15.7)))                                    INDAT0.......64300
            DEALLOCATE (TLIST)                                           INDAT0.......64400
         ELSE                                                            INDAT0.......64500
C...........THE SPECIFIED SCHEDULE TYPE IS INVALID, SO GENERATE AN       INDAT0.......64600
C              ERROR.                                                    INDAT0.......64700
            ERRCOD = 'INP-6-9'                                           INDAT0.......64800
            CHERR(1) = SCHTYP                                            INDAT0.......64900
            CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                     INDAT0.......65000
         END IF                                                          INDAT0.......65100
  800 CONTINUE                                                           INDAT0.......65200
C.....READ ONE MORE LINE TO CHECK FOR THE END-OF-LIST MARKER ('-').      INDAT0.......65300
C        IF NOT FOUND, GENERATE AN ERROR.                                INDAT0.......65400
      CALL READIF(K1, 0, INTFIL, ERRCOD)                                 INDAT0.......65500
      READ(INTFIL,*,IOSTAT=INERR(1)) CDUM10                              INDAT0.......65600
      IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)        INDAT0.......65700
      IF (CDUM10.NE.'-') THEN                                            INDAT0.......65800
         ERRCOD = 'INP-6-4'                                              INDAT0.......65900
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        INDAT0.......66000
      END IF                                                             INDAT0.......66100
C.....FIND SCHEDULE "TIME_STEPS".                                        INDAT0.......66200
      DO 810 I=1,NSCH-NSCHAU                                             INDAT0.......66300
         IF (SCHDLS(I)%NAME.EQ."TIME_STEPS") THEN                        INDAT0.......66400
            ISCHTS=I                                                     INDAT0.......66500
            TSYES = .TRUE.                                               INDAT0.......66600
            EXIT                                                         INDAT0.......66700
         END IF                                                          INDAT0.......66800
  810 CONTINUE                                                           INDAT0.......66900
C.....IF TRANSPORT IS TRANSIENT AND SCHEDULE "TIME_STEPS" HAS NOT        INDAT0.......67000
C        BEEN DEFINED, GENERATE ERROR                                    INDAT0.......67100
      IF ((ISSTRA.EQ.0).AND.(.NOT.TSYES)) THEN                           INDAT0.......67200
         ERRCOD = 'INP-6-14'                                             INDAT0.......67300
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        INDAT0.......67400
      END IF                                                             INDAT0.......67500
C.....IF "TIME_STEPS" LENGTH IS <=1 (SCHEDULE CONTAINS, AT MOST,         INDAT0.......67600
C        ONLY THE INITIAL TIME, AND NO SUBSEQUENT TIME STEPS),           INDAT0.......67700
C        GENERATE AN ERROR.                                              INDAT0.......67800
      IF (SCHDLS(ISCHTS)%LLEN.LE.1) THEN                                 INDAT0.......67900
         ERRCOD = 'INP-6-10'                                             INDAT0.......68000
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        INDAT0.......68100
      END IF                                                             INDAT0.......68200
C.....SET INITIAL DELT BASED ON SCHEDULE "TIME_STEPS".                   INDAT0.......68300
      DELT = SCHDLS(ISCHTS)%SLIST(2)%DVALU1 -                            INDAT0.......68400
     1   SCHDLS(ISCHTS)%SLIST(1)%DVALU1                                  INDAT0.......68500
C.....DEFINE SCHEDULES STEP_0, STEP_1, AND STEPS_1&UP.                   INDAT0.......68600
      NS0 = NSCH - NSCHAU + 2                                            INDAT0.......68700
      ALLOCATE (SCHDLS(NS0)%SLIST(1))                                    INDAT0.......68800
      RMVDIM = RMVDIM + 2*1                                              INDAT0.......68900
      SCHDLS(NS0)%NAME = "STEP_0"                                        INDAT0.......69000
      STEP = 0                                                           INDAT0.......69100
      TIME = TIMETS(INT(STEP))                                           INDAT0.......69200
      SCHDLS(NS0)%LLEN = 1                                               INDAT0.......69300
      SCHDLS(NS0)%SLIST(1)%DVALU1 = TIME                                 INDAT0.......69400
      SCHDLS(NS0)%SLIST(1)%DVALU2 = STEP                                 INDAT0.......69500
      NS1 = NS0 + 1                                                      INDAT0.......69600
      ALLOCATE (SCHDLS(NS1)%SLIST(1))                                    INDAT0.......69700
      RMVDIM = RMVDIM + 2*1                                              INDAT0.......69800
      SCHDLS(NS1)%NAME = "STEP_1"                                        INDAT0.......69900
      STEP = 1                                                           INDAT0.......70000
      TIME = TIMETS(INT(STEP))                                           INDAT0.......70100
      SCHDLS(NS1)%LLEN = 1                                               INDAT0.......70200
      SCHDLS(NS1)%SLIST(1)%DVALU1 = TIME                                 INDAT0.......70300
      SCHDLS(NS1)%SLIST(1)%DVALU2 = STEP                                 INDAT0.......70400
      NS1UP = NSCH - NSCHAU + 1                                          INDAT0.......70500
      LENTS = SCHDLS(ISCHTS)%LLEN                                        INDAT0.......70600
      LEN1UP = LENTS - 1                                                 INDAT0.......70700
      ALLOCATE (SCHDLS(NS1UP)%SLIST(LEN1UP))                             INDAT0.......70800
      RMVDIM = RMVDIM + 2*LEN1UP                                         INDAT0.......70900
      SCHDLS(NS1UP)%NAME = "STEPS_1&UP"                                  INDAT0.......71000
      SCHDLS(NS1UP)%SLIST(1:LEN1UP) = SCHDLS(ISCHTS)%SLIST(2:LENTS)      INDAT0.......71100
      SCHDLS(NS1UP)%LLEN = LEN1UP                                        INDAT0.......71200
C.....DEALLOCATE ARRAY THAT INDICATES METHODS OF SCHEDULE SPECIFICATION  INDAT0.......71300
      DEALLOCATE(SBASED)                                                 INDAT0.......71400
      DEALLOCATE(ELAPSD)                                                 INDAT0.......71500
C.....WRITE SPECIFICATIONS OF SCHEDULES "STEPS_1&UP", "STEP_0", AND      INDAT0.......71600
C        "STEP_1".                                                       INDAT0.......71700
  846 WRITE(K3,847) "STEPS_1&UP"                                         INDAT0.......71800
  847 FORMAT(/16X,'SCHEDULE ',A10, 3X,'IDENTICAL TO SCHEDULE ',          INDAT0.......71900
     1   '"TIME_STEPS", EXCEPT THAT IT OMITS TIME STEP 0;',              INDAT0.......72000
     2   /41X,'THIS SCHEDULE IS DEFINED AUTOMATICALLY BY SUTRA')         INDAT0.......72100
      WRITE(K3,848) "STEP_0", 0                                          INDAT0.......72200
      WRITE(K3,848) "STEP_1", 1                                          INDAT0.......72300
  848 FORMAT(/16X,'SCHEDULE ',A6, 4X,                                    INDAT0.......72400
     1   3X,'CONSISTS ONLY OF TIME STEP ', I1, ';',                      INDAT0.......72500
     2   /41X,'THIS SCHEDULE IS DEFINED AUTOMATICALLY BY SUTRA')         INDAT0.......72600
C.....WRITE THE SOLUTION CYCLING CONTROLS.                               INDAT0.......72700
  850 WRITE(K3,874) NPCYC,NUCYC                                          INDAT0.......72800
  874 FORMAT (/13X,'SOLUTION CYCLING DATA:'                              INDAT0.......72900
     1      //11X,I15,5X,'FLOW SOLUTION CYCLE (IN TIME STEPS)'           INDAT0.......73000
     2      /11X,I15,5X,'TRANSPORT SOLUTION CYCLE (IN TIME STEPS)'       INDAT0.......73100
     3      //16X,'FLOW AND TRANSPORT SOLUTIONS ARE ALSO COMPUTED '      INDAT0.......73200
     4      'AUTOMATICALLY ON TIME STEPS ON WHICH FLOW-RELATED '         INDAT0.......73300
     5      /16X,'AND TRANSPORT-RELATED BOUNDARY CONDITIONS, '           INDAT0.......73400
     5      'RESPECTIVELY, ARE SET IN (OPTIONAL) BCS FILES.')            INDAT0.......73500
C.....SET SOLUTION CYCLING FOR STEADY-STATE FLOW                         INDAT0.......73600
      IF(ISSFLO.EQ.1) THEN                                               INDAT0.......73700
         NPCYC=ITMAX+1                                                   INDAT0.......73800
         NUCYC=1                                                         INDAT0.......73900
      END IF                                                             INDAT0.......74000
C                                                                        INDAT0.......74100
C.....INPUT DATASET 7A:  ITERATION CONTROLS FOR RESOLVING NONLINEARITIES INDAT0.......74200
      ERRCOD = 'REA-INP-7A'                                              INDAT0.......74300
      CALL READIF(K1, 0, INTFIL, ERRCOD)                                 INDAT0.......74400
      READ(INTFIL,*,IOSTAT=INERR(1)) ITRMAX                              INDAT0.......74500
      IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)        INDAT0.......74600
      IF (ITRMAX.GT.1) THEN                                              INDAT0.......74700
         ERRCOD = 'REA-INP-7A'                                           INDAT0.......74800
         READ(INTFIL,*,IOSTAT=INERR(1)) ITRMAX,RPMAX,RUMAX               INDAT0.......74900
         IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)     INDAT0.......75000
      END IF                                                             INDAT0.......75100
      IF(ITRMAX-1) 1192,1192,1194                                        INDAT0.......75200
 1192 WRITE(K3,1193)                                                     INDAT0.......75300
 1193 FORMAT(////11X,'I T E R A T I O N   C O N T R O L   D A T A',      INDAT0.......75400
     1   //11X,'  NON-ITERATIVE SOLUTION')                               INDAT0.......75500
      GOTO 1196                                                          INDAT0.......75600
 1194 WRITE(K3,1195) ITRMAX,RPMAX,RUMAX                                  INDAT0.......75700
 1195 FORMAT(////11X,'I T E R A T I O N   C O N T R O L   D A T A',      INDAT0.......75800
     1   //11X,I15,5X,'MAXIMUM NUMBER OF ITERATIONS PER TIME STEP',      INDAT0.......75900
     2   /11X,1PE15.4,5X,'ABSOLUTE CONVERGENCE CRITERION FOR FLOW',      INDAT0.......76000
     3   ' SOLUTION'/11X,1PE15.4,5X,'ABSOLUTE CONVERGENCE CRITERION',    INDAT0.......76100
     4   ' FOR TRANSPORT SOLUTION')                                      INDAT0.......76200
 1196 CONTINUE                                                           INDAT0.......76300
C                                                                        INDAT0.......76400
C.....INPUT DATASETS 7B & 7C:  MATRIX EQUATION SOLVER CONTROLS FOR       INDAT0.......76500
C        PRESSURE AND TRANSPORT SOLUTIONS                                INDAT0.......76600
      ERRCOD = 'REA-INP-7B'                                              INDAT0.......76700
      CALL READIF(K1, 0, INTFIL, ERRCOD)                                 INDAT0.......76800
      READ(INTFIL,*,IOSTAT=INERR(1)) CSOLVP                              INDAT0.......76900
      IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)        INDAT0.......77000
      IF ((CSOLVP.NE.SOLWRD(0))) THEN                                    INDAT0.......77100
         ERRCOD = 'REA-INP-7B'                                           INDAT0.......77200
         READ(INTFIL,*,IOSTAT=INERR(1)) CSOLVP,ITRMXP,TOLP               INDAT0.......77300
         IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)     INDAT0.......77400
      END IF                                                             INDAT0.......77500
      ERRCOD = 'REA-INP-7C'                                              INDAT0.......77600
      CALL READIF(K1, 0, INTFIL, ERRCOD)                                 INDAT0.......77700
      READ(INTFIL,*,IOSTAT=INERR(1)) CSOLVU                              INDAT0.......77800
      IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)        INDAT0.......77900
      IF ((CSOLVU.NE.SOLWRD(0))) THEN                                    INDAT0.......78000
         ERRCOD = 'REA-INP-7C'                                           INDAT0.......78100
         READ(INTFIL,*,IOSTAT=INERR(1)) CSOLVU,ITRMXU,TOLU               INDAT0.......78200
         IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)     INDAT0.......78300
      END IF                                                             INDAT0.......78400
      KSOLVP = -1                                                        INDAT0.......78500
      KSOLVU = -1                                                        INDAT0.......78600
      DO 1250 M=0,NSLVRS-1                                               INDAT0.......78700
         IF (CSOLVP.EQ.SOLWRD(M)) KSOLVP = M                             INDAT0.......78800
         IF (CSOLVU.EQ.SOLWRD(M)) KSOLVU = M                             INDAT0.......78900
 1250 CONTINUE                                                           INDAT0.......79000
      IF ((KSOLVP.LT.0).OR.(KSOLVU.LT.0)) THEN                           INDAT0.......79100
         ERRCOD = 'INP-7B&C-1'                                           INDAT0.......79200
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        INDAT0.......79300
      ELSE IF ((KSOLVP*KSOLVU.EQ.0).AND.(KSOLVP+KSOLVU.NE.0)) THEN       INDAT0.......79400
         ERRCOD = 'INP-7B&C-2'                                           INDAT0.......79500
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        INDAT0.......79600
      ELSE IF ((KSOLVU.EQ.1).OR.((KSOLVP.EQ.1).AND.(UP.NE.0D0))) THEN    INDAT0.......79700
         ERRCOD = 'INP-7B&C-3'                                           INDAT0.......79800
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        INDAT0.......79900
      END IF                                                             INDAT0.......80000
      IF (KSOLVP.EQ.2) THEN                                              INDAT0.......80100
         ITOLP = 0                                                       INDAT0.......80200
      ELSE                                                               INDAT0.......80300
         ITOLP = 2                                                       INDAT0.......80400
      END IF                                                             INDAT0.......80500
      IF (KSOLVU.EQ.2) THEN                                              INDAT0.......80600
         ITOLU = 0                                                       INDAT0.......80700
      ELSE                                                               INDAT0.......80800
         ITOLU = 2                                                       INDAT0.......80900
      END IF                                                             INDAT0.......81000
      NSAVEP = 10                                                        INDAT0.......81100
      NSAVEU = 10                                                        INDAT0.......81200
C                                                                        INDAT0.......81300
C                                                                        INDAT0.......81400
      RETURN                                                             INDAT0.......81500
      END                                                                INDAT0.......81600
C                                                                        INDAT0.......81700
C     SUBROUTINE        I  N  D  A  T  1           SUTRA VERSION 3.0     INDAT1.........100
C                                                                        INDAT1.........200
C *** PURPOSE :                                                          INDAT1.........300
C ***  TO INPUT, OUTPUT, AND ORGANIZE A MAJOR PORTION OF INP FILE        INDAT1.........400
C ***  INPUT DATA (DATASETS 8 THROUGH 15)                                INDAT1.........500
C                                                                        INDAT1.........600
      SUBROUTINE INDAT1(X,Y,Z,POR,CS1,ALMAX,ALMID,ALMIN,ATMAX,ATMID,     INDAT1.........700
     1   ATMIN,PERMXX,PERMXY,PERMXZ,PERMYX,PERMYY,                       INDAT1.........800
     2   PERMYZ,PERMZX,PERMZY,PERMZZ,PANGL1,PANGL2,PANGL3,SOP,           INDAT1.........900
     3   NREG,NREGAD,LREG,OBSPTS)                                        INDAT1........1000
      USE ALLARR, ONLY : OBSDAT                                          INDAT1........1100
      USE LLDEF                                                          INDAT1........1200
      USE EXPINT                                                         INDAT1........1300
      USE SCHDEF                                                         INDAT1........1400
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                INDAT1........1500
      PARAMETER (NCOLMX=9)                                               INDAT1........1600
      CHARACTER*10 ADSMOD,CDUM10,ADSMOD1(10)                             INDAT1........1700
      CHARACTER*6 STYPE(2)                                               INDAT1........1800
      CHARACTER K5SYM(7)*1, NCOL(NCOLMX)*1, VARNK5(7)*25                 INDAT1........1900
      CHARACTER K6SYM(7)*2, LCOL(NCOLMX)*2, VARNK6(7)*25                 INDAT1........2000
      CHARACTER*1 CNODAL,CELMNT,CINCID,CPANDS,CVEL,CCORT,CBUDG,          INDAT1........2100
     1   CSCRN,CPAUSE,CINACT                                             INDAT1........2200
      CHARACTER*80 ERRCOD,CHERR(10),UNAME,FNAME(0:23)                    INDAT1........2300
      CHARACTER INTFIL*1000,DOTS45*45                                    INDAT1........2400
      CHARACTER OBSNAM*40, OBSSCH*10, OBSFMT*3, CDUM80*80                INDAT1........2500
      CHARACTER*8 VERNUM, VERNIN                                         INDAT1........2600
      TYPE (OBSDAT), DIMENSION (NOBSN) :: OBSPTS                         INDAT1........2700
      DIMENSION J5COL(NCOLMX), J6COL(NCOLMX)                             INDAT1........2800
      DIMENSION X(NN),Y(NN),Z(NN),POR(NN),CS1(NN),SOP(NN),NREG(NN)       INDAT1........2900
      DIMENSION NREGAD(NN)                                               INDAT1........3000
      DIMENSION PERMXX(NE),PERMXY(NE),PERMXZ(NEX),PERMYX(NE),PERMYY(NE), INDAT1........3100
     1   PERMYZ(NEX),PERMZX(NEX),PERMZY(NEX),PERMZZ(NEX),PANGL1(NE),     INDAT1........3200
     2   PANGL2(NEX),PANGL3(NEX),ALMAX(NE),ALMID(NEX),                   INDAT1........3300
     3   ALMIN(NE),ATMAX(NE),ATMID(NEX),ATMIN(NE),LREG(NE)               INDAT1........3400
      DIMENSION CHI11(10), CHI21(10)                                     INDAT1........3500
      DIMENSION INERR(10),RLERR(10)                                      INDAT1........3600
      DIMENSION KTYPE(2)                                                 INDAT1........3700
      DIMENSION IUNIT(0:23)                                              INDAT1........3800
      INTEGER RMVDIM,IMVDIM,I1VDIM,CMVDIM,LMVDIM,PMVDIM                  INDAT1........3900
      ALLOCATABLE :: INOB(:)                                             INDAT1........4000
      COMMON /CONTRL/ GNUP,GNUU,UP,DTMULT,DTMAX,ME,ISSFLO,ISSTRA,ITCYC,  INDAT1........4100
     1   NPCYC,NUCYC,NPRINT,NBCFPR,NBCSPR,NBCPPR,NBCUPR,NLAKPR,IREAD,    INDAT1........4200
     1   NBGPPR,NBGUPR,ISTORE,NOUMAT,IUNSAT,IALSAT,KTYPE                 INDAT1........4300
      COMMON /DIMS/ NN,NE,NIN,NBI,NCBI,NB,NBHALF,NPBC,NUBC,              INDAT1........4400
     1   NSOP,NSOU,NBCN,NPBG,NUBG,NCIDB                                  INDAT1........4500
      COMMON /DIMX/ NWI,NWF,NWL,NELT,NNNX,NEX,N48                        INDAT1........4600
      COMMON /FNAMES/ UNAME,FNAME                                        INDAT1........4700
      COMMON /FUNITA/ IUNIT                                              INDAT1........4800
      COMMON /FUNITS/ K00,K0,K1,K2,K3,K4,K5,K6,K7,K8,K9,                 INDAT1........4900
     1   K10,K11,K12,K13,K14,K15,K16,K17,K18,K19,K20,K21,K22,K23         INDAT1........5000
      COMMON /GRAVEC/ GRAVX,GRAVY,GRAVZ                                  INDAT1........5100
      COMMON /ITERAT/ RPM,RPMAX,RUM,RUMAX,ITER,ITRMAX,IPWORS,IUWORS      INDAT1........5200
      COMMON /JCOLS/ NCOLPR, LCOLPR, NCOLS5, NCOLS6, J5COL, J6COL        INDAT1........5300
      COMMON /KPRBCS/ KINACT                                             INDAT1........5400
      COMMON /KPRINT/ KNODAL,KELMNT,KINCID,KPLOTP,KPLOTU,                INDAT1........5500
     1   KPANDS,KVEL,KCORT,KBUDG,KSCRN,KPAUSE                            INDAT1........5600
      COMMON /MEMCNT/ RMVDIM,IMVDIM,I1VDIM,CMVDIM,LMVDIM,PMVDIM          INDAT1........5700
      COMMON /MODSOR/ ADSMOD,ADSMOD1                                     INDAT1........5800
      COMMON /OBS/ NOBSN,NTOBS,NOBCYC,NOBLIN,NFLOMX                      INDAT1........5900
      COMMON /PARAMS/ COMPFL,COMPMA,DRWDU,CW,CS,RHOS,SIGMAW,SIGMAS,      INDAT1........6000
     1   RHOW0,URHOW0,VISC0,PRODF1,PRODS1,PRODF0,PRODS0,CHI1,CHI2        INDAT1........6100
      COMMON /PARSOR/ CHI11,CHI21                                        INDAT1........6200
      COMMON /SCH/ NSCH,ISCHTS,NSCHAU                                    INDAT1........6300
      COMMON /TIMES/ DELT,TSEC,TMIN,THOUR,TDAY,TWEEK,TMONTH,TYEAR,       INDAT1........6400
     1   TMAX,DELTP,DELTU,DLTPM1,DLTUM1,IT,ITBCS,ITRST,ITMAX,TSTART      INDAT1........6500
      COMMON /VER/ VERNUM, VERNIN                                        INDAT1........6600
      DATA STYPE(1)/'ENERGY'/,STYPE(2)/'SOLUTE'/                         INDAT1........6700
      DATA (K5SYM(MM), MM=1,7) /'N', 'X', 'Y', 'Z', 'P', 'U', 'S'/       INDAT1........6800
      DATA (VARNK5(MM), MM=1,7) /'NODE NUMBER',                          INDAT1........6900
     1   'X-COORDINATE', 'Y-COORDINATE', 'Z-COORDINATE',                 INDAT1........7000
     2   'PRESSURE', 'CONCENTRATION/TEMPERATURE', 'SATURATION'/          INDAT1........7100
      DATA (K6SYM(MM), MM=1,7) /'E', 'X', 'Y', 'Z', 'VX', 'VY', 'VZ'/    INDAT1........7200
      DATA (VARNK6(MM), MM=1,7) /'ELEMENT NUMBER',                       INDAT1........7300
     1   'X-COORDINATE OF CENTROID', 'Y-COORDINATE OF CENTROID',         INDAT1........7400
     2   'Z-COORDINATE OF CENTROID', 'X-VELOCITY', 'Y-VELOCITY',         INDAT1........7500
     3   'Z-VELOCITY'/                                                   INDAT1........7600
      DATA DOTS45 /'.............................................'/      INDAT1........7700
      SAVE STYPE,K5SYM,VARNK5,K6SYM,VARNK6                               INDAT1........7800
C                                                                        INDAT1........7900
      INSTOP=0                                                           INDAT1........8000
C                                                                        INDAT1........8100
C.....INPUT DATASET 8A:  OUTPUT CONTROLS AND OPTIONS FOR LST FILE        INDAT1........8200
C        AND SCREEN                                                      INDAT1........8300
      ERRCOD = 'REA-INP-8A'                                              INDAT1........8400
      CALL READIF(K1, 0, INTFIL, ERRCOD)                                 INDAT1........8500
      IF ((VERNIN.EQ.'2.0').OR.(VERNIN.EQ.'2.1')) THEN                   INDAT1........8600
         READ(INTFIL,*,IOSTAT=INERR(1)) NPRINT,CNODAL,CELMNT,CINCID,     INDAT1........8700
     1      CVEL,CBUDG,CSCRN,CPAUSE                                      INDAT1........8800
         CPANDS = 'Y'                                                    INDAT1........8900
         CCORT = 'Y'                                                     INDAT1........9000
      ELSE                                                               INDAT1........9100
         READ(INTFIL,*,IOSTAT=INERR(1)) NPRINT,CNODAL,CELMNT,CINCID,     INDAT1........9200
     1      CPANDS,CVEL,CCORT,CBUDG,CSCRN,CPAUSE                         INDAT1........9300
      END IF                                                             INDAT1........9400
      IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)        INDAT1........9500
      IF (CNODAL.EQ.'Y') THEN                                            INDAT1........9600
         KNODAL = +1                                                     INDAT1........9700
      ELSE IF (CNODAL.EQ.'N') THEN                                       INDAT1........9800
         KNODAL = 0                                                      INDAT1........9900
      ELSE                                                               INDAT1.......10000
         ERRCOD = 'INP-8A-1'                                             INDAT1.......10100
         CHERR(1) = 'CNODAL '                                            INDAT1.......10200
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        INDAT1.......10300
      END IF                                                             INDAT1.......10400
      IF (CELMNT.EQ.'Y') THEN                                            INDAT1.......10500
         KELMNT = +1                                                     INDAT1.......10600
      ELSE IF (CELMNT.EQ.'N') THEN                                       INDAT1.......10700
         KELMNT = 0                                                      INDAT1.......10800
      ELSE                                                               INDAT1.......10900
         ERRCOD = 'INP-8A-2'                                             INDAT1.......11000
         CHERR(1) = 'CELMNT'                                             INDAT1.......11100
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        INDAT1.......11200
      END IF                                                             INDAT1.......11300
      IF (CINCID.EQ.'Y') THEN                                            INDAT1.......11400
         KINCID = +1                                                     INDAT1.......11500
      ELSE IF (CINCID.EQ.'N') THEN                                       INDAT1.......11600
         KINCID = 0                                                      INDAT1.......11700
      ELSE                                                               INDAT1.......11800
         ERRCOD = 'INP-8A-3'                                             INDAT1.......11900
         CHERR(1) = 'CINCID'                                             INDAT1.......12000
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        INDAT1.......12100
      END IF                                                             INDAT1.......12200
      IF (CPANDS.EQ.'Y') THEN                                            INDAT1.......12300
         KPANDS = +1                                                     INDAT1.......12400
      ELSE IF (CPANDS.EQ.'N') THEN                                       INDAT1.......12500
         KPANDS = 0                                                      INDAT1.......12600
      ELSE                                                               INDAT1.......12700
         ERRCOD = 'INP-8A-8'                                             INDAT1.......12800
         CHERR(1) = 'CPANDS'                                             INDAT1.......12900
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        INDAT1.......13000
      END IF                                                             INDAT1.......13100
      IF (CVEL.EQ.'Y') THEN                                              INDAT1.......13200
         KVEL = +1                                                       INDAT1.......13300
      ELSE IF (CVEL.EQ.'N') THEN                                         INDAT1.......13400
         KVEL = 0                                                        INDAT1.......13500
      ELSE                                                               INDAT1.......13600
         ERRCOD = 'INP-8A-4'                                             INDAT1.......13700
         CHERR(1) = 'CVEL  '                                             INDAT1.......13800
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        INDAT1.......13900
      END IF                                                             INDAT1.......14000
      IF (CCORT.EQ.'Y') THEN                                             INDAT1.......14100
         KCORT = +1                                                      INDAT1.......14200
      ELSE IF (CCORT.EQ.'N') THEN                                        INDAT1.......14300
         KCORT = 0                                                       INDAT1.......14400
      ELSE                                                               INDAT1.......14500
         ERRCOD = 'INP-8A-9'                                             INDAT1.......14600
         CHERR(1) = 'CCORT '                                             INDAT1.......14700
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        INDAT1.......14800
      END IF                                                             INDAT1.......14900
      IF (CBUDG.EQ.'Y') THEN                                             INDAT1.......15000
         KBUDG = +1                                                      INDAT1.......15100
      ELSE IF (CBUDG.EQ.'N') THEN                                        INDAT1.......15200
         KBUDG = 0                                                       INDAT1.......15300
      ELSE                                                               INDAT1.......15400
         ERRCOD = 'INP-8A-5'                                             INDAT1.......15500
         CHERR(1) = 'CBUDG '                                             INDAT1.......15600
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        INDAT1.......15700
      END IF                                                             INDAT1.......15800
      IF (CSCRN.EQ.'Y') THEN                                             INDAT1.......15900
         KSCRN = +1                                                      INDAT1.......16000
      ELSE IF (CSCRN.EQ.'N') THEN                                        INDAT1.......16100
         KSCRN = 0                                                       INDAT1.......16200
      ELSE                                                               INDAT1.......16300
         ERRCOD = 'INP-8A-6'                                             INDAT1.......16400
         CHERR(1) = 'CSCRN '                                             INDAT1.......16500
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        INDAT1.......16600
      END IF                                                             INDAT1.......16700
      IF (CPAUSE.EQ.'Y') THEN                                            INDAT1.......16800
         KPAUSE = +1                                                     INDAT1.......16900
      ELSE IF (CPAUSE.EQ.'N') THEN                                       INDAT1.......17000
         KPAUSE = 0                                                      INDAT1.......17100
      ELSE                                                               INDAT1.......17200
         ERRCOD = 'INP-8A-7'                                             INDAT1.......17300
         CHERR(1) = 'CPAUSE'                                             INDAT1.......17400
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        INDAT1.......17500
      END IF                                                             INDAT1.......17600
C                                                                        INDAT1.......17700
      WRITE(K3,72) NPRINT                                                INDAT1.......17800
   72 FORMAT(////11X,'O U T P U T   C O N T R O L S   A N D   ',         INDAT1.......17900
     1   'O P T I O N S'//13X,'.LST FILE'/13X,'---------'                INDAT1.......18000
     2   //13X,I8,3X,'PRINTED OUTPUT CYCLE (IN TIME STEPS)')             INDAT1.......18100
      IF(KNODAL.EQ.+1) WRITE(K3,74)                                      INDAT1.......18200
      IF(KNODAL.EQ.0) WRITE(K3,75)                                       INDAT1.......18300
   74 FORMAT(/13X,'- PRINT NODE COORDINATES, THICKNESSES AND',           INDAT1.......18400
     1   ' POROSITIES')                                                  INDAT1.......18500
   75 FORMAT(/13X,'- CANCEL PRINT OF NODE COORDINATES, THICKNESSES AND', INDAT1.......18600
     1   ' POROSITIES')                                                  INDAT1.......18700
      IF(KELMNT.EQ.+1) WRITE(K3,76)                                      INDAT1.......18800
      IF(KELMNT.EQ.0) WRITE(K3,77)                                       INDAT1.......18900
   76 FORMAT(13X,'- PRINT ELEMENT PERMEABILITIES AND DISPERSIVITIES')    INDAT1.......19000
   77 FORMAT(13X,'- CANCEL PRINT OF ELEMENT PERMEABILITIES AND ',        INDAT1.......19100
     1   'DISPERSIVITIES')                                               INDAT1.......19200
      IF(KINCID.EQ.+1) WRITE(K3,78)                                      INDAT1.......19300
      IF(KINCID.EQ.0) WRITE(K3,79)                                       INDAT1.......19400
   78 FORMAT(13X,'- PRINT NODE INCIDENCES IN EACH ELEMENT')              INDAT1.......19500
   79 FORMAT(13X,'- CANCEL PRINT OF NODE INCIDENCES IN EACH ELEMENT')    INDAT1.......19600
      IME=2                                                              INDAT1.......19700
      IF(ME.EQ.+1) IME=1                                                 INDAT1.......19800
      IF(KPANDS.EQ.+1) WRITE(K3,81)                                      INDAT1.......19900
      IF(KPANDS.EQ.0) WRITE(K3,82)                                       INDAT1.......20000
   81 FORMAT(/13X,'- PRINT PRESSURES AND SATURATIONS AT NODES ',         INDAT1.......20100
     1   'ON EACH TIME STEP WITH OUTPUT')                                INDAT1.......20200
   82 FORMAT(/13X,'- CANCEL PRINT OF PRESSURES AND SATURATIONS')         INDAT1.......20300
      IF(KVEL.EQ.+1) WRITE(K3,84)                                        INDAT1.......20400
      IF(KVEL.EQ.0) WRITE(K3,85)                                         INDAT1.......20500
   84 FORMAT(13X,'- CALCULATE AND PRINT VELOCITIES AT ELEMENT ',         INDAT1.......20600
     1   'CENTROIDS ON EACH TIME STEP WITH OUTPUT')                      INDAT1.......20700
   85 FORMAT(13X,'- CANCEL PRINT OF VELOCITIES')                         INDAT1.......20800
      IF(KCORT.EQ.+1) THEN                                               INDAT1.......20900
         IF (ME.EQ.-1) THEN                                              INDAT1.......21000
            WRITE(K3,86)                                                 INDAT1.......21100
         ELSE                                                            INDAT1.......21200
            WRITE(K3,87)                                                 INDAT1.......21300
         END IF                                                          INDAT1.......21400
      ELSE                                                               INDAT1.......21500
         IF (ME.EQ.-1) THEN                                              INDAT1.......21600
            WRITE(K3,88)                                                 INDAT1.......21700
         ELSE                                                            INDAT1.......21800
            WRITE(K3,89)                                                 INDAT1.......21900
         END IF                                                          INDAT1.......22000
      END IF                                                             INDAT1.......22100
   86 FORMAT(13X,'- PRINT CONCENTRATIONS AT NODES ',                     INDAT1.......22200
     1   'ON EACH TIME STEP WITH OUTPUT')                                INDAT1.......22300
   87 FORMAT(13X,'- PRINT TEMPERATURES AT NODES ',                       INDAT1.......22400
     1   'ON EACH TIME STEP WITH OUTPUT')                                INDAT1.......22500
   88 FORMAT(13X,'- CANCEL PRINT OF CONCENTRATIONS')                     INDAT1.......22600
   89 FORMAT(13X,'- CANCEL PRINT OF TEMPERATURES')                       INDAT1.......22700
      IF(KBUDG.EQ.+1) WRITE(K3,90) STYPE(IME)                            INDAT1.......22800
      IF(KBUDG.EQ.0) WRITE(K3,91)                                        INDAT1.......22900
   90 FORMAT(/13X,'- CALCULATE AND PRINT FLUID AND ',A6,' BUDGETS ',     INDAT1.......23000
     1   'ON EACH TIME STEP WITH OUTPUT')                                INDAT1.......23100
   91 FORMAT(/13X,'- CANCEL PRINT OF BUDGETS')                           INDAT1.......23200
C                                                                        INDAT1.......23300
C.....INPUT DATASET 8B:  OUTPUT CONTROLS AND OPTIONS FOR NOD FILE        INDAT1.......23400
      ERRCOD = 'REA-INP-8B'                                              INDAT1.......23500
      CALL READIF(K1, 0, INTFIL, ERRCOD)                                 INDAT1.......23600
      READ(INTFIL,*,IOSTAT=INERR(1)) NCOLPR                              INDAT1.......23700
      IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)        INDAT1.......23800
      DO 140 M=1,NCOLMX                                                  INDAT1.......23900
         READ(INTFIL,*,IOSTAT=INERR(1)) NCOLPR, (NCOL(MM), MM=1,M)       INDAT1.......24000
         IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)     INDAT1.......24100
         IF (NCOL(M).EQ.'-') THEN                                        INDAT1.......24200
            NCOLS5 = M - 1                                               INDAT1.......24300
            GOTO 142                                                     INDAT1.......24400
         END IF                                                          INDAT1.......24500
  140 CONTINUE                                                           INDAT1.......24600
      NCOLS5 = NCOLMX                                                    INDAT1.......24700
  142 CONTINUE                                                           INDAT1.......24800
      WRITE(K3,144) NCOLPR                                               INDAT1.......24900
  144 FORMAT (//13X,'.NOD FILE'/13X,'---------'                          INDAT1.......25000
     1   //13X,I8,3X,'PRINTED OUTPUT CYCLE (IN TIME STEPS)'/)            INDAT1.......25100
      DO 148 M=1,NCOLS5                                                  INDAT1.......25200
         DO 146 MM=1,7                                                   INDAT1.......25300
            IF (NCOL(M).EQ.K5SYM(MM)) THEN                               INDAT1.......25400
               IF ((MM.EQ.1).AND.(M.NE.1)) THEN                          INDAT1.......25500
                  ERRCOD = 'INP-8B-1'                                    INDAT1.......25600
                  CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)               INDAT1.......25700
               END IF                                                    INDAT1.......25800
               IF ((MM.EQ.4).AND.(KTYPE(1).EQ.2)) THEN                   INDAT1.......25900
                  ERRCOD = 'INP-8B-2'                                    INDAT1.......26000
                  CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)               INDAT1.......26100
               END IF                                                    INDAT1.......26200
               J5COL(M) = MM                                             INDAT1.......26300
               GOTO 148                                                  INDAT1.......26400
            END IF                                                       INDAT1.......26500
  146    CONTINUE                                                        INDAT1.......26600
         ERRCOD = 'INP-8B-3'                                             INDAT1.......26700
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        INDAT1.......26800
  148 CONTINUE                                                           INDAT1.......26900
      WRITE(K3,150) (M,VARNK5(J5COL(M)),M=1,NCOLS5)                      INDAT1.......27000
  150 FORMAT (13X,'COLUMN ',I1,':',2X,A)                                 INDAT1.......27100
C                                                                        INDAT1.......27200
C.....INPUT DATASET 8C:  OUTPUT CONTROLS AND OPTIONS FOR ELE FILE        INDAT1.......27300
      ERRCOD = 'REA-INP-8C'                                              INDAT1.......27400
      CALL READIF(K1, 0, INTFIL, ERRCOD)                                 INDAT1.......27500
      READ(INTFIL,*,IOSTAT=INERR(1)) LCOLPR                              INDAT1.......27600
      IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)        INDAT1.......27700
      DO 160 M=1,NCOLMX                                                  INDAT1.......27800
         READ(INTFIL,*,IOSTAT=INERR(1)) LCOLPR, (LCOL(MM), MM=1,M)       INDAT1.......27900
         IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)     INDAT1.......28000
         IF (LCOL(M).EQ.'-') THEN                                        INDAT1.......28100
            NCOLS6 = M - 1                                               INDAT1.......28200
            GOTO 162                                                     INDAT1.......28300
         END IF                                                          INDAT1.......28400
  160 CONTINUE                                                           INDAT1.......28500
      NCOLS6 = NCOLMX                                                    INDAT1.......28600
  162 CONTINUE                                                           INDAT1.......28700
      WRITE(K3,164) LCOLPR                                               INDAT1.......28800
  164 FORMAT (//13X,'.ELE FILE'/13X,'---------'                          INDAT1.......28900
     1   //13X,I8,3X,'PRINTED OUTPUT CYCLE (IN TIME STEPS)'/)            INDAT1.......29000
      DO 168 M=1,NCOLS6                                                  INDAT1.......29100
         DO 166 MM=1,7                                                   INDAT1.......29200
            IF (LCOL(M).EQ.K6SYM(MM)) THEN                               INDAT1.......29300
               IF ((MM.EQ.1).AND.(M.NE.1)) THEN                          INDAT1.......29400
                  ERRCOD = 'INP-8C-1'                                    INDAT1.......29500
                  CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)               INDAT1.......29600
               END IF                                                    INDAT1.......29700
               IF ((MM.EQ.4).AND.(KTYPE(1).EQ.2)) THEN                   INDAT1.......29800
                  ERRCOD = 'INP-8C-2'                                    INDAT1.......29900
                  CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)               INDAT1.......30000
               END IF                                                    INDAT1.......30100
               IF ((MM.EQ.7).AND.(KTYPE(1).EQ.2)) THEN                   INDAT1.......30200
                  ERRCOD = 'INP-8C-4'                                    INDAT1.......30300
                  CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)               INDAT1.......30400
               END IF                                                    INDAT1.......30500
               J6COL(M) = MM                                             INDAT1.......30600
               GOTO 168                                                  INDAT1.......30700
            END IF                                                       INDAT1.......30800
  166    CONTINUE                                                        INDAT1.......30900
         ERRCOD = 'INP-8C-3'                                             INDAT1.......31000
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        INDAT1.......31100
  168 CONTINUE                                                           INDAT1.......31200
      WRITE(K3,170) (M,VARNK6(J6COL(M)),M=1,NCOLS6)                      INDAT1.......31300
  170 FORMAT (13X,'COLUMN ',I1,':',2X,A)                                 INDAT1.......31400
C                                                                        INDAT1.......31500
C.....INPUT DATASET 8D:  OUTPUT CONTROLS AND OPTIONS FOR OBSERVATIONS    INDAT1.......31600
      NOBCYC = ITMAX + 1                                                 INDAT1.......31700
      IF (NOBSN-1.EQ.0) GOTO 999                                         INDAT1.......31800
C.....NOBS IS ACTUAL NUMBER OF OBSERVATION POINTS                        INDAT1.......31900
C.....NTOBS IS MAXIMUM NUMBER OF TIME STEPS WITH OBSERVATIONS            INDAT1.......32000
      NOBS=NOBSN-1                                                       INDAT1.......32100
C.....READ IN OBSERVATION POINTS                                         INDAT1.......32200
      ERRCOD = 'REA-INP-8D'                                              INDAT1.......32300
C.....DO THIS READ NOW TO SKIP ANY COMMENTS AND BLANK LINES.             INDAT1.......32400
C        (BACKSPACE LATER IF IT MUST BE REREAD IN OLD FORMAT.)           INDAT1.......32500
      CALL READIF(K1, 0, INTFIL, ERRCOD)                                 INDAT1.......32600
      READ(INTFIL,*,IOSTAT=INERR(1)) NOBLIN                              INDAT1.......32700
      IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)        INDAT1.......32800
      NOBLIN = MIN(NOBLIN,NOBS)                                          INDAT1.......32900
C.....IF OLD (VERSION 2.0) INPUT FORMAT IS BEING USED, CONSTRUCT A       INDAT1.......33000
C        CORRESPONDING OBSERVATION OUTPUT SCHEDULE IF TRANSPORT IS       INDAT1.......33100
C        TRANSIENT.                                                      INDAT1.......33200
      IF (VERNIN.EQ."2.0") THEN                                          INDAT1.......33300
C........SET THE MAX NUMBER OF OBSERVATIONS PER LINE TO THE TOTAL        INDAT1.......33400
C           NUMBER OF OBSERVATIONS.                                      INDAT1.......33500
         NOBLIN = NOBS                                                   INDAT1.......33600
C........SET UP A TEMPORARY ARRAY TO HOLD OBSERVATION NODES.             INDAT1.......33700
         ALLOCATE(INOB(NOBSN))                                           INDAT1.......33800
C........BACKSPACE AND REREAD DATASET IN OLD FORMAT                      INDAT1.......33900
         BACKSPACE(K1)                                                   INDAT1.......34000
         READ(K1,*,IOSTAT=INERR(1)) NOBCYC, (INOB(JJ), JJ=1,NOBSN)       INDAT1.......34100
         IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)     INDAT1.......34200
C........IF THE LAST NODE NUMBER IS NOT ZERO, GENERATE AN ERROR.         INDAT1.......34300
         IF (INOB(NOBSN).NE.0) THEN                                      INDAT1.......34400
            ERRCOD = 'INP-8D-1'                                          INDAT1.......34500
            CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                     INDAT1.......34600
         END IF                                                          INDAT1.......34700
C........IF A NODE NUMBER IS INVALID, GENERATE AN ERROR.                 INDAT1.......34800
         DO 510 JJ=1,NOBS                                                INDAT1.......34900
            IF ((INOB(JJ).LT.1).OR.(INOB(JJ).GT.NN)) THEN                INDAT1.......35000
               ERRCOD = 'INP-8D-2'                                       INDAT1.......35100
               CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                  INDAT1.......35200
            END IF                                                       INDAT1.......35300
  510    CONTINUE                                                        INDAT1.......35400
C........IF TRANSPORT IS TRANSIENT, CONSTRUCT A SCHEDULE THAT            INDAT1.......35500
C           CORRESPONDS TO THE CYCLE SPECIFIED BY NOBCYC.                INDAT1.......35600
         IF (ISSTRA.EQ.0) THEN                                           INDAT1.......35700
            SCHDLS(2)%NAME = "-"                                         INDAT1.......35800
            ISTEPI = 0                                                   INDAT1.......35900
            ISTEPL = ITMAX                                               INDAT1.......36000
            ITERM = ISTEPL - ISTEPI                                      INDAT1.......36100
C...........IF NOBCYC=0, SET THE CYCLE TO THE TOTAL NUMBER OF TIME       INDAT1.......36200
C              STEPS, SO THAT THE SCHEDULE CONSISTS OF TIME STEPS        INDAT1.......36300
C              0, 1, AND ITMAX.  (VERSION 2.0 SIMPLY BOMBS IF            INDAT1.......36400
C              NOBCYC=0.)                                                INDAT1.......36500
            IF (NOBCYC.EQ.0) THEN                                        INDAT1.......36600
               ISTEPC = ITERM                                            INDAT1.......36700
            ELSE                                                         INDAT1.......36800
               ISTEPC = IABS(NOBCYC)                                     INDAT1.......36900
            END IF                                                       INDAT1.......37000
            NTORS = INT(ITERM/ISTEPC) + 1                                INDAT1.......37100
            IF (MOD(ITERM,ISTEPC).NE.0) NTORS = NTORS + 1                INDAT1.......37200
            NSTEP = ISTEPI                                               INDAT1.......37300
            LCNT = 0                                                     INDAT1.......37400
            JT = 0                                                       INDAT1.......37500
C...........IF NOBCYC>=0, INCLUDE TIME STEP 1 IF NOT ALREADY INCLUDED.   INDAT1.......37600
            IF ((NOBCYC.GE.0).AND.(NOBCYC.NE.1)) THEN                    INDAT1.......37700
               LCNT = LCNT + 1                                           INDAT1.......37800
               JT = JT + 1                                               INDAT1.......37900
               STEP = DNINT(DBLE(1))                                     INDAT1.......38000
               TIME = SCHDLS(ISCHTS)%SLIST(2)%DVALU1                     INDAT1.......38100
               SCHDLS(2)%SLIST(LCNT)%DVALU2 = STEP                       INDAT1.......38200
               SCHDLS(2)%SLIST(LCNT)%DVALU1 = TIME                       INDAT1.......38300
            END IF                                                       INDAT1.......38400
            DO 580 NT=1,NTORS                                            INDAT1.......38500
               NSTEP = MIN(ISTEPL, ISTEPI + (NT - 1)*ISTEPC)             INDAT1.......38600
               DO WHILE (NSTEP.GT.JT)                                    INDAT1.......38700
                  JT = JT + 1                                            INDAT1.......38800
               END DO                                                    INDAT1.......38900
               LCNT = LCNT + 1                                           INDAT1.......39000
               JTP1 = JT + 1                                             INDAT1.......39100
               STEP = SCHDLS(ISCHTS)%SLIST(JTP1)%DVALU2                  INDAT1.......39200
               TIME = SCHDLS(ISCHTS)%SLIST(JTP1)%DVALU1                  INDAT1.......39300
               SCHDLS(2)%SLIST(LCNT)%DVALU2 = STEP                       INDAT1.......39400
               SCHDLS(2)%SLIST(LCNT)%DVALU1 = TIME                       INDAT1.......39500
  580       CONTINUE                                                     INDAT1.......39600
         END IF                                                          INDAT1.......39700
C........CONVERT NODES TO GENERALIZED OBSERVATION POINTS.  THE POINTS    INDAT1.......39800
C           ARE NAMED "NODE_#", WHERE # IS THE NODE NUMBER.              INDAT1.......39900
         DO 540 I=1,NOBS                                                 INDAT1.......40000
            WRITE(OBSPTS(I)%NAME,*) INOB(I)                              INDAT1.......40100
            OBSPTS(I)%NAME = "NODE_" // ADJUSTL(OBSPTS(I)%NAME)          INDAT1.......40200
            OBSPTS(I)%SCHED = "-"                                        INDAT1.......40300
            OBSPTS(I)%FRMT = "OBS"                                       INDAT1.......40400
            OBSPTS(I)%L = INOB(I)                                        INDAT1.......40500
  540    CONTINUE                                                        INDAT1.......40600
C........DEALLOCATE TEMPORARY ARRAY.                                     INDAT1.......40700
         DEALLOCATE(INOB)                                                INDAT1.......40800
C........SKIP PAST THE CODE THAT READS A LIST OF GENERALIZED             INDAT1.......40900
C           OBSERVATION POINTS.                                          INDAT1.......41000
         GOTO 820                                                        INDAT1.......41100
      END IF                                                             INDAT1.......41200
C.....READ THE LIST OF GENERALIZED OBSERVATION POINTS.                   INDAT1.......41300
      NOBCYC = -1                                                        INDAT1.......41400
      DO 690 I=1,NOBS                                                    INDAT1.......41500
C........READ THE OBSERVATION NAME.                                      INDAT1.......41600
         CALL READIF(K1, 0, INTFIL, ERRCOD)                              INDAT1.......41700
         READ(INTFIL,*,IOSTAT=INERR(1)) OBSNAM                           INDAT1.......41800
         IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)     INDAT1.......41900
C........IF END-OF-LIST MARKER ENCOUNTERED TOO SOON, GENERATE ERROR.     INDAT1.......42000
         IF (OBSNAM.EQ.'-') THEN                                         INDAT1.......42100
            ERRCOD = 'INP-8D-4'                                          INDAT1.......42200
            CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                     INDAT1.......42300
         END IF                                                          INDAT1.......42400
C........READ IN (X,Y,Z) OR (X,Y) COORDINATES, DEPENDING ON PROBLEM      INDAT1.......42500
C           DIMENSIONALITY, AS WELL AS OUTPUT SCHEDULE AND FORMAT.       INDAT1.......42600
         IF (KTYPE(1).EQ.3) THEN                                         INDAT1.......42700
            READ(INTFIL,*,IOSTAT=INERR(1)) OBSNAM, XOBS, YOBS, ZOBS,     INDAT1.......42800
     1         CDUM80, OBSFMT                                            INDAT1.......42900
         ELSE                                                            INDAT1.......43000
            READ(INTFIL,*,IOSTAT=INERR(1)) OBSNAM, XOBS, YOBS,           INDAT1.......43100
     1         CDUM80, OBSFMT                                            INDAT1.......43200
            ZOBS = 0D0                                                   INDAT1.......43300
         END IF                                                          INDAT1.......43400
         IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)     INDAT1.......43500
         IF (LEN_TRIM(CDUM80).GT.10) THEN                                INDAT1.......43600
            ERRCOD = 'INP-8D-6'                                          INDAT1.......43700
            CHERR(1) = CDUM80                                            INDAT1.......43800
            CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                     INDAT1.......43900
         END IF                                                          INDAT1.......44000
         OBSSCH = CDUM80                                                 INDAT1.......44100
         OBSPTS(I)%NAME = OBSNAM                                         INDAT1.......44200
         OBSPTS(I)%X = XOBS                                              INDAT1.......44300
         OBSPTS(I)%Y = YOBS                                              INDAT1.......44400
         OBSPTS(I)%Z = ZOBS                                              INDAT1.......44500
         IF (ISSTRA.EQ.1) THEN                                           INDAT1.......44600
            OBSPTS(I)%SCHED = "STEPS_1&UP"                               INDAT1.......44700
         ELSE                                                            INDAT1.......44800
            OBSPTS(I)%SCHED = OBSSCH                                     INDAT1.......44900
         END IF                                                          INDAT1.......45000
         OBSPTS(I)%FRMT = OBSFMT                                         INDAT1.......45100
  690 CONTINUE                                                           INDAT1.......45200
C.....READ ONE MORE LINE TO CHECK FOR THE END-OF-LIST MARKER ('-').      INDAT1.......45300
C        IF NOT FOUND, GENERATE ERROR.                                   INDAT1.......45400
      CALL READIF(K1, 0, INTFIL, ERRCOD)                                 INDAT1.......45500
      READ(INTFIL,*,IOSTAT=INERR(1)) OBSNAM                              INDAT1.......45600
      IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)        INDAT1.......45700
      IF (OBSNAM.NE.'-') THEN                                            INDAT1.......45800
         ERRCOD = 'INP-8D-4'                                             INDAT1.......45900
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        INDAT1.......46000
      END IF                                                             INDAT1.......46100
C                                                                        INDAT1.......46200
C.....CONDENSE SCHEDULE AND FILE TYPE INFORMATION FROM OBSDAT INTO       INDAT1.......46300
C        ARRAY OFP, CHECKING FOR UNDEFINED SCHEDULES                     INDAT1.......46400
  820 ALLOCATE (OFP(NSCH*2))                                             INDAT1.......46500
      CMVDIM = CMVDIM + 3*(NSCH*2)                                       INDAT1.......46600
      IMVDIM = IMVDIM + NSCH*2                                           INDAT1.......46700
      IF (ISSTRA.EQ.1) THEN                                              INDAT1.......46800
         NFLOMX=0                                                        INDAT1.......46900
         DO 840 I=1,NOBS                                                 INDAT1.......47000
            DO 835 J=1,NFLOMX                                            INDAT1.......47100
               IF (OBSPTS(I)%FRMT.EQ.OFP(J)%FRMT) GOTO 840               INDAT1.......47200
  835       CONTINUE                                                     INDAT1.......47300
            NFLOMX = NFLOMX + 1                                          INDAT1.......47400
            OFP(NFLOMX)%ISCHED = 2                                       INDAT1.......47500
            OFP(NFLOMX)%FRMT = OBSPTS(I)%FRMT                            INDAT1.......47600
  840    CONTINUE                                                        INDAT1.......47700
      ELSE                                                               INDAT1.......47800
         NFLOMX = 0                                                      INDAT1.......47900
         DO 860 I=1,NOBS                                                 INDAT1.......48000
            DO 850 NS=1,NSCH                                             INDAT1.......48100
               IF (OBSPTS(I)%SCHED.EQ.SCHDLS(NS)%NAME) THEN              INDAT1.......48200
                  INS = NS                                               INDAT1.......48300
                  GOTO 852                                               INDAT1.......48400
               END IF                                                    INDAT1.......48500
  850       CONTINUE                                                     INDAT1.......48600
            ERRCOD = 'INP-8D-5'                                          INDAT1.......48700
            CHERR(1) = OBSPTS(I)%SCHED                                   INDAT1.......48800
            CHERR(2) = OBSPTS(I)%NAME                                    INDAT1.......48900
            CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                     INDAT1.......49000
  852       DO 855 J=1,NFLOMX                                            INDAT1.......49100
               IF ((OBSPTS(I)%SCHED.EQ.SCHDLS(OFP(J)%ISCHED)%NAME).AND.  INDAT1.......49200
     1             (OBSPTS(I)%FRMT.EQ.OFP(J)%FRMT)) GOTO 860             INDAT1.......49300
  855       CONTINUE                                                     INDAT1.......49400
            NFLOMX = NFLOMX + 1                                          INDAT1.......49500
            OFP(NFLOMX)%ISCHED = INS                                     INDAT1.......49600
            OFP(NFLOMX)%FRMT = OBSPTS(I)%FRMT                            INDAT1.......49700
  860    CONTINUE                                                        INDAT1.......49800
      END IF                                                             INDAT1.......49900
C                                                                        INDAT1.......50000
C.....ASSIGN UNIT NUMBERS AND OPEN FILE UNITS FOR OBSERVATION OUTPUT     INDAT1.......50100
C        FILES.                                                          INDAT1.......50200
      CALL FOPEN()                                                       INDAT1.......50300
C                                                                        INDAT1.......50400
C.....OUTPUT OBSERVATION FILE INFORMATION                                INDAT1.......50500
      IF (ISSTRA.EQ.1) THEN                                              INDAT1.......50600
         WRITE(K3,868) IUNIO(1),FNAMO(1)                                 INDAT1.......50700
  868    FORMAT (//13X,'.OBS AND .OBC FILES'/13X,'-------------------'// INDAT1.......50800
     1      (13X,'UNIT ',I7,4X,'ASSIGNED TO ',A80))                      INDAT1.......50900
         WRITE(K3,869)                                                   INDAT1.......51000
  869    FORMAT (/13X,'NOTE: BECAUSE FLOW AND TRANSPORT ARE STEADY-',    INDAT1.......51100
     1      'STATE, USER-DEFINED SCHEDULES ARE NOT IN EFFECT.  '         INDAT1.......51200
     2      /13X,'STEADY-STATE OBSERVATIONS WILL BE WRITTEN TO THE ',    INDAT1.......51300
     3      'APPROPRIATE OUTPUT FILES.')                                 INDAT1.......51400
      ELSE IF (VERNIN.NE."2.0") THEN                                     INDAT1.......51500
         WRITE(K3,871)                                                   INDAT1.......51600
  871    FORMAT (//13X,'.OBS AND .OBC FILES'/13X,'-------------------'/) INDAT1.......51700
         DO 872 J=1,NFLOMX                                               INDAT1.......51800
            IF (IUNIO(J).NE.-1)                                          INDAT1.......51900
     1         WRITE(K3,873) SCHDLS(OFP(J)%ISCHED)%NAME,OFP(J)%FRMT,     INDAT1.......52000
     1            IUNIO(J),FNAMO(J)                                      INDAT1.......52100
  872    END DO                                                          INDAT1.......52200
  873    FORMAT (13X,'SCHEDULE ',A,', FORMAT ',A,', UNIT ',I7,4X,        INDAT1.......52300
     1      'ASSIGNED TO ',A80)                                          INDAT1.......52400
       ELSE                                                              INDAT1.......52500
         WRITE(K3,868) IUNIO(1),FNAMO(1)                                 INDAT1.......52600
         WRITE(K3,875) NOBCYC, SCHDLS(2)%LLEN                            INDAT1.......52700
  875    FORMAT (/13X,'NOTE: OBSERVATION OUTPUT CYCLING ',               INDAT1.......52800
     1      'INFORMATION WAS ENTERED USING THE OLD (VERSION 2D3D.1) '    INDAT1.......52900
     2      'INPUT FORMAT.'/13X,'OBSERVATIONS WILL BE MADE EVERY ',I8,   INDAT1.......53000
     3      ' TIME STEPS, AS WELL AS ON THE FIRST AND LAST TIME STEP,'   INDAT1.......53100
     4      /13X,'FOR A TOTAL OF ',I8,' TIME STEPS.')                    INDAT1.......53200
      END IF                                                             INDAT1.......53300
C                                                                        INDAT1.......53400
C.....OUTPUT GENERALIZED OBSERVATION POINT INFORMATION.                  INDAT1.......53500
      WRITE(K3,982)                                                      INDAT1.......53600
  982 FORMAT(////11X,'O B S E R V A T I O N   P O I N T S')              INDAT1.......53700
C.....3D PROBLEM.                                                        INDAT1.......53800
      IF (KTYPE(1).EQ.3) THEN                                            INDAT1.......53900
C........WRITE HEADER.                                                   INDAT1.......54000
         WRITE(K3,987)                                                   INDAT1.......54100
  987    FORMAT(                                                         INDAT1.......54200
     1        //13X,'NAME',42X,'COORDINATES',37X,'SCHEDULE',4X,'FORMAT'  INDAT1.......54300
     2         /13X,'----',42X,'-----------',37X,'--------',4X,'------') INDAT1.......54400
C........PRINT INFORMATION FOR EACH POINT.  IF POINTS WERE CONVERTED     INDAT1.......54500
C           FROM NODES, COORDINATES HAVE YET TO BE READ IN, SO PUT IN    INDAT1.......54600
C           A PLACEHOLDER.                                               INDAT1.......54700
         IF (NOBCYC.NE.-1) THEN                                          INDAT1.......54800
            DO 989 JJ=1,NOBS                                             INDAT1.......54900
               LTOP = LEN_TRIM(OBSPTS(JJ)%NAME)                          INDAT1.......55000
               IF (ISSTRA.EQ.1) THEN                                     INDAT1.......55100
                  OBSSCH = '-'                                           INDAT1.......55200
               ELSE                                                      INDAT1.......55300
                  OBSSCH = OBSPTS(JJ)%SCHED                              INDAT1.......55400
               END IF                                                    INDAT1.......55500
               WRITE(K3,988) TRIM(OBSPTS(JJ)%NAME),DOTS45(1:43-LTOP),    INDAT1.......55600
     1            OBSSCH,OBSPTS(JJ)%FRMT                                 INDAT1.......55700
  988          FORMAT(13X,A,1X,A,1X,                                     INDAT1.......55800
     1            '( _______ TO BE READ FROM DATASET 14 _______ )',      INDAT1.......55900
     2            3X,A,2X,A)                                             INDAT1.......56000
  989       CONTINUE                                                     INDAT1.......56100
         ELSE                                                            INDAT1.......56200
            DO 991 JJ=1,NOBS                                             INDAT1.......56300
               LTOP = LEN_TRIM(OBSPTS(JJ)%NAME)                          INDAT1.......56400
               IF (ISSTRA.EQ.1) THEN                                     INDAT1.......56500
                  OBSSCH = '-'                                           INDAT1.......56600
               ELSE                                                      INDAT1.......56700
                  OBSSCH = OBSPTS(JJ)%SCHED                              INDAT1.......56800
               END IF                                                    INDAT1.......56900
               WRITE(K3,990) TRIM(OBSPTS(JJ)%NAME),DOTS45(1:43-LTOP),    INDAT1.......57000
     1            OBSPTS(JJ)%X,OBSPTS(JJ)%Y,OBSPTS(JJ)%Z,                INDAT1.......57100
     2            OBSSCH,OBSPTS(JJ)%FRMT                                 INDAT1.......57200
  990          FORMAT(13X,A,1X,A,1X,'(',2(1PE14.7,','),1PE14.7,')',      INDAT1.......57300
     1            3X,A,2X,A)                                             INDAT1.......57400
  991       CONTINUE                                                     INDAT1.......57500
         END IF                                                          INDAT1.......57600
C.....2D PROBLEM.                                                        INDAT1.......57700
      ELSE                                                               INDAT1.......57800
C........WRITE HEADER.                                                   INDAT1.......57900
         WRITE(K3,993)                                                   INDAT1.......58000
  993    FORMAT(                                                         INDAT1.......58100
     1        //13X,'NAME',42X,'COORDINATES',22X,'SCHEDULE',4X,'FORMAT'  INDAT1.......58200
     2         /13X,'----',42X,'-----------',22X,'--------',4X,'------') INDAT1.......58300
C........PRINT INFORMATION FOR EACH POINT.  IF POINTS WERE CONVERTED     INDAT1.......58400
C           FROM NODES, COORDINATES HAVE YET TO BE READ IN, SO PUT IN    INDAT1.......58500
C           A PLACEHOLDER.                                               INDAT1.......58600
         IF (NOBCYC.NE.-1) THEN                                          INDAT1.......58700
            DO 995 JJ=1,NOBS                                             INDAT1.......58800
               LTOP = LEN_TRIM(OBSPTS(JJ)%NAME)                          INDAT1.......58900
               IF (ISSTRA.EQ.1) THEN                                     INDAT1.......59000
                  OBSSCH = '-'                                           INDAT1.......59100
               ELSE                                                      INDAT1.......59200
                  OBSSCH = OBSPTS(JJ)%SCHED                              INDAT1.......59300
               END IF                                                    INDAT1.......59400
               WRITE(K3,994) TRIM(OBSPTS(JJ)%NAME),DOTS45(1:43-LTOP),    INDAT1.......59500
     1            OBSSCH,OBSPTS(JJ)%FRMT                                 INDAT1.......59600
  994          FORMAT(13X,A,1X,A,1X,'( TO BE READ FROM DATASET 14  )',   INDAT1.......59700
     1            3X,A,2X,A)                                             INDAT1.......59800
  995       CONTINUE                                                     INDAT1.......59900
         ELSE                                                            INDAT1.......60000
            DO 997 JJ=1,NOBS                                             INDAT1.......60100
               LTOP = LEN_TRIM(OBSPTS(JJ)%NAME)                          INDAT1.......60200
               IF (ISSTRA.EQ.1) THEN                                     INDAT1.......60300
                  OBSSCH = '-'                                           INDAT1.......60400
               ELSE                                                      INDAT1.......60500
                  OBSSCH = OBSPTS(JJ)%SCHED                              INDAT1.......60600
               END IF                                                    INDAT1.......60700
               WRITE(K3,996) TRIM(OBSPTS(JJ)%NAME),DOTS45(1:43-LTOP),    INDAT1.......60800
     1            OBSPTS(JJ)%X,OBSPTS(JJ)%Y,                             INDAT1.......60900
     2            OBSSCH,OBSPTS(JJ)%FRMT                                 INDAT1.......61000
  996          FORMAT(13X,A,1X,A,1X,'(',1PE14.7,',',1PE14.7,')',         INDAT1.......61100
     1            3X,A,2X,A)                                             INDAT1.......61200
  997       CONTINUE                                                     INDAT1.......61300
         END IF                                                          INDAT1.......61400
      END IF                                                             INDAT1.......61500
  999 CONTINUE                                                           INDAT1.......61600
C                                                                        INDAT1.......61700
C.....INPUT DATASET 8E:  OUTPUT CONTROLS AND OPTIONS FOR BCOF, BCOP,     INDAT1.......61800
C        BCOS, AND BCOU FILES                                            INDAT1.......61900
      IF ((VERNIN.EQ.'2.0').OR.(VERNIN.EQ.'2.1')) THEN                   INDAT1.......62000
         NBCFPR = HUGE(1)                                                INDAT1.......62100
         NBCSPR = HUGE(1)                                                INDAT1.......62200
         NBCPPR = HUGE(1)                                                INDAT1.......62300
         NBCUPR = HUGE(1)                                                INDAT1.......62400
         NBGPPR = HUGE(1)                                                INDAT1.......62500
         NBGUPR = HUGE(1)                                                INDAT1.......62600
C........CINACT IS IRRELEVANT IN THIS CASE                               INDAT1.......62700
         GOTO 1100                                                       INDAT1.......62800
      END IF                                                             INDAT1.......62900
      ERRCOD = 'REA-INP-8E'                                              INDAT1.......63000
      CALL READIF(K1, 0, INTFIL, ERRCOD)                                 INDAT1.......63100
      IF ((VERNIN.EQ.'2.0').OR.(VERNIN.EQ.'2.1').OR.                     INDAT1.......63200
     1    (VERNIN.EQ.'2.2')) THEN                                        INDAT1.......63300
         READ(INTFIL,*,IOSTAT=INERR(1)) NBCFPR, NBCSPR, NBCPPR, NBCUPR,  INDAT1.......63400
     1      CINACT                                                       INDAT1.......63500
         NBGPPR = ITMAX                                                  INDAT1.......63600
         NBGUPR = ITMAX                                                  INDAT1.......63700
      ELSE                                                               INDAT1.......63800
         READ(INTFIL,*,IOSTAT=INERR(1)) NBCFPR, NBCSPR, NBCPPR, NBCUPR,  INDAT1.......63900
     1      NBGPPR, NBGUPR, CINACT                                       INDAT1.......64000
      END IF                                                             INDAT1.......64100
      IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)        INDAT1.......64200
      IF (CINACT.EQ.'Y') THEN                                            INDAT1.......64300
         KINACT = +1                                                     INDAT1.......64400
      ELSE IF (CINACT.EQ.'N') THEN                                       INDAT1.......64500
         KINACT = 0                                                      INDAT1.......64600
      ELSE                                                               INDAT1.......64700
         ERRCOD = 'INP-8E-1'                                             INDAT1.......64800
         CHERR(1) = 'CINACT'                                             INDAT1.......64900
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        INDAT1.......65000
      END IF                                                             INDAT1.......65100
      IF (ME.EQ.-1) THEN                                                 INDAT1.......65200
         WRITE(K3,1050) NBCFPR, NBCSPR, NBCPPR, NBCUPR,                  INDAT1.......65300
     1      NBGPPR, NBGUPR                                               INDAT1.......65400
 1050    FORMAT(//13X,'.BCOF, .BCOS, .BCOP, .BCOU, .BCOPG, AND ',        INDAT1.......65500
     1           '.BCOUG FILES'/13X,52('-')                              INDAT1.......65600
     2      //13X,I8,3X,'PRINTED OUTPUT CYCLE FOR FLUID SOURCES/SINK ',  INDAT1.......65700
     3        'NODES TO .BCOF FILE (IN TIME STEPS)'                      INDAT1.......65800
     4       /13X,I8,3X,'PRINTED OUTPUT CYCLE FOR SOLUTE ',              INDAT1.......65900
     5        'SOURCES/SINK NODES TO .BCOS FILE (IN TIME STEPS)'         INDAT1.......66000
     6       /13X,I8,3X,'PRINTED OUTPUT CYCLE FOR SPECIFIED PRESSURE ',  INDAT1.......66100
     7        'NODES TO .BCOP FILE (IN TIME STEPS)'                      INDAT1.......66200
     8       /13X,I8,3X,'PRINTED OUTPUT CYCLE FOR SPECIFIED ',           INDAT1.......66300
     9        'CONCENTRATION NODES TO .BCOU FILE (IN TIME STEPS)'        INDAT1.......66400
     1       /13X,I8,3X,'PRINTED OUTPUT CYCLE FOR GENERALIZED ',         INDAT1.......66500
     2        'FLOW NODES TO .BCOPG FILE (IN TIME STEPS)'                INDAT1.......66600
     3       /13X,I8,3X,'PRINTED OUTPUT CYCLE FOR GENERALIZED ',         INDAT1.......66700
     4        'TRANSPORT NODES TO .BCOUG FILE (IN TIME STEPS)')          INDAT1.......66800
      ELSE                                                               INDAT1.......66900
         WRITE(K3,1051) NBCFPR, NBCSPR, NBCPPR, NBCUPR,                  INDAT1.......67000
     1      NBGPPR, NBGUPR                                               INDAT1.......67100
 1051    FORMAT(//13X,'.BCOF, .BCOS, .BCOP, .BCOU, .BCOPG, AND ',        INDAT1.......67200
     1           '.BCOUG FILES'/13X,52('-')                              INDAT1.......67300
     2      //13X,I8,3X,'PRINTED OUTPUT CYCLE FOR FLUID SOURCES/SINK ',  INDAT1.......67400
     3        'NODES TO .BCOF FILE (IN TIME STEPS)'                      INDAT1.......67500
     4       /13X,I8,3X,'PRINTED OUTPUT CYCLE FOR ENERGY ',              INDAT1.......67600
     5        'SOURCES/SINK NODES TO .BCOS FILE (IN TIME STEPS)'         INDAT1.......67700
     6       /13X,I8,3X,'PRINTED OUTPUT CYCLE FOR SPECIFIED PRESSURE ',  INDAT1.......67800
     7        'NODES TO .BCOP FILE (IN TIME STEPS)'                      INDAT1.......67900
     8       /13X,I8,3X,'PRINTED OUTPUT CYCLE FOR SPECIFIED ',           INDAT1.......68000
     9        'TEMPERATURE NODES TO .BCOU FILE (IN TIME STEPS)'          INDAT1.......68100
     1       /13X,I8,3X,'PRINTED OUTPUT CYCLE FOR GENERALIZED ',         INDAT1.......68200
     2        'FLOW NODES TO .BCOPG FILE (IN TIME STEPS)'                INDAT1.......68300
     3       /13X,I8,3X,'PRINTED OUTPUT CYCLE FOR GENERALIZED ',         INDAT1.......68400
     4        'TRANSPORT NODES TO .BCOUG FILE (IN TIME STEPS)')          INDAT1.......68500
      END IF                                                             INDAT1.......68600
      IF(KINACT.EQ.+1) WRITE(K3,1052)                                    INDAT1.......68700
      IF(KINACT.EQ.0) WRITE(K3,1053)                                     INDAT1.......68800
 1052 FORMAT(/13X,'- PRINT INACTIVE BOUNDARY CONDITIONS')                INDAT1.......68900
 1053 FORMAT(/13X,'- CANCEL PRINT OF INACTIVE BOUNDARY CONDITIONS')      INDAT1.......69000
C                                                                        INDAT1.......69100
C.....INPUT DATASET 9:  FLUID PROPERTIES                                 INDAT1.......69200
 1100 ERRCOD = 'REA-INP-9'                                               INDAT1.......69300
      CALL READIF(K1, 0, INTFIL, ERRCOD)                                 INDAT1.......69400
      READ(INTFIL,*,IOSTAT=INERR(1)) COMPFL,CW,SIGMAW,RHOW0,URHOW0,      INDAT1.......69500
     1   DRWDU,VISC0                                                     INDAT1.......69600
      IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)        INDAT1.......69700
C.....INPUT DATASET 10:  SOLID MATRIX PROPERTIES                         INDAT1.......69800
      ERRCOD = 'REA-INP-10'                                              INDAT1.......69900
      CALL READIF(K1, 0, INTFIL, ERRCOD)                                 INDAT1.......70000
      READ(INTFIL,*,IOSTAT=INERR(1)) COMPMA,CS,SIGMAS,RHOS               INDAT1.......70100
      IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)        INDAT1.......70200
      IF(ME.EQ.+1)                                                       INDAT1.......70300
     1  WRITE(K3,1210) COMPFL,COMPMA,CW,CS,VISC0,RHOS,RHOW0,DRWDU,       INDAT1.......70400
     2     URHOW0,SIGMAW,SIGMAS                                          INDAT1.......70500
 1210 FORMAT('1'////11X,'C O N S T A N T   P R O P E R T I E S   O F',   INDAT1.......70600
     1   '   F L U I D   A N D   S O L I D   M A T R I X'                INDAT1.......70700
     2   //11X,1PE15.4,5X,'COMPRESSIBILITY OF FLUID'/11X,1PE15.4,5X,     INDAT1.......70800
     3   'COMPRESSIBILITY OF POROUS MATRIX'//11X,1PE15.4,5X,             INDAT1.......70900
     4   'SPECIFIC HEAT CAPACITY OF FLUID',/11X,1PE15.4,5X,              INDAT1.......71000
     5   'SPECIFIC HEAT CAPACITY OF SOLID GRAIN'//13X,'FLUID VISCOSITY', INDAT1.......71100
     6   ' IS CALCULATED BY SUTRA AS A FUNCTION OF TEMPERATURE IN ',     INDAT1.......71200
     7   'UNITS OF {kg/(m*s)}'//11X,1PE15.4,5X,'VISC0, CONVERSION ',     INDAT1.......71300
     8   'FACTOR FOR VISCOSITY UNITS,  {desired units} = VISC0*',        INDAT1.......71400
     9   '{kg/(m*s)}'//11X,1PE15.4,5X,'DENSITY OF A SOLID GRAIN'         INDAT1.......71500
     *   //13X,'FLUID DENSITY, RHOW'/13X,'CALCULATED BY ',               INDAT1.......71600
     1   'SUTRA IN TERMS OF TEMPERATURE, U, AS:'/13X,'RHOW = RHOW0 + ',  INDAT1.......71700
     2   'DRWDU*(U-URHOW0)'//11X,1PE15.4,5X,'FLUID BASE DENSITY, RHOW0'  INDAT1.......71800
     3   /11X,1PE15.4,5X,'COEFFICIENT OF DENSITY CHANGE WITH ',          INDAT1.......71900
     4   'TEMPERATURE, DRWDU'/11X,1PE15.4,5X,'TEMPERATURE, URHOW0, ',    INDAT1.......72000
     5   'AT WHICH FLUID DENSITY IS AT BASE VALUE, RHOW0'                INDAT1.......72100
     6   //11X,1PE15.4,5X,'THERMAL CONDUCTIVITY OF FLUID'                INDAT1.......72200
     7   /11X,1PE15.4,5X,'THERMAL CONDUCTIVITY OF SOLID GRAIN')          INDAT1.......72300
      IF(ME.EQ.-1)                                                       INDAT1.......72400
     1  WRITE(K3,1220) COMPFL,COMPMA,VISC0,RHOS,RHOW0,DRWDU,             INDAT1.......72500
     2     URHOW0,SIGMAW                                                 INDAT1.......72600
 1220 FORMAT('1'////11X,'C O N S T A N T   P R O P E R T I E S   O F',   INDAT1.......72700
     1   '   F L U I D   A N D   S O L I D   M A T R I X'                INDAT1.......72800
     2   //11X,1PE15.4,5X,'COMPRESSIBILITY OF FLUID'/11X,1PE15.4,5X,     INDAT1.......72900
     3   'COMPRESSIBILITY OF POROUS MATRIX'                              INDAT1.......73000
     4   //11X,1PE15.4,5X,'FLUID VISCOSITY'                              INDAT1.......73100
     4   //11X,1PE15.4,5X,'DENSITY OF A SOLID GRAIN'                     INDAT1.......73200
     5   //13X,'FLUID DENSITY, RHOW'/13X,'CALCULATED BY ',               INDAT1.......73300
     6   'SUTRA IN TERMS OF SOLUTE CONCENTRATION, U, AS:',               INDAT1.......73400
     7   /13X,'RHOW = RHOW0 + DRWDU*(U-URHOW0)'                          INDAT1.......73500
     8   //11X,1PE15.4,5X,'FLUID BASE DENSITY, RHOW0'                    INDAT1.......73600
     9   /11X,1PE15.4,5X,'COEFFICIENT OF DENSITY CHANGE WITH ',          INDAT1.......73700
     *   'SOLUTE CONCENTRATION, DRWDU'                                   INDAT1.......73800
     1   /11X,1PE15.4,5X,'SOLUTE CONCENTRATION, URHOW0, ',               INDAT1.......73900
     4   'AT WHICH FLUID DENSITY IS AT BASE VALUE, RHOW0'                INDAT1.......74000
     5   //11X,1PE15.4,5X,'MOLECULAR DIFFUSIVITY OF SOLUTE IN FLUID')    INDAT1.......74100
C                                                                        INDAT1.......74200
C.....INPUT DATASET 11:  ADSORPTION PARAMETERS                           INDAT1.......74300
      ERRCOD = 'REA-INP-11'                                              INDAT1.......74400
      CALL READIF(K1, 0, INTFIL, ERRCOD)                                 INDAT1.......74500
      READ(INTFIL,*,IOSTAT=INERR(1)) ADSMOD                              INDAT1.......74600
      IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)        INDAT1.......74700
      ADSMOD1 = ADSMOD                                                   INDAT1.......74800
      IF (ADSMOD.NE.'NONE      ') THEN                                   INDAT1.......74900
         READ(INTFIL,*,IOSTAT=INERR(1)) ADSMOD,CHI1,CHI2                 INDAT1.......75000
         CHI11(1) = CHI1                                                 INDAT1.......75100
         CHI21(1) = CHI2                                                 INDAT1.......75200
         IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)     INDAT1.......75300
      END IF                                                             INDAT1.......75400
      IF(ME.EQ.+1) GOTO 1368                                             INDAT1.......75500
      IF(ADSMOD.EQ.'NONE      ') GOTO 1234                               INDAT1.......75600
      WRITE(K3,1232) ADSMOD                                              INDAT1.......75700
 1232 FORMAT(////11X,'A D S O R P T I O N   P A R A M E T E R S'         INDAT1.......75800
     1   //16X,A10,5X,'EQUILIBRIUM SORPTION ISOTHERM')                   INDAT1.......75900
      GOTO 1236                                                          INDAT1.......76000
 1234 WRITE(K3,1235)                                                     INDAT1.......76100
 1235 FORMAT(////11X,'A D S O R P T I O N   P A R A M E T E R S'         INDAT1.......76200
     1   //16X,'NON-SORBING SOLUTE')                                     INDAT1.......76300
 1236 IF((ADSMOD.EQ.'NONE      ').OR.(ADSMOD.EQ.'LINEAR    ').OR.        INDAT1.......76400
     1   (ADSMOD.EQ.'FREUNDLICH').OR.(ADSMOD.EQ.'LANGMUIR  ')) GOTO 1238 INDAT1.......76500
      ERRCOD = 'INP-11-1'                                                INDAT1.......76600
      CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                           INDAT1.......76700
 1238 IF(ADSMOD.EQ.'LINEAR    ') WRITE(K3,1242) CHI1                     INDAT1.......76800
 1242 FORMAT(11X,1PE15.4,5X,'LINEAR DISTRIBUTION COEFFICIENT')           INDAT1.......76900
      IF(ADSMOD.EQ.'FREUNDLICH') WRITE(K3,1244) CHI1,CHI2                INDAT1.......77000
 1244 FORMAT(11X,1PE15.4,5X,'FREUNDLICH DISTRIBUTION COEFFICIENT'        INDAT1.......77100
     1   /11X,1PE15.4,5X,'SECOND FREUNDLICH COEFFICIENT')                INDAT1.......77200
      IF(ADSMOD.EQ.'FREUNDLICH'.AND.CHI2.LE.0.D0) THEN                   INDAT1.......77300
         ERRCOD = 'INP-11-2'                                             INDAT1.......77400
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        INDAT1.......77500
      ENDIF                                                              INDAT1.......77600
      IF(ADSMOD.EQ.'LANGMUIR  ') WRITE(K3,1246) CHI1,CHI2                INDAT1.......77700
 1246 FORMAT(11X,1PE15.4,5X,'LANGMUIR DISTRIBUTION COEFFICIENT'          INDAT1.......77800
     1   /11X,1PE15.4,5X,'SECOND LANGMUIR COEFFICIENT')                  INDAT1.......77900
C                                                                        INDAT1.......78000
C.....INPUT DATASET 12:  PRODUCTION OF ENERGY OR SOLUTE MASS             INDAT1.......78100
 1368 ERRCOD = 'REA-INP-12'                                              INDAT1.......78200
      CALL READIF(K1, 0, INTFIL, ERRCOD)                                 INDAT1.......78300
      READ(INTFIL,*,IOSTAT=INERR(1)) PRODF0,PRODS0,PRODF1,PRODS1         INDAT1.......78400
      IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)        INDAT1.......78500
      IF(ME.EQ.-1) WRITE(K3,1369) PRODF0,PRODS0,PRODF1,PRODS1            INDAT1.......78600
 1369 FORMAT(////11X,'P R O D U C T I O N   A N D   D E C A Y   O F   ', INDAT1.......78700
     1   'S P E C I E S   M A S S'//13X,'PRODUCTION RATE (+)'/13X,       INDAT1.......78800
     2   'DECAY RATE (-)'//11X,1PE15.4,5X,'ZERO-ORDER RATE OF SOLUTE ',  INDAT1.......78900
     3   'MASS PRODUCTION/DECAY IN FLUID'/11X,1PE15.4,5X,                INDAT1.......79000
     4   'ZERO-ORDER RATE OF ADSORBATE MASS PRODUCTION/DECAY IN ',       INDAT1.......79100
     5   'IMMOBILE PHASE'/11X,1PE15.4,5X,'FIRST-ORDER RATE OF SOLUTE ',  INDAT1.......79200
     3   'MASS PRODUCTION/DECAY IN FLUID'/11X,1PE15.4,5X,                INDAT1.......79300
     4   'FIRST-ORDER RATE OF ADSORBATE MASS PRODUCTION/DECAY IN ',      INDAT1.......79400
     5   'IMMOBILE PHASE')                                               INDAT1.......79500
      IF(ME.EQ.+1) WRITE(K3,1370) PRODF0,PRODS0                          INDAT1.......79600
 1370 FORMAT(////11X,'P R O D U C T I O N   A N D   L O S S   O F   ',   INDAT1.......79700
     1   'E N E R G Y'//13X,'PRODUCTION RATE (+)'/13X,                   INDAT1.......79800
     2   'LOSS RATE (-)'//11X,1PE15.4,5X,'ZERO-ORDER RATE OF ENERGY ',   INDAT1.......79900
     3   'PRODUCTION/LOSS IN FLUID'/11X,1PE15.4,5X,                      INDAT1.......80000
     4   'ZERO-ORDER RATE OF ENERGY PRODUCTION/LOSS IN ',                INDAT1.......80100
     5   'SOLID GRAINS')                                                 INDAT1.......80200
C.....SET PARAMETER SWITCHES FOR EITHER ENERGY OR SOLUTE TRANSPORT       INDAT1.......80300
      IF(ME) 1372,1372,1374                                              INDAT1.......80400
C     FOR SOLUTE TRANSPORT:                                              INDAT1.......80500
 1372 CS=0.0D0                                                           INDAT1.......80600
      CW=1.D00                                                           INDAT1.......80700
      SIGMAS=0.0D0                                                       INDAT1.......80800
      GOTO 1378                                                          INDAT1.......80900
C     FOR ENERGY TRANSPORT:                                              INDAT1.......81000
 1374 ADSMOD='NONE      '                                                INDAT1.......81100
C      CHI1=0.0D0                                                        INDAT1.......81200
C      CHI2=0.0D0                                                        INDAT1.......81300
      PRODF1=0.0D0                                                       INDAT1.......81400
      PRODS1=0.0D0                                                       INDAT1.......81500
 1378 CONTINUE                                                           INDAT1.......81600
C                                                                        INDAT1.......81700
      IF (KTYPE(1).EQ.3) THEN                                            INDAT1.......81800
C.....READ 3D INPUT FROM DATASETS 13 - 15.                               INDAT1.......81900
C                                                                        INDAT1.......82000
C.....INPUT DATASET 13:  ORIENTATION OF COORDINATES TO GRAVITY           INDAT1.......82100
      ERRCOD = 'REA-INP-13'                                              INDAT1.......82200
      CALL READIF(K1, 0, INTFIL, ERRCOD)                                 INDAT1.......82300
      READ(INTFIL,*,IOSTAT=INERR(1)) GRAVX,GRAVY,GRAVZ                   INDAT1.......82400
      IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)        INDAT1.......82500
      WRITE(K3,1420) GRAVX,GRAVY,GRAVZ                                   INDAT1.......82600
 1420 FORMAT(////11X,'C O O R D I N A T E   O R I E N T A T I O N   ',   INDAT1.......82700
     1   'T O   G R A V I T Y'//13X,'COMPONENT OF GRAVITY VECTOR',       INDAT1.......82800
     2   /13X,'IN +X DIRECTION, GRAVX'/11X,1PE15.4,5X,                   INDAT1.......82900
     3   'GRAVX = -GRAV * D(ELEVATION)/DX'//13X,'COMPONENT OF GRAVITY',  INDAT1.......83000
     4   ' VECTOR'/13X,'IN +Y DIRECTION, GRAVY'/11X,1PE15.4,5X,          INDAT1.......83100
     5   'GRAVY = -GRAV * D(ELEVATION)/DY'//13X,'COMPONENT OF GRAVITY',  INDAT1.......83200
     6   ' VECTOR'/13X,'IN +Z DIRECTION, GRAVZ'/11X,1PE15.4,5X,          INDAT1.......83300
     7   'GRAVZ = -GRAV * D(ELEVATION)/DZ')                              INDAT1.......83400
C                                                                        INDAT1.......83500
C.....INPUT DATASETS 14A & 14B:  NODEWISE DATA                           INDAT1.......83600
      ERRCOD = 'REA-INP-14A'                                             INDAT1.......83700
      CALL READIF(K1, 0, INTFIL, ERRCOD)                                 INDAT1.......83800
      READ(INTFIL,*,IOSTAT=INERR(1)) CDUM10,SCALX,SCALY,SCALZ,PORFAC     INDAT1.......83900
      IF (ME.EQ.1) CS1F = 1D0                                            INDAT1.......84000
      IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)        INDAT1.......84100
      IF (CDUM10.NE.'NODE      ') THEN                                   INDAT1.......84200
         ERRCOD = 'INP-14A-1'                                            INDAT1.......84300
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        INDAT1.......84400
      END IF                                                             INDAT1.......84500
      NRTEST=1                                                           INDAT1.......84600
      NRMAX = 0                                                          INDAT1.......84700
      NROLD = -99999                                                     INDAT1.......84800
      NRATEST = 1                                                        INDAT1.......84900
      NRAMAX = 0                                                         INDAT1.......85000
      NRAOLD = -99999                                                    INDAT1.......85100
      DO 1450 I=1,NN                                                     INDAT1.......85200
      ERRCOD = 'REA-INP-14B'                                             INDAT1.......85300
      CALL READIF(K1, 0, INTFIL, ERRCOD)                                 INDAT1.......85400
      READ(INTFIL,*,IOSTAT=INERR(1)) II,NREG(II),X(II),Y(II),Z(II),      INDAT1.......85500
     1   POR(II)                                                         INDAT1.......85600
      NREGAD(II) = 1                                                     INDAT1.......85700
      IF (ME.EQ.1) CS1(II) = CS                                          INDAT1.......85800
      IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)        INDAT1.......85900
C.....NREG=0 IS RESET TO NREG=1 FOR BACKWARD COMPATIBILITY.              INDAT1.......86000
      IF (NREG(II).EQ.0) NREG(II) = 1                                    INDAT1.......86100
      IF (NREGAD(II).EQ.0) NREGAD(II) = 1                                INDAT1.......86200
      X(II)=X(II)*SCALX                                                  INDAT1.......86300
      Y(II)=Y(II)*SCALY                                                  INDAT1.......86400
      Z(II)=Z(II)*SCALZ                                                  INDAT1.......86500
      POR(II)=POR(II)*PORFAC                                             INDAT1.......86600
      IF (ME.EQ.1) CS1(II)=CS1(II)*CS1F                                  INDAT1.......86700
      IF(I.GT.1.AND.NREG(II).NE.NROLD) NRTEST=NRTEST+1                   INDAT1.......86800
      NRMAX = MAX(NRMAX,NREG(II))                                        INDAT1.......86900
      NROLD=NREG(II)                                                     INDAT1.......87000
      IF(I.GT.1.AND.NREGAD(II).NE.NRAOLD) NRATEST=NRATEST+1              INDAT1.......87100
      NRAMAX = MAX(NRAMAX,NREGAD(II))                                    INDAT1.......87200
      NRAOLD=NREGAD(II)                                                  INDAT1.......87300
C.....SET SPECIFIC PRESSURE STORATIVITY, SOP.                            INDAT1.......87400
 1450 SOP(II)=(1.D0-POR(II))*COMPMA+POR(II)*COMPFL                       INDAT1.......87500
      IF (NRMAX.GT.10) THEN                                              INDAT1.......87600
         ERRCOD = 'INP-14B-1'                                            INDAT1.......87700
         INERR(1) = II                                                   INDAT1.......87800
         INERR(2) = NRMAX                                                INDAT1.......87900
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        INDAT1.......88000
      END IF                                                             INDAT1.......88100
      IF (NRAMAX.GT.10) THEN                                             INDAT1.......88200
         ERRCOD = 'INP-14B-3'                                            INDAT1.......88300
         INERR(1) = II                                                   INDAT1.......88400
         INERR(2) = NRAMAX                                               INDAT1.......88500
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        INDAT1.......88600
      ELSE IF ((ADSMOD.NE."NONE").AND.(ADSMOD1(NRAMAX).EQ."NULL")) THEN  INDAT1.......88700
         ERRCOD = 'INP-14B-4'                                            INDAT1.......88800
         INERR(1) = II                                                   INDAT1.......88900
         INERR(2) = NRAMAX                                               INDAT1.......89000
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        INDAT1.......89100
      END IF                                                             INDAT1.......89200
 1460 IF(KNODAL.EQ.0) WRITE(K3,1461) SCALX,SCALY,SCALZ,PORFAC            INDAT1.......89300
 1461 FORMAT('1'////11X,'N O D E   I N F O R M A T I O N'//16X,          INDAT1.......89400
     1   'PRINTOUT OF NODE COORDINATES AND POROSITIES ',                 INDAT1.......89500
     2   'CANCELLED.'//16X,'SCALE FACTORS :'/33X,1PE15.4,5X,'X-SCALE'/   INDAT1.......89600
     3   33X,1PE15.4,5X,'Y-SCALE'/33X,1PE15.4,5X,'Z-SCALE'/              INDAT1.......89700
     4   33X,1PE15.4,5X,'POROSITY FACTOR')                               INDAT1.......89800
      IF(IUNSAT.EQ.1.AND.KNODAL.EQ.0.AND.NRTEST.NE.1) WRITE(K3,1463)     INDAT1.......89900
      IF(IUNSAT.EQ.1.AND.KNODAL.EQ.0.AND.NRTEST.EQ.1) WRITE(K3,1465)     INDAT1.......90000
 1463 FORMAT(33X,'MORE THAN ONE REGION OF UNSATURATED PROPERTIES HAS ',  INDAT1.......90100
     1   'BEEN SPECIFIED AMONG THE NODES.')                              INDAT1.......90200
 1465 FORMAT(33X,'ONLY ONE REGION OF UNSATURATED PROPERTIES HAS ',       INDAT1.......90300
     1   'BEEN SPECIFIED AMONG THE NODES.')                              INDAT1.......90400
      IF(KNODAL.EQ.+1.AND.IUNSAT.NE.1)                                   INDAT1.......90500
     1   WRITE(K3,1470)(I,X(I),Y(I),Z(I),POR(I),I=1,NN)                  INDAT1.......90600
 1470 FORMAT('1'//11X,'N O D E   I N F O R M A T I O N'//14X,            INDAT1.......90700
     1   'NODE',7X,'X',16X,'Y',16X,'Z',15X,'POROSITY'//                  INDAT1.......90800
     2   (9X,I9,3(3X,1PE14.5),6X,0PF8.5))                                INDAT1.......90900
      IF(KNODAL.EQ.+1.AND.IUNSAT.EQ.1)                                   INDAT1.......91000
     1   WRITE(K3,1480)(I,NREG(I),X(I),Y(I),Z(I),POR(I),I=1,NN)          INDAT1.......91100
 1480 FORMAT('1'//11X,'N O D E   I N F O R M A T I O N'//14X,'NODE',3X,  INDAT1.......91200
     1   'REGION',7X,'X',16X,'Y',16X,'Z',15X,'POROSITY'//                INDAT1.......91300
     2   (9X,I9,3X,I6,3(3X,1PE14.5),6X,0PF8.5))                          INDAT1.......91400
C                                                                        INDAT1.......91500
C.....INPUT DATASETS 15A & 15B:  ELEMENTWISE DATA                        INDAT1.......91600
      ERRCOD = 'REA-INP-15A'                                             INDAT1.......91700
      CALL READIF(K1, 0, INTFIL, ERRCOD)                                 INDAT1.......91800
      READ(INTFIL,*,IOSTAT=INERR(1)) CDUM10,PMAXFA,PMIDFA,PMINFA,        INDAT1.......91900
     1   ANG1FA,ANG2FA,ANG3FA,ALMAXF,ALMIDF,ALMINF,                      INDAT1.......92000
     1   ATMXF,ATMDF,ATMNF                                               INDAT1.......92100
      IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)        INDAT1.......92200
      IF (CDUM10.NE.'ELEMENT   ') THEN                                   INDAT1.......92300
         ERRCOD = 'INP-15A-1'                                            INDAT1.......92400
         CHERR(1) = '3D'                                                 INDAT1.......92500
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        INDAT1.......92600
      END IF                                                             INDAT1.......92700
      IF(KELMNT.EQ.+1) THEN                                              INDAT1.......92800
         IF (IUNSAT.EQ.1) THEN                                           INDAT1.......92900
            WRITE(K3,1500)                                               INDAT1.......93000
 1500       FORMAT('1'//11X,'E L E M E N T   I N F O R M A T I O N'//    INDAT1.......93100
     1         11X,'ELEMENT',3X,'REGION',4X,                             INDAT1.......93200
     2         'MAXIMUM',9X,'MIDDLE',10X,'MINIMUM',18X,                  INDAT1.......93300
     2         'ANGLE1',9X,'ANGLE2',9X,'ANGLE3',4X,                      INDAT1.......93400
     2         'LONGITUDINAL',3X,'LONGITUDINAL',3X,'LONGITUDINAL',5X,    INDAT1.......93500
     2         'TRANSVERSE',5X,'TRANSVERSE',5X,'TRANSVERSE'/             INDAT1.......93600
     3         31X,'PERMEABILITY',4X,'PERMEABILITY',4X,'PERMEABILITY',   INDAT1.......93700
     4         8X,'(IN DEGREES)',3X,'(IN DEGREES)',3X,'(IN DEGREES)',3X, INDAT1.......93800
     4         'DISPERSIVITY',3X,'DISPERSIVITY',3X,'DISPERSIVITY',3X,    INDAT1.......93900
     4         'DISPERSIVITY',3X,'DISPERSIVITY',3X,'DISPERSIVITY'/       INDAT1.......94000
     4         2(64X),' IN MAX-PERM',3X,' IN MID-PERM',3X,' IN MIN-PERM' INDAT1.......94100
     4         3X,' IN MAX-PERM',3X,' IN MID-PERM',3X,' IN MIN-PERM'/    INDAT1.......94200
     1         2(64X),'   DIRECTION',3X,'   DIRECTION',3X,'   DIRECTION' INDAT1.......94300
     2         3X,'   DIRECTION',3X,'   DIRECTION',3X,'   DIRECTION'/)   INDAT1.......94400
         ELSE                                                            INDAT1.......94500
            WRITE(K3,1502)                                               INDAT1.......94600
 1502       FORMAT('1'//11X,'E L E M E N T   I N F O R M A T I O N'//    INDAT1.......94700
     1         11X,'ELEMENT',4X,                                         INDAT1.......94800
     2         'MAXIMUM',9X,'MIDDLE',10X,'MINIMUM',18X,                  INDAT1.......94900
     2         'ANGLE1',9X,'ANGLE2',9X,'ANGLE3',4X,                      INDAT1.......95000
     2         'LONGITUDINAL',3X,'LONGITUDINAL',3X,'LONGITUDINAL',5X,    INDAT1.......95100
     2         'TRANSVERSE',5X,'TRANSVERSE',5X,'TRANSVERSE'/             INDAT1.......95200
     3         22X,'PERMEABILITY',4X,'PERMEABILITY',4X,'PERMEABILITY',   INDAT1.......95300
     4         8X,'(IN DEGREES)',3X,'(IN DEGREES)',3X,'(IN DEGREES)',3X, INDAT1.......95400
     4         'DISPERSIVITY',3X,'DISPERSIVITY',3X,'DISPERSIVITY',3X,    INDAT1.......95500
     4         'DISPERSIVITY',3X,'DISPERSIVITY',3X,'DISPERSIVITY'/       INDAT1.......95600
     4         119X,' IN MAX-PERM',3X,' IN MID-PERM',3X,' IN MIN-PERM',  INDAT1.......95700
     4         3X,' IN MAX-PERM',3X,' IN MID-PERM',3X,' IN MIN-PERM'/    INDAT1.......95800
     1         119X,'   DIRECTION',3X,'   DIRECTION',3X,'   DIRECTION',  INDAT1.......95900
     2         3X,'   DIRECTION',3X,'   DIRECTION',3X,'   DIRECTION'/)   INDAT1.......96000
         END IF                                                          INDAT1.......96100
      END IF                                                             INDAT1.......96200
      LRTEST=1                                                           INDAT1.......96300
      LRMAX = 0                                                          INDAT1.......96400
      DO 1550 LL=1,NE                                                    INDAT1.......96500
      ERRCOD = 'REA-INP-15B'                                             INDAT1.......96600
      CALL READIF(K1, 0, INTFIL, ERRCOD)                                 INDAT1.......96700
      READ(INTFIL,*,IOSTAT=INERR(1)) L,LREG(L),PMAX,PMID,PMIN,           INDAT1.......96800
     1   ANGLE1,ANGLE2,ANGLE3,ALMAX(L),ALMID(L),ALMIN(L),                INDAT1.......96900
     1   ATMAX(L),ATMID(L),ATMIN(L)                                      INDAT1.......97000
      IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)        INDAT1.......97100
      IF (LREG(L).EQ.0) LREG(L) = 1                                      INDAT1.......97200
      IF(LL.GT.1.AND.LREG(L).NE.LROLD) LRTEST=LRTEST+1                   INDAT1.......97300
      LRMAX = MAX(LRMAX, LREG(L))                                        INDAT1.......97400
      LROLD=LREG(L)                                                      INDAT1.......97500
      PMAX=PMAX*PMAXFA                                                   INDAT1.......97600
      PMID=PMID*PMIDFA                                                   INDAT1.......97700
      PMIN=PMIN*PMINFA                                                   INDAT1.......97800
      ANGLE1=ANGLE1*ANG1FA                                               INDAT1.......97900
      ANGLE2=ANGLE2*ANG2FA                                               INDAT1.......98000
      ANGLE3=ANGLE3*ANG3FA                                               INDAT1.......98100
      ALMAX(L)=ALMAX(L)*ALMAXF                                           INDAT1.......98200
      ALMID(L)=ALMID(L)*ALMIDF                                           INDAT1.......98300
      ALMIN(L)=ALMIN(L)*ALMINF                                           INDAT1.......98400
      ATMAX(L)=ATMAX(L)*ATMXF                                            INDAT1.......98500
      ATMID(L)=ATMID(L)*ATMDF                                            INDAT1.......98600
      ATMIN(L)=ATMIN(L)*ATMNF                                            INDAT1.......98700
      IF(KELMNT.EQ.+1.AND.IUNSAT.NE.1) WRITE(K3,1520) L,                 INDAT1.......98800
     1   PMAX,PMID,PMIN,ANGLE1,ANGLE2,ANGLE3,                            INDAT1.......98900
     2   ALMAX(L),ALMID(L),ALMIN(L),ATMAX(L),ATMID(L),ATMIN(L)           INDAT1.......99000
 1520 FORMAT(9X,I9,2X,3(1PE14.5,2X),7X,9(G11.4,4X))                      INDAT1.......99100
      IF(KELMNT.EQ.+1.AND.IUNSAT.EQ.1) WRITE(K3,1530) L,LREG(L),         INDAT1.......99200
     1   PMAX,PMID,PMIN,ANGLE1,ANGLE2,ANGLE3,                            INDAT1.......99300
     2   ALMAX(L),ALMID(L),ALMIN(L),ATMAX(L),ATMID(L),ATMIN(L)           INDAT1.......99400
 1530 FORMAT(9X,I9,4X,I5,2X,3(1PE14.5,2X),7X,9(G11.4,4X))                INDAT1.......99500
C                                                                        INDAT1.......99600
C.....ROTATE PERMEABILITY FROM MAX/MID/MIN TO X/Y/Z DIRECTIONS.          INDAT1.......99700
C        BASED ON CODE WRITTEN BY DAVID POLLOCK (USGS).                  INDAT1.......99800
      D2R=1.745329252D-2                                                 INDAT1.......99900
      PANGL1(L)=D2R*ANGLE1                                               INDAT1......100000
      PANGL2(L)=D2R*ANGLE2                                               INDAT1......100100
      PANGL3(L)=D2R*ANGLE3                                               INDAT1......100200
      ZERO = 0D0                                                         INDAT1......100300
      CALL ROTMAT(PANGL1(L),PANGL2(L),PANGL3(L),Q11,Q12,Q13,             INDAT1......100400
     1   Q21,Q22,Q23,Q31,Q32,Q33)                                        INDAT1......100500
      CALL TENSYM(PMAX,PMID,PMIN,Q11,Q12,Q13,Q21,Q22,Q23,Q31,Q32,Q33,    INDAT1......100600
     1   PERMXX(L),PERMXY(L),PERMXZ(L),PERMYX(L),PERMYY(L),PERMYZ(L),    INDAT1......100700
     2   PERMZX(L),PERMZY(L),PERMZZ(L))                                  INDAT1......100800
 1550 CONTINUE                                                           INDAT1......100900
      IF(KELMNT.EQ.0)                                                    INDAT1......101000
     1   WRITE(K3,1569) PMAXFA,PMIDFA,PMINFA,ANG1FA,ANG2FA,ANG3FA,       INDAT1......101100
     2      ALMAXF,ALMIDF,ALMINF,ATMXF,ATMDF,ATMNF                       INDAT1......101200
 1569 FORMAT(////11X,'E L E M E N T   I N F O R M A T I O N'//           INDAT1......101300
     1   16X,'PRINTOUT OF ELEMENT PERMEABILITIES AND DISPERSIVITIES ',   INDAT1......101400
     2   'CANCELLED.'//16X,'SCALE FACTORS :'/33X,1PE15.4,5X,'MAXIMUM ',  INDAT1......101500
     3   'PERMEABILITY FACTOR'/33X,1PE15.4,5X,'MIDDLE PERMEABILITY ',    INDAT1......101600
     4   'FACTOR '/33X,1PE15.4,5X,'MINIMUM PERMEABILITY FACTOR'/         INDAT1......101700
     5   33X,1PE15.4,5X,'ANGLE1 FACTOR'/33X,1PE15.4,5X,'ANGLE2 FACTOR'/  INDAT1......101800
     6   33X,1PE15.4,5X,'ANGLE3 FACTOR'/                                 INDAT1......101900
     7   33X,1PE15.4,5X,'FACTOR FOR LONGITUDINAL DISPERSIVITY IN ',      INDAT1......102000
     8   'MAX-PERM DIRECTION'/33X,1PE15.4,5X,'FACTOR FOR LONGITUDINAL ', INDAT1......102100
     9   'DISPERSIVITY IN MID-PERM DIRECTION'/33X,1PE15.4,5X,'FACTOR ',  INDAT1......102200
     T   'FOR LONGITUDINAL DISPERSIVITY IN MIN-PERM DIRECTION'/          INDAT1......102300
     1   33X,1PE15.4,5X,'FACTOR FOR TRANSVERSE DISPERSIVITY IN ',        INDAT1......102400
     2   'MAX-PERM DIRECTION'/33X,1PE15.4,5X,'FACTOR FOR TRANSVERSE ',   INDAT1......102500
     3   'DISPERSIVITY IN MID-PERM DIRECTION'/33X,1PE15.4,5X,'FACTOR',   INDAT1......102600
     4   ' FOR TRANSVERSE DISPERSIVITY IN MIN-PERM DIRECTION')           INDAT1......102700
      IF(IUNSAT.EQ.1.AND.KELMNT.EQ.0.AND.LRTEST.NE.1) WRITE(K3,1573)     INDAT1......102800
      IF(IUNSAT.EQ.1.AND.KELMNT.EQ.0.AND.LRTEST.EQ.1) WRITE(K3,1575)     INDAT1......102900
 1573 FORMAT(/16X,'MORE THAN ONE REGION OF UNSATURATED PROPERTIES HAS ', INDAT1......103000
     1   'BEEN SPECIFIED AMONG THE ELEMENTS.')                           INDAT1......103100
 1575 FORMAT(/16X,'ONLY ONE REGION OF UNSATURATED PROPERTIES HAS ',      INDAT1......103200
     1   'BEEN SPECIFIED AMONG THE ELEMENTS.')                           INDAT1......103300
C                                                                        INDAT1......103400
      ELSE                                                               INDAT1......103500
C.....READ 2D INPUT FROM DATASETS 13 - 15.                               INDAT1......103600
C.....NOTE THAT Z = THICKNESS AND PANGL1 = PANGLE.                       INDAT1......103700
C                                                                        INDAT1......103800
C.....INPUT DATASET 13:  ORIENTATION OF COORDINATES TO GRAVITY           INDAT1......103900
      ERRCOD = 'REA-INP-13'                                              INDAT1......104000
      CALL READIF(K1, 0, INTFIL, ERRCOD)                                 INDAT1......104100
      READ(INTFIL,*,IOSTAT=INERR(1)) GRAVX,GRAVY                         INDAT1......104200
      IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)        INDAT1......104300
      GRAVZ = 0D0                                                        INDAT1......104400
      WRITE(K3,2320) GRAVX,GRAVY                                         INDAT1......104500
 2320 FORMAT(////11X,'C O O R D I N A T E   O R I E N T A T I O N   ',   INDAT1......104600
     1   'T O   G R A V I T Y'//13X,'COMPONENT OF GRAVITY VECTOR',       INDAT1......104700
     2   /13X,'IN +X DIRECTION, GRAVX'/11X,1PE15.4,5X,                   INDAT1......104800
     3   'GRAVX = -GRAV * D(ELEVATION)/DX'//13X,'COMPONENT OF GRAVITY',  INDAT1......104900
     4   ' VECTOR'/13X,'IN +Y DIRECTION, GRAVY'/11X,1PE15.4,5X,          INDAT1......105000
     5   'GRAVY = -GRAV * D(ELEVATION)/DY')                              INDAT1......105100
C                                                                        INDAT1......105200
C.....INPUT DATASETS 14A & 14B:  NODEWISE DATA                           INDAT1......105300
      ERRCOD = 'REA-INP-14A'                                             INDAT1......105400
      CALL READIF(K1, 0, INTFIL, ERRCOD)                                 INDAT1......105500
      READ(INTFIL,*,IOSTAT=INERR(1)) CDUM10,SCALX,SCALY,SCALTH,PORFAC    INDAT1......105600
      IF (ME.EQ.1) CS1F = 1D0                                            INDAT1......105700
      IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)        INDAT1......105800
      IF (CDUM10.NE.'NODE      ') THEN                                   INDAT1......105900
         ERRCOD = 'INP-14A-1'                                            INDAT1......106000
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        INDAT1......106100
      END IF                                                             INDAT1......106200
      NRTEST=1                                                           INDAT1......106300
      NRMAX = 0                                                          INDAT1......106400
      NROLD = -99999                                                     INDAT1......106500
      NRATEST = 1                                                        INDAT1......106600
      NRAMAX = 0                                                         INDAT1......106700
      NRAOLD = -99999                                                    INDAT1......106800
      DO 2450 I=1,NN                                                     INDAT1......106900
      ERRCOD = 'REA-INP-14B'                                             INDAT1......107000
      CALL READIF(K1, 0, INTFIL, ERRCOD)                                 INDAT1......107100
      READ(INTFIL,*,IOSTAT=INERR(1)) II,NREG(II),X(II),Y(II),Z(II),      INDAT1......107200
     1   POR(II)                                                         INDAT1......107300
      NREGAD(II) = 1                                                     INDAT1......107400
      IF (ME.EQ.1) CS1(II) = CS                                          INDAT1......107500
      IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)        INDAT1......107600
C.....NREG=0 IS RESET TO NREG=1 FOR BACKWARD COMPATIBILITY.              INDAT1......107700
      IF (NREG(II).EQ.0) NREG(II) = 1                                    INDAT1......107800
      IF (NREGAD(II).EQ.0) NREGAD(II) = 1                                INDAT1......107900
      X(II)=X(II)*SCALX                                                  INDAT1......108000
      Y(II)=Y(II)*SCALY                                                  INDAT1......108100
      Z(II)=Z(II)*SCALTH                                                 INDAT1......108200
      POR(II)=POR(II)*PORFAC                                             INDAT1......108300
      IF (ME.EQ.1) CS1(II)=CS1(II)*CS1F                                  INDAT1......108400
      IF(I.GT.1.AND.NREG(II).NE.NROLD) NRTEST=NRTEST+1                   INDAT1......108500
      NRMAX = MAX(NRMAX, NREG(II))                                       INDAT1......108600
      NROLD=NREG(II)                                                     INDAT1......108700
      IF(I.GT.1.AND.NREGAD(II).NE.NRAOLD) NRATEST=NRATEST+1              INDAT1......108800
      NRAMAX = MAX(NRAMAX,NREGAD(II))                                    INDAT1......108900
      NRAOLD=NREGAD(II)                                                  INDAT1......109000
C.....SET SPECIFIC PRESSURE STORATIVITY, SOP.                            INDAT1......109100
 2450 SOP(II)=(1.D0-POR(II))*COMPMA+POR(II)*COMPFL                       INDAT1......109200
      IF (NRMAX.GT.10) THEN                                              INDAT1......109300
         ERRCOD = 'INP-14B-1'                                            INDAT1......109400
         INERR(1) = II                                                   INDAT1......109500
         INERR(2) = NRMAX                                                INDAT1......109600
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        INDAT1......109700
      END IF                                                             INDAT1......109800
      IF (NRAMAX.GT.10) THEN                                             INDAT1......109900
         ERRCOD = 'INP-14B-3'                                            INDAT1......110000
         INERR(1) = II                                                   INDAT1......110100
         INERR(2) = NRAMAX                                               INDAT1......110200
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        INDAT1......110300
      ELSE IF ((ADSMOD.NE."NONE").AND.(ADSMOD1(NRAMAX).EQ."NULL")) THEN  INDAT1......110400
         ERRCOD = 'INP-14B-4'                                            INDAT1......110500
         INERR(1) = II                                                   INDAT1......110600
         INERR(2) = NRAMAX                                               INDAT1......110700
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        INDAT1......110800
      END IF                                                             INDAT1......110900
 2460 IF(KNODAL.EQ.0) WRITE(K3,2461) SCALX,SCALY,SCALTH,PORFAC           INDAT1......111000
 2461 FORMAT('1'////11X,'N O D E   I N F O R M A T I O N'//16X,          INDAT1......111100
     1   'PRINTOUT OF NODE COORDINATES, THICKNESSES AND POROSITIES ',    INDAT1......111200
     2   'CANCELLED.'//16X,'SCALE FACTORS :'/33X,1PE15.4,5X,'X-SCALE'/   INDAT1......111300
     1   33X,1PE15.4,5X,'Y-SCALE'/33X,1PE15.4,5X,'THICKNESS FACTOR'/     INDAT1......111400
     2   33X,1PE15.4,5X,'POROSITY FACTOR')                               INDAT1......111500
      IF(IUNSAT.EQ.1.AND.KNODAL.EQ.0.AND.NRTEST.NE.1) WRITE(K3,2463)     INDAT1......111600
      IF(IUNSAT.EQ.1.AND.KNODAL.EQ.0.AND.NRTEST.EQ.1) WRITE(K3,2465)     INDAT1......111700
 2463 FORMAT(33X,'MORE THAN ONE REGION OF UNSATURATED PROPERTIES HAS ',  INDAT1......111800
     1   'BEEN SPECIFIED AMONG THE NODES.')                              INDAT1......111900
 2465 FORMAT(33X,'ONLY ONE REGION OF UNSATURATED PROPERTIES HAS ',       INDAT1......112000
     1   'BEEN SPECIFIED AMONG THE NODES.')                              INDAT1......112100
      IF(KNODAL.EQ.+1.AND.IUNSAT.NE.1)                                   INDAT1......112200
     1   WRITE(K3,2470)(I,X(I),Y(I),Z(I),POR(I),I=1,NN)                  INDAT1......112300
 2470 FORMAT('1'//11X,'N O D E   I N F O R M A T I O N'//14X,            INDAT1......112400
     1   'NODE',7X,'X',16X,'Y',17X,'THICKNESS',6X,'POROSITY'//           INDAT1......112500
     2   (9X,I9,3(3X,1PE14.5),6X,0PF8.5))                                INDAT1......112600
      IF(KNODAL.EQ.+1.AND.IUNSAT.EQ.1)                                   INDAT1......112700
     1   WRITE(K3,2480)(I,NREG(I),X(I),Y(I),Z(I),POR(I),I=1,NN)          INDAT1......112800
 2480 FORMAT('1'//11X,'N O D E   I N F O R M A T I O N'//14X,'NODE',3X,  INDAT1......112900
     1   'REGION',7X,'X',16X,'Y',17X,'THICKNESS',6X,'POROSITY'//         INDAT1......113000
     2   (9X,I9,3X,I6,3(3X,1PE14.5),6X,0PF8.5))                          INDAT1......113100
C                                                                        INDAT1......113200
C.....INPUT DATASETS 15A & 15B:  ELEMENTWISE DATA                        INDAT1......113300
      ERRCOD = 'REA-INP-15A'                                             INDAT1......113400
      CALL READIF(K1, 0, INTFIL, ERRCOD)                                 INDAT1......113500
      READ(INTFIL,*,IOSTAT=INERR(1)) CDUM10,PMAXFA,PMINFA,ANGFAC,        INDAT1......113600
     1   ALMAXF,ALMINF,ATMAXF,ATMINF                                     INDAT1......113700
      IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)        INDAT1......113800
      IF (CDUM10.NE.'ELEMENT   ') THEN                                   INDAT1......113900
         ERRCOD = 'INP-15A-1'                                            INDAT1......114000
         CHERR(1) = '2D'                                                 INDAT1......114100
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        INDAT1......114200
      END IF                                                             INDAT1......114300
      IF (KELMNT.EQ.+1) THEN                                             INDAT1......114400
         IF (IUNSAT.EQ.1) THEN                                           INDAT1......114500
            WRITE(K3,2500)                                               INDAT1......114600
 2500       FORMAT('1'//11X,'E L E M E N T   I N F O R M A T I O N'//    INDAT1......114700
     1         11X,'ELEMENT',3X,'REGION',4X,'MAXIMUM',9X,'MINIMUM',12X,  INDAT1......114800
     2         'ANGLE BETWEEN',3X,'LONGITUDINAL',3X,'LONGITUDINAL',5X,   INDAT1......114900
     3         'TRANSVERSE',5X,'TRANSVERSE'/                             INDAT1......115000
     4         31X,'PERMEABILITY',4X,'PERMEABILITY',4X,                  INDAT1......115100
     5         '+X-DIRECTION AND',3X,'DISPERSIVITY',3X,'DISPERSIVITY',   INDAT1......115200
     6         3X,'DISPERSIVITY',3X,'DISPERSIVITY'/                      INDAT1......115300
     7         59X,'MAXIMUM PERMEABILITY',3X,' IN MAX-PERM',             INDAT1......115400
     8         3X,' IN MIN-PERM',3X,' IN MAX-PERM',3X,' IN MIN-PERM'/    INDAT1......115500
     9         67X,'(IN DEGREES)',3X,'   DIRECTION',3X,                  INDAT1......115600
     1         '   DIRECTION',3X,'   DIRECTION',3X,'   DIRECTION'/)      INDAT1......115700
         ELSE                                                            INDAT1......115800
            WRITE(K3,2502)                                               INDAT1......115900
 2502       FORMAT('1'//11X,'E L E M E N T   I N F O R M A T I O N'//    INDAT1......116000
     1         11X,'ELEMENT',4X,'MAXIMUM',9X,'MINIMUM',12X,              INDAT1......116100
     2         'ANGLE BETWEEN',3X,'LONGITUDINAL',3X,'LONGITUDINAL',5X,   INDAT1......116200
     3         'TRANSVERSE',5X,'TRANSVERSE'/                             INDAT1......116300
     4         22X,'PERMEABILITY',4X,'PERMEABILITY',4X,                  INDAT1......116400
     5         '+X-DIRECTION AND',3X,'DISPERSIVITY',3X,'DISPERSIVITY',   INDAT1......116500
     6         3X,'DISPERSIVITY',3X,'DISPERSIVITY'/                      INDAT1......116600
     7         50X,'MAXIMUM PERMEABILITY',3X,' IN MAX-PERM',             INDAT1......116700
     8         3X,' IN MIN-PERM',3X,' IN MAX-PERM',3X,' IN MIN-PERM'/    INDAT1......116800
     9         58X,'(IN DEGREES)',3X,'   DIRECTION',3X,                  INDAT1......116900
     1         '   DIRECTION',3X,'   DIRECTION',3X,'   DIRECTION'/)      INDAT1......117000
         END IF                                                          INDAT1......117100
      END IF                                                             INDAT1......117200
      LRTEST=1                                                           INDAT1......117300
      LRMAX = 0                                                          INDAT1......117400
      DO 2550 LL=1,NE                                                    INDAT1......117500
      ERRCOD = 'REA-INP-15B'                                             INDAT1......117600
      CALL READIF(K1, 0, INTFIL, ERRCOD)                                 INDAT1......117700
      READ(INTFIL,*,IOSTAT=INERR(1)) L,LREG(L),PMAX,PMIN,ANGLEX,         INDAT1......117800
     1   ALMAX(L),ALMIN(L),ATMAX(L),ATMIN(L)                             INDAT1......117900
      IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)        INDAT1......118000
      IF (LREG(L).EQ.0) LREG(L) = 1                                      INDAT1......118100
      IF(LL.GT.1.AND.LREG(L).NE.LROLD) LRTEST=LRTEST+1                   INDAT1......118200
      LRMAX = MAX(LRMAX, LREG(L))                                        INDAT1......118300
      LROLD=LREG(L)                                                      INDAT1......118400
      PMAX=PMAX*PMAXFA                                                   INDAT1......118500
      PMIN=PMIN*PMINFA                                                   INDAT1......118600
      ANGLEX=ANGLEX*ANGFAC                                               INDAT1......118700
      ALMAX(L)=ALMAX(L)*ALMAXF                                           INDAT1......118800
      ALMIN(L)=ALMIN(L)*ALMINF                                           INDAT1......118900
      ATMAX(L)=ATMAX(L)*ATMAXF                                           INDAT1......119000
      ATMIN(L)=ATMIN(L)*ATMINF                                           INDAT1......119100
      IF(KELMNT.EQ.+1.AND.IUNSAT.NE.1) WRITE(K3,2520) L,                 INDAT1......119200
     1   PMAX,PMIN,ANGLEX,ALMAX(L),ALMIN(L),ATMAX(L),ATMIN(L)            INDAT1......119300
 2520 FORMAT(9X,I9,2X,2(1PE14.5,2X),7X,5(G11.4,4X))                      INDAT1......119400
      IF(KELMNT.EQ.+1.AND.IUNSAT.EQ.1) WRITE(K3,2530) L,LREG(L),         INDAT1......119500
     1   PMAX,PMIN,ANGLEX,ALMAX(L),ALMIN(L),ATMAX(L),ATMIN(L)            INDAT1......119600
 2530 FORMAT(9X,I9,4X,I5,2X,2(1PE14.5,2X),7X,5(G11.4,4X))                INDAT1......119700
C                                                                        INDAT1......119800
C.....ROTATE PERMEABILITY FROM MAXIMUM/MINIMUM TO X/Y DIRECTIONS         INDAT1......119900
      RADIAX=1.745329D-2*ANGLEX                                          INDAT1......120000
      SINA=DSIN(RADIAX)                                                  INDAT1......120100
      COSA=DCOS(RADIAX)                                                  INDAT1......120200
      SINA2=SINA*SINA                                                    INDAT1......120300
      COSA2=COSA*COSA                                                    INDAT1......120400
      PERMXX(L)=PMAX*COSA2+PMIN*SINA2                                    INDAT1......120500
      PERMYY(L)=PMAX*SINA2+PMIN*COSA2                                    INDAT1......120600
      PERMXY(L)=(PMAX-PMIN)*SINA*COSA                                    INDAT1......120700
      PERMYX(L)=PERMXY(L)                                                INDAT1......120800
      PANGL1(L)=RADIAX                                                   INDAT1......120900
 2550 CONTINUE                                                           INDAT1......121000
      IF(KELMNT.EQ.0)                                                    INDAT1......121100
     1   WRITE(K3,2569) PMAXFA,PMINFA,ANGFAC,ALMAXF,ALMINF,ATMAXF,ATMINF INDAT1......121200
 2569 FORMAT(////11X,'E L E M E N T   I N F O R M A T I O N'//           INDAT1......121300
     1   16X,'PRINTOUT OF ELEMENT PERMEABILITIES AND DISPERSIVITIES ',   INDAT1......121400
     2   'CANCELLED.'//16X,'SCALE FACTORS :'/33X,1PE15.4,5X,'MAXIMUM ',  INDAT1......121500
     3   'PERMEABILITY FACTOR'/33X,1PE15.4,5X,'MINIMUM PERMEABILITY ',   INDAT1......121600
     4   'FACTOR'/33X,1PE15.4,5X,'ANGLE FROM +X TO MAXIMUM DIRECTION',   INDAT1......121700
     5   ' FACTOR'/33X,1PE15.4,5X,'FACTOR FOR LONGITUDINAL DISPERSIVITY' INDAT1......121800
     6  ,' IN MAX-PERM DIRECTION'/33X,1PE15.4,5X,                        INDAT1......121900
     7   'FACTOR FOR LONGITUDINAL DISPERSIVITY IN MIN-PERM DIRECTION',   INDAT1......122000
     8   /33X,1PE15.4,5X,'FACTOR FOR TRANSVERSE DISPERSIVITY',           INDAT1......122100
     9   ' IN MAX-PERM DIRECTION'/33X,1PE15.4,5X,                        INDAT1......122200
     *   'FACTOR FOR TRANSVERSE DISPERSIVITY IN MIN-PERM DIRECTION')     INDAT1......122300
      IF(IUNSAT.EQ.1.AND.KELMNT.EQ.0.AND.LRTEST.NE.1) WRITE(K3,2573)     INDAT1......122400
      IF(IUNSAT.EQ.1.AND.KELMNT.EQ.0.AND.LRTEST.EQ.1) WRITE(K3,2575)     INDAT1......122500
 2573 FORMAT(/16X,'MORE THAN ONE REGION OF UNSATURATED PROPERTIES HAS ', INDAT1......122600
     1   'BEEN SPECIFIED AMONG THE ELEMENTS.')                           INDAT1......122700
 2575 FORMAT(/16X,'ONLY ONE REGION OF UNSATURATED PROPERTIES HAS ',      INDAT1......122800
     1   'BEEN SPECIFIED AMONG THE ELEMENTS.')                           INDAT1......122900
C                                                                        INDAT1......123000
      END IF                                                             INDAT1......123100
C                                                                        INDAT1......123200
      RETURN                                                             INDAT1......123300
      END                                                                INDAT1......123400
C                                                                        INDAT1......123500
C     SUBROUTINE        I  N  D  A  T  2           SUTRA VERSION 3.0     INDAT2.........100
C                                                                        INDAT2.........200
C *** PURPOSE :                                                          INDAT2.........300
C ***  TO READ INITIAL CONDITIONS FROM ICS FILE, AND TO                  INDAT2.........400
C ***  INITIALIZE DATA FOR EITHER WARM OR COLD START OF                  INDAT2.........500
C ***  THE SIMULATION.                                                   INDAT2.........600
C                                                                        INDAT2.........700
      SUBROUTINE INDAT2(PVEC,UVEC,PM1,UM1,CS1,CS2,CS3,SL,SR,RCIT,        INDAT2.........800
     1   SW,DSWDP,PBC,IPBC,IPBCT,IPBGT,NREG,QIN,                         INDAT2.........900
     2   DPDTITR,GNUPP,GNUUU,UIN,UBC,QUIN,IBCPBC,IBCUBC,IBCSOP,IBCSOU,   INDAT2........1000
     3   IBCPBG,IBCUBG,IIDPBC,IIDUBC,IIDSOP,IIDSOU,IIDPBG,IIDUBG,        INDAT2........1100
     4   IBCSF,IBCSS,IBCSP,IBCSU,IBCSPG,IBCSUG,                          INDAT2........1200
     5   IPBG,QPBGIC,GNUPG,QPBG1,QPBG2,PBG1,PBG2,                        INDAT2........1300
     6   CPQL1,CPQL2,CUPBGO,QPLITR,QPGITR,QINITR,ISPBG,LPBGSP)           INDAT2........1400
      USE ALLARR, ONLY : CIDBCS                                          INDAT2........1500
      USE EXPINT                                                         INDAT2........1600
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                INDAT2........1700
      CHARACTER*10 CPUNI,CUUNI                                           INDAT2........1800
      CHARACTER INTFIL*1000                                              INDAT2........1900
      CHARACTER*80 ERRCOD,CHERR(10),UNAME,FNAME(0:23)                    INDAT2........2000
      CHARACTER*8 VERNUM, VERNIN                                         INDAT2........2100
      CHARACTER*1 CPQL1(NPBG),CPQL2(NPBG)                                INDAT2........2200
      CHARACTER*3 CUPBGO(NPBG)                                           INDAT2........2300
      INTEGER(1) IBCPBC(NBCN),IBCUBC(NBCN),IBCSOP(NSOP),IBCSOU(NSOU),    INDAT2........2400
     1   IBCPBG(NPBG),IBCUBG(NUBG)                                       INDAT2........2500
      INTEGER IIDPBC(NBCN),IIDUBC(NBCN),IIDSOP(NSOP),IIDSOU(NSOU),       INDAT2........2600
     1   IIDPBG(NPBG),IIDUBG(NUBG)                                       INDAT2........2700
      INTEGER IBCSP(NBCN),IBCSU(NBCN),IBCSF(NSOP),IBCSS(NSOU),           INDAT2........2800
     1   IBCSPG(NPBG),IBCSUG(NUBG),ISPBG(NN)                             INDAT2........2900
      LOGICAL LPBGSP(NPBG)                                               INDAT2........3000
      DIMENSION INERR(10),RLERR(10)                                      INDAT2........3100
      DIMENSION PVEC(NNVEC),UVEC(NNVEC),PM1(NN),UM1(NN),SL(NN),          INDAT2........3200
     1   SR(NN),CS1(NN),CS2(NN),CS3(NN),RCIT(NN),SW(NN),DSWDP(NN),       INDAT2........3300
     2   PBC(NBCN),IPBC(NBCN),GNUPP(NBCN),GNUUU(NBCN),NREG(NN),QIN(NN),  INDAT2........3400
     3   DPDTITR(NN),UIN(NN),UBC(NBCN),QUIN(NN),QPLITR(NBCN)             INDAT2........3500
      DIMENSION QPBGIC(NPBG),GNUPG(NPBG),UPBGI(NPBG),UPBGO(NPBG)         INDAT2........3600
      DIMENSION QPBG1(NPBG),QPBG2(NPBG),PBG1(NPBG),PBG2(NPBG)            INDAT2........3700
      DIMENSION UBG1(NUBG),QUBG1(NUBG),UBG2(NUBG),QUBG2(NUBG)            INDAT2........3800
      DIMENSION IPBG(NPBG),QPGITR(NPBG),QINITR(NN)                       INDAT2........3900
      DIMENSION KTYPE(2)                                                 INDAT2........4000
      COMMON /CONTRL/ GNUP,GNUU,UP,DTMULT,DTMAX,ME,ISSFLO,ISSTRA,ITCYC,  INDAT2........4100
     1   NPCYC,NUCYC,NPRINT,NBCFPR,NBCSPR,NBCPPR,NBCUPR,NLAKPR,IREAD,    INDAT2........4200
     1   NBGPPR,NBGUPR,ISTORE,NOUMAT,IUNSAT,IALSAT,KTYPE                 INDAT2........4300
      COMMON /DIMS/ NN,NE,NIN,NBI,NCBI,NB,NBHALF,NPBC,NUBC,              INDAT2........4400
     1   NSOP,NSOU,NBCN,NPBG,NUBG,NCIDB                                  INDAT2........4500
      COMMON /DIMX2/ NELTA,NNVEC,NDIMIA,NDIMJA                           INDAT2........4600
      COMMON /FNAMES/ UNAME,FNAME                                        INDAT2........4700
      COMMON /FUNITS/ K00,K0,K1,K2,K3,K4,K5,K6,K7,K8,K9,                 INDAT2........4800
     1   K10,K11,K12,K13,K14,K15,K16,K17,K18,K19,K20,K21,K22,K23         INDAT2........4900
      COMMON /PARAMS/ COMPFL,COMPMA,DRWDU,CW,CS,RHOS,SIGMAW,SIGMAS,      INDAT2........5000
     1   RHOW0,URHOW0,VISC0,PRODF1,PRODS1,PRODF0,PRODS0,CHI1,CHI2        INDAT2........5100
      COMMON /TIMES/ DELT,TSEC,TMIN,THOUR,TDAY,TWEEK,TMONTH,TYEAR,       INDAT2........5200
     1   TMAX,DELTP,DELTU,DLTPM1,DLTUM1,IT,ITBCS,ITRST,ITMAX,TSTART      INDAT2........5300
      COMMON /VER/ VERNUM, VERNIN                                        INDAT2........5400
C                                                                        INDAT2........5500
C                                                                        INDAT2........5600
      IF(IREAD) 500,500,620                                              INDAT2........5700
C.....INPUT INITIAL CONDITIONS FOR WARM START                            INDAT2........5800
  500 ERRCOD = 'REA-ICS-1'                                               INDAT2........5900
      CALL READIF(K2, 0, INTFIL, ERRCOD)                                 INDAT2........6000
      IF ((VERNIN.EQ.'2.0').OR.(VERNIN.EQ.'2.1')) THEN                   INDAT2........6100
         READ(INTFIL,*,IOSTAT=INERR(1)) DUM,DELTP,DELTU                  INDAT2........6200
      ELSE                                                               INDAT2........6300
         READ(INTFIL,*,IOSTAT=INERR(1)) DUM,DELTP,DELTU,ITRST,DUM        INDAT2........6400
      END IF                                                             INDAT2........6500
      IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)        INDAT2........6600
      IF (ITRST.GE.ITMAX) THEN                                           INDAT2........6700
         ERRCOD = 'ICS-1-1'                                              INDAT2........6800
         INERR(1) = ITRST                                                INDAT2........6900
         INERR(2) = ITMAX                                                INDAT2........7000
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        INDAT2........7100
      END IF                                                             INDAT2........7200
      ERRCOD = 'REA-ICS-2'                                               INDAT2........7300
      CALL READIF(K2, 0, INTFIL, ERRCOD)                                 INDAT2........7400
      READ(INTFIL,*,IOSTAT=INERR(1)) CPUNI                               INDAT2........7500
      IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)        INDAT2........7600
      IF (CPUNI.NE.'NONUNIFORM') THEN                                    INDAT2........7700
         ERRCOD = 'ICS-2-2'                                              INDAT2........7800
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        INDAT2........7900
      END IF                                                             INDAT2........8000
      ERRCOD = 'REA-ICS-2'                                               INDAT2........8100
      CALL READIF(K2, 0, INTFIL, ERRCOD)                                 INDAT2........8200
      BACKSPACE(K2)                                                      INDAT2........8300
      READ(K2,*,IOSTAT=INERR(1)) (PVEC(I),I=1,NN)                        INDAT2........8400
      IF (INERR(1).NE.0) THEN                                            INDAT2........8500
         ERRCOD = 'REA-ICS-2'                                            INDAT2........8600
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        INDAT2........8700
      END IF                                                             INDAT2........8800
      ERRCOD = 'REA-ICS-3'                                               INDAT2........8900
      CALL READIF(K2, 0, INTFIL, ERRCOD)                                 INDAT2........9000
      READ(INTFIL,*,IOSTAT=INERR(1)) CUUNI                               INDAT2........9100
      IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)        INDAT2........9200
      IF (CUUNI.NE.'NONUNIFORM') THEN                                    INDAT2........9300
         ERRCOD = 'ICS-3-2'                                              INDAT2........9400
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        INDAT2........9500
      END IF                                                             INDAT2........9600
      ERRCOD = 'REA-ICS-3'                                               INDAT2........9700
      CALL READIF(K2, 0, INTFIL, ERRCOD)                                 INDAT2........9800
      BACKSPACE(K2)                                                      INDAT2........9900
      READ(K2,*,IOSTAT=INERR(1)) (UVEC(I),I=1,NN)                        INDAT2.......10000
      IF (INERR(1).NE.0) THEN                                            INDAT2.......10100
         ERRCOD = 'REA-ICS-3'                                            INDAT2.......10200
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        INDAT2.......10300
      END IF                                                             INDAT2.......10400
      ERRCOD = 'REA-ICS-4'                                               INDAT2.......10500
      CALL READIF(K2, 0, INTFIL, ERRCOD)                                 INDAT2.......10600
      BACKSPACE(K2)                                                      INDAT2.......10700
      READ(K2,*,IOSTAT=INERR(1)) (PM1(I),I=1,NN)                         INDAT2.......10800
      IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)        INDAT2.......10900
      READ(K2,*,IOSTAT=INERR(1)) (UM1(I),I=1,NN)                         INDAT2.......11000
      IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)        INDAT2.......11100
      READ(K2,*,IOSTAT=INERR(1)) (CS1(I),I=1,NN)                         INDAT2.......11200
      IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)        INDAT2.......11300
      READ(K2,*,IOSTAT=INERR(1)) (RCIT(I),I=1,NN)                        INDAT2.......11400
      IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)        INDAT2.......11500
      READ(K2,*,IOSTAT=INERR(1)) (SW(I),I=1,NN)                          INDAT2.......11600
      IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)        INDAT2.......11700
      IF ((VERNIN.EQ.'2.0').OR.(VERNIN.EQ.'2.1')) THEN                   INDAT2.......11800
         READ(K2,*,IOSTAT=INERR(1)) (QIN(I),I=1,NN)                      INDAT2.......11900
         IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)     INDAT2.......12000
         READ(K2,*,IOSTAT=INERR(1)) (PBC(IP),IP=1,NBCN)                  INDAT2.......12100
         IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)     INDAT2.......12200
      ELSE                                                               INDAT2.......12300
         READ(K2,*,IOSTAT=INERR(1)) (QIN(I),I=1,NN)                      INDAT2.......12400
         IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)     INDAT2.......12500
         READ(K2,*,IOSTAT=INERR(1)) (UIN(I),I=1,NN)                      INDAT2.......12600
         IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)     INDAT2.......12700
         READ(K2,*,IOSTAT=INERR(1)) (IBCSOP(IQP),IQP=1,NSOP)             INDAT2.......12800
         IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)     INDAT2.......12900
         READ(K2,*,IOSTAT=INERR(1)) (IIDSOP(IQP),IQP=1,NSOP)             INDAT2.......13000
         IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)     INDAT2.......13100
         READ(K2,*,IOSTAT=INERR(1)) (QUIN(I),I=1,NN)                     INDAT2.......13200
         IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)     INDAT2.......13300
         READ(K2,*,IOSTAT=INERR(1)) (IBCSOU(IQU),IQU=1,NSOU)             INDAT2.......13400
         IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)     INDAT2.......13500
         READ(K2,*,IOSTAT=INERR(1)) (IIDSOU(IQU),IQU=1,NSOU)             INDAT2.......13600
         IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)     INDAT2.......13700
         READ(K2,*,IOSTAT=INERR(1)) (PBC(IP),IP=1,NPBC)                  INDAT2.......13800
         IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)     INDAT2.......13900
         READ(K2,*,IOSTAT=INERR(1)) (UBC(IP),IP=1,NPBC)                  INDAT2.......14000
         IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)     INDAT2.......14100
         READ(K2,*,IOSTAT=INERR(1)) (IBCPBC(IP),IP=1,NPBC)               INDAT2.......14200
         IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)     INDAT2.......14300
         READ(K2,*,IOSTAT=INERR(1)) (IIDPBC(IP),IP=1,NPBC)               INDAT2.......14400
         IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)     INDAT2.......14500
         READ(K2,*,IOSTAT=INERR(1)) (UBC(IUP),IUP=1+NPBC,NUBC+NPBC)      INDAT2.......14600
         IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)     INDAT2.......14700
         READ(K2,*,IOSTAT=INERR(1)) (IBCUBC(IUP),IUP=1+NPBC,NUBC+NPBC)   INDAT2.......14800
         IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)     INDAT2.......14900
         READ(K2,*,IOSTAT=INERR(1)) (IIDUBC(IUP),IUP=1+NPBC,NUBC+NPBC)   INDAT2.......15000
         IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)     INDAT2.......15100
         IF (VERNIN.NE.'2.2') THEN                                       INDAT2.......15200
            READ(K2,*,IOSTAT=INERR(1)) (IBCSF(IQP),IQP=1,NSOP)           INDAT2.......15300
            IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)  INDAT2.......15400
            READ(K2,*,IOSTAT=INERR(1)) (IBCSS(IQU),IQU=1,NSOU)           INDAT2.......15500
            IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)  INDAT2.......15600
            READ(K2,*,IOSTAT=INERR(1)) (IBCSP(IP),IP=1,NPBC)             INDAT2.......15700
            IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)  INDAT2.......15800
            READ(K2,*,IOSTAT=INERR(1)) (IBCSU(IUP),IUP=1+NPBC,NUBC+NPBC) INDAT2.......15900
            IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)  INDAT2.......16000
            READ(K2,*,IOSTAT=INERR(1)) (PBG1(IPG),IPG=1,NPBG)            INDAT2.......16100
            IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)  INDAT2.......16200
            READ(K2,*,IOSTAT=INERR(1)) (QPBG1(IPG),IPG=1,NPBG)           INDAT2.......16300
            IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)  INDAT2.......16400
            READ(K2,*,IOSTAT=INERR(1)) (PBG2(IPG),IPG=1,NPBG)            INDAT2.......16500
            IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)  INDAT2.......16600
            READ(K2,*,IOSTAT=INERR(1)) (QPBG2(IPG),IPG=1,NPBG)           INDAT2.......16700
            IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)  INDAT2.......16800
            READ(K2,*,IOSTAT=INERR(1)) (CPQL1(IPG),IPG=1,NPBG)           INDAT2.......16900
            IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)  INDAT2.......17000
            READ(K2,*,IOSTAT=INERR(1)) (CPQL2(IPG),IPG=1,NPBG)           INDAT2.......17100
            IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)  INDAT2.......17200
            READ(K2,*,IOSTAT=INERR(1)) (UPBGI(IPG),IPG=1,NPBG)           INDAT2.......17300
            IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)  INDAT2.......17400
            READ(K2,*,IOSTAT=INERR(1)) (CUPBGO(IPG),IPG=1,NPBG)          INDAT2.......17500
            IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)  INDAT2.......17600
            READ(K2,*,IOSTAT=INERR(1)) (UPBGO(IPG),IPG=1,NPBG)           INDAT2.......17700
            IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)  INDAT2.......17800
            READ(K2,*,IOSTAT=INERR(1)) (IBCPBG(IPG),IPG=1,NPBG)          INDAT2.......17900
            IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)  INDAT2.......18000
            READ(K2,*,IOSTAT=INERR(1)) (IIDPBG(IPG),IPG=1,NPBG)          INDAT2.......18100
            IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)  INDAT2.......18200
            READ(K2,*,IOSTAT=INERR(1)) (IBCSPG(IPG),IPG=1,NPBG)          INDAT2.......18300
            IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)  INDAT2.......18400
            READ(K2,*,IOSTAT=INERR(1)) (UBG1(IUG),IUG=1,NUBG)            INDAT2.......18500
            IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)  INDAT2.......18600
            READ(K2,*,IOSTAT=INERR(1)) (QUBG1(IUG),IUG=1,NUBG)           INDAT2.......18700
            IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)  INDAT2.......18800
            READ(K2,*,IOSTAT=INERR(1)) (UBG2(IUG),IUG=1,NUBG)            INDAT2.......18900
            IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)  INDAT2.......19000
            READ(K2,*,IOSTAT=INERR(1)) (QUBG2(IUG),IUG=1,NUBG)           INDAT2.......19100
            IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)  INDAT2.......19200
            READ(K2,*,IOSTAT=INERR(1)) (IBCUBG(IUG),IUG=1,NUBG)          INDAT2.......19300
            IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)  INDAT2.......19400
            READ(K2,*,IOSTAT=INERR(1)) (IIDUBG(IUG),IUG=1,NUBG)          INDAT2.......19500
            IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)  INDAT2.......19600
            READ(K2,*,IOSTAT=INERR(1)) (IBCSUG(IUG),IUG=1,NUBG)          INDAT2.......19700
            IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)  INDAT2.......19800
            READ(K2,*,IOSTAT=INERR(1)) (QPLITR(IP),IP=1,NPBC)            INDAT2.......19900
            IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)  INDAT2.......20000
            READ(K2,*,IOSTAT=INERR(1)) (QPGITR(IPG),IPG=1,NPBG)          INDAT2.......20100
            IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)  INDAT2.......20200
            READ(K2,*,IOSTAT=INERR(1)) (QINITR(I),I=1,NN)                INDAT2.......20300
            IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)  INDAT2.......20400
            READ(K2,*,IOSTAT=INERR(1)) (ISPBG(I),I=1,NN)                 INDAT2.......20500
            IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)  INDAT2.......20600
            READ(K2,*,IOSTAT=INERR(1)) (LPBGSP(IPG),IPG=1,NPBG)          INDAT2.......20700
            IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)  INDAT2.......20800
         END IF                                                          INDAT2.......20900
         READ(K2,*,IOSTAT=INERR(1)) NCID                                 INDAT2.......21000
         IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)     INDAT2.......21100
         NCIDB = MAX(NCIDB, NCID)                                        INDAT2.......21200
         IF (ALLOCATED(CIDBCS)) DEALLOCATE(CIDBCS)                       INDAT2.......21300
         ALLOCATE(CIDBCS(NCIDB))                                         INDAT2.......21400
         CIDBCS = ""                                                     INDAT2.......21500
         DO 510 NC=1,NCID                                                INDAT2.......21600
            READ(K2,'(A40)',IOSTAT=INERR(1)) CIDBCS(NC)                  INDAT2.......21700
            IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)  INDAT2.......21800
  510    CONTINUE                                                        INDAT2.......21900
      END IF                                                             INDAT2.......22000
      DO 520 IP=1,NPBC                                                   INDAT2.......22100
         IF (IBCPBC(IP).EQ.2) THEN                                       INDAT2.......22200
            GNUPP(IP) = 0D0                                              INDAT2.......22300
         ELSE                                                            INDAT2.......22400
            GNUPP(IP) = GNUP                                             INDAT2.......22500
         END IF                                                          INDAT2.......22600
  520 CONTINUE                                                           INDAT2.......22700
      DO 530 IUP=1+NPBC,NUBC+NPBC                                        INDAT2.......22800
         IF (IBCUBC(IUP).EQ.2) THEN                                      INDAT2.......22900
            GNUUU(IUP) = 0D0                                             INDAT2.......23000
         ELSE                                                            INDAT2.......23100
            GNUUU(IUP) = GNUU                                            INDAT2.......23200
         END IF                                                          INDAT2.......23300
  530 CONTINUE                                                           INDAT2.......23400
C     CALL ZERO(CS2,NN,0.0D0)                                            INDAT2.......23500
C     CALL ZERO(CS3,NN,0.0D0)                                            INDAT2.......23600
      CALL ZERO(SL,NN,0.0D0)                                             INDAT2.......23700
      CALL ZERO(SR,NN,0.0D0)                                             INDAT2.......23800
      CALL ZERO(DSWDP,NN,0.0D0)                                          INDAT2.......23900
      GOTO 1000                                                          INDAT2.......24000
C                                                                        INDAT2.......24100
C.....INPUT INITIAL CONDITIONS FOR COLD START                            INDAT2.......24200
  620 ERRCOD = 'REA-ICS-1'                                               INDAT2.......24300
      CALL READIF(K2, 0, INTFIL, ERRCOD)                                 INDAT2.......24400
      READ(INTFIL,*,IOSTAT=INERR(1)) DUM                                 INDAT2.......24500
      IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)        INDAT2.......24600
      ITRST = 0                                                          INDAT2.......24700
      ERRCOD = 'REA-ICS-2'                                               INDAT2.......24800
      CALL READIF(K2, 0, INTFIL, ERRCOD)                                 INDAT2.......24900
      READ(INTFIL,*,IOSTAT=INERR(1)) CPUNI                               INDAT2.......25000
      IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)        INDAT2.......25100
      IF (CPUNI.EQ.'UNIFORM') THEN                                       INDAT2.......25200
         ERRCOD = 'REA-ICS-2'                                            INDAT2.......25300
         CALL READIF(K2, 0, INTFIL, ERRCOD)                              INDAT2.......25400
         BACKSPACE(K2)                                                   INDAT2.......25500
         READ(K2,*,IOSTAT=INERR(1)) PUNI                                 INDAT2.......25600
         IF (INERR(1).NE.0) THEN                                         INDAT2.......25700
            ERRCOD = 'REA-ICS-2'                                         INDAT2.......25800
            CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                     INDAT2.......25900
         END IF                                                          INDAT2.......26000
         DO 625 I=1,NN                                                   INDAT2.......26100
            PVEC(I) = PUNI                                               INDAT2.......26200
  625    CONTINUE                                                        INDAT2.......26300
      ELSE IF (CPUNI.EQ.'NONUNIFORM') THEN                               INDAT2.......26400
         ERRCOD = 'REA-ICS-2'                                            INDAT2.......26500
         CALL READIF(K2, 0, INTFIL, ERRCOD)                              INDAT2.......26600
         BACKSPACE(K2)                                                   INDAT2.......26700
         READ(K2,*,IOSTAT=INERR(1)) (PVEC(I),I=1,NN)                     INDAT2.......26800
         IF (INERR(1).NE.0) THEN                                         INDAT2.......26900
            ERRCOD = 'REA-ICS-2'                                         INDAT2.......27000
            CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                     INDAT2.......27100
         END IF                                                          INDAT2.......27200
      ELSE                                                               INDAT2.......27300
         ERRCOD = 'ICS-2-1'                                              INDAT2.......27400
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        INDAT2.......27500
      END IF                                                             INDAT2.......27600
      ERRCOD = 'REA-ICS-3'                                               INDAT2.......27700
      CALL READIF(K2, 0, INTFIL, ERRCOD)                                 INDAT2.......27800
      READ(INTFIL,*,IOSTAT=INERR(1)) CUUNI                               INDAT2.......27900
      IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)        INDAT2.......28000
      IF (CUUNI.EQ.'UNIFORM') THEN                                       INDAT2.......28100
         ERRCOD = 'REA-ICS-3'                                            INDAT2.......28200
         CALL READIF(K2, 0, INTFIL, ERRCOD)                              INDAT2.......28300
         BACKSPACE(K2)                                                   INDAT2.......28400
         READ(K2,*,IOSTAT=INERR(1)) UUNI                                 INDAT2.......28500
         IF (INERR(1).NE.0) THEN                                         INDAT2.......28600
            ERRCOD = 'REA-ICS-3'                                         INDAT2.......28700
            CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                     INDAT2.......28800
         END IF                                                          INDAT2.......28900
         DO 630 I=1,NN                                                   INDAT2.......29000
            UVEC(I) = UUNI                                               INDAT2.......29100
  630    CONTINUE                                                        INDAT2.......29200
      ELSE IF (CUUNI.EQ.'NONUNIFORM') THEN                               INDAT2.......29300
         ERRCOD = 'REA-ICS-3'                                            INDAT2.......29400
         CALL READIF(K2, 0, INTFIL, ERRCOD)                              INDAT2.......29500
         BACKSPACE(K2)                                                   INDAT2.......29600
         READ(K2,*,IOSTAT=INERR(1)) (UVEC(I),I=1,NN)                     INDAT2.......29700
         IF (INERR(1).NE.0) THEN                                         INDAT2.......29800
            ERRCOD = 'REA-ICS-3'                                         INDAT2.......29900
            CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                     INDAT2.......30000
         END IF                                                          INDAT2.......30100
      ELSE                                                               INDAT2.......30200
         ERRCOD = 'ICS-3-1'                                              INDAT2.......30300
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        INDAT2.......30400
      END IF                                                             INDAT2.......30500
C.....START-UP WITH NO PROJECTIONS BY SETTING DELTP AND DELTU            INDAT2.......30600
C        SUCH THAT BDELP=BDELU=0.5D-16 IN PROJECTION FORMULAE FOUND      INDAT2.......30700
C        IN SUBROUTINE SUTRA.                                            INDAT2.......30800
      DELTP=DELT*1.D16                                                   INDAT2.......30900
      DELTU=DELT*1.D16                                                   INDAT2.......31000
C.....INITIALIZE SPECIFIED TIME-DEPENDENT PRESSURES TO                   INDAT2.......31100
C        INITIAL PRESSURE VALUES FOR START-UP CALCULATION OF INFLOWS     INDAT2.......31200
C        OR OUTFLOWS                                                     INDAT2.......31300
      IF(IPBCT) 680,732,732                                              INDAT2.......31400
  680 DO 730 IP=1,NPBC                                                   INDAT2.......31500
      I=IPBC(IP)                                                         INDAT2.......31600
      IF(I) 700,700,730                                                  INDAT2.......31700
  700 PBC(IP)=PVEC(-I)                                                   INDAT2.......31800
  730 CONTINUE                                                           INDAT2.......31900
C.....INITIALIZE GENERALIZED TIME-DEPENDENT FLOW CONDITIONS              INDAT2.......32000
C        FOR START-UP CALCULATION OF INFLOWS OR OUTFLOWS                 INDAT2.......32100
  732 IF(IPBGT) 734,740,740                                              INDAT2.......32200
  734 DO 738 IPG=1,NPBG                                                  INDAT2.......32300
      I=IPBG(IPG)                                                        INDAT2.......32400
      IF(I) 736,736,738                                                  INDAT2.......32500
  736 GNUPG(IPG)=0D0                                                     INDAT2.......32600
      QPBGIC(IPG)=0D0                                                    INDAT2.......32700
      QPBG1(IPG)=0D0                                                     INDAT2.......32800
      QPBG2(IPG)=0D0                                                     INDAT2.......32900
      PBG1(IPG) = PVEC(-I)                                               INDAT2.......33000
      PBG2(IPG) = PVEC(-I)                                               INDAT2.......33100
      QPGITR(IPG) = 0D0                                                  INDAT2.......33200
ccc      ISPBG(IPG) = IPG                                                   INDAT2.......33300
ccc      LPBGSP(I) = .FALSE.                                                INDAT2.......33400
      ISPBG(-I) = IPG                                                    ! fix rbw 200518
      LPBGSP(IPG) = .FALSE.                                              ! fix rbw 200518
  738 CONTINUE                                                           INDAT2.......33500
C.....INITIALIZE P, U, AND CONSISTENT DENSITY                            INDAT2.......33600
  740 DO 800 I=1,NN                                                      INDAT2.......33700
      PM1(I)=PVEC(I)                                                     INDAT2.......33800
      UM1(I)=UVEC(I)                                                     INDAT2.......33900
      RCIT(I)=RHOFUN(UVEC(I))                                            INDAT2.......34000
  800 CONTINUE                                                           INDAT2.......34100
C.....INITIALIZE WATER SATURATION, SW(I)                                 INDAT2.......34200
      CALL ZERO(SW,NN,1.0D0)                                             INDAT2.......34300
      CALL ZERO(DSWDP,NN,0.0D0)                                          INDAT2.......34400
      IF (IALSAT.EQ.1) THEN                                              INDAT2.......34500
         IF (IUNSAT.NE.0) IUNSAT = 3                                     INDAT2.......34600
         IALSAT = 3                                                      INDAT2.......34700
         DO 994 I=1,NN                                                   INDAT2.......34800
            CALL GETSAT(SW(I),DSWDP(I),RELK,PVEC(I),NREG(I))             INDAT2.......34900
  994    CONTINUE                                                        INDAT2.......35000
      END IF                                                             INDAT2.......35100
      IF (ALLOCATED(CIDBCS)) DEALLOCATE(CIDBCS)                          INDAT2.......35200
      ALLOCATE(CIDBCS(NCIDB))                                            INDAT2.......35300
      CIDBCS = ""                                                        INDAT2.......35400
      CIDBCS(1) = 'N/A'                                                  INDAT2.......35500
C     CALL ZERO(CS2,NN,0.0D0)                                            INDAT2.......35600
C     CALL ZERO(CS3,NN,0.0D0)                                            INDAT2.......35700
      CALL ZERO(SL,NN,0.0D0)                                             INDAT2.......35800
      CALL ZERO(SR,NN,0.0D0)                                             INDAT2.......35900
      CALL ZERO(DPDTITR,NN,0.0D0)                                        INDAT2.......36000
 1000 CONTINUE                                                           INDAT2.......36100
C                                                                        INDAT2.......36200
C.....SET STARTING TIME OF SIMULATION CLOCK, TSEC.  NOTE THAT THE VALUE  INDAT2.......36300
C        OF TSTART WAS SET IN SUBROUTINE INDAT0, WHERE THE "TIME_STEPS"  INDAT2.......36400
C        SCHEDULE IS DEFINED.                                            INDAT2.......36500
      TSEC=TSTART                                                        INDAT2.......36600
C                                                                        INDAT2.......36700
C                                                                        INDAT2.......36800
      RETURN                                                             INDAT2.......36900
      END                                                                INDAT2.......37000
C                                                                        INDAT2.......37100
C     SUBROUTINE        I  N  I  T  U  0           SUTRA VERSION 3.0     INITU0.........100
C                                                                        INITU0.........200
C *** PURPOSE :                                                          INITU0.........300
C ***  TO LOAD THE INITIAL GUESS FOR THE U(0) SOLUTION INTO B.           INITU0.........400
C                                                                        INITU0.........500
      SUBROUTINE INITU0()                                                INITU0.........600
      USE ALLARR                                                         INITU0.........700
      USE LARR, ONLY : LKBCUBC                                           INITU0.........800
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                INITU0.........900
      COMMON /DIMS/ NN,NE,NIN,NBI,NCBI,NB,NBHALF,NPBC,NUBC,              INITU0........1000
     1   NSOP,NSOU,NBCN,NPBG,NUBG,NCIDB                                  INITU0........1100
C                                                                        INITU0........1200
      B = UITER                                                          INITU0........1300
      DO 5800 IU=1,NUBC                                                  INITU0........1400
         IUP=IU+NPBC                                                     INITU0........1500
         IF ((IBCUBC(IUP).EQ.2).OR.(.NOT.LKBCUBC(IUP))) CYCLE            INITU0........1600
         I=IABS(IUBC(IUP))                                               INITU0........1700
         B(I) = UZERO(IU)                                                INITU0........1800
 5800 CONTINUE                                                           INITU0........1900
C                                                                        INITU0........2000
      RETURN                                                             INITU0........2100
      END                                                                INITU0........2200
C                                                                        INITU0........2300
C     SUBROUTINE        I  N  I  T  U  Z           SUTRA VERSION 3.0     INITUZ.........100
C                                                                        INITUZ.........200
C *** PURPOSE :                                                          INITUZ.........300
C ***  TO INITIALIZE UZERO VECTOR FOR AN ITERATIVE SOLVER.               INITUZ.........400
C                                                                        INITUZ.........500
      SUBROUTINE INITUZ()                                                INITUZ.........600
      USE ALLARR                                                         INITUZ.........700
      USE LARR, ONLY : LKBCUBC                                           INITUZ.........800
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                INITUZ.........900
      INTEGER KTYPE(2)                                                   ! fix civ 200723a
      COMMON /CONTRL/ GNUP,GNUU,UP,DTMULT,DTMAX,ME,ISSFLO,ISSTRA,ITCYC,  INITUZ........1000
     1   NPCYC,NUCYC,NPRINT,NBCFPR,NBCSPR,NBCPPR,NBCUPR,NLAKPR,IREAD,    INITUZ........1100
     1   NBGPPR,NBGUPR,ISTORE,NOUMAT,IUNSAT,IALSAT,KTYPE                 INITUZ........1200
      COMMON /DIMS/ NN,NE,NIN,NBI,NCBI,NB,NBHALF,NPBC,NUBC,              INITUZ........1300
     1   NSOP,NSOU,NBCN,NPBG,NUBG,NCIDB                                  INITUZ........1400
C                                                                        INITUZ........1500
      DO 4500 IU=1,NUBC                                                  INITUZ........1600
         IUP=IU+NPBC                                                     INITUZ........1700
         IF ((IBCUBC(IUP).EQ.2).OR.(.NOT.LKBCUBC(IUP))) CYCLE            INITUZ........1800
         I=IABS(IUBC(IUP))                                               INITUZ........1900
         UZERO(IU) = UVEC(I)                                             INITUZ........2000
         MDBEG = JA(I)                                                   INITUZ........2100
         MDEND = JA(I + 1) - 1                                           INITUZ........2200
         RGNUP = 1D0/GNUP                                                INITUZ........2300
         DO 4460 MJ=MDBEG+1,MDEND                                        INITUZ........2400
            J = IA(MJ)                                                   INITUZ........2500
C...........ASSUME MATRIX STRUCTURE IS SYMMETRIC, EVEN IF                INITUZ........2600
C              MATRIX VALUES ARE NOT                                     INITUZ........2700
            MBEG = JA(J)                                                 INITUZ........2800
            MEND = JA(J + 1) - 1                                         INITUZ........2900
            DO 4450 MM=MBEG,MEND                                         INITUZ........3000
               IF (I.EQ.IA(MM)) THEN                                     INITUZ........3100
                  M = MM                                                 INITUZ........3200
                  GOTO 4452                                              INITUZ........3300
               END IF                                                    INITUZ........3400
 4450       CONTINUE                                                     INITUZ........3500
 4452       UZERO(IU) = UZERO(IU) - UMAT(M,1)*UITER(J)                   INITUZ........3600
 4460    CONTINUE                                                        INITUZ........3700
         UZERO(IU) = UZERO(IU)/UMAT(MDBEG,1)                             INITUZ........3800
 4500 CONTINUE                                                           INITUZ........3900
C                                                                        INITUZ........4000
      RETURN                                                             INITUZ........4100
      END                                                                INITUZ........4200
C                                                                        INITUZ........4300
C     SUBROUTINE        L  O  D  O  B  S           SUTRA VERSION 3.0     LODOBS.........100
C                                                                        LODOBS.........200
C *** PURPOSE :                                                          LODOBS.........300
C ***  TO LOAD OBSERVATION POINT INDICES NOBLIN AT A TIME, STARTING      LODOBS.........400
C ***  WITH INDEX JNEXT, INTO ARRAY JSET.  ONLY OBSERVATION POINTS       LODOBS.........500
C ***  WHOSE SCHEDULE AND OUTPUT FORMAT MATCH THOSE THAT CORRESPOND      LODOBS.........600
C ***  TO FILE INDEX NFLO ARE LOADED.  THE NUMBER OF OBSERVATIONS        LODOBS.........700
C ***  LOADED, JLOAD, CAN BE LESS THAN NOBLIN IF THE LIST OF             LODOBS.........800
C ***  OBSERVATION POINT INDICES IS EXHAUSTED.                           LODOBS.........900
C                                                                        LODOBS........1000
      SUBROUTINE LODOBS(NFLO,JNEXT,OBSPTS,JSET,JLOAD)                    LODOBS........1100
      USE ALLARR, ONLY : OBSDAT                                          LODOBS........1200
      USE SCHDEF                                                         LODOBS........1300
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                LODOBS........1400
      TYPE (OBSDAT), DIMENSION (NOBSN) :: OBSPTS                         LODOBS........1500
      DIMENSION JSET(*)                                                  LODOBS........1600
      COMMON /OBS/ NOBSN,NTOBS,NOBCYC,NOBLIN,NFLOMX                      LODOBS........1700
C                                                                        LODOBS........1800
      NOBS = NOBSN - 1                                                   LODOBS........1900
C                                                                        LODOBS........2000
      JLOAD = 0                                                          LODOBS........2100
      DO 300 J=JNEXT,NOBS                                                LODOBS........2200
         IF ((OBSPTS(J)%FRMT.EQ."OBS").AND.                              LODOBS........2300
     1      (OBSPTS(J)%SCHED.EQ.SCHDLS(OFP(NFLO)%ISCHED)%NAME))          LODOBS........2400
     2      THEN                                                         LODOBS........2500
            JLOAD = JLOAD + 1                                            LODOBS........2600
            JSET(JLOAD) = J                                              LODOBS........2700
            IF ((JLOAD.EQ.NOBLIN).OR.(J.EQ.NOBS)) THEN                   LODOBS........2800
               JNEXT = J + 1                                             LODOBS........2900
               RETURN                                                    LODOBS........3000
            END IF                                                       LODOBS........3100
         END IF                                                          LODOBS........3200
  300 CONTINUE                                                           LODOBS........3300
C                                                                        LODOBS........3400
      JNEXT = NOBS + 1                                                   LODOBS........3500
      RETURN                                                             LODOBS........3600
      END                                                                LODOBS........3700
C                                                                        LODOBS........3800
C     SUBROUTINE        N  A  F  U                 SUTRA VERSION 3.0     NAFU...........100
C                                                                        NAFU...........200
C *** PURPOSE :                                                          NAFU...........300
C ***  TO FIND THE NEXT AVAILABLE FORTRAN UNIT.  ON INPUT, IUNEXT IS     NAFU...........400
C ***  THE UNIT NUMBER FROM WHICH THE SEARCH IS TO BEGIN.  ON OUTPUT,    NAFU...........500
C ***  IUNEXT IS THE NEXT AVAILABLE UNIT NUMBER.                         NAFU...........600
C                                                                        NAFU...........700
      SUBROUTINE NAFU(IUNEXT,NJMAX,FN)                                   NAFU...........800
      USE SCHDEF, ONLY : IUNIO                                           NAFU...........900
      USE BCSDEF                                                         NAFU..........1000
      USE FINDEF                                                         NAFU..........1100
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                NAFU..........1200
      CHARACTER*80 FN,UNAME,FNAME(0:23)                                  NAFU..........1300
      CHARACTER*80 ERRCOD,CHERR(10)                                      NAFU..........1400
      LOGICAL EXST                                                       NAFU..........1500
      LOGICAL ALCBCS,ALCFIN,ALCOBS                                       NAFU..........1600
      DIMENSION INERR(10),RLERR(10)                                      NAFU..........1700
      DIMENSION IUNIT(0:23)                                              NAFU..........1800
      COMMON /ALC/ ALCBCS,ALCFIN,ALCOBS                                  NAFU..........1900
      COMMON /FNAMES/ UNAME,FNAME                                        NAFU..........2000
      COMMON /FUNIB/ NFBCS                                               NAFU..........2100
      COMMON /FUNITA/ IUNIT                                              NAFU..........2200
      COMMON /FUNITS/ K00,K0,K1,K2,K3,K4,K5,K6,K7,K8,K9,                 NAFU..........2300
     1   K10,K11,K12,K13,K14,K15,K16,K17,K18,K19,K20,K21,K22,K23         NAFU..........2400
C                                                                        NAFU..........2500
C.....CHECK "SUTRA.FIL" (UNIT K0)                                        NAFU..........2600
  100 IF (IUNEXT.EQ.K0) IUNEXT = IUNEXT + 1                              NAFU..........2700
C.....CHECK NON-INSERTED, NON-OBSERVATION FILES                          NAFU..........2800
  200 DO 300 NFF=0,23                                                    NAFU..........2900
         IF ((NFF.EQ.7).OR.(NFF.EQ.8)) CYCLE                             NAFU..........3000
         IF (IUNEXT.EQ.IUNIT(NFF)) THEN                                  NAFU..........3100
            IUNEXT = IUNEXT + 1                                          NAFU..........3200
            GOTO 100                                                     NAFU..........3300
         END IF                                                          NAFU..........3400
  300 CONTINUE                                                           NAFU..........3500
      IF (ALCBCS) THEN                                                   NAFU..........3600
         DO 350 NFB=1,NFBCS                                              NAFU..........3700
            IF (IUNEXT.EQ.IUNIB(NFB)) THEN                               NAFU..........3800
               IUNEXT = IUNEXT + 1                                       NAFU..........3900
               GOTO 100                                                  NAFU..........4000
            END IF                                                       NAFU..........4100
  350    CONTINUE                                                        NAFU..........4200
      END IF                                                             NAFU..........4300
C.....CHECK OBSERVATION FILES                                            NAFU..........4400
      IF (ALCOBS) THEN                                                   NAFU..........4500
  400    DO 500 NJ=1,NJMAX                                               NAFU..........4600
            IF (IUNEXT.EQ.IUNIO(NJ)) THEN                                NAFU..........4700
               IUNEXT = IUNEXT + 1                                       NAFU..........4800
               GOTO 100                                                  NAFU..........4900
            END IF                                                       NAFU..........5000
  500    CONTINUE                                                        NAFU..........5100
      END IF                                                             NAFU..........5200
C.....CHECK INSERTED FILES                                               NAFU..........5300
      IF ((IUNEXT.EQ.K1).OR.(IUNEXT.EQ.K2).OR.(IUNEXT.EQ.K9)) THEN       NAFU..........5400
         IUNEXT = IUNEXT + 1                                             NAFU..........5500
         GOTO 100                                                        NAFU..........5600
      END IF                                                             NAFU..........5700
      IF (ALCFIN) THEN                                                   NAFU..........5800
         DO 600 I=1,2+NFBCS                                              NAFU..........5900
            DO 600 K=1,NKS(I)                                            NAFU..........6000
               IF (IUNEXT.EQ.KLIST(I,K)) THEN                            NAFU..........6100
                  IUNEXT = IUNEXT + 1                                    NAFU..........6200
                  GOTO 100                                               NAFU..........6300
               END IF                                                    NAFU..........6400
  600    CONTINUE                                                        NAFU..........6500
      END IF                                                             NAFU..........6600
C.....IF THE UNIT NUMBER SELECTED IS NOT VALID, GENERATE ERROR           NAFU..........6700
      INQUIRE(UNIT=IUNEXT, EXIST=EXST)                                   NAFU..........6800
      IF (.NOT.EXST) THEN                                                NAFU..........6900
         ERRCOD = 'FIL-10'                                               NAFU..........7000
         INERR(1) = IUNEXT                                               NAFU..........7100
         CHERR(1) = UNAME                                                NAFU..........7200
         CHERR(2) = FN                                                   NAFU..........7300
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        NAFU..........7400
      END IF                                                             NAFU..........7500
C                                                                        NAFU..........7600
      RETURN                                                             NAFU..........7700
      END                                                                NAFU..........7800
C                                                                        NAFU..........7900
C     SUBROUTINE        N  O  D  A  L              SUTRA VERSION 3.0     NODAL..........100
C                                                                        NODAL..........200
C *** PURPOSE :                                                          NODAL..........300
C ***  (1) TO CARRY OUT ALL CELLWISE CALCULATIONS AND TO ADD CELLWISE    NODAL..........400
C ***      TERMS TO THE GLOBAL MATRIX AND GLOBAL VECTOR FOR BOTH FLOW    NODAL..........500
C ***      AND TRANSPORT EQUATIONS.                                      NODAL..........600
C ***  (2) TO ADD FLUID SOURCE AND SOLUTE MASS OR ENERGY SOURCE TERMS    NODAL..........700
C ***      TO THE MATRIX EQUATIONS.                                      NODAL..........800
C                                                                        NODAL..........900
      SUBROUTINE NODAL(ML,VOL,PMAT,PVEC,UMAT,UVEC,PITER,UITER,PM1,       NODAL.........1000
     1   DPDTITR,DUDTITR,UM1,POR,QIN,UIN,QUIN,QINITR,CS1,CS2,CS3,        NODAL.........1100
     2   SL,SR,SW,DSWDP,RHO,SOP,NREG,JA,IBCSOP,IBCSOU,                   NODAL.........1200
     3   IQSOP,IQSOU)                                                    NODAL.........1300
      USE LARR, ONLY : ISLAKE,LKBCSOP,LKBCSOU                            NODAL.........1400
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                NODAL.........1500
      LOGICAL LAKUSD                                                     NODAL.........1600
      DIMENSION VOL(NN),PMAT(NELT,NCBI),PVEC(NNVEC),UMAT(NELT,NCBI),     NODAL.........1700
     1   UVEC(NNVEC)                                                     NODAL.........1800
      DIMENSION PITER(NN),UITER(NN),PM1(NN),DPDTITR(NN),DUDTITR(NN),     NODAL.........1900
     1   UM1(NN),POR(NN),QIN(NN),UIN(NN),QUIN(NN),QINITR(NN),            NODAL.........2000
     2   CS1(NN),CS2(NN),CS3(NN),SL(NN),SR(NN),SW(NN),RHO(NN),           NODAL.........2100
     3   SOP(NN),NREG(NN),DSWDP(NN)                                      NODAL.........2200
      INTEGER(1) IBCSOP(NSOP),IBCSOU(NSOU)                               NODAL.........2300
      DIMENSION IQSOP(NSOP),IQSOU(NSOU)                                  NODAL.........2400
      DIMENSION JA(NDIMJA)                                               NODAL.........2500
      DIMENSION KTYPE(2)                                                 NODAL.........2600
      COMMON /CONTRL/ GNUP,GNUU,UP,DTMULT,DTMAX,ME,ISSFLO,ISSTRA,ITCYC,  NODAL.........2700
     1   NPCYC,NUCYC,NPRINT,NBCFPR,NBCSPR,NBCPPR,NBCUPR,NLAKPR,IREAD,    NODAL.........2800
     1   NBGPPR,NBGUPR,ISTORE,NOUMAT,IUNSAT,IALSAT,KTYPE                 NODAL.........2900
      COMMON /DIMS/ NN,NE,NIN,NBI,NCBI,NB,NBHALF,NPBC,NUBC,              NODAL.........3000
     1   NSOP,NSOU,NBCN,NPBG,NUBG,NCIDB                                  NODAL.........3100
      COMMON /DIMX/ NWI,NWF,NWL,NELT,NNNX,NEX,N48                        NODAL.........3200
      COMMON /DIMX2/ NELTA,NNVEC,NDIMIA,NDIMJA                           NODAL.........3300
      COMMON /LAKU/ LAKUSD                                               NODAL.........3400
      COMMON /PARAMS/ COMPFL,COMPMA,DRWDU,CW,CS,RHOS,SIGMAW,SIGMAS,      NODAL.........3500
     1   RHOW0,URHOW0,VISC0,PRODF1,PRODS1,PRODF0,PRODS0,CHI1,CHI2        NODAL.........3600
      COMMON /SOLVI/ KSOLVP,KSOLVU,NN1,NN2,NN3                           NODAL.........3700
      COMMON /TIMES/ DELT,TSEC,TMIN,THOUR,TDAY,TWEEK,TMONTH,TYEAR,       NODAL.........3800
     1   TMAX,DELTP,DELTU,DLTPM1,DLTUM1,IT,ITBCS,ITRST,ITMAX,TSTART      NODAL.........3900
C                                                                        NODAL.........4000
C                                                                        NODAL.........4100
      IF(IUNSAT.NE.0) IUNSAT=1                                           NODAL.........4200
      IF(IALSAT.NE.0) IALSAT=1                                           NODAL.........4300
C.....NSOPI IS ACTUAL NUMBER OF POSSIBLE FLUID SOURCE NODES              NODAL.........4400
      NSOPI = NSOP - 1                                                   NODAL.........4500
C.....NSOUI IS ACTUAL NUMBER OF POSSIBLE ENERGY OR SOLUTE MASS           NODAL.........4600
C        SOURCE NODES                                                    NODAL.........4700
      NSOUI = NSOU - 1                                                   NODAL.........4800
C                                                                        NODAL.........4900
C.....SET UP MATRIX STRUCTURE INFORMATION                                NODAL.........5000
      IF (KSOLVP.EQ.0) THEN                                              NODAL.........5100
         JMID = NBHALF                                                   NODAL.........5200
      ELSE                                                               NODAL.........5300
         JMID = 1                                                        NODAL.........5400
      END IF                                                             NODAL.........5500
C                                                                        NODAL.........5600
C.....DO NOT UPDATE NODAL PARAMETERS ON A TIME STEP WHEN ONLY U IS       NODAL.........5700
C        SOLVED FOR BY BACK SUBSTITUTION (I.E., WHEN NOUMAT=1)           NODAL.........5800
         IF (NOUMAT.EQ.1) GOTO 200                                       NODAL.........5900
C.....SET UNSATURATED FLOW PARAMETERS AT NODES, SW(I) AND DSWDP(I)       NODAL.........6000
   50 IF (IALSAT.EQ.1) THEN                                              NODAL.........6100
         DO 120 I=1,NN                                                   NODAL.........6200
            CALL GETSAT(SW(I),DSWDP(I),RELK,PITER(I),NREG(I))            NODAL.........6300
  120    CONTINUE                                                        NODAL.........6400
      END IF                                                             NODAL.........6500
C.....SET FLUID DENSITY AT NODES, RHO(I)                                 NODAL.........6600
C        RHO = F (UITER(I))                                              NODAL.........6700
      DO 150 I=1,NN                                                      NODAL.........6800
  150 RHO(I) = RHOFUN(UITER(I))                                          NODAL.........6900
  200 CONTINUE                                                           NODAL.........7000
C                                                                        NODAL.........7100
      DO 1000 I=1,NN                                                     NODAL.........7200
      IF (KSOLVP.EQ.0) THEN                                              NODAL.........7300
         IMID = I                                                        NODAL.........7400
      ELSE                                                               NODAL.........7500
         IMID = JA(I)                                                    NODAL.........7600
      END IF                                                             NODAL.........7700
C                                                                        NODAL.........7800
      SWRHON= SW(I)*RHO(I)                                               NODAL.........7900
C                                                                        NODAL.........8000
C.....IF LAKES USED BUT NODE IS NOT INUNDATED, FIND IQP NOW, SINCE IT    NODAL.........8100
C        WILL BE NEEDED FOR BOTH THE P EQUATION AND THE U EQUATION       NODAL.........8200
      IF (LAKUSD.AND.(.NOT.ISLAKE(I))) THEN                              NODAL.........8300
         IQP = 0                                                         NODAL.........8400
         DO 215 IQP0=1,NSOPI                                             NODAL.........8500
            IF (IABS(IQSOP(IQP0)).EQ.I) THEN                             NODAL.........8600
               IQP = IQP0                                                NODAL.........8700
               EXIT                                                      NODAL.........8800
            END IF                                                       NODAL.........8900
  215    CONTINUE                                                        NODAL.........9000
      END IF                                                             NODAL.........9100
C                                                                        NODAL.........9200
      IF(ML-1) 220,220,230                                               NODAL.........9300
C                                                                        NODAL.........9400
C.....CALCULATE CELLWISE TERMS FOR P EQUATION.                           NODAL.........9500
C.....FOR STEADY-STATE FLOW, ISSFLO=2; FOR TRANSIENT FLOW, ISSFLO=0.     NODAL.........9600
  220 CONTINUE                                                           NODAL.........9700
      AFLN=(1-ISSFLO/2)*                                                 NODAL.........9800
     1   (SWRHON*SOP(I)+POR(I)*RHO(I)*DSWDP(I))*VOL(I)/DELTP             NODAL.........9900
      CFLN=POR(I)*SW(I)*DRWDU*VOL(I)                                     NODAL........10000
C      DUDT=(1-ISSFLO/2)*(UM1(I)-UM2(I))/DLTUM1                          NODAL........10100
C      CFLN=CFLN*DUDT                                                    NODAL........10200
      CFLN=CFLN*DUDTITR(I)                                               NODAL........10300
C.....ADD CELLWISE TERMS AND FLUID SOURCES OR FLUXES TO P EQUATION       NODAL........10400
      PMAT(IMID,JMID) = PMAT(IMID,JMID) + AFLN                           NODAL........10500
      PVEC(I) = PVEC(I) - CFLN + AFLN*PM1(I)                             NODAL........10600
      IF (LAKUSD) THEN                                                   NODAL........10700
         IF (.NOT.ISLAKE(I)) THEN                                        NODAL........10800
            IF (IQP.NE.0) THEN                                           NODAL........10900
               IF (LKBCSOP(IQP)) PVEC(I) = PVEC(I) + QIN(I)              NODAL........11000
            END IF                                                       NODAL........11100
         END IF                                                          NODAL........11200
      ELSE                                                               NODAL........11300
         PVEC(I) = PVEC(I) + QIN(I)                                      NODAL........11400
      END IF                                                             NODAL........11500
C                                                                        NODAL........11600
      IF(ML-1) 230,1000,230                                              NODAL........11700
C                                                                        NODAL........11800
C.....CALCULATE CELLWISE TERMS FOR U-EQUATION                            NODAL........11900
  230 CONTINUE                                                           NODAL........12000
      EPRS=(1.D0-POR(I))*RHOS                                            NODAL........12100
      ATRN=(1-ISSTRA)*(POR(I)*SWRHON*CW+EPRS*CS1(I))*VOL(I)/DELTU        NODAL........12200
      GTRN=POR(I)*SWRHON*PRODF1*VOL(I)                                   NODAL........12300
      GSV=EPRS*PRODS1*VOL(I)                                             NODAL........12400
      GSLTRN=GSV*SL(I)                                                   NODAL........12500
      GSRTRN=GSV*SR(I)                                                   NODAL........12600
      ETRN=(POR(I)*SWRHON*PRODF0+EPRS*PRODS0)*VOL(I)                     NODAL........12700
C.....CALCULATE SOURCES OF SOLUTE OR ENERGY CONTAINED IN                 NODAL........12800
C        SOURCES OF FLUID (ZERO CONTRIBUTION FOR OUTFLOWING FLUID)       NODAL........12900
      QUR=0.0D0                                                          NODAL........13000
      QUL=0.0D0                                                          NODAL........13100
      IF ((QINITR(I).LE.0D0).OR.(ISLAKE(I))) THEN                        NODAL........13200
         GOTO 360                                                        NODAL........13300
      ELSE                                                               NODAL........13400
         IF (LAKUSD) THEN                                                NODAL........13500
            IF (IQP.NE.0) THEN                                           NODAL........13600
               IF (.NOT.LKBCSOP(IQP)) GOTO 360                           NODAL........13700
            END IF                                                       NODAL........13800
         END IF                                                          NODAL........13900
      END IF                                                             NODAL........14000
  340 QUL=-CW*QINITR(I)                                                  NODAL........14100
      QUR=-QUL*UIN(I)                                                    NODAL........14200
C.....ADD CELLWISE TERMS, SOURCES OF SOLUTE OR ENERGY IN FLUID INFLOWS,  NODAL........14300
C        AND PURE SOURCES OR FLUXES OF SOLUTE OR ENERGY TO U-EQUATION    NODAL........14400
  360 IF(NOUMAT) 370,370,380                                             NODAL........14500
  370 UMAT(IMID,JMID) = UMAT(IMID,JMID) + ATRN - GTRN - GSLTRN - QUL     NODAL........14600
  380 UVEC(I) = UVEC(I) + ATRN*UM1(I) + ETRN + GSRTRN + QUR              NODAL........14700
      IF (.NOT.ISLAKE(I)) THEN                                           NODAL........14800
         IF (LAKUSD) THEN                                                NODAL........14900
            IQU = 0                                                      NODAL........15000
            DO 415 IQU0=1,NSOUI                                          NODAL........15100
               IF (IABS(IQSOU(IQU0)).EQ.I) THEN                          NODAL........15200
                  IQU = IQU0                                             NODAL........15300
                  EXIT                                                   NODAL........15400
               END IF                                                    NODAL........15500
  415       CONTINUE                                                     NODAL........15600
            IF (IQU.NE.0) THEN                                           NODAL........15700
               IF (LKBCSOU(IQU)) UVEC(I) = UVEC(I) + QUIN(I)             NODAL........15800
            END IF                                                       NODAL........15900
         ELSE                                                            NODAL........16000
            UVEC(I) = UVEC(I) + QUIN(I)                                  NODAL........16100
         END IF                                                          NODAL........16200
      END IF                                                             NODAL........16300
C                                                                        NODAL........16400
 1000 CONTINUE                                                           NODAL........16500
C                                                                        NODAL........16600
      RETURN                                                             NODAL........16700
      END                                                                NODAL........16800
C                                                                        NODAL........16900
C     SUBROUTINE        O  U  T  B  C  O  F        SUTRA VERSION 3.0     OUTBCOF........100
C                                                                        OUTBCOF........200
C *** PURPOSE :                                                          OUTBCOF........300
C ***  TO PRINT BOUNDARY CONDITION INFORMATION AT FLUID SOURCE/SINK      OUTBCOF........400
C ***  NODES IN A FLEXIBLE, COLUMNWISE FORMAT.  OUTPUT IS TO THE         OUTBCOF........500
C ***  BCOF FILE.                                                        OUTBCOF........600
C                                                                        OUTBCOF........700
      SUBROUTINE OUTBCOF(QIN,IQSOP,UVEC,UIN,QINITR,IBCSOP,TITLE1,TITLE2, OUTBCOF........800
     1   IIDSOP)                                                         OUTBCOF........900
      USE ALLARR, ONLY : CIDBCS                                          OUTBCOF.......1000
      USE EXPINT                                                         OUTBCOF.......1100
      USE SCHDEF                                                         OUTBCOF.......1200
      USE LARR, ONLY : ISLAKE,LKBCSOP                                    OUTBCOF.......1300
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                OUTBCOF.......1400
      PARAMETER (NCOLMX=9)                                               OUTBCOF.......1500
      CHARACTER*1  TITLE1(80),TITLE2(80)                                 OUTBCOF.......1600
      CHARACTER*14 CTYPE2                                                OUTBCOF.......1700
      CHARACTER*80 LAYSTR                                                OUTBCOF.......1800
      CHARACTER*10 BCDSTR(-1:4)                                          OUTBCOF.......1900
      CHARACTER*40 NOTAPP                                                OUTBCOF.......2000
      LOGICAL ONCEK10,ONCEK11,ONCEK12,ONCEK13,ONCEK14,ONCEK15            OUTBCOF.......2100
      INTEGER(1) IBCSOP(NSOP)                                            OUTBCOF.......2200
      INTEGER IIDSOP(NSOP)                                               OUTBCOF.......2300
      DIMENSION QIN(NN),IQSOP(NSOP),UVEC(NNVEC),UIN(NN),QINITR(NN)       OUTBCOF.......2400
      DIMENSION KTYPE(2)                                                 OUTBCOF.......2500
      DIMENSION J5COL(NCOLMX), J6COL(NCOLMX)                             OUTBCOF.......2600
      ALLOCATABLE TT(:),ITT(:)                                           OUTBCOF.......2700
      COMMON /CLAY/ LAYSTR                                               OUTBCOF.......2800
      COMMON /CONTRL/ GNUP,GNUU,UP,DTMULT,DTMAX,ME,ISSFLO,ISSTRA,ITCYC,  OUTBCOF.......2900
     1   NPCYC,NUCYC,NPRINT,NBCFPR,NBCSPR,NBCPPR,NBCUPR,NLAKPR,IREAD,    OUTBCOF.......3000
     1   NBGPPR,NBGUPR,ISTORE,NOUMAT,IUNSAT,IALSAT,KTYPE                 OUTBCOF.......3100
      COMMON /DIMLAY/ NLAYS,NNLAY,NELAY                                  OUTBCOF.......3200
      COMMON /DIMS/ NN,NE,NIN,NBI,NCBI,NB,NBHALF,NPBC,NUBC,              OUTBCOF.......3300
     1   NSOP,NSOU,NBCN,NPBG,NUBG,NCIDB                                  OUTBCOF.......3400
      COMMON /DIMX/ NWI,NWF,NWL,NELT,NNNX,NEX,N48                        OUTBCOF.......3500
      COMMON /DIMX2/ NELTA,NNVEC,NDIMIA,NDIMJA                           OUTBCOF.......3600
      COMMON /FUNITS/ K00,K0,K1,K2,K3,K4,K5,K6,K7,K8,K9,                 OUTBCOF.......3700
     1   K10,K11,K12,K13,K14,K15,K16,K17,K18,K19,K20,K21,K22,K23         OUTBCOF.......3800
      COMMON /GRAVEC/ GRAVX,GRAVY,GRAVZ                                  OUTBCOF.......3900
      COMMON /ITERAT/ RPM,RPMAX,RUM,RUMAX,ITER,ITRMAX,IPWORS,IUWORS      OUTBCOF.......4000
      COMMON /JCOLS/ NCOLPR,LCOLPR,NCOLS5,NCOLS6,J5COL,J6COL             OUTBCOF.......4100
      COMMON /KPRBCS/ KINACT                                             OUTBCOF.......4200
      COMMON /KPRINT/ KNODAL,KELMNT,KINCID,KPLOTP,KPLOTU,                OUTBCOF.......4300
     1   KPANDS,KVEL,KCORT,KBUDG,KSCRN,KPAUSE                            OUTBCOF.......4400
      COMMON /PARAMS/ COMPFL,COMPMA,DRWDU,CW,CS,RHOS,SIGMAW,SIGMAS,      OUTBCOF.......4500
     1   RHOW0,URHOW0,VISC0,PRODF1,PRODS1,PRODF0,PRODS0,CHI1,CHI2        OUTBCOF.......4600
      COMMON /PLT2/ ONCEK10, ONCEK11, ONCEK12, ONCEK13, ONCEK14, ONCEK15 OUTBCOF.......4700
      COMMON /SCH/ NSCH,ISCHTS,NSCHAU                                    OUTBCOF.......4800
      COMMON /SOLVI/ KSOLVP,KSOLVU,NN1,NN2,NN3                           OUTBCOF.......4900
      COMMON /TIMES/ DELT,TSEC,TMIN,THOUR,TDAY,TWEEK,TMONTH,TYEAR,       OUTBCOF.......5000
     1   TMAX,DELTP,DELTU,DLTPM1,DLTUM1,IT,ITBCS,ITRST,ITMAX,TSTART      OUTBCOF.......5100
      DATA (BCDSTR(M),M=-1,4)                                            OUTBCOF.......5200
     1   /'    BCTIME','       INP','       BCS','       BCS',           OUTBCOF.......5300
     2    '     LAKES','     LAKES'/                                     OUTBCOF.......5400
      DATA NOTAPP /"                                     N/A"/           OUTBCOF.......5500
      SAVE BCDSTR                                                        OUTBCOF.......5600
C                                                                        OUTBCOF.......5700
C.....CALCULATE HEADERS ON FIRST CALL AND CREATE OUTPUT ON EACH CALL.    OUTBCOF.......5800
C                                                                        OUTBCOF.......5900
C                                                                        OUTBCOF.......6000
      IF (.NOT. ONCEK10)  THEN                                           OUTBCOF.......6100
C.....FIRST CALL -- CREATE FILE HEADER.                                  OUTBCOF.......6200
C                                                                        OUTBCOF.......6300
C........CALCULATE THE MAXIMUM NUMBER OF TIME STEPS, KTMAX.              OUTBCOF.......6400
         KT=0                                                            OUTBCOF.......6500
         DO 4 JT=1,ITMAX                                                 OUTBCOF.......6600
            IF (MOD(JT,NBCFPR).EQ.0 .OR.                                 OUTBCOF.......6700
     1         ((JT.EQ.ITRST+1).AND.((ISSTRA.NE.0).OR.(NBCFPR.GT.0))))   OUTBCOF.......6800
     2         KT = KT + 1                                               OUTBCOF.......6900
    4    CONTINUE                                                        OUTBCOF.......7000
         IF(ITMAX.GT.1 .AND. MOD(ITMAX,NBCFPR).NE.0) KT = KT + 1         OUTBCOF.......7100
         KTMAX = KT                                                      OUTBCOF.......7200
C                                                                        OUTBCOF.......7300
C........ALLOCATE LOCAL ARRAYS                                           OUTBCOF.......7400
         ALLOCATE(TT(KTMAX),ITT(KTMAX))                                  OUTBCOF.......7500
C                                                                        OUTBCOF.......7600
C........CALCULATE AND PRINT TIME STEP INFORMATION                       OUTBCOF.......7700
         TS=TSTART                                                       OUTBCOF.......7800
C........TIME STEP VALUE                                                 OUTBCOF.......7900
         JT=0                                                            OUTBCOF.......8000
C........NUMBER OF PRINTED TIME STEPS                                    OUTBCOF.......8100
         KT=0                                                            OUTBCOF.......8200
C........TIME STEP INCREMENT                                             OUTBCOF.......8300
         DELTK=DELT                                                      OUTBCOF.......8400
         DO 10 JT=1,ITMAX                                                OUTBCOF.......8500
            JTP1 = JT + 1                                                OUTBCOF.......8600
            TS = SCHDLS(ISCHTS)%SLIST(JTP1)%DVALU1                       OUTBCOF.......8700
            IF (MOD(JT,NBCFPR).EQ.0 .OR.                                 OUTBCOF.......8800
     1         ((JT.EQ.ITRST+1).AND.((ISSTRA.NE.0).OR.(NBCFPR.GT.0))))   OUTBCOF.......8900
     2         THEN                                                      OUTBCOF.......9000
               KT = KT + 1                                               OUTBCOF.......9100
               TT(KT) = TS                                               OUTBCOF.......9200
               ITT(KT) = JT                                              OUTBCOF.......9300
            ENDIF                                                        OUTBCOF.......9400
   10    CONTINUE                                                        OUTBCOF.......9500
         IF (ISSTRA.EQ.1) THEN                                           OUTBCOF.......9600
            TT(KT) = TSTART                                              OUTBCOF.......9700
            ITT(KT) = 0                                                  OUTBCOF.......9800
         END IF                                                          OUTBCOF.......9900
C                                                                        OUTBCOF......10000
C                                                                        OUTBCOF......10100
C........PRINT LAST TIME STEP ALWAYS, UNLESS ALREADY PRINTED             OUTBCOF......10200
         IF(ITMAX.GT.1 .AND. MOD(ITMAX,NBCFPR).NE.0) THEN                OUTBCOF......10300
            KT = KT + 1                                                  OUTBCOF......10400
            TT(KT) = TS                                                  OUTBCOF......10500
            ITT(KT) = ITMAX                                              OUTBCOF......10600
         ENDIF                                                           OUTBCOF......10700
C                                                                        OUTBCOF......10800
C........COMPUTE ACTUAL NUMBER OF PRINTED TIME STEPS, KTPRN; LESS THAN   OUTBCOF......10900
C           KTMAX IF RUN IS A RESTART                                    OUTBCOF......11000
         IF (IREAD.EQ.+1) THEN                                           OUTBCOF......11100
            KTPRN = KTMAX                                                OUTBCOF......11200
         ELSE                                                            OUTBCOF......11300
            KTPRN = 0                                                    OUTBCOF......11400
            DO 17 KT=1,KTMAX                                             OUTBCOF......11500
               IF (ITT(KT).GT.ITRST) KTPRN = KTPRN + 1                   OUTBCOF......11600
   17       CONTINUE                                                     OUTBCOF......11700
         END IF                                                          OUTBCOF......11800
C                                                                        OUTBCOF......11900
C........WRITE HEADER INFORMATION                                        OUTBCOF......12000
         WRITE(K10,950) TITLE1, TITLE2                                   OUTBCOF......12100
         IF (KTYPE(2).GT.1) THEN                                         OUTBCOF......12200
            IF (KTYPE(2).EQ.3) THEN                                      OUTBCOF......12300
               CTYPE2 = "BLOCKWISE MESH"                                 OUTBCOF......12400
            ELSE                                                         OUTBCOF......12500
               CTYPE2 = "REGULAR MESH  "                                 OUTBCOF......12600
            END IF                                                       OUTBCOF......12700
            IF (KTYPE(1).EQ.3) THEN                                      OUTBCOF......12800
               WRITE(K10,951) KTYPE(1),CTYPE2,NN1,NN2,NN3,NN," Nodes",   OUTBCOF......12900
     1            NE, " Elems"                                           OUTBCOF......13000
            ELSE                                                         OUTBCOF......13100
               WRITE(K10,952) KTYPE(1),CTYPE2,NN1,NN2,NN," Nodes",       OUTBCOF......13200
     1            NE, " Elems"                                           OUTBCOF......13300
            END IF                                                       OUTBCOF......13400
         ELSE IF (KTYPE(2).EQ.1) THEN                                    OUTBCOF......13500
            WRITE(K10,953) KTYPE(1), LAYSTR(1:6), NLAYS, NNLAY,          OUTBCOF......13600
     1         NN, " Nodes", NE, " Elems"                                OUTBCOF......13700
         ELSE                                                            OUTBCOF......13800
            WRITE(K10,954) KTYPE(1), NN, " Nodes", NE, " Elems"          OUTBCOF......13900
         END IF                                                          OUTBCOF......14000
         WRITE(K10,960) "FLUID SOURCE/SINK NODE RESULTS", KTPRN          OUTBCOF......14100
         DO 920 KT=1,KTMAX                                               OUTBCOF......14200
            IF ((ITT(KT).GT.ITRST).OR.(ISSFLO.NE.0))                     OUTBCOF......14300
     1         WRITE(K10,961) ITT(KT), TT(KT)                            OUTBCOF......14400
  920    CONTINUE                                                        OUTBCOF......14500
  950    FORMAT("## ", 80A1,                                             OUTBCOF......14600
     1         /"## ", 80A1,                                             OUTBCOF......14700
     2         /"## ")                                                   OUTBCOF......14800
  951    FORMAT("## ", I1, "-D, ", A, 2X,                                OUTBCOF......14900
     1                 "(", 2(I9, ")*("), I9, ") = ", I9, A, 1X,         OUTBCOF......15000
     2                 "(", I9, A, ")"                                   OUTBCOF......15100
     3         /"## ")                                                   OUTBCOF......15200
  952    FORMAT("## ", I1, "-D, ", A, 14X,                               OUTBCOF......15300
     1                 "(", I9, ")*(", I9, ") = ", I9, A, 1X,            OUTBCOF......15400
     2                 "(", I9, A, ")"                                   OUTBCOF......15500
     3         /"## ")                                                   OUTBCOF......15600
  953    FORMAT("## ", I1, "-D, LAYERED MESH [", A6, "]", 7X,            OUTBCOF......15700
     1                 "(", I9, ")*(", I9, ") = ", I9, A, 1X,            OUTBCOF......15800
     2                 "(", I9, A, ")"                                   OUTBCOF......15900
     3         /"## ")                                                   OUTBCOF......16000
  954    FORMAT("## ", I1, "-D, IRREGULAR MESH", 40X, I9, A, 1X,         OUTBCOF......16100
     1                 "(", I9, A, ")"                                   OUTBCOF......16200
     2         /"## ")                                                   OUTBCOF......16300
  960    FORMAT("## ", 92("="),                                          OUTBCOF......16400
     1         /"## ", A, 34X, I9, " Time steps printed",                OUTBCOF......16500
     2         /"## ", 92("="),                                          OUTBCOF......16600
     3         /"## ",                                                   OUTBCOF......16700
     4         /"## ", 4X, "Time steps"                                  OUTBCOF......16800
     5         /"## ", 3X, "in this file      Time (sec)"                OUTBCOF......16900
     6         /"## ", 2X, 14("-"), 3X, 13("-"))                         OUTBCOF......17000
  961    FORMAT ("## ", 7X, I8, 4X, 1PE13.6)                             OUTBCOF......17100
C                                                                        OUTBCOF......17200
C........DEALLOCATE LOCAL ARRAYS.                                        OUTBCOF......17300
         DEALLOCATE(TT,ITT)                                              OUTBCOF......17400
C                                                                        OUTBCOF......17500
         ONCEK10 = .TRUE.                                                OUTBCOF......17600
      ENDIF                                                              OUTBCOF......17700
C                                                                        OUTBCOF......17800
C.....NODEWISE HEADER INFORMATION REPEATED BEFORE EACH TIME STEP         OUTBCOF......17900
      IF ((IT.EQ.0).OR.((IT.EQ.1).AND.(ISSTRA.EQ.1))) THEN               OUTBCOF......18000
         DURN = 0D0                                                      OUTBCOF......18100
         TOUT = TSTART                                                   OUTBCOF......18200
         ITOUT = 0                                                       OUTBCOF......18300
      ELSE                                                               OUTBCOF......18400
         DURN = DELT                                                     OUTBCOF......18500
         TOUT = TSEC                                                     OUTBCOF......18600
         ITOUT = IT                                                      OUTBCOF......18700
      END IF                                                             OUTBCOF......18800
      WRITE(K10,966) ITOUT, DURN, TOUT                                   OUTBCOF......18900
  966 FORMAT('## ',                                                      OUTBCOF......19000
     1      /'## ', 131('='),                                            OUTBCOF......19100
     2      /'## TIME STEP ', I8, 61X, 'Duration: ', 1PE11.4, ' sec',    OUTBCOF......19200
     3                            6X, 'Time: ', 1PE11.4, ' sec',         OUTBCOF......19300
     4      /'## ', 131('='))                                            OUTBCOF......19400
      IF (ME .GT. 0) THEN                                                OUTBCOF......19500
         WRITE(K10,967)                                                  OUTBCOF......19600
      ELSE                                                               OUTBCOF......19700
         WRITE(K10,968)                                                  OUTBCOF......19800
      END IF                                                             OUTBCOF......19900
  967 FORMAT(                                                            OUTBCOF......20000
     1    '## ',76X,'Specified',9X,'Temperature of',14X,'Resultant'      OUTBCOF......20100
     2   /'## ',66X,'source/sink(+/-) of',6X,'fluid source/sink',        OUTBCOF......20200
     3           4X,'source/sink(+/-) of'                                OUTBCOF......20300
     4   /'##   Node    Defined in',28X,'BCS identifier',                OUTBCOF......20400
     5           7X,'fluid (mass/sec)',14X,'(degrees)',                  OUTBCOF......20500
     6           4X,'energy (energy/sec)')                               OUTBCOF......20600
  968 FORMAT(                                                            OUTBCOF......20700
     1    '## ',76X,'Specified',9X,'Solute conc of',14X,'Resultant'      OUTBCOF......20800
     2   /'## ',66X,'source/sink(+/-) of',6X,'fluid source/sink',        OUTBCOF......20900
     3           4X,'source/sink(+/-) of'                                OUTBCOF......21000
     4   /'##   Node    Defined in',28X,'BCS identifier',                OUTBCOF......21100
     5           7X,'fluid (mass/sec)',5X,'(sol mass/fl mass)',          OUTBCOF......21200
     6           6X,'solute (mass/sec)')                                 OUTBCOF......21300
C                                                                        OUTBCOF......21400
C.....BOUNDARY CONDITION INFORMATION FOR THIS TIME STEP                  OUTBCOF......21500
      NSOPI=NSOP-1                                                       OUTBCOF......21600
      IF (NSOPI.GT.0) THEN                                               OUTBCOF......21700
      DO 990 IQP=1,NSOPI                                                 OUTBCOF......21800
      I=IABS(IQSOP(IQP))                                                 OUTBCOF......21900
      IBC = IBCSOP(IQP)                                                  OUTBCOF......22000
      IF ((IBC.LT.2).AND.LKBCSOP(IQP)) THEN                              OUTBCOF......22100
         CALL BUDSOP(IQP,QINVAL,QIUVAL,QEXGW,QEXLK,QEXRO,                OUTBCOF......22200
     1      QUEXGW,QUEXLK,QUEXRO,UEX)                                    OUTBCOF......22300
         UU = UEX                                                        OUTBCOF......22400
         UUCUT = CUTSML(UU)                                              OUTBCOF......22500
         IF (IBC.GT.0) THEN                                              OUTBCOF......22600
            WRITE(K10,980) I,                                            OUTBCOF......22700
     1         BCDSTR(IBC),ADJUSTR(CIDBCS(IIDSOP(IQP))),                 OUTBCOF......22800
     2         QINVAL,UUCUT,CUTSML(QIUVAL)                               OUTBCOF......22900
         ELSE                                                            OUTBCOF......23000
            WRITE(K10,980) I,BCDSTR(IBC),NOTAPP,QINVAL,UUCUT,            OUTBCOF......23100
     1         CUTSML(QIUVAL)                                            OUTBCOF......23200
         END IF                                                          OUTBCOF......23300
  980    FORMAT(I9,4X,A10,2X,A40,3(8X,1PE15.7))                          OUTBCOF......23400
      ELSE IF (KINACT.EQ.1) THEN                                         OUTBCOF......23500
         IF (IBC.EQ.2) THEN                                              OUTBCOF......23600
            WRITE(K10,982) I,                                            OUTBCOF......23700
     1         BCDSTR(IBC),ADJUSTR(CIDBCS(IIDSOP(IQP))),                 OUTBCOF......23800
     2         "INACTIVE","INACTIVE","INACTIVE"                          OUTBCOF......23900
         ELSE                                                            OUTBCOF......24000
            IF (.NOT.LKBCSOP(IQP)) IBC = 4                               OUTBCOF......24100
            WRITE(K10,982) I,                                            OUTBCOF......24200
     1         BCDSTR(IBC),NOTAPP,                                       OUTBCOF......24300
     2         "INACTIVE","INACTIVE","INACTIVE"                          OUTBCOF......24400
         END IF                                                          OUTBCOF......24500
  982    FORMAT(I9,4X,A10,2X,A40,3(15X,A8))                              OUTBCOF......24600
      END IF                                                             OUTBCOF......24700
  990 CONTINUE                                                           OUTBCOF......24800
      END IF                                                             OUTBCOF......24900
C                                                                        OUTBCOF......25000
      RETURN                                                             OUTBCOF......25100
C                                                                        OUTBCOF......25200
      END                                                                OUTBCOF......25300
C                                                                        OUTBCOF......25400
C     SUBROUTINE        O  U  T  B  C  O  P        SUTRA VERSION 3.0     OUTBCOP........100
C                                                                        OUTBCOP........200
C *** PURPOSE :                                                          OUTBCOP........300
C ***  TO PRINT BOUNDARY CONDITION INFORMATION AT SPECIFIED PRESSURE     OUTBCOP........400
C ***  NODES IN A FLEXIBLE, COLUMNWISE FORMAT.  OUTPUT IS TO THE         OUTBCOP........500
C ***  BCOP FILE.                                                        OUTBCOP........600
C                                                                        OUTBCOP........700
      SUBROUTINE OUTBCOP(PVEC,UVEC,PBC,UBC,QPLITR,GNUPP,IPBC,IBCPBC,     OUTBCOP........800
     1   TITLE1,TITLE2,IIDPBC)                                           OUTBCOP........900
      USE ALLARR, ONLY : CIDBCS                                          OUTBCOP.......1000
      USE EXPINT                                                         OUTBCOP.......1100
      USE SCHDEF                                                         OUTBCOP.......1200
      USE LARR, ONLY : ISLAKE,LAKNOD,PLK,ULK,LKBCPBC                     OUTBCOP.......1300
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                OUTBCOP.......1400
      PARAMETER (NCOLMX=9)                                               OUTBCOP.......1500
      CHARACTER*1  TITLE1(80),TITLE2(80)                                 OUTBCOP.......1600
      CHARACTER*14 CTYPE2                                                OUTBCOP.......1700
      CHARACTER*80 LAYSTR                                                OUTBCOP.......1800
      CHARACTER*10 BCDSTR(-1:4)                                          OUTBCOP.......1900
      CHARACTER*40 NOTAPP                                                OUTBCOP.......2000
      LOGICAL ONCEK10,ONCEK11,ONCEK12,ONCEK13,ONCEK14,ONCEK15            OUTBCOP.......2100
      INTEGER(1) IBCPBC(NBCN)                                            OUTBCOP.......2200
      INTEGER IIDPBC(NBCN)                                               OUTBCOP.......2300
      DIMENSION PVEC(NNVEC),UVEC(NNVEC),PBC(NBCN),UBC(NBCN)              OUTBCOP.......2400
      DIMENSION QPLITR(NBCN),GNUPP(NBCN)                                 OUTBCOP.......2500
      DIMENSION IPBC(NBCN)                                               OUTBCOP.......2600
      DIMENSION KTYPE(2)                                                 OUTBCOP.......2700
      DIMENSION J5COL(NCOLMX), J6COL(NCOLMX)                             OUTBCOP.......2800
      ALLOCATABLE TT(:),ITT(:)                                           OUTBCOP.......2900
      COMMON /CLAY/ LAYSTR                                               OUTBCOP.......3000
      COMMON /CONTRL/ GNUP,GNUU,UP,DTMULT,DTMAX,ME,ISSFLO,ISSTRA,ITCYC,  OUTBCOP.......3100
     1   NPCYC,NUCYC,NPRINT,NBCFPR,NBCSPR,NBCPPR,NBCUPR,NLAKPR,IREAD,    OUTBCOP.......3200
     1   NBGPPR,NBGUPR,ISTORE,NOUMAT,IUNSAT,IALSAT,KTYPE                 OUTBCOP.......3300
      COMMON /DIMLAY/ NLAYS,NNLAY,NELAY                                  OUTBCOP.......3400
      COMMON /DIMS/ NN,NE,NIN,NBI,NCBI,NB,NBHALF,NPBC,NUBC,              OUTBCOP.......3500
     1   NSOP,NSOU,NBCN,NPBG,NUBG,NCIDB                                  OUTBCOP.......3600
      COMMON /DIMSRF/ MAXCON, NNSURF, NNVERT                             OUTBCOP.......3700
      COMMON /DIMX/ NWI,NWF,NWL,NELT,NNNX,NEX,N48                        OUTBCOP.......3800
      COMMON /DIMX2/ NELTA,NNVEC,NDIMIA,NDIMJA                           OUTBCOP.......3900
      COMMON /FUNITS/ K00,K0,K1,K2,K3,K4,K5,K6,K7,K8,K9,                 OUTBCOP.......4000
     1   K10,K11,K12,K13,K14,K15,K16,K17,K18,K19,K20,K21,K22,K23         OUTBCOP.......4100
      COMMON /GRAVEC/ GRAVX,GRAVY,GRAVZ                                  OUTBCOP.......4200
      COMMON /ITERAT/ RPM,RPMAX,RUM,RUMAX,ITER,ITRMAX,IPWORS,IUWORS      OUTBCOP.......4300
      COMMON /JCOLS/ NCOLPR,LCOLPR,NCOLS5,NCOLS6,J5COL,J6COL             OUTBCOP.......4400
      COMMON /KPRBCS/ KINACT                                             OUTBCOP.......4500
      COMMON /KPRINT/ KNODAL,KELMNT,KINCID,KPLOTP,KPLOTU,                OUTBCOP.......4600
     1   KPANDS,KVEL,KCORT,KBUDG,KSCRN,KPAUSE                            OUTBCOP.......4700
      COMMON /PARAMS/ COMPFL,COMPMA,DRWDU,CW,CS,RHOS,SIGMAW,SIGMAS,      OUTBCOP.......4800
     1   RHOW0,URHOW0,VISC0,PRODF1,PRODS1,PRODF0,PRODS0,CHI1,CHI2        OUTBCOP.......4900
      COMMON /PLT2/ ONCEK10, ONCEK11, ONCEK12, ONCEK13, ONCEK14, ONCEK15 OUTBCOP.......5000
      COMMON /SCH/ NSCH,ISCHTS,NSCHAU                                    OUTBCOP.......5100
      COMMON /SOLVI/ KSOLVP,KSOLVU,NN1,NN2,NN3                           OUTBCOP.......5200
      COMMON /TIMES/ DELT,TSEC,TMIN,THOUR,TDAY,TWEEK,TMONTH,TYEAR,       OUTBCOP.......5300
     1   TMAX,DELTP,DELTU,DLTPM1,DLTUM1,IT,ITBCS,ITRST,ITMAX,TSTART      OUTBCOP.......5400
      DATA (BCDSTR(M),M=-1,4)                                            OUTBCOP.......5500
     1   /'    BCTIME','       INP','       BCS','       BCS',           OUTBCOP.......5600
     2    '     LAKES','     LAKES'/                                     OUTBCOP.......5700
      DATA NOTAPP /"                                     N/A"/           OUTBCOP.......5800
      SAVE BCDSTR                                                        OUTBCOP.......5900
C                                                                        OUTBCOP.......6000
C.....CALCULATE HEADERS ON FIRST CALL AND CREATE OUTPUT ON EACH CALL.    OUTBCOP.......6100
C                                                                        OUTBCOP.......6200
C                                                                        OUTBCOP.......6300
      IF (.NOT. ONCEK12)  THEN                                           OUTBCOP.......6400
C.....FIRST CALL -- CREATE FILE HEADER.                                  OUTBCOP.......6500
C                                                                        OUTBCOP.......6600
C........CALCULATE THE MAXIMUM NUMBER OF TIME STEPS, KTMAX.              OUTBCOP.......6700
         KT=0                                                            OUTBCOP.......6800
         DO 4 JT=1,ITMAX                                                 OUTBCOP.......6900
            IF (MOD(JT,NBCPPR).EQ.0 .OR.                                 OUTBCOP.......7000
     1         ((JT.EQ.ITRST+1).AND.((ISSTRA.NE.0).OR.(NBCPPR.GT.0))))   OUTBCOP.......7100
     2         KT = KT + 1                                               OUTBCOP.......7200
    4    CONTINUE                                                        OUTBCOP.......7300
         IF(ITMAX.GT.1 .AND. MOD(ITMAX,NBCPPR).NE.0) KT = KT + 1         OUTBCOP.......7400
         KTMAX = KT                                                      OUTBCOP.......7500
C                                                                        OUTBCOP.......7600
C........ALLOCATE LOCAL ARRAYS                                           OUTBCOP.......7700
         ALLOCATE(TT(KTMAX),ITT(KTMAX))                                  OUTBCOP.......7800
C                                                                        OUTBCOP.......7900
C........CALCULATE AND PRINT TIME STEP INFORMATION                       OUTBCOP.......8000
         TS=TSTART                                                       OUTBCOP.......8100
C........TIME STEP VALUE                                                 OUTBCOP.......8200
         JT=0                                                            OUTBCOP.......8300
C........NUMBER OF PRINTED TIME STEPS                                    OUTBCOP.......8400
         KT=0                                                            OUTBCOP.......8500
C........TIME STEP INCREMENT                                             OUTBCOP.......8600
         DELTK=DELT                                                      OUTBCOP.......8700
         DO 10 JT=1,ITMAX                                                OUTBCOP.......8800
            JTP1 = JT + 1                                                OUTBCOP.......8900
            TS = SCHDLS(ISCHTS)%SLIST(JTP1)%DVALU1                       OUTBCOP.......9000
            IF (MOD(JT,NBCPPR).EQ.0 .OR.                                 OUTBCOP.......9100
     1         ((JT.EQ.ITRST+1).AND.((ISSTRA.NE.0).OR.(NBCPPR.GT.0))))   OUTBCOP.......9200
     2         THEN                                                      OUTBCOP.......9300
               KT = KT + 1                                               OUTBCOP.......9400
               TT(KT) = TS                                               OUTBCOP.......9500
               ITT(KT) = JT                                              OUTBCOP.......9600
            ENDIF                                                        OUTBCOP.......9700
   10    CONTINUE                                                        OUTBCOP.......9800
         IF (ISSTRA.EQ.1) THEN                                           OUTBCOP.......9900
            TT(KT) = TSTART                                              OUTBCOP......10000
            ITT(KT) = 0                                                  OUTBCOP......10100
         END IF                                                          OUTBCOP......10200
C                                                                        OUTBCOP......10300
C                                                                        OUTBCOP......10400
C........PRINT LAST TIME STEP ALWAYS, UNLESS ALREADY PRINTED             OUTBCOP......10500
         IF(ITMAX.GT.1 .AND. MOD(ITMAX,NBCPPR).NE.0) THEN                OUTBCOP......10600
            KT = KT + 1                                                  OUTBCOP......10700
            TT(KT) = TS                                                  OUTBCOP......10800
            ITT(KT) = ITMAX                                              OUTBCOP......10900
         ENDIF                                                           OUTBCOP......11000
C                                                                        OUTBCOP......11100
C........COMPUTE ACTUAL NUMBER OF PRINTED TIME STEPS, KTPRN; LESS THAN   OUTBCOP......11200
C           KTMAX IF RUN IS A RESTART                                    OUTBCOP......11300
         IF (IREAD.EQ.+1) THEN                                           OUTBCOP......11400
            KTPRN = KTMAX                                                OUTBCOP......11500
         ELSE                                                            OUTBCOP......11600
            KTPRN = 0                                                    OUTBCOP......11700
            DO 17 KT=1,KTMAX                                             OUTBCOP......11800
               IF (ITT(KT).GT.ITRST) KTPRN = KTPRN + 1                   OUTBCOP......11900
   17       CONTINUE                                                     OUTBCOP......12000
         END IF                                                          OUTBCOP......12100
C                                                                        OUTBCOP......12200
C........WRITE HEADER INFORMATION                                        OUTBCOP......12300
         WRITE(K12,950) TITLE1, TITLE2                                   OUTBCOP......12400
         IF (KTYPE(2).GT.1) THEN                                         OUTBCOP......12500
            IF (KTYPE(2).EQ.3) THEN                                      OUTBCOP......12600
               CTYPE2 = "BLOCKWISE MESH"                                 OUTBCOP......12700
            ELSE                                                         OUTBCOP......12800
               CTYPE2 = "REGULAR MESH  "                                 OUTBCOP......12900
            END IF                                                       OUTBCOP......13000
            IF (KTYPE(1).EQ.3) THEN                                      OUTBCOP......13100
               WRITE(K12,951) KTYPE(1),CTYPE2,NN1,NN2,NN3,NN," Nodes",   OUTBCOP......13200
     1            NE, " Elems"                                           OUTBCOP......13300
            ELSE                                                         OUTBCOP......13400
               WRITE(K12,952) KTYPE(1),CTYPE2,NN1,NN2,NN," Nodes",       OUTBCOP......13500
     1            NE, " Elems"                                           OUTBCOP......13600
            END IF                                                       OUTBCOP......13700
         ELSE IF (KTYPE(2).EQ.1) THEN                                    OUTBCOP......13800
            WRITE(K12,953) KTYPE(1), LAYSTR(1:6), NLAYS, NNLAY,          OUTBCOP......13900
     1         NN, " Nodes", NE, " Elems"                                OUTBCOP......14000
         ELSE                                                            OUTBCOP......14100
            WRITE(K12,954) KTYPE(1), NN, " Nodes", NE, " Elems"          OUTBCOP......14200
         END IF                                                          OUTBCOP......14300
         WRITE(K12,960) "SPECIFIED-PRESSURE NODE RESULTS", KTPRN         OUTBCOP......14400
         DO 920 KT=1,KTMAX                                               OUTBCOP......14500
            IF ((ITT(KT).GT.ITRST).OR.(ISSFLO.NE.0))                     OUTBCOP......14600
     1         WRITE(K12,961) ITT(KT), TT(KT)                            OUTBCOP......14700
  920    CONTINUE                                                        OUTBCOP......14800
  950    FORMAT("## ", 80A1,                                             OUTBCOP......14900
     1         /"## ", 80A1,                                             OUTBCOP......15000
     2         /"## ")                                                   OUTBCOP......15100
  951    FORMAT("## ", I1, "-D, ", A, 2X,                                OUTBCOP......15200
     1                 "(", 2(I9, ")*("), I9, ") = ", I9, A, 1X,         OUTBCOP......15300
     2                 "(", I9, A, ")"                                   OUTBCOP......15400
     3         /"## ")                                                   OUTBCOP......15500
  952    FORMAT("## ", I1, "-D, ", A, 14X,                               OUTBCOP......15600
     1                 "(", I9, ")*(", I9, ") = ", I9, A, 1X,            OUTBCOP......15700
     2                 "(", I9, A, ")"                                   OUTBCOP......15800
     3         /"## ")                                                   OUTBCOP......15900
  953    FORMAT("## ", I1, "-D, LAYERED MESH [", A6, "]", 7X,            OUTBCOP......16000
     1                 "(", I9, ")*(", I9, ") = ", I9, A, 1X,            OUTBCOP......16100
     2                 "(", I9, A, ")"                                   OUTBCOP......16200
     3         /"## ")                                                   OUTBCOP......16300
  954    FORMAT("## ", I1, "-D, IRREGULAR MESH", 40X, I9, A, 1X,         OUTBCOP......16400
     1                 "(", I9, A, ")"                                   OUTBCOP......16500
     2         /"## ")                                                   OUTBCOP......16600
  960    FORMAT("## ", 92("="),                                          OUTBCOP......16700
     1         /"## ", A, 33X, I9, " Time steps printed",                OUTBCOP......16800
     2         /"## ", 92("="),                                          OUTBCOP......16900
     3         /"## ",                                                   OUTBCOP......17000
     4         /"## ", 4X, "Time steps"                                  OUTBCOP......17100
     5         /"## ", 3X, "in this file      Time (sec)"                OUTBCOP......17200
     6         /"## ", 2X, 14("-"), 3X, 13("-"))                         OUTBCOP......17300
  961    FORMAT ("## ", 7X, I8, 4X, 1PE13.6)                             OUTBCOP......17400
C                                                                        OUTBCOP......17500
C........DEALLOCATE LOCAL ARRAYS.                                        OUTBCOP......17600
         DEALLOCATE(TT,ITT)                                              OUTBCOP......17700
C                                                                        OUTBCOP......17800
         ONCEK12 = .TRUE.                                                OUTBCOP......17900
      ENDIF                                                              OUTBCOP......18000
C                                                                        OUTBCOP......18100
C.....NODEWISE HEADER INFORMATION REPEATED BEFORE EACH TIME STEP         OUTBCOP......18200
      IF ((IT.EQ.0).OR.((IT.EQ.1).AND.(ISSTRA.EQ.1))) THEN               OUTBCOP......18300
         DURN = 0D0                                                      OUTBCOP......18400
         TOUT = TSTART                                                   OUTBCOP......18500
         ITOUT = 0                                                       OUTBCOP......18600
      ELSE                                                               OUTBCOP......18700
         DURN = DELT                                                     OUTBCOP......18800
         TOUT = TSEC                                                     OUTBCOP......18900
         ITOUT = IT                                                      OUTBCOP......19000
      END IF                                                             OUTBCOP......19100
      WRITE(K12,966) ITOUT, DURN, TOUT                                   OUTBCOP......19200
  966 FORMAT('## ',                                                      OUTBCOP......19300
     1      /'## ', 177('='),                                            OUTBCOP......19400
     2      /'## TIME STEP ', I8, 107X, 'Duration: ', 1PE11.4, ' sec',   OUTBCOP......19500
     3                            6X, 'Time: ', 1PE11.4, ' sec',         OUTBCOP......19600
     4      /'## ', 177('='))                                            OUTBCOP......19700
      IF (ME .GT. 0) THEN                                                OUTBCOP......19800
         WRITE(K12,967)                                                  OUTBCOP......19900
      ELSE                                                               OUTBCOP......20000
         WRITE(K12,968)                                                  OUTBCOP......20100
      END IF                                                             OUTBCOP......20200
  967 FORMAT(                                                            OUTBCOP......20300
     1    '## ',76X,'Resultant',9X,'Temperature of',14X,'Resultant'      OUTBCOP......20400
     2   /'## ',66X,'source/sink(+/-) of',6X,'fluid source/sink',        OUTBCOP......20500
     3           4X,'source/sink(+/-) of'                                OUTBCOP......20600
     4   /'##   Node    Defined in',28X,'BCS identifier',                OUTBCOP......20700
     5           7X,'fluid (mass/sec)',14X,'(degrees)',                  OUTBCOP......20800
     6           4X,'energy (energy/sec)',6X,'Computed pressure',        OUTBCOP......20900
     7           5X,'Specified pressure')                                OUTBCOP......21000
  968 FORMAT(                                                            OUTBCOP......21100
     1    '## ',76X,'Resultant',9X,'Solute conc of',14X,'Resultant'      OUTBCOP......21200
     2   /'## ',66X,'source/sink(+/-) of',6X,'fluid source/sink',        OUTBCOP......21300
     3           4X,'source/sink(+/-) of'                                OUTBCOP......21400
     4   /'##   Node    Defined in',28X,'BCS identifier',                OUTBCOP......21500
     5           7X,'fluid (mass/sec)',5X,'(sol mass/fl mass)',          OUTBCOP......21600
     6           6X,'solute (mass/sec)',6X,'Computed pressure',          OUTBCOP......21700
     7           5X,'Specified pressure')                                OUTBCOP......21800
C                                                                        OUTBCOP......21900
C.....BOUNDARY CONDITION INFORMATION FOR THIS TIME STEP                  OUTBCOP......22000
      IF (NPBC.GT.0) THEN                                                OUTBCOP......22100
      DO 990 IP=1,NPBC                                                   OUTBCOP......22200
      I=IABS(IPBC(IP))                                                   OUTBCOP......22300
      IBC = IBCPBC(IP)                                                   OUTBCOP......22400
      IF ((IBC.LT.2).AND.(LKBCPBC(IP))) THEN                             OUTBCOP......22500
         CALL BUDPBC(IP,QPBC,QUPBC,QEXGW,QEXLK,QEXRO,                    OUTBCOP......22600
     1      QUEXGW,QUEXLK,QUEXRO,UEX,PEX)                                OUTBCOP......22700
         QPLVAL = QPBC                                                   OUTBCOP......22800
         QPUVAL = QUPBC                                                  OUTBCOP......22900
         UU = UEX                                                        OUTBCOP......23000
         UUCUT = CUTSML(UU)                                              OUTBCOP......23100
         IF (IBC.GT.0) THEN                                              OUTBCOP......23200
            WRITE(K12,980) I,                                            OUTBCOP......23300
     1         BCDSTR(IBC),ADJUSTR(CIDBCS(IIDPBC(IP))),                  OUTBCOP......23400
     2         CUTSML(QPLVAL),UUCUT,CUTSML(QPUVAL),CUTSML(PVEC(I)),      OUTBCOP......23500
     3         PEX                                                       OUTBCOP......23600
         ELSE                                                            OUTBCOP......23700
            WRITE(K12,980) I,                                            OUTBCOP......23800
     1         BCDSTR(IBC),NOTAPP,                                       OUTBCOP......23900
     2         CUTSML(QPLVAL),UUCUT,CUTSML(QPUVAL),CUTSML(PVEC(I)),      OUTBCOP......24000
     3         PEX                                                       OUTBCOP......24100
         END IF                                                          OUTBCOP......24200
  980    FORMAT(I9,4X,A10,2X,A40,3(8X,1PE15.7),2(8X,1PE15.8))            OUTBCOP......24300
      ELSE IF (KINACT.EQ.1) THEN                                         OUTBCOP......24400
         IF (IBC.EQ.2) THEN                                              OUTBCOP......24500
            WRITE(K12,982) I,                                            OUTBCOP......24600
     1         BCDSTR(IBC),ADJUSTR(CIDBCS(IIDPBC(IP))),                  OUTBCOP......24700
     2         "INACTIVE","INACTIVE","INACTIVE","INACTIVE","INACTIVE"    OUTBCOP......24800
         ELSE                                                            OUTBCOP......24900
            IF (.NOT.LKBCPBC(IP)) IBC = 4                                OUTBCOP......25000
            WRITE(K12,982) I,                                            OUTBCOP......25100
     1         BCDSTR(IBC),NOTAPP,                                       OUTBCOP......25200
     2         "INACTIVE","INACTIVE","INACTIVE","INACTIVE","INACTIVE"    OUTBCOP......25300
         END IF                                                          OUTBCOP......25400
  982    FORMAT(I9,4X,A10,2X,A40,5(15X,A8))                              OUTBCOP......25500
      END IF                                                             OUTBCOP......25600
  990 CONTINUE                                                           OUTBCOP......25700
      END IF                                                             OUTBCOP......25800
C                                                                        OUTBCOP......25900
      RETURN                                                             OUTBCOP......26000
C                                                                        OUTBCOP......26100
      END                                                                OUTBCOP......26200
C                                                                        OUTBCOP......26300
C     SUBROUTINE        O  U  T  B  C  O  P  G     SUTRA VERSION 3.0     OUTBCOPG.......100
C                                                                        OUTBCOPG.......200
C *** PURPOSE :                                                          OUTBCOPG.......300
C ***  TO PRINT BOUNDARY CONDITION INFORMATION AT GENERALIZED-FLOW       OUTBCOPG.......400
C ***  NODES IN A FLEXIBLE, COLUMNWISE FORMAT.  OUTPUT IS TO THE         OUTBCOPG.......500
C ***  BCOPG FILE.                                                       OUTBCOPG.......600
C                                                                        OUTBCOPG.......700
      SUBROUTINE OUTBCOPG(PVEC,UVEC,PBG1,QPBG1,PBG2,QPBG2,UPBGI,UPBGO,   OUTBCOPG.......800
     1   QPBGIC,GNUPG,QPGITR,IPBG,IBCPBG,IIDPBG,CPQL1,CPQL2,CUPBGO,      OUTBCOPG.......900
     2   TITLE1,TITLE2)                                                  OUTBCOPG......1000
      USE ALLARR, ONLY : CIDBCS                                          OUTBCOPG......1100
      USE EXPINT                                                         OUTBCOPG......1200
      USE SCHDEF                                                         OUTBCOPG......1300
      USE LARR, ONLY : ISLAKE,LAKNOD,PLK,ULK,LKBCPBG                     OUTBCOPG......1400
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                OUTBCOPG......1500
      PARAMETER (NCOLMX=9)                                               OUTBCOPG......1600
      CHARACTER*1  TITLE1(80),TITLE2(80)                                 OUTBCOPG......1700
      CHARACTER*14 CTYPE2                                                OUTBCOPG......1800
      CHARACTER*80 LAYSTR                                                OUTBCOPG......1900
      CHARACTER*10 BCDSTR(-1:4)                                          OUTBCOPG......2000
      CHARACTER*40 NOTAPP                                                OUTBCOPG......2100
      CHARACTER*1 CPQL1(NPBG),CPQL2(NPBG)                                OUTBCOPG......2200
      CHARACTER*3 CUPBGO(NPBG)                                           OUTBCOPG......2300
      CHARACTER*12 CLIM1,CLIM2                                           OUTBCOPG......2400
      LOGICAL ONCEK10,ONCEK11,ONCEK12,ONCEK13,ONCEK14,ONCEK15            OUTBCOPG......2500
      INTEGER(1) IBCPBG(NPBG)                                            OUTBCOPG......2600
      INTEGER IIDPBG(NPBG)                                               OUTBCOPG......2700
      DIMENSION PVEC(NNVEC),UVEC(NNVEC)                                  OUTBCOPG......2800
      DIMENSION PBG1(NPBG),QPBG1(NPBG),PBG2(NPBG),QPBG2(NPBG),           OUTBCOPG......2900
     1   UPBGI(NPBG),UPBGO(NPBG),QPBGIC(NPBG),GNUPG(NPBG),QPGITR(NPBG)   OUTBCOPG......3000
      DIMENSION IPBG(NPBG)                                               OUTBCOPG......3100
      DIMENSION KTYPE(2)                                                 OUTBCOPG......3200
      DIMENSION J5COL(NCOLMX), J6COL(NCOLMX)                             OUTBCOPG......3300
      ALLOCATABLE TT(:),ITT(:)                                           OUTBCOPG......3400
      COMMON /CLAY/ LAYSTR                                               OUTBCOPG......3500
      COMMON /CONTRL/ GNUP,GNUU,UP,DTMULT,DTMAX,ME,ISSFLO,ISSTRA,ITCYC,  OUTBCOPG......3600
     1   NPCYC,NUCYC,NPRINT,NBCFPR,NBCSPR,NBCPPR,NBCUPR,NLAKPR,IREAD,    OUTBCOPG......3700
     1   NBGPPR,NBGUPR,ISTORE,NOUMAT,IUNSAT,IALSAT,KTYPE                 OUTBCOPG......3800
      COMMON /DIMLAY/ NLAYS,NNLAY,NELAY                                  OUTBCOPG......3900
      COMMON /DIMS/ NN,NE,NIN,NBI,NCBI,NB,NBHALF,NPBC,NUBC,              OUTBCOPG......4000
     1   NSOP,NSOU,NBCN,NPBG,NUBG,NCIDB                                  OUTBCOPG......4100
      COMMON /DIMSRF/ MAXCON, NNSURF, NNVERT                             OUTBCOPG......4200
      COMMON /DIMX/ NWI,NWF,NWL,NELT,NNNX,NEX,N48                        OUTBCOPG......4300
      COMMON /DIMX2/ NELTA,NNVEC,NDIMIA,NDIMJA                           OUTBCOPG......4400
      COMMON /FUNITS/ K00,K0,K1,K2,K3,K4,K5,K6,K7,K8,K9,                 OUTBCOPG......4500
     1   K10,K11,K12,K13,K14,K15,K16,K17,K18,K19,K20,K21,K22,K23         OUTBCOPG......4600
      COMMON /GRAVEC/ GRAVX,GRAVY,GRAVZ                                  OUTBCOPG......4700
      COMMON /ITERAT/ RPM,RPMAX,RUM,RUMAX,ITER,ITRMAX,IPWORS,IUWORS      OUTBCOPG......4800
      COMMON /JCOLS/ NCOLPR,LCOLPR,NCOLS5,NCOLS6,J5COL,J6COL             OUTBCOPG......4900
      COMMON /KPRBCS/ KINACT                                             OUTBCOPG......5000
      COMMON /KPRINT/ KNODAL,KELMNT,KINCID,KPLOTP,KPLOTU,                OUTBCOPG......5100
     1   KPANDS,KVEL,KCORT,KBUDG,KSCRN,KPAUSE                            OUTBCOPG......5200
      COMMON /PARAMS/ COMPFL,COMPMA,DRWDU,CW,CS,RHOS,SIGMAW,SIGMAS,      OUTBCOPG......5300
     1   RHOW0,URHOW0,VISC0,PRODF1,PRODS1,PRODF0,PRODS0,CHI1,CHI2        OUTBCOPG......5400
      COMMON /PLT2/ ONCEK10, ONCEK11, ONCEK12, ONCEK13, ONCEK14, ONCEK15 OUTBCOPG......5500
      COMMON /SCH/ NSCH,ISCHTS,NSCHAU                                    OUTBCOPG......5600
      COMMON /SOLVI/ KSOLVP,KSOLVU,NN1,NN2,NN3                           OUTBCOPG......5700
      COMMON /TIMES/ DELT,TSEC,TMIN,THOUR,TDAY,TWEEK,TMONTH,TYEAR,       OUTBCOPG......5800
     1   TMAX,DELTP,DELTU,DLTPM1,DLTUM1,IT,ITBCS,ITRST,ITMAX,TSTART      OUTBCOPG......5900
      DATA (BCDSTR(M),M=-1,4)                                            OUTBCOPG......6000
     1   /'    BCTIME','       INP','       BCS','       BCS',           OUTBCOPG......6100
     2    '     LAKES','     LAKES'/                                     OUTBCOPG......6200
      DATA NOTAPP /"                                     N/A"/           OUTBCOPG......6300
      SAVE BCDSTR                                                        OUTBCOPG......6400
C                                                                        OUTBCOPG......6500
C.....CALCULATE HEADERS ON FIRST CALL AND CREATE OUTPUT ON EACH CALL.    OUTBCOPG......6600
C                                                                        OUTBCOPG......6700
C                                                                        OUTBCOPG......6800
      IF (.NOT. ONCEK14)  THEN                                           OUTBCOPG......6900
C.....FIRST CALL -- CREATE FILE HEADER.                                  OUTBCOPG......7000
C                                                                        OUTBCOPG......7100
C........CALCULATE THE MAXIMUM NUMBER OF TIME STEPS, KTMAX.              OUTBCOPG......7200
         KT=0                                                            OUTBCOPG......7300
         DO 4 JT=1,ITMAX                                                 OUTBCOPG......7400
            IF (MOD(JT,NBGPPR).EQ.0 .OR.                                 OUTBCOPG......7500
     1         ((JT.EQ.ITRST+1).AND.((ISSTRA.NE.0).OR.(NBGPPR.GT.0))))   OUTBCOPG......7600
     2         KT = KT + 1                                               OUTBCOPG......7700
    4    CONTINUE                                                        OUTBCOPG......7800
         IF(ITMAX.GT.1 .AND. MOD(ITMAX,NBGPPR).NE.0) KT = KT + 1         OUTBCOPG......7900
         KTMAX = KT                                                      OUTBCOPG......8000
C                                                                        OUTBCOPG......8100
C........ALLOCATE LOCAL ARRAYS                                           OUTBCOPG......8200
         ALLOCATE(TT(KTMAX),ITT(KTMAX))                                  OUTBCOPG......8300
C                                                                        OUTBCOPG......8400
C........CALCULATE AND PRINT TIME STEP INFORMATION                       OUTBCOPG......8500
         TS=TSTART                                                       OUTBCOPG......8600
C........TIME STEP VALUE                                                 OUTBCOPG......8700
         JT=0                                                            OUTBCOPG......8800
C........NUMBER OF PRINTED TIME STEPS                                    OUTBCOPG......8900
         KT=0                                                            OUTBCOPG......9000
C........TIME STEP INCREMENT                                             OUTBCOPG......9100
         DELTK=DELT                                                      OUTBCOPG......9200
         DO 10 JT=1,ITMAX                                                OUTBCOPG......9300
            JTP1 = JT + 1                                                OUTBCOPG......9400
            TS = SCHDLS(ISCHTS)%SLIST(JTP1)%DVALU1                       OUTBCOPG......9500
            IF (MOD(JT,NBGPPR).EQ.0 .OR.                                 OUTBCOPG......9600
     1         ((JT.EQ.ITRST+1).AND.((ISSTRA.NE.0).OR.(NBGPPR.GT.0))))   OUTBCOPG......9700
     2         THEN                                                      OUTBCOPG......9800
               KT = KT + 1                                               OUTBCOPG......9900
               TT(KT) = TS                                               OUTBCOPG.....10000
               ITT(KT) = JT                                              OUTBCOPG.....10100
            ENDIF                                                        OUTBCOPG.....10200
   10    CONTINUE                                                        OUTBCOPG.....10300
         IF (ISSTRA.EQ.1) THEN                                           OUTBCOPG.....10400
            TT(KT) = TSTART                                              OUTBCOPG.....10500
            ITT(KT) = 0                                                  OUTBCOPG.....10600
         END IF                                                          OUTBCOPG.....10700
C                                                                        OUTBCOPG.....10800
C                                                                        OUTBCOPG.....10900
C........PRINT LAST TIME STEP ALWAYS, UNLESS ALREADY PRINTED             OUTBCOPG.....11000
         IF(ITMAX.GT.1 .AND. MOD(ITMAX,NBGPPR).NE.0) THEN                OUTBCOPG.....11100
            KT = KT + 1                                                  OUTBCOPG.....11200
            TT(KT) = TS                                                  OUTBCOPG.....11300
            ITT(KT) = ITMAX                                              OUTBCOPG.....11400
         ENDIF                                                           OUTBCOPG.....11500
C                                                                        OUTBCOPG.....11600
C........COMPUTE ACTUAL NUMBER OF PRINTED TIME STEPS, KTPRN; LESS THAN   OUTBCOPG.....11700
C           KTMAX IF RUN IS A RESTART                                    OUTBCOPG.....11800
         IF (IREAD.EQ.+1) THEN                                           OUTBCOPG.....11900
            KTPRN = KTMAX                                                OUTBCOPG.....12000
         ELSE                                                            OUTBCOPG.....12100
            KTPRN = 0                                                    OUTBCOPG.....12200
            DO 17 KT=1,KTMAX                                             OUTBCOPG.....12300
               IF (ITT(KT).GT.ITRST) KTPRN = KTPRN + 1                   OUTBCOPG.....12400
   17       CONTINUE                                                     OUTBCOPG.....12500
         END IF                                                          OUTBCOPG.....12600
C                                                                        OUTBCOPG.....12700
C........WRITE HEADER INFORMATION                                        OUTBCOPG.....12800
         WRITE(K14,950) TITLE1, TITLE2                                   OUTBCOPG.....12900
         IF (KTYPE(2).GT.1) THEN                                         OUTBCOPG.....13000
            IF (KTYPE(2).EQ.3) THEN                                      OUTBCOPG.....13100
               CTYPE2 = "BLOCKWISE MESH"                                 OUTBCOPG.....13200
            ELSE                                                         OUTBCOPG.....13300
               CTYPE2 = "REGULAR MESH  "                                 OUTBCOPG.....13400
            END IF                                                       OUTBCOPG.....13500
            IF (KTYPE(1).EQ.3) THEN                                      OUTBCOPG.....13600
               WRITE(K14,951) KTYPE(1),CTYPE2,NN1,NN2,NN3,NN," Nodes",   OUTBCOPG.....13700
     1            NE, " Elems"                                           OUTBCOPG.....13800
            ELSE                                                         OUTBCOPG.....13900
               WRITE(K14,952) KTYPE(1),CTYPE2,NN1,NN2,NN," Nodes",       OUTBCOPG.....14000
     1            NE, " Elems"                                           OUTBCOPG.....14100
            END IF                                                       OUTBCOPG.....14200
         ELSE IF (KTYPE(2).EQ.1) THEN                                    OUTBCOPG.....14300
            WRITE(K14,953) KTYPE(1), LAYSTR(1:6), NLAYS, NNLAY,          OUTBCOPG.....14400
     1         NN, " Nodes", NE, " Elems"                                OUTBCOPG.....14500
         ELSE                                                            OUTBCOPG.....14600
            WRITE(K14,954) KTYPE(1), NN, " Nodes", NE, " Elems"          OUTBCOPG.....14700
         END IF                                                          OUTBCOPG.....14800
         WRITE(K14,960) "GENERALIZED-FLOW NODE RESULTS", KTPRN           OUTBCOPG.....14900
         DO 920 KT=1,KTMAX                                               OUTBCOPG.....15000
            IF ((ITT(KT).GT.ITRST).OR.(ISSFLO.NE.0))                     OUTBCOPG.....15100
     1         WRITE(K14,961) ITT(KT), TT(KT)                            OUTBCOPG.....15200
  920    CONTINUE                                                        OUTBCOPG.....15300
  950    FORMAT("## ", 80A1,                                             OUTBCOPG.....15400
     1         /"## ", 80A1,                                             OUTBCOPG.....15500
     2         /"## ")                                                   OUTBCOPG.....15600
  951    FORMAT("## ", I1, "-D, ", A, 2X,                                OUTBCOPG.....15700
     1                 "(", 2(I9, ")*("), I9, ") = ", I9, A, 1X,         OUTBCOPG.....15800
     2                 "(", I9, A, ")"                                   OUTBCOPG.....15900
     3         /"## ")                                                   OUTBCOPG.....16000
  952    FORMAT("## ", I1, "-D, ", A, 14X,                               OUTBCOPG.....16100
     1                 "(", I9, ")*(", I9, ") = ", I9, A, 1X,            OUTBCOPG.....16200
     2                 "(", I9, A, ")"                                   OUTBCOPG.....16300
     3         /"## ")                                                   OUTBCOPG.....16400
  953    FORMAT("## ", I1, "-D, LAYERED MESH [", A6, "]", 7X,            OUTBCOPG.....16500
     1                 "(", I9, ")*(", I9, ") = ", I9, A, 1X,            OUTBCOPG.....16600
     2                 "(", I9, A, ")"                                   OUTBCOPG.....16700
     3         /"## ")                                                   OUTBCOPG.....16800
  954    FORMAT("## ", I1, "-D, IRREGULAR MESH", 40X, I9, A, 1X,         OUTBCOPG.....16900
     1                 "(", I9, A, ")"                                   OUTBCOPG.....17000
     2         /"## ")                                                   OUTBCOPG.....17100
  960    FORMAT("## ", 92("="),                                          OUTBCOPG.....17200
     1         /"## ", A, 35X, I9, " Time steps printed",                OUTBCOPG.....17300
     2         /"## ", 92("="),                                          OUTBCOPG.....17400
     3         /"## ",                                                   OUTBCOPG.....17500
     4         /"## ", 4X, "Time steps"                                  OUTBCOPG.....17600
     5         /"## ", 3X, "in this file      Time (sec)"                OUTBCOPG.....17700
     6         /"## ", 2X, 14("-"), 3X, 13("-"))                         OUTBCOPG.....17800
  961    FORMAT ("## ", 7X, I8, 4X, 1PE13.6)                             OUTBCOPG.....17900
C                                                                        OUTBCOPG.....18000
C........DEALLOCATE LOCAL ARRAYS.                                        OUTBCOPG.....18100
         DEALLOCATE(TT,ITT)                                              OUTBCOPG.....18200
C                                                                        OUTBCOPG.....18300
         ONCEK14 = .TRUE.                                                OUTBCOPG.....18400
      ENDIF                                                              OUTBCOPG.....18500
C                                                                        OUTBCOPG.....18600
C.....NODEWISE HEADER INFORMATION REPEATED BEFORE EACH TIME STEP         OUTBCOPG.....18700
      IF ((IT.EQ.0).OR.((IT.EQ.1).AND.(ISSTRA.EQ.1))) THEN               OUTBCOPG.....18800
         DURN = 0D0                                                      OUTBCOPG.....18900
         TOUT = TSTART                                                   OUTBCOPG.....19000
         ITOUT = 0                                                       OUTBCOPG.....19100
      ELSE                                                               OUTBCOPG.....19200
         DURN = DELT                                                     OUTBCOPG.....19300
         TOUT = TSEC                                                     OUTBCOPG.....19400
         ITOUT = IT                                                      OUTBCOPG.....19500
      END IF                                                             OUTBCOPG.....19600
      WRITE(K14,966) ITOUT, DURN, TOUT                                   OUTBCOPG.....19700
  966 FORMAT('## ',                                                      OUTBCOPG.....19800
     1      /'## ', 177('='),                                            OUTBCOPG.....19900
     2      /'## TIME STEP ', I8, 107X, 'Duration: ', 1PE11.4, ' sec',   OUTBCOPG.....20000
     3                            6X, 'Time: ', 1PE11.4, ' sec',         OUTBCOPG.....20100
     4      /'## ', 177('='))                                            OUTBCOPG.....20200
      IF (ME .GT. 0) THEN                                                OUTBCOPG.....20300
         WRITE(K14,967)                                                  OUTBCOPG.....20400
      ELSE                                                               OUTBCOPG.....20500
         WRITE(K14,968)                                                  OUTBCOPG.....20600
      END IF                                                             OUTBCOPG.....20700
  967 FORMAT(                                                            OUTBCOPG.....20800
     1    '## ',76X,'Resultant',9X,'Temperature of',14X,'Resultant',     OUTBCOPG.....20900
     1          173X,'Temperature'                                       OUTBCOPG.....21000
     2   /'## ',66X,'source/sink(+/-) of',6X,'fluid source/sink',        OUTBCOPG.....21100
     3           4X,'source/sink(+/-) of',171X,'specified for'           OUTBCOPG.....21200
     4   /'##   Node    Defined in',28X,'BCS identifier',                OUTBCOPG.....21300
     5           7X,'fluid (mass/sec)',14X,'(degrees)',                  OUTBCOPG.....21400
     6           4X,'energy (energy/sec)',6X,'Computed pressure',        OUTBCOPG.....21500
     7           4X,'Pressure at point 1',8X,'Flow at point 1',          OUTBCOPG.....21600
     8           4X,'Pressure at point 2',8X,'Flow at point 2',          OUTBCOPG.....21700
     9           7X,'Limit at point 1',7X,'Limit at point 2',            OUTBCOPG.....21800
     1           16X,'outflow')                                          OUTBCOPG.....21900
  968 FORMAT(                                                            OUTBCOPG.....22000
     1    '## ',76X,'Resultant',9X,'Solute conc of',14X,'Resultant',     OUTBCOPG.....22100
     1          173X,'Solute conc'                                       OUTBCOPG.....22200
     2   /'## ',66X,'source/sink(+/-) of',6X,'fluid source/sink',        OUTBCOPG.....22300
     3           4X,'source/sink(+/-) of',171X,'specified for'           OUTBCOPG.....22400
     4   /'##   Node    Defined in',28X,'BCS identifier',                OUTBCOPG.....22500
     5           7X,'fluid (mass/sec)',5X,'(sol mass/fl mass)',          OUTBCOPG.....22600
     6           6X,'solute (mass/sec)',6X,'Computed pressure',          OUTBCOPG.....22700
     7           4X,'Pressure at point 1',8X,'Flow at point 1',          OUTBCOPG.....22800
     8           4X,'Pressure at point 2',8X,'Flow at point 2',          OUTBCOPG.....22900
     9           7X,'Limit at point 1',7X,'Limit at point 2',            OUTBCOPG.....23000
     1           16X,'outflow')                                          OUTBCOPG.....23100
C                                                                        OUTBCOPG.....23200
C.....BOUNDARY CONDITION INFORMATION FOR THIS TIME STEP                  OUTBCOPG.....23300
      IF (NPBG.GT.0) THEN                                                OUTBCOPG.....23400
      DO 990 IPG=1,NPBG                                                  OUTBCOPG.....23500
      I=IABS(IPBG(IPG))                                                  OUTBCOPG.....23600
      IBC = IBCPBG(IPG)                                                  OUTBCOPG.....23700
      IF ((IBC.LT.2).AND.(LKBCPBG(IPG))) THEN                            OUTBCOPG.....23800
         CALL BUDPBG(IPG,QPBG,QUPBG,QEXGW,QEXLK,QEXRO,                   OUTBCOPG.....23900
     1      QUEXGW,QUEXLK,QUEXRO,UEX,PEX1,PEX2)                          OUTBCOPG.....24000
         QPGVAL = QPBG                                                   OUTBCOPG.....24100
         QPGUVAL = QUPBG                                                 OUTBCOPG.....24200
         UU = UEX                                                        OUTBCOPG.....24300
         UUCUT = CUTSML(UU)                                              OUTBCOPG.....24400
         IF (IBC.GT.0) THEN                                              OUTBCOPG.....24500
            WRITE(K14,980) I,                                            OUTBCOPG.....24600
     1         BCDSTR(IBC),ADJUSTR(CIDBCS(IIDPBG(IPG))),                 OUTBCOPG.....24700
     2         CUTSML(QPGVAL),UUCUT,CUTSML(QPGUVAL),CUTSML(PVEC(I)),     OUTBCOPG.....24800
     3         CUTSML(PEX1),QPBG1(IPG),CUTSML(PEX2),QPBG2(IPG),          OUTBCOPG.....24900
     4         CPQL1(IPG),CPQL2(IPG),UPBGO(IPG),CUPBGO(IPG)              OUTBCOPG.....25000
         ELSE                                                            OUTBCOPG.....25100
            WRITE(K14,980) I,                                            OUTBCOPG.....25200
     1         BCDSTR(IBC),NOTAPP,                                       OUTBCOPG.....25300
     2         CUTSML(QPGVAL),UUCUT,CUTSML(QPGUVAL),CUTSML(PVEC(I)),     OUTBCOPG.....25400
     3         CUTSML(PEX1),QPBG1(IPG),CUTSML(PEX2),QPBG2(IPG),          OUTBCOPG.....25500
     4         CPQL1(IPG),CPQL2(IPG),UPBGO(IPG),CUPBGO(IPG)              OUTBCOPG.....25600
         END IF                                                          OUTBCOPG.....25700
  980    FORMAT(I9,4X,A10,2X,A40,3(8X,1PE15.7),5(8X,1PE15.8),2(A23),     OUTBCOPG.....25800
     1      8X,1PE15.8," (",A3,")")                                      OUTBCOPG.....25900
      ELSE IF (KINACT.EQ.1) THEN                                         OUTBCOPG.....26000
         IF (IBC.EQ.2) THEN                                              OUTBCOPG.....26100
            WRITE(K14,982) I,                                            OUTBCOPG.....26200
     1         BCDSTR(IBC),ADJUSTR(CIDBCS(IIDPBG(IPG))),                 OUTBCOPG.....26300
     2         "INACTIVE","INACTIVE","INACTIVE","INACTIVE","INACTIVE",   OUTBCOPG.....26400
     3         "INACTIVE","INACTIVE","INACTIVE","INACTIVE","INACTIVE",   OUTBCOPG.....26500
     4         "INACTIVE"                                                OUTBCOPG.....26600
         ELSE                                                            OUTBCOPG.....26700
            IF (.NOT.LKBCPBG(IPG)) IBC = 4                               OUTBCOPG.....26800
            WRITE(K14,982) I,                                            OUTBCOPG.....26900
     1         BCDSTR(IBC),NOTAPP,                                       OUTBCOPG.....27000
     2         "INACTIVE","INACTIVE","INACTIVE","INACTIVE","INACTIVE",   OUTBCOPG.....27100
     3         "INACTIVE","INACTIVE","INACTIVE","INACTIVE","INACTIVE",   OUTBCOPG.....27200
     4         "INACTIVE"                                                OUTBCOPG.....27300
         END IF                                                          OUTBCOPG.....27400
  982    FORMAT(I9,4X,A10,2X,A40,11(15X,A8))                             OUTBCOPG.....27500
      END IF                                                             OUTBCOPG.....27600
  990 CONTINUE                                                           OUTBCOPG.....27700
      END IF                                                             OUTBCOPG.....27800
C                                                                        OUTBCOPG.....27900
      RETURN                                                             OUTBCOPG.....28000
C                                                                        OUTBCOPG.....28100
      END                                                                OUTBCOPG.....28200
C                                                                        OUTBCOPG.....28300
C     SUBROUTINE        O  U  T  B  C  O  S        SUTRA VERSION 3.0     OUTBCOS........100
C                                                                        OUTBCOS........200
C *** PURPOSE :                                                          OUTBCOS........300
C ***  TO PRINT BOUNDARY CONDITION INFORMATION AT SOLUTE/ENERGY          OUTBCOS........400
C ***  SOURCE/SINK NODES IN A FLEXIBLE, COLUMNWISE FORMAT.  OUTPUT IS    OUTBCOS........500
C ***  TO THE BCOS FILE.                                                 OUTBCOS........600
C                                                                        OUTBCOS........700
      SUBROUTINE OUTBCOS(QUIN,IQSOU,IBCSOU,TITLE1,TITLE2,IIDSOU)         OUTBCOS........800
      USE ALLARR, ONLY : CIDBCS                                          OUTBCOS........900
      USE EXPINT                                                         OUTBCOS.......1000
      USE SCHDEF                                                         OUTBCOS.......1100
      USE LARR, ONLY : ISLAKE,LKBCSOU                                    OUTBCOS.......1200
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                OUTBCOS.......1300
      PARAMETER (NCOLMX=9)                                               OUTBCOS.......1400
      CHARACTER*1  TITLE1(80),TITLE2(80)                                 OUTBCOS.......1500
      CHARACTER*14 CTYPE2                                                OUTBCOS.......1600
      CHARACTER*80 LAYSTR                                                OUTBCOS.......1700
      CHARACTER*10 BCDSTR(-1:4)                                          OUTBCOS.......1800
      CHARACTER*40 NOTAPP                                                OUTBCOS.......1900
      LOGICAL ONCEK10,ONCEK11,ONCEK12,ONCEK13,ONCEK14,ONCEK15            OUTBCOS.......2000
      INTEGER(1) IBCSOU(NSOU)                                            OUTBCOS.......2100
      INTEGER IIDSOU(NSOU)                                               OUTBCOS.......2200
      DIMENSION QUIN(NN),IQSOU(NSOU)                                     OUTBCOS.......2300
      DIMENSION KTYPE(2)                                                 OUTBCOS.......2400
      DIMENSION J5COL(NCOLMX), J6COL(NCOLMX)                             OUTBCOS.......2500
      ALLOCATABLE TT(:),ITT(:)                                           OUTBCOS.......2600
      COMMON /CLAY/ LAYSTR                                               OUTBCOS.......2700
      COMMON /CONTRL/ GNUP,GNUU,UP,DTMULT,DTMAX,ME,ISSFLO,ISSTRA,ITCYC,  OUTBCOS.......2800
     1   NPCYC,NUCYC,NPRINT,NBCFPR,NBCSPR,NBCPPR,NBCUPR,NLAKPR,IREAD,    OUTBCOS.......2900
     1   NBGPPR,NBGUPR,ISTORE,NOUMAT,IUNSAT,IALSAT,KTYPE                 OUTBCOS.......3000
      COMMON /DIMLAY/ NLAYS,NNLAY,NELAY                                  OUTBCOS.......3100
      COMMON /DIMS/ NN,NE,NIN,NBI,NCBI,NB,NBHALF,NPBC,NUBC,              OUTBCOS.......3200
     1   NSOP,NSOU,NBCN,NPBG,NUBG,NCIDB                                  OUTBCOS.......3300
      COMMON /DIMX/ NWI,NWF,NWL,NELT,NNNX,NEX,N48                        OUTBCOS.......3400
      COMMON /DIMX2/ NELTA,NNVEC,NDIMIA,NDIMJA                           OUTBCOS.......3500
      COMMON /FUNITS/ K00,K0,K1,K2,K3,K4,K5,K6,K7,K8,K9,                 OUTBCOS.......3600
     1   K10,K11,K12,K13,K14,K15,K16,K17,K18,K19,K20,K21,K22,K23         OUTBCOS.......3700
      COMMON /GRAVEC/ GRAVX,GRAVY,GRAVZ                                  OUTBCOS.......3800
      COMMON /ITERAT/ RPM,RPMAX,RUM,RUMAX,ITER,ITRMAX,IPWORS,IUWORS      OUTBCOS.......3900
      COMMON /JCOLS/ NCOLPR,LCOLPR,NCOLS5,NCOLS6,J5COL,J6COL             OUTBCOS.......4000
      COMMON /KPRBCS/ KINACT                                             OUTBCOS.......4100
      COMMON /KPRINT/ KNODAL,KELMNT,KINCID,KPLOTP,KPLOTU,                OUTBCOS.......4200
     1   KPANDS,KVEL,KCORT,KBUDG,KSCRN,KPAUSE                            OUTBCOS.......4300
      COMMON /PARAMS/ COMPFL,COMPMA,DRWDU,CW,CS,RHOS,SIGMAW,SIGMAS,      OUTBCOS.......4400
     1   RHOW0,URHOW0,VISC0,PRODF1,PRODS1,PRODF0,PRODS0,CHI1,CHI2        OUTBCOS.......4500
      COMMON /PLT2/ ONCEK10, ONCEK11, ONCEK12, ONCEK13, ONCEK14, ONCEK15 OUTBCOS.......4600
      COMMON /SCH/ NSCH,ISCHTS,NSCHAU                                    OUTBCOS.......4700
      COMMON /SOLVI/ KSOLVP,KSOLVU,NN1,NN2,NN3                           OUTBCOS.......4800
      COMMON /TIMES/ DELT,TSEC,TMIN,THOUR,TDAY,TWEEK,TMONTH,TYEAR,       OUTBCOS.......4900
     1   TMAX,DELTP,DELTU,DLTPM1,DLTUM1,IT,ITBCS,ITRST,ITMAX,TSTART      OUTBCOS.......5000
      DATA (BCDSTR(M),M=-1,4)                                            OUTBCOS.......5100
     1   /'    BCTIME','       INP','       BCS','       BCS',           OUTBCOS.......5200
     2    '     LAKES','     LAKES'/                                     OUTBCOS.......5300
      DATA NOTAPP /"                                     N/A"/           OUTBCOS.......5400
      SAVE BCDSTR                                                        OUTBCOS.......5500
C                                                                        OUTBCOS.......5600
C.....CALCULATE HEADERS ON FIRST CALL AND CREATE OUTPUT ON EACH CALL.    OUTBCOS.......5700
C                                                                        OUTBCOS.......5800
C                                                                        OUTBCOS.......5900
      IF (.NOT. ONCEK11)  THEN                                           OUTBCOS.......6000
C.....FIRST CALL -- CREATE FILE HEADER.                                  OUTBCOS.......6100
C                                                                        OUTBCOS.......6200
C........CALCULATE THE MAXIMUM NUMBER OF TIME STEPS, KTMAX.              OUTBCOS.......6300
         KT=0                                                            OUTBCOS.......6400
         DO 4 JT=1,ITMAX                                                 OUTBCOS.......6500
            IF (MOD(JT,NBCSPR).EQ.0 .OR.                                 OUTBCOS.......6600
     1         ((JT.EQ.ITRST+1).AND.((ISSTRA.NE.0).OR.(NBCSPR.GT.0))))   OUTBCOS.......6700
     2         KT = KT + 1                                               OUTBCOS.......6800
    4    CONTINUE                                                        OUTBCOS.......6900
         IF(ITMAX.GT.1 .AND. MOD(ITMAX,NBCSPR).NE.0) KT = KT + 1         OUTBCOS.......7000
         KTMAX = KT                                                      OUTBCOS.......7100
C                                                                        OUTBCOS.......7200
C........ALLOCATE LOCAL ARRAYS                                           OUTBCOS.......7300
         ALLOCATE(TT(KTMAX),ITT(KTMAX))                                  OUTBCOS.......7400
C                                                                        OUTBCOS.......7500
C........CALCULATE AND PRINT TIME STEP INFORMATION                       OUTBCOS.......7600
         TS=TSTART                                                       OUTBCOS.......7700
C........TIME STEP VALUE                                                 OUTBCOS.......7800
         JT=0                                                            OUTBCOS.......7900
C........NUMBER OF PRINTED TIME STEPS                                    OUTBCOS.......8000
         KT=0                                                            OUTBCOS.......8100
C........TIME STEP INCREMENT                                             OUTBCOS.......8200
         DELTK=DELT                                                      OUTBCOS.......8300
         DO 10 JT=1,ITMAX                                                OUTBCOS.......8400
            JTP1 = JT + 1                                                OUTBCOS.......8500
            TS = SCHDLS(ISCHTS)%SLIST(JTP1)%DVALU1                       OUTBCOS.......8600
            IF (MOD(JT,NBCSPR).EQ.0 .OR.                                 OUTBCOS.......8700
     1         ((JT.EQ.ITRST+1).AND.((ISSTRA.NE.0).OR.(NBCSPR.GT.0))))   OUTBCOS.......8800
     2         THEN                                                      OUTBCOS.......8900
               KT = KT + 1                                               OUTBCOS.......9000
               TT(KT) = TS                                               OUTBCOS.......9100
               ITT(KT) = JT                                              OUTBCOS.......9200
            ENDIF                                                        OUTBCOS.......9300
   10    CONTINUE                                                        OUTBCOS.......9400
         IF (ISSTRA.EQ.1) TT(KT) = TSTART                                OUTBCOS.......9500
C                                                                        OUTBCOS.......9600
C                                                                        OUTBCOS.......9700
C........PRINT LAST TIME STEP ALWAYS, UNLESS ALREADY PRINTED             OUTBCOS.......9800
         IF(ITMAX.GT.1 .AND. MOD(ITMAX,NBCSPR).NE.0) THEN                OUTBCOS.......9900
            KT = KT + 1                                                  OUTBCOS......10000
            TT(KT) = TS                                                  OUTBCOS......10100
            ITT(KT) = ITMAX                                              OUTBCOS......10200
         ENDIF                                                           OUTBCOS......10300
C                                                                        OUTBCOS......10400
C........COMPUTE ACTUAL NUMBER OF PRINTED TIME STEPS, KTPRN; LESS THAN   OUTBCOS......10500
C           KTMAX IF RUN IS A RESTART                                    OUTBCOS......10600
         IF (IREAD.EQ.+1) THEN                                           OUTBCOS......10700
            KTPRN = KTMAX                                                OUTBCOS......10800
         ELSE                                                            OUTBCOS......10900
            KTPRN = 0                                                    OUTBCOS......11000
            DO 17 KT=1,KTMAX                                             OUTBCOS......11100
               IF (ITT(KT).GT.ITRST) KTPRN = KTPRN + 1                   OUTBCOS......11200
   17       CONTINUE                                                     OUTBCOS......11300
         END IF                                                          OUTBCOS......11400
C                                                                        OUTBCOS......11500
C........WRITE HEADER INFORMATION                                        OUTBCOS......11600
         WRITE(K11,950) TITLE1, TITLE2                                   OUTBCOS......11700
         IF (KTYPE(2).GT.1) THEN                                         OUTBCOS......11800
            IF (KTYPE(2).EQ.3) THEN                                      OUTBCOS......11900
               CTYPE2 = "BLOCKWISE MESH"                                 OUTBCOS......12000
            ELSE                                                         OUTBCOS......12100
               CTYPE2 = "REGULAR MESH  "                                 OUTBCOS......12200
            END IF                                                       OUTBCOS......12300
            IF (KTYPE(1).EQ.3) THEN                                      OUTBCOS......12400
               WRITE(K11,951) KTYPE(1),CTYPE2,NN1,NN2,NN3,NN," Nodes",   OUTBCOS......12500
     1            NE, " Elems"                                           OUTBCOS......12600
            ELSE                                                         OUTBCOS......12700
               WRITE(K11,952) KTYPE(1),CTYPE2,NN1,NN2,NN," Nodes",       OUTBCOS......12800
     1            NE, " Elems"                                           OUTBCOS......12900
            END IF                                                       OUTBCOS......13000
         ELSE IF (KTYPE(2).EQ.1) THEN                                    OUTBCOS......13100
            WRITE(K11,953) KTYPE(1), LAYSTR(1:6), NLAYS, NNLAY,          OUTBCOS......13200
     1         NN, " Nodes", NE, " Elems"                                OUTBCOS......13300
         ELSE                                                            OUTBCOS......13400
            WRITE(K11,954) KTYPE(1), NN, " Nodes", NE, " Elems"          OUTBCOS......13500
         END IF                                                          OUTBCOS......13600
         IF (ME.GT.0) THEN                                               OUTBCOS......13700
            WRITE(K11,960) "ENERGY SOURCE/SINK NODE RESULTS", KTPRN      OUTBCOS......13800
         ELSE                                                            OUTBCOS......13900
            WRITE(K11,960) "SOLUTE SOURCE/SINK NODE RESULTS", KTPRN      OUTBCOS......14000
         END IF                                                          OUTBCOS......14100
         DO 920 KT=1,KTMAX                                               OUTBCOS......14200
            IF (ITT(KT).GT.ITRST)                                        OUTBCOS......14300
     1         WRITE(K11,961) ITT(KT), TT(KT)                            OUTBCOS......14400
  920    CONTINUE                                                        OUTBCOS......14500
  950    FORMAT("## ", 80A1,                                             OUTBCOS......14600
     1         /"## ", 80A1,                                             OUTBCOS......14700
     2         /"## ")                                                   OUTBCOS......14800
  951    FORMAT("## ", I1, "-D, ", A, 2X,                                OUTBCOS......14900
     1                 "(", 2(I9, ")*("), I9, ") = ", I9, A, 1X,         OUTBCOS......15000
     2                 "(", I9, A, ")"                                   OUTBCOS......15100
     3         /"## ")                                                   OUTBCOS......15200
  952    FORMAT("## ", I1, "-D, ", A, 14X,                               OUTBCOS......15300
     1                 "(", I9, ")*(", I9, ") = ", I9, A, 1X,            OUTBCOS......15400
     2                 "(", I9, A, ")"                                   OUTBCOS......15500
     3         /"## ")                                                   OUTBCOS......15600
  953    FORMAT("## ", I1, "-D, LAYERED MESH [", A6, "]", 7X,            OUTBCOS......15700
     1                 "(", I9, ")*(", I9, ") = ", I9, A, 1X,            OUTBCOS......15800
     2                 "(", I9, A, ")"                                   OUTBCOS......15900
     3         /"## ")                                                   OUTBCOS......16000
  954    FORMAT("## ", I1, "-D, IRREGULAR MESH", 40X, I9, A, 1X,         OUTBCOS......16100
     1                 "(", I9, A, ")"                                   OUTBCOS......16200
     2         /"## ")                                                   OUTBCOS......16300
  960    FORMAT("## ", 92("="),                                          OUTBCOS......16400
     1         /"## ", A, 33X, I9, " Time steps printed",                OUTBCOS......16500
     2         /"## ", 92("="),                                          OUTBCOS......16600
     3         /"## ",                                                   OUTBCOS......16700
     4         /"## ", 4X, "Time steps"                                  OUTBCOS......16800
     5         /"## ", 3X, "in this file      Time (sec)"                OUTBCOS......16900
     6         /"## ", 2X, 14("-"), 3X, 13("-"))                         OUTBCOS......17000
  961    FORMAT ("## ", 7X, I8, 4X, 1PE13.6)                             OUTBCOS......17100
C                                                                        OUTBCOS......17200
C........DEALLOCATE LOCAL ARRAYS.                                        OUTBCOS......17300
         DEALLOCATE(TT,ITT)                                              OUTBCOS......17400
C                                                                        OUTBCOS......17500
         ONCEK11 = .TRUE.                                                OUTBCOS......17600
      ENDIF                                                              OUTBCOS......17700
C                                                                        OUTBCOS......17800
C.....NODEWISE HEADER INFORMATION REPEATED BEFORE EACH TIME STEP         OUTBCOS......17900
      IF ((IT.EQ.1).AND.(ISSTRA.EQ.1)) THEN                              OUTBCOS......18000
         DURN = 0D0                                                      OUTBCOS......18100
         TOUT = TSTART                                                   OUTBCOS......18200
      ELSE                                                               OUTBCOS......18300
         DURN = DELT                                                     OUTBCOS......18400
         TOUT = TSEC                                                     OUTBCOS......18500
      END IF                                                             OUTBCOS......18600
      WRITE(K11,966) IT, DURN, TOUT                                      OUTBCOS......18700
  966 FORMAT('## ',                                                      OUTBCOS......18800
     1      /'## ', 92('='),                                             OUTBCOS......18900
     2      /'## TIME STEP ', I8, 22X, 'Duration: ', 1PE11.4, ' sec',    OUTBCOS......19000
     3                            6X, 'Time: ', 1PE11.4, ' sec',         OUTBCOS......19100
     4      /'## ', 92('='))                                             OUTBCOS......19200
      IF (ME .GT. 0) THEN                                                OUTBCOS......19300
         WRITE(K11,967)                                                  OUTBCOS......19400
      ELSE                                                               OUTBCOS......19500
         WRITE(K11,968)                                                  OUTBCOS......19600
      END IF                                                             OUTBCOS......19700
  967 FORMAT(                                                            OUTBCOS......19800
     1    '## ',76X,'Specified'                                          OUTBCOS......19900
     2   /'## ',66X,'source/sink(+/-) of'                                OUTBCOS......20000
     4   /'##   Node    Defined in',28X,'BCS identifier',                OUTBCOS......20100
     5           4X,'energy (energy/sec)')                               OUTBCOS......20200
  968 FORMAT(                                                            OUTBCOS......20300
     1    '## ',76X,'Specified'                                          OUTBCOS......20400
     2   /'## ',66X,'source/sink(+/-) of'                                OUTBCOS......20500
     4   /'##   Node    Defined in',28X,'BCS identifier',                OUTBCOS......20600
     5           6X,'solute (mass/sec)')                                 OUTBCOS......20700
C                                                                        OUTBCOS......20800
C.....BOUNDARY CONDITION INFORMATION FOR THIS TIME STEP                  OUTBCOS......20900
      NSOUI=NSOU-1                                                       OUTBCOS......21000
      IF (NSOUI.GT.0) THEN                                               OUTBCOS......21100
      DO 990 IQU=1,NSOUI                                                 OUTBCOS......21200
      I=IABS(IQSOU(IQU))                                                 OUTBCOS......21300
      IBC = IBCSOU(IQU)                                                  OUTBCOS......21400
      IF ((IBC.LT.2).AND.LKBCSOU(IQU)) THEN                              OUTBCOS......21500
         CALL BUDSOU(IQU,QUINVAL,QUEXGW,QUEXLK)                          OUTBCOS......21600
         QQUVAL = QUINVAL                                                OUTBCOS......21700
         IF (IBC.GT.0) THEN                                              OUTBCOS......21800
            WRITE(K11,980) I,                                            OUTBCOS......21900
     1         BCDSTR(IBC),ADJUSTR(CIDBCS(IIDSOU(IQU))),QQUVAL           OUTBCOS......22000
         ELSE                                                            OUTBCOS......22100
            WRITE(K11,980) I,BCDSTR(IBC),NOTAPP,QQUVAL                   OUTBCOS......22200
         END IF                                                          OUTBCOS......22300
  980    FORMAT(I9,4X,A10,2X,A40,8X,1PE15.7)                             OUTBCOS......22400
      ELSE IF (KINACT.EQ.1) THEN                                         OUTBCOS......22500
         IF (IBC.EQ.2) THEN                                              OUTBCOS......22600
            WRITE(K11,982) I,                                            OUTBCOS......22700
     1         BCDSTR(IBC),ADJUSTR(CIDBCS(IIDSOU(IQU))),"INACTIVE"       OUTBCOS......22800
         ELSE                                                            OUTBCOS......22900
            IF (.NOT.LKBCSOU(IQU)) IBC = 4                               OUTBCOS......23000
            WRITE(K11,982) I,                                            OUTBCOS......23100
     1         BCDSTR(IBC),NOTAPP,"INACTIVE"                             OUTBCOS......23200
         END IF                                                          OUTBCOS......23300
  982    FORMAT(I9,4X,A10,2X,A40,15X,A8)                                 OUTBCOS......23400
      END IF                                                             OUTBCOS......23500
  990 CONTINUE                                                           OUTBCOS......23600
      END IF                                                             OUTBCOS......23700
C                                                                        OUTBCOS......23800
      RETURN                                                             OUTBCOS......23900
C                                                                        OUTBCOS......24000
      END                                                                OUTBCOS......24100
C                                                                        OUTBCOS......24200
C     SUBROUTINE        O  U  T  B  C  O  U        SUTRA VERSION 3.0     OUTBCOU........100
C                                                                        OUTBCOU........200
C *** PURPOSE :                                                          OUTBCOU........300
C ***  TO PRINT BOUNDARY CONDITION INFORMATION AT SPECIFIED CONC/TEMP    OUTBCOU........400
C ***  NODES IN A FLEXIBLE, COLUMNWISE FORMAT.  OUTPUT IS TO THE         OUTBCOU........500
C ***  BCOU FILE.                                                        OUTBCOU........600
C                                                                        OUTBCOU........700
      SUBROUTINE OUTBCOU(UVEC,UBC,GNUUU,IUBC,IBCUBC,TITLE1,TITLE2,       OUTBCOU........800
     1   IIDUBC)                                                         OUTBCOU........900
      USE ALLARR, ONLY : CIDBCS                                          OUTBCOU.......1000
      USE EXPINT                                                         OUTBCOU.......1100
      USE SCHDEF                                                         OUTBCOU.......1200
      USE LARR, ONLY : ISLAKE,LKBCUBC                                    OUTBCOU.......1300
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                OUTBCOU.......1400
      PARAMETER (NCOLMX=9)                                               OUTBCOU.......1500
      CHARACTER*1  TITLE1(80),TITLE2(80)                                 OUTBCOU.......1600
      CHARACTER*14 CTYPE2                                                OUTBCOU.......1700
      CHARACTER*80 LAYSTR                                                OUTBCOU.......1800
      CHARACTER*10 BCDSTR(-1:4)                                          OUTBCOU.......1900
      CHARACTER*40 NOTAPP                                                OUTBCOU.......2000
      LOGICAL ONCEK10,ONCEK11,ONCEK12,ONCEK13,ONCEK14,ONCEK15            OUTBCOU.......2100
      INTEGER(1) IBCUBC(NBCN)                                            OUTBCOU.......2200
      INTEGER IIDUBC(NBCN)                                               OUTBCOU.......2300
      DIMENSION UVEC(NNVEC),UBC(NBCN),GNUUU(NBCN)                        OUTBCOU.......2400
      DIMENSION IUBC(NBCN)                                               OUTBCOU.......2500
      DIMENSION KTYPE(2)                                                 OUTBCOU.......2600
      DIMENSION J5COL(NCOLMX), J6COL(NCOLMX)                             OUTBCOU.......2700
      ALLOCATABLE TT(:),ITT(:)                                           OUTBCOU.......2800
      COMMON /CLAY/ LAYSTR                                               OUTBCOU.......2900
      COMMON /CONTRL/ GNUP,GNUU,UP,DTMULT,DTMAX,ME,ISSFLO,ISSTRA,ITCYC,  OUTBCOU.......3000
     1   NPCYC,NUCYC,NPRINT,NBCFPR,NBCSPR,NBCPPR,NBCUPR,NLAKPR,IREAD,    OUTBCOU.......3100
     1   NBGPPR,NBGUPR,ISTORE,NOUMAT,IUNSAT,IALSAT,KTYPE                 OUTBCOU.......3200
      COMMON /DIMS/ NN,NE,NIN,NBI,NCBI,NB,NBHALF,NPBC,NUBC,              OUTBCOU.......3300
     1   NSOP,NSOU,NBCN,NPBG,NUBG,NCIDB                                  OUTBCOU.......3400
      COMMON /DIMX/ NWI,NWF,NWL,NELT,NNNX,NEX,N48                        OUTBCOU.......3500
      COMMON /DIMX2/ NELTA,NNVEC,NDIMIA,NDIMJA                           OUTBCOU.......3600
      COMMON /FUNITS/ K00,K0,K1,K2,K3,K4,K5,K6,K7,K8,K9,                 OUTBCOU.......3700
     1   K10,K11,K12,K13,K14,K15,K16,K17,K18,K19,K20,K21,K22,K23         OUTBCOU.......3800
      COMMON /GRAVEC/ GRAVX,GRAVY,GRAVZ                                  OUTBCOU.......3900
      COMMON /ITERAT/ RPM,RPMAX,RUM,RUMAX,ITER,ITRMAX,IPWORS,IUWORS      OUTBCOU.......4000
      COMMON /JCOLS/ NCOLPR,LCOLPR,NCOLS5,NCOLS6,J5COL,J6COL             OUTBCOU.......4100
      COMMON /KPRBCS/ KINACT                                             OUTBCOU.......4200
      COMMON /KPRINT/ KNODAL,KELMNT,KINCID,KPLOTP,KPLOTU,                OUTBCOU.......4300
     1   KPANDS,KVEL,KCORT,KBUDG,KSCRN,KPAUSE                            OUTBCOU.......4400
      COMMON /PARAMS/ COMPFL,COMPMA,DRWDU,CW,CS,RHOS,SIGMAW,SIGMAS,      OUTBCOU.......4500
     1   RHOW0,URHOW0,VISC0,PRODF1,PRODS1,PRODF0,PRODS0,CHI1,CHI2        OUTBCOU.......4600
      COMMON /PLT2/ ONCEK10, ONCEK11, ONCEK12, ONCEK13, ONCEK14, ONCEK15 OUTBCOU.......4700
      COMMON /SCH/ NSCH,ISCHTS,NSCHAU                                    OUTBCOU.......4800
      COMMON /SOLVI/ KSOLVP,KSOLVU,NN1,NN2,NN3                           OUTBCOU.......4900
      COMMON /TIMES/ DELT,TSEC,TMIN,THOUR,TDAY,TWEEK,TMONTH,TYEAR,       OUTBCOU.......5000
     1   TMAX,DELTP,DELTU,DLTPM1,DLTUM1,IT,ITBCS,ITRST,ITMAX,TSTART      OUTBCOU.......5100
      DATA (BCDSTR(M),M=-1,4)                                            OUTBCOU.......5200
     1   /'    BCTIME','       INP','       BCS','       BCS',           OUTBCOU.......5300
     2    '     LAKES','     LAKES'/                                     OUTBCOU.......5400
      DATA NOTAPP /"                                     N/A"/           OUTBCOU.......5500
      SAVE BCDSTR                                                        OUTBCOU.......5600
C                                                                        OUTBCOU.......5700
C.....CALCULATE HEADERS ON FIRST CALL AND CREATE OUTPUT ON EACH CALL.    OUTBCOU.......5800
C                                                                        OUTBCOU.......5900
C                                                                        OUTBCOU.......6000
      IF (.NOT. ONCEK13)  THEN                                           OUTBCOU.......6100
C.....FIRST CALL -- CREATE FILE HEADER.                                  OUTBCOU.......6200
C                                                                        OUTBCOU.......6300
C........CALCULATE THE MAXIMUM NUMBER OF TIME STEPS, KTMAX.              OUTBCOU.......6400
         KT=0                                                            OUTBCOU.......6500
         DO 4 JT=1,ITMAX                                                 OUTBCOU.......6600
            IF (MOD(JT,NBCUPR).EQ.0 .OR.                                 OUTBCOU.......6700
     1         ((JT.EQ.ITRST+1).AND.((ISSTRA.NE.0).OR.(NBCUPR.GT.0))))   OUTBCOU.......6800
     2         KT = KT + 1                                               OUTBCOU.......6900
    4    CONTINUE                                                        OUTBCOU.......7000
         IF(ITMAX.GT.1 .AND. MOD(ITMAX,NBCUPR).NE.0) KT = KT + 1         OUTBCOU.......7100
         KTMAX = KT                                                      OUTBCOU.......7200
C                                                                        OUTBCOU.......7300
C........ALLOCATE LOCAL ARRAYS                                           OUTBCOU.......7400
         ALLOCATE(TT(KTMAX),ITT(KTMAX))                                  OUTBCOU.......7500
C                                                                        OUTBCOU.......7600
C........CALCULATE AND PRINT TIME STEP INFORMATION                       OUTBCOU.......7700
         TS=TSTART                                                       OUTBCOU.......7800
C........TIME STEP VALUE                                                 OUTBCOU.......7900
         JT=0                                                            OUTBCOU.......8000
C........NUMBER OF PRINTED TIME STEPS                                    OUTBCOU.......8100
         KT=0                                                            OUTBCOU.......8200
C........TIME STEP INCREMENT                                             OUTBCOU.......8300
         DELTK=DELT                                                      OUTBCOU.......8400
         DO 10 JT=1,ITMAX                                                OUTBCOU.......8500
            JTP1 = JT + 1                                                OUTBCOU.......8600
            TS = SCHDLS(ISCHTS)%SLIST(JTP1)%DVALU1                       OUTBCOU.......8700
            IF (MOD(JT,NBCUPR).EQ.0 .OR.                                 OUTBCOU.......8800
     1         ((JT.EQ.ITRST+1).AND.((ISSTRA.NE.0).OR.(NBCUPR.GT.0))))   OUTBCOU.......8900
     2         THEN                                                      OUTBCOU.......9000
               KT = KT + 1                                               OUTBCOU.......9100
               TT(KT) = TS                                               OUTBCOU.......9200
               ITT(KT) = JT                                              OUTBCOU.......9300
            ENDIF                                                        OUTBCOU.......9400
   10    CONTINUE                                                        OUTBCOU.......9500
         IF (ISSTRA.EQ.1) TT(KT) = TSTART                                OUTBCOU.......9600
C                                                                        OUTBCOU.......9700
C                                                                        OUTBCOU.......9800
C........PRINT LAST TIME STEP ALWAYS, UNLESS ALREADY PRINTED             OUTBCOU.......9900
         IF(ITMAX.GT.1 .AND. MOD(ITMAX,NBCUPR).NE.0) THEN                OUTBCOU......10000
            KT = KT + 1                                                  OUTBCOU......10100
            TT(KT) = TS                                                  OUTBCOU......10200
            ITT(KT) = ITMAX                                              OUTBCOU......10300
         ENDIF                                                           OUTBCOU......10400
C                                                                        OUTBCOU......10500
C........COMPUTE ACTUAL NUMBER OF PRINTED TIME STEPS, KTPRN; LESS THAN   OUTBCOU......10600
C           KTMAX IF RUN IS A RESTART                                    OUTBCOU......10700
         IF (IREAD.EQ.+1) THEN                                           OUTBCOU......10800
            KTPRN = KTMAX                                                OUTBCOU......10900
         ELSE                                                            OUTBCOU......11000
            KTPRN = 0                                                    OUTBCOU......11100
            DO 17 KT=1,KTMAX                                             OUTBCOU......11200
               IF (ITT(KT).GT.ITRST) KTPRN = KTPRN + 1                   OUTBCOU......11300
   17       CONTINUE                                                     OUTBCOU......11400
         END IF                                                          OUTBCOU......11500
C                                                                        OUTBCOU......11600
C........WRITE HEADER INFORMATION                                        OUTBCOU......11700
         WRITE(K13,950) TITLE1, TITLE2                                   OUTBCOU......11800
         IF (KTYPE(2).GT.1) THEN                                         OUTBCOU......11900
            IF (KTYPE(2).EQ.3) THEN                                      OUTBCOU......12000
               CTYPE2 = "BLOCKWISE MESH"                                 OUTBCOU......12100
            ELSE                                                         OUTBCOU......12200
               CTYPE2 = "REGULAR MESH  "                                 OUTBCOU......12300
            END IF                                                       OUTBCOU......12400
            IF (KTYPE(1).EQ.3) THEN                                      OUTBCOU......12500
               WRITE(K13,951) KTYPE(1),CTYPE2,NN1,NN2,NN3,NN," Nodes",   OUTBCOU......12600
     1            NE, " Elems"                                           OUTBCOU......12700
            ELSE                                                         OUTBCOU......12800
               WRITE(K13,952) KTYPE(1),CTYPE2,NN1,NN2,NN," Nodes",       OUTBCOU......12900
     1            NE, " Elems"                                           OUTBCOU......13000
            END IF                                                       OUTBCOU......13100
         ELSE IF (KTYPE(2).EQ.1) THEN                                    OUTBCOU......13200
            WRITE(K13,953) KTYPE(1), LAYSTR(1:6), NLAYS, NNLAY,          OUTBCOU......13300
     1         NN, " Nodes", NE, " Elems"                                OUTBCOU......13400
         ELSE                                                            OUTBCOU......13500
            WRITE(K13,954) KTYPE(1), NN, " Nodes", NE, " Elems"          OUTBCOU......13600
         END IF                                                          OUTBCOU......13700
         IF (ME.GT.0) THEN                                               OUTBCOU......13800
            WRITE(K13,960) "SPECIFIED-TEMPERATURE NODE RESULTS  ", KTPRN OUTBCOU......13900
         ELSE                                                            OUTBCOU......14000
            WRITE(K13,960) "SPECIFIED-CONCENTRATION NODE RESULTS", KTPRN OUTBCOU......14100
         END IF                                                          OUTBCOU......14200
         DO 920 KT=1,KTMAX                                               OUTBCOU......14300
            IF (ITT(KT).GT.ITRST)                                        OUTBCOU......14400
     1         WRITE(K13,961) ITT(KT), TT(KT)                            OUTBCOU......14500
  920    CONTINUE                                                        OUTBCOU......14600
  950    FORMAT("## ", 80A1,                                             OUTBCOU......14700
     1         /"## ", 80A1,                                             OUTBCOU......14800
     2         /"## ")                                                   OUTBCOU......14900
  951    FORMAT("## ", I1, "-D, ", A, 2X,                                OUTBCOU......15000
     1                 "(", 2(I9, ")*("), I9, ") = ", I9, A, 1X,         OUTBCOU......15100
     2                 "(", I9, A, ")"                                   OUTBCOU......15200
     3         /"## ")                                                   OUTBCOU......15300
  952    FORMAT("## ", I1, "-D, ", A, 14X,                               OUTBCOU......15400
     1                 "(", I9, ")*(", I9, ") = ", I9, A, 1X,            OUTBCOU......15500
     2                 "(", I9, A, ")"                                   OUTBCOU......15600
     3         /"## ")                                                   OUTBCOU......15700
  953    FORMAT("## ", I1, "-D, LAYERED MESH [", A6, "]", 7X,            OUTBCOU......15800
     1                 "(", I9, ")*(", I9, ") = ", I9, A, 1X,            OUTBCOU......15900
     2                 "(", I9, A, ")"                                   OUTBCOU......16000
     3         /"## ")                                                   OUTBCOU......16100
  954    FORMAT("## ", I1, "-D, IRREGULAR MESH", 40X, I9, A, 1X,         OUTBCOU......16200
     1                 "(", I9, A, ")"                                   OUTBCOU......16300
     2         /"## ")                                                   OUTBCOU......16400
  960    FORMAT("## ", 92("="),                                          OUTBCOU......16500
     1         /"## ", A, 28X, I9, " Time steps printed",                OUTBCOU......16600
     2         /"## ", 92("="),                                          OUTBCOU......16700
     3         /"## ",                                                   OUTBCOU......16800
     4         /"## ", 4X, "Time steps"                                  OUTBCOU......16900
     5         /"## ", 3X, "in this file      Time (sec)"                OUTBCOU......17000
     6         /"## ", 2X, 14("-"), 3X, 13("-"))                         OUTBCOU......17100
  961    FORMAT ("## ", 7X, I8, 4X, 1PE13.6)                             OUTBCOU......17200
C                                                                        OUTBCOU......17300
C........DEALLOCATE LOCAL ARRAYS.                                        OUTBCOU......17400
         DEALLOCATE(TT,ITT)                                              OUTBCOU......17500
C                                                                        OUTBCOU......17600
         ONCEK13 = .TRUE.                                                OUTBCOU......17700
      ENDIF                                                              OUTBCOU......17800
C                                                                        OUTBCOU......17900
C.....NODEWISE HEADER INFORMATION REPEATED BEFORE EACH TIME STEP         OUTBCOU......18000
      IF ((IT.EQ.1).AND.(ISSTRA.EQ.1)) THEN                              OUTBCOU......18100
         DURN = 0D0                                                      OUTBCOU......18200
         TOUT = TSTART                                                   OUTBCOU......18300
      ELSE                                                               OUTBCOU......18400
         DURN = DELT                                                     OUTBCOU......18500
         TOUT = TSEC                                                     OUTBCOU......18600
      END IF                                                             OUTBCOU......18700
      WRITE(K13,966) IT, DURN, TOUT                                      OUTBCOU......18800
  966 FORMAT('## ',                                                      OUTBCOU......18900
     1      /'## ', 131('='),                                            OUTBCOU......19000
     2      /'## TIME STEP ', I8, 61X, 'Duration: ', 1PE11.4, ' sec',    OUTBCOU......19100
     3                            6X, 'Time: ', 1PE11.4, ' sec',         OUTBCOU......19200
     4      /'## ', 131('='))                                            OUTBCOU......19300
      IF (ME .GT. 0) THEN                                                OUTBCOU......19400
         WRITE(K13,967)                                                  OUTBCOU......19500
      ELSE                                                               OUTBCOU......19600
         WRITE(K13,968)                                                  OUTBCOU......19700
      END IF                                                             OUTBCOU......19800
  967 FORMAT(                                                            OUTBCOU......19900
     1    '## ',76X,'Resultant'                                          OUTBCOU......20000
     2   /'## ',66X,'source/sink(+/-) of'                                OUTBCOU......20100
     3   /'##   Node    Defined in',28X,'BCS identifier',                OUTBCOU......20200
     4           4X,'energy (energy/sec)',10X,'Computed temp',           OUTBCOU......20300
     5           9X,'Specified temp')                                    OUTBCOU......20400
  968 FORMAT(                                                            OUTBCOU......20500
     1    '## ',76X,'Resultant'                                          OUTBCOU......20600
     2   /'## ',66X,'source/sink(+/-) of'                                OUTBCOU......20700
     3   /'##   Node    Defined in',28X,'BCS identifier',                OUTBCOU......20800
     4           6X,'solute (mass/sec)',10X,'Computed conc',             OUTBCOU......20900
     5           9X,'Specified conc')                                    OUTBCOU......21000
C                                                                        OUTBCOU......21100
C.....BOUNDARY CONDITION INFORMATION FOR THIS TIME STEP                  OUTBCOU......21200
      IF (NUBC.GT.0) THEN                                                OUTBCOU......21300
      DO 990 IU=1,NUBC                                                   OUTBCOU......21400
      IUP = IU + NPBC                                                    OUTBCOU......21500
      I=IABS(IUBC(IUP))                                                  OUTBCOU......21600
      IBC = IBCUBC(IUP)                                                  OUTBCOU......21700
      IF ((IBC.LT.2).AND.LKBCUBC(IUP)) THEN                              OUTBCOU......21800
         CALL BUDUBC(IUP,QUBC,QUEXGW,QUEXLK,UEX)                         OUTBCOU......21900
         QULVAL = QUBC                                                   OUTBCOU......22000
         IF (IBC.GT.0) THEN                                              OUTBCOU......22100
            WRITE(K13,980) I,                                            OUTBCOU......22200
     1         BCDSTR(IBC),ADJUSTR(CIDBCS(IIDUBC(IUP))),                 OUTBCOU......22300
     2         CUTSML(QULVAL),CUTSML(UVEC(I)),CUTSML(UEX)                OUTBCOU......22400
         ELSE                                                            OUTBCOU......22500
            WRITE(K13,980) I,                                            OUTBCOU......22600
     1         BCDSTR(IBC),NOTAPP,                                       OUTBCOU......22700
     2         CUTSML(QULVAL),CUTSML(UVEC(I)),CUTSML(UEX)                OUTBCOU......22800
         END IF                                                          OUTBCOU......22900
  980    FORMAT(I9,4X,A10,2X,A40,8X,1PE15.7,2(8X,1PE15.8))               OUTBCOU......23000
      ELSE IF (KINACT.EQ.1) THEN                                         OUTBCOU......23100
         IF (IBC.EQ.2) THEN                                              OUTBCOU......23200
            WRITE(K13,982) I,                                            OUTBCOU......23300
     1         BCDSTR(IBC),ADJUSTR(CIDBCS(IIDUBC(IUP))),                 OUTBCOU......23400
     2         "INACTIVE","INACTIVE","INACTIVE"                          OUTBCOU......23500
         ELSE                                                            OUTBCOU......23600
            IF (.NOT.LKBCUBC(IUP)) IBC = 4                               OUTBCOU......23700
            WRITE(K13,982) I,                                            OUTBCOU......23800
     1         BCDSTR(IBC),NOTAPP,                                       OUTBCOU......23900
     2         "INACTIVE","INACTIVE","INACTIVE"                          OUTBCOU......24000
         END IF                                                          OUTBCOU......24100
  982    FORMAT(I9,4X,A10,2X,A40,3(15X,A8))                              OUTBCOU......24200
      END IF                                                             OUTBCOU......24300
  990 CONTINUE                                                           OUTBCOU......24400
      END IF                                                             OUTBCOU......24500
C                                                                        OUTBCOU......24600
      RETURN                                                             OUTBCOU......24700
C                                                                        OUTBCOU......24800
      END                                                                OUTBCOU......24900
C                                                                        OUTBCOU......25000
C     SUBROUTINE        O  U  T  B  C  O  U  G     SUTRA VERSION 3.0     OUTBCOUG.......100
C                                                                        OUTBCOUG.......200
C *** PURPOSE :                                                          OUTBCOUG.......300
C ***  TO PRINT BOUNDARY CONDITION INFORMATION AT GENERALIZED-TRANSPORT  OUTBCOUG.......400
C ***  NODES IN A FLEXIBLE, COLUMNWISE FORMAT.  OUTPUT IS TO THE         OUTBCOUG.......500
C ***  BCOUG FILE.                                                       OUTBCOUG.......600
C                                                                        OUTBCOUG.......700
      SUBROUTINE OUTBCOUG(UVEC,UBG1,QUBG1,UBG2,QUBG2,QUBGIC,GNUUG,       OUTBCOUG.......800
     1   IUBG,IBCUBG,IIDUBG,TITLE1,TITLE2)                               OUTBCOUG.......900
      USE ALLARR, ONLY : CIDBCS                                          OUTBCOUG......1000
      USE EXPINT                                                         OUTBCOUG......1100
      USE SCHDEF                                                         OUTBCOUG......1200
      USE LARR, ONLY : ISLAKE,LAKNOD,PLK,ULK,LKBCUBG                     OUTBCOUG......1300
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                OUTBCOUG......1400
      PARAMETER (NCOLMX=9)                                               OUTBCOUG......1500
      CHARACTER*1  TITLE1(80),TITLE2(80)                                 OUTBCOUG......1600
      CHARACTER*14 CTYPE2                                                OUTBCOUG......1700
      CHARACTER*80 LAYSTR                                                OUTBCOUG......1800
      CHARACTER*10 BCDSTR(-1:4)                                          OUTBCOUG......1900
      CHARACTER*40 NOTAPP                                                OUTBCOUG......2000
      LOGICAL ONCEK10,ONCEK11,ONCEK12,ONCEK13,ONCEK14,ONCEK15            OUTBCOUG......2100
      INTEGER(1) IBCUBG(NUBG)                                            OUTBCOUG......2200
      INTEGER IIDUBG(NUBG)                                               OUTBCOUG......2300
      DIMENSION UVEC(NNVEC)                                              OUTBCOUG......2400
      DIMENSION UBG1(NUBG),QUBG1(NUBG),UBG2(NUBG),QUBG2(NUBG),           OUTBCOUG......2500
     1   QUBGIC(NUBG),GNUUG(NUBG)                                        OUTBCOUG......2600
      DIMENSION IUBG(NUBG)                                               OUTBCOUG......2700
      DIMENSION KTYPE(2)                                                 OUTBCOUG......2800
      DIMENSION J5COL(NCOLMX), J6COL(NCOLMX)                             OUTBCOUG......2900
      ALLOCATABLE TT(:),ITT(:)                                           OUTBCOUG......3000
      COMMON /CLAY/ LAYSTR                                               OUTBCOUG......3100
      COMMON /CONTRL/ GNUP,GNUU,UP,DTMULT,DTMAX,ME,ISSFLO,ISSTRA,ITCYC,  OUTBCOUG......3200
     1   NPCYC,NUCYC,NPRINT,NBCFPR,NBCSPR,NBCPPR,NBCUPR,NLAKPR,IREAD,    OUTBCOUG......3300
     1   NBGPPR,NBGUPR,ISTORE,NOUMAT,IUNSAT,IALSAT,KTYPE                 OUTBCOUG......3400
      COMMON /DIMLAY/ NLAYS,NNLAY,NELAY                                  OUTBCOUG......3500
      COMMON /DIMS/ NN,NE,NIN,NBI,NCBI,NB,NBHALF,NPBC,NUBC,              OUTBCOUG......3600
     1   NSOP,NSOU,NBCN,NPBG,NUBG,NCIDB                                  OUTBCOUG......3700
      COMMON /DIMSRF/ MAXCON, NNSURF, NNVERT                             OUTBCOUG......3800
      COMMON /DIMX/ NWI,NWF,NWL,NELT,NNNX,NEX,N48                        OUTBCOUG......3900
      COMMON /DIMX2/ NELTA,NNVEC,NDIMIA,NDIMJA                           OUTBCOUG......4000
      COMMON /FUNITS/ K00,K0,K1,K2,K3,K4,K5,K6,K7,K8,K9,                 OUTBCOUG......4100
     1   K10,K11,K12,K13,K14,K15,K16,K17,K18,K19,K20,K21,K22,K23         OUTBCOUG......4200
      COMMON /GRAVEC/ GRAVX,GRAVY,GRAVZ                                  OUTBCOUG......4300
      COMMON /ITERAT/ RPM,RPMAX,RUM,RUMAX,ITER,ITRMAX,IPWORS,IUWORS      OUTBCOUG......4400
      COMMON /JCOLS/ NCOLPR,LCOLPR,NCOLS5,NCOLS6,J5COL,J6COL             OUTBCOUG......4500
      COMMON /KPRBCS/ KINACT                                             OUTBCOUG......4600
      COMMON /KPRINT/ KNODAL,KELMNT,KINCID,KPLOTP,KPLOTU,                OUTBCOUG......4700
     1   KPANDS,KVEL,KCORT,KBUDG,KSCRN,KPAUSE                            OUTBCOUG......4800
      COMMON /PARAMS/ COMPFL,COMPMA,DRWDU,CW,CS,RHOS,SIGMAW,SIGMAS,      OUTBCOUG......4900
     1   RHOW0,URHOW0,VISC0,PRODF1,PRODS1,PRODF0,PRODS0,CHI1,CHI2        OUTBCOUG......5000
      COMMON /PLT2/ ONCEK10, ONCEK11, ONCEK12, ONCEK13, ONCEK14, ONCEK15 OUTBCOUG......5100
      COMMON /SCH/ NSCH,ISCHTS,NSCHAU                                    OUTBCOUG......5200
      COMMON /SOLVI/ KSOLVP,KSOLVU,NN1,NN2,NN3                           OUTBCOUG......5300
      COMMON /TIMES/ DELT,TSEC,TMIN,THOUR,TDAY,TWEEK,TMONTH,TYEAR,       OUTBCOUG......5400
     1   TMAX,DELTP,DELTU,DLTPM1,DLTUM1,IT,ITBCS,ITRST,ITMAX,TSTART      OUTBCOUG......5500
      DATA (BCDSTR(M),M=-1,4)                                            OUTBCOUG......5600
     1   /'    BCTIME','       INP','       BCS','       BCS',           OUTBCOUG......5700
     2    '     LAKES','     LAKES'/                                     OUTBCOUG......5800
      DATA NOTAPP /"                                     N/A"/           OUTBCOUG......5900
      SAVE BCDSTR                                                        OUTBCOUG......6000
C                                                                        OUTBCOUG......6100
C.....CALCULATE HEADERS ON FIRST CALL AND CREATE OUTPUT ON EACH CALL.    OUTBCOUG......6200
C                                                                        OUTBCOUG......6300
C                                                                        OUTBCOUG......6400
      IF (.NOT. ONCEK15)  THEN                                           OUTBCOUG......6500
C.....FIRST CALL -- CREATE FILE HEADER.                                  OUTBCOUG......6600
C                                                                        OUTBCOUG......6700
C........CALCULATE THE MAXIMUM NUMBER OF TIME STEPS, KTMAX.              OUTBCOUG......6800
         KT=0                                                            OUTBCOUG......6900
         DO 4 JT=1,ITMAX                                                 OUTBCOUG......7000
            IF (MOD(JT,NBGUPR).EQ.0 .OR.                                 OUTBCOUG......7100
     1         ((JT.EQ.ITRST+1).AND.((ISSTRA.NE.0).OR.(NBGUPR.GT.0))))   OUTBCOUG......7200
     2         KT = KT + 1                                               OUTBCOUG......7300
    4    CONTINUE                                                        OUTBCOUG......7400
         IF(ITMAX.GT.1 .AND. MOD(ITMAX,NBGUPR).NE.0) KT = KT + 1         OUTBCOUG......7500
         KTMAX = KT                                                      OUTBCOUG......7600
C                                                                        OUTBCOUG......7700
C........ALLOCATE LOCAL ARRAYS                                           OUTBCOUG......7800
         ALLOCATE(TT(KTMAX),ITT(KTMAX))                                  OUTBCOUG......7900
C                                                                        OUTBCOUG......8000
C........CALCULATE AND PRINT TIME STEP INFORMATION                       OUTBCOUG......8100
         TS=TSTART                                                       OUTBCOUG......8200
C........TIME STEP VALUE                                                 OUTBCOUG......8300
         JT=0                                                            OUTBCOUG......8400
C........NUMBER OF PRINTED TIME STEPS                                    OUTBCOUG......8500
         KT=0                                                            OUTBCOUG......8600
C........TIME STEP INCREMENT                                             OUTBCOUG......8700
         DELTK=DELT                                                      OUTBCOUG......8800
         DO 10 JT=1,ITMAX                                                OUTBCOUG......8900
            JTP1 = JT + 1                                                OUTBCOUG......9000
            TS = SCHDLS(ISCHTS)%SLIST(JTP1)%DVALU1                       OUTBCOUG......9100
            IF (MOD(JT,NBGUPR).EQ.0 .OR.                                 OUTBCOUG......9200
     1         ((JT.EQ.ITRST+1).AND.((ISSTRA.NE.0).OR.(NBGUPR.GT.0))))   OUTBCOUG......9300
     2         THEN                                                      OUTBCOUG......9400
               KT = KT + 1                                               OUTBCOUG......9500
               TT(KT) = TS                                               OUTBCOUG......9600
               ITT(KT) = JT                                              OUTBCOUG......9700
            ENDIF                                                        OUTBCOUG......9800
   10    CONTINUE                                                        OUTBCOUG......9900
         IF (ISSTRA.EQ.1) THEN                                           OUTBCOUG.....10000
            TT(KT) = TSTART                                              OUTBCOUG.....10100
            ITT(KT) = 0                                                  OUTBCOUG.....10200
         END IF                                                          OUTBCOUG.....10300
C                                                                        OUTBCOUG.....10400
C                                                                        OUTBCOUG.....10500
C........PRINT LAST TIME STEP ALWAYS, UNLESS ALREADY PRINTED             OUTBCOUG.....10600
         IF(ITMAX.GT.1 .AND. MOD(ITMAX,NBGUPR).NE.0) THEN                OUTBCOUG.....10700
            KT = KT + 1                                                  OUTBCOUG.....10800
            TT(KT) = TS                                                  OUTBCOUG.....10900
            ITT(KT) = ITMAX                                              OUTBCOUG.....11000
         ENDIF                                                           OUTBCOUG.....11100
C                                                                        OUTBCOUG.....11200
C........COMPUTE ACTUAL NUMBER OF PRINTED TIME STEPS, KTPRN; LESS THAN   OUTBCOUG.....11300
C           KTMAX IF RUN IS A RESTART                                    OUTBCOUG.....11400
         IF (IREAD.EQ.+1) THEN                                           OUTBCOUG.....11500
            KTPRN = KTMAX                                                OUTBCOUG.....11600
         ELSE                                                            OUTBCOUG.....11700
            KTPRN = 0                                                    OUTBCOUG.....11800
            DO 17 KT=1,KTMAX                                             OUTBCOUG.....11900
               IF (ITT(KT).GT.ITRST) KTPRN = KTPRN + 1                   OUTBCOUG.....12000
   17       CONTINUE                                                     OUTBCOUG.....12100
         END IF                                                          OUTBCOUG.....12200
C                                                                        OUTBCOUG.....12300
C........WRITE HEADER INFORMATION                                        OUTBCOUG.....12400
         WRITE(K15,950) TITLE1, TITLE2                                   OUTBCOUG.....12500
         IF (KTYPE(2).GT.1) THEN                                         OUTBCOUG.....12600
            IF (KTYPE(2).EQ.3) THEN                                      OUTBCOUG.....12700
               CTYPE2 = "BLOCKWISE MESH"                                 OUTBCOUG.....12800
            ELSE                                                         OUTBCOUG.....12900
               CTYPE2 = "REGULAR MESH  "                                 OUTBCOUG.....13000
            END IF                                                       OUTBCOUG.....13100
            IF (KTYPE(1).EQ.3) THEN                                      OUTBCOUG.....13200
               WRITE(K15,951) KTYPE(1),CTYPE2,NN1,NN2,NN3,NN," Nodes",   OUTBCOUG.....13300
     1            NE, " Elems"                                           OUTBCOUG.....13400
            ELSE                                                         OUTBCOUG.....13500
               WRITE(K15,952) KTYPE(1),CTYPE2,NN1,NN2,NN," Nodes",       OUTBCOUG.....13600
     1            NE, " Elems"                                           OUTBCOUG.....13700
            END IF                                                       OUTBCOUG.....13800
         ELSE IF (KTYPE(2).EQ.1) THEN                                    OUTBCOUG.....13900
            WRITE(K15,953) KTYPE(1), LAYSTR(1:6), NLAYS, NNLAY,          OUTBCOUG.....14000
     1         NN, " Nodes", NE, " Elems"                                OUTBCOUG.....14100
         ELSE                                                            OUTBCOUG.....14200
            WRITE(K15,954) KTYPE(1), NN, " Nodes", NE, " Elems"          OUTBCOUG.....14300
         END IF                                                          OUTBCOUG.....14400
         WRITE(K15,960) "GENERALIZED-TRANSPORT NODE RESULTS", KTPRN      OUTBCOUG.....14500
         DO 920 KT=1,KTMAX                                               OUTBCOUG.....14600
            IF ((ITT(KT).GT.ITRST).OR.(ISSFLO.NE.0))                     OUTBCOUG.....14700
     1         WRITE(K15,961) ITT(KT), TT(KT)                            OUTBCOUG.....14800
  920    CONTINUE                                                        OUTBCOUG.....14900
  950    FORMAT("## ", 80A1,                                             OUTBCOUG.....15000
     1         /"## ", 80A1,                                             OUTBCOUG.....15100
     2         /"## ")                                                   OUTBCOUG.....15200
  951    FORMAT("## ", I1, "-D, ", A, 2X,                                OUTBCOUG.....15300
     1                 "(", 2(I9, ")*("), I9, ") = ", I9, A, 1X,         OUTBCOUG.....15400
     2                 "(", I9, A, ")"                                   OUTBCOUG.....15500
     3         /"## ")                                                   OUTBCOUG.....15600
  952    FORMAT("## ", I1, "-D, ", A, 14X,                               OUTBCOUG.....15700
     1                 "(", I9, ")*(", I9, ") = ", I9, A, 1X,            OUTBCOUG.....15800
     2                 "(", I9, A, ")"                                   OUTBCOUG.....15900
     3         /"## ")                                                   OUTBCOUG.....16000
  953    FORMAT("## ", I1, "-D, LAYERED MESH [", A6, "]", 7X,            OUTBCOUG.....16100
     1                 "(", I9, ")*(", I9, ") = ", I9, A, 1X,            OUTBCOUG.....16200
     2                 "(", I9, A, ")"                                   OUTBCOUG.....16300
     3         /"## ")                                                   OUTBCOUG.....16400
  954    FORMAT("## ", I1, "-D, IRREGULAR MESH", 40X, I9, A, 1X,         OUTBCOUG.....16500
     1                 "(", I9, A, ")"                                   OUTBCOUG.....16600
     2         /"## ")                                                   OUTBCOUG.....16700
  960    FORMAT("## ", 92("="),                                          OUTBCOUG.....16800
     1         /"## ", A, 30X, I9, " Time steps printed",                OUTBCOUG.....16900
     2         /"## ", 92("="),                                          OUTBCOUG.....17000
     3         /"## ",                                                   OUTBCOUG.....17100
     4         /"## ", 4X, "Time steps"                                  OUTBCOUG.....17200
     5         /"## ", 3X, "in this file      Time (sec)"                OUTBCOUG.....17300
     6         /"## ", 2X, 14("-"), 3X, 13("-"))                         OUTBCOUG.....17400
  961    FORMAT ("## ", 7X, I8, 4X, 1PE13.6)                             OUTBCOUG.....17500
C                                                                        OUTBCOUG.....17600
C........DEALLOCATE LOCAL ARRAYS.                                        OUTBCOUG.....17700
         DEALLOCATE(TT,ITT)                                              OUTBCOUG.....17800
C                                                                        OUTBCOUG.....17900
         ONCEK15 = .TRUE.                                                OUTBCOUG.....18000
      ENDIF                                                              OUTBCOUG.....18100
C                                                                        OUTBCOUG.....18200
C.....NODEWISE HEADER INFORMATION REPEATED BEFORE EACH TIME STEP         OUTBCOUG.....18300
      IF ((IT.EQ.0).OR.((IT.EQ.1).AND.(ISSTRA.EQ.1))) THEN               OUTBCOUG.....18400
         DURN = 0D0                                                      OUTBCOUG.....18500
         TOUT = TSTART                                                   OUTBCOUG.....18600
         ITOUT = 0                                                       OUTBCOUG.....18700
      ELSE                                                               OUTBCOUG.....18800
         DURN = DELT                                                     OUTBCOUG.....18900
         TOUT = TSEC                                                     OUTBCOUG.....19000
         ITOUT = IT                                                      OUTBCOUG.....19100
      END IF                                                             OUTBCOUG.....19200
      WRITE(K15,966) ITOUT, DURN, TOUT                                   OUTBCOUG.....19300
  966 FORMAT('## ',                                                      OUTBCOUG.....19400
     1      /'## ', 177('='),                                            OUTBCOUG.....19500
     2      /'## TIME STEP ', I8, 107X, 'Duration: ', 1PE11.4, ' sec',   OUTBCOUG.....19600
     3                            6X, 'Time: ', 1PE11.4, ' sec',         OUTBCOUG.....19700
     4      /'## ', 177('='))                                            OUTBCOUG.....19800
      IF (ME .GT. 0) THEN                                                OUTBCOUG.....19900
         WRITE(K15,967)                                                  OUTBCOUG.....20000
      ELSE                                                               OUTBCOUG.....20100
         WRITE(K15,968)                                                  OUTBCOUG.....20200
      END IF                                                             OUTBCOUG.....20300
  967 FORMAT(                                                            OUTBCOUG.....20400
     1    '## ',76X,'Resultant',                                         OUTBCOUG.....20500
     1          55X,'Inflow/outflow',32X,'Inflow/outflow'                OUTBCOUG.....20600
     2   /'## ',66X,'source/sink(+/-) of',                               OUTBCOUG.....20700
     2          35X,'Temperature',14X,'of energy',                       OUTBCOUG.....20800
     2          12X,'Temperature',14X,'of energy'                        OUTBCOUG.....20900
     3   /'##   Node    Defined in',28X,'BCS identifier',                OUTBCOUG.....21000
     4          4X,'energy (energy/sec)',10X,'Computed temp',            OUTBCOUG.....21100
     4          13X,'at point 1',13X,'at point 1',                       OUTBCOUG.....21200
     4          13X,'at point 2',13X,'at point 2')                       OUTBCOUG.....21300
  968 FORMAT(                                                            OUTBCOUG.....21400
     1    '## ',76X,'Resultant',                                         OUTBCOUG.....21500
     1          55X,'Inflow/outflow',32X,'Inflow/outflow'                OUTBCOUG.....21600
     2   /'## ',66X,'source/sink(+/-) of',                               OUTBCOUG.....21700
     2          35X,'Solute conc',9X,'of solute mass',                   OUTBCOUG.....21800
     2          12X,'Solute conc',9X,'of solute mass',                   OUTBCOUG.....21900
     3   /'##   Node    Defined in',28X,'BCS identifier',                OUTBCOUG.....22000
     4          6X,'solute (mass/sec)',10X,'Computed conc',              OUTBCOUG.....22100
     4          13X,'at point 1',13X,'at point 1',                       OUTBCOUG.....22200
     4          13X,'at point 2',13X,'at point 2')                       OUTBCOUG.....22300
C                                                                        OUTBCOUG.....22400
C.....BOUNDARY CONDITION INFORMATION FOR THIS TIME STEP                  OUTBCOUG.....22500
      IF (NUBG.GT.0) THEN                                                OUTBCOUG.....22600
      DO 990 IUG=1,NUBG                                                  OUTBCOUG.....22700
      I=IABS(IUBG(IUG))                                                  OUTBCOUG.....22800
      IBC = IBCUBG(IUG)                                                  OUTBCOUG.....22900
      IF ((IBC.LT.2).AND.(LKBCUBG(IUG))) THEN                            OUTBCOUG.....23000
         CALL BUDUBG(IUG,QUBG,QUEXGW,QUEXLK,UEX1,UEX2,QUEX1,QUEX2)       OUTBCOUG.....23100
         QUGVAL = QUBG                                                   OUTBCOUG.....23200
         IF (IBC.GT.0) THEN                                              OUTBCOUG.....23300
            WRITE(K15,980) I,                                            OUTBCOUG.....23400
     1         BCDSTR(IBC),ADJUSTR(CIDBCS(IIDUBG(IUG))),                 OUTBCOUG.....23500
     2         CUTSML(QUGVAL),CUTSML(UVEC(I)),                           OUTBCOUG.....23600
     3         CUTSML(UEX1),CUTSML(QUEX1),CUTSML(UEX2),CUTSML(QUEX2)     OUTBCOUG.....23700
         ELSE                                                            OUTBCOUG.....23800
            WRITE(K15,980) I,                                            OUTBCOUG.....23900
     1         BCDSTR(IBC),NOTAPP,                                       OUTBCOUG.....24000
     2         CUTSML(QUGVAL),CUTSML(UVEC(I)),                           OUTBCOUG.....24100
     3         CUTSML(UEX1),CUTSML(QUEX1),CUTSML(UEX2),CUTSML(QUEX2)     OUTBCOUG.....24200
         END IF                                                          OUTBCOUG.....24300
  980    FORMAT(I9,4X,A10,2X,A40,3(8X,1PE15.7),5(8X,1PE15.8),2(A23),     OUTBCOUG.....24400
     1      8X,1PE15.8," (",A3,")")                                      OUTBCOUG.....24500
      ELSE IF (KINACT.EQ.1) THEN                                         OUTBCOUG.....24600
         IF (IBC.EQ.2) THEN                                              OUTBCOUG.....24700
            WRITE(K15,982) I,                                            OUTBCOUG.....24800
     1         BCDSTR(IBC),ADJUSTR(CIDBCS(IIDUBG(IUG))),                 OUTBCOUG.....24900
     2         "INACTIVE","INACTIVE","INACTIVE","INACTIVE","INACTIVE",   OUTBCOUG.....25000
     3         "INACTIVE","INACTIVE","INACTIVE","INACTIVE","INACTIVE",   OUTBCOUG.....25100
     4         "INACTIVE"                                                OUTBCOUG.....25200
         ELSE                                                            OUTBCOUG.....25300
            IF (.NOT.LKBCUBG(IUG)) IBC = 4                               OUTBCOUG.....25400
            WRITE(K15,982) I,                                            OUTBCOUG.....25500
     1         BCDSTR(IBC),NOTAPP,                                       OUTBCOUG.....25600
     2         "INACTIVE","INACTIVE","INACTIVE","INACTIVE","INACTIVE",   OUTBCOUG.....25700
     3         "INACTIVE","INACTIVE","INACTIVE","INACTIVE","INACTIVE",   OUTBCOUG.....25800
     4         "INACTIVE"                                                OUTBCOUG.....25900
         END IF                                                          OUTBCOUG.....26000
  982    FORMAT(I9,4X,A10,2X,A40,11(15X,A8))                             OUTBCOUG.....26100
      END IF                                                             OUTBCOUG.....26200
  990 CONTINUE                                                           OUTBCOUG.....26300
      END IF                                                             OUTBCOUG.....26400
C                                                                        OUTBCOUG.....26500
      RETURN                                                             OUTBCOUG.....26600
C                                                                        OUTBCOUG.....26700
      END                                                                OUTBCOUG.....26800
C                                                                        OUTBCOUG.....26900
C     SUBROUTINE        O  U  T  E  L  E           SUTRA VERSION 3.0     OUTELE.........100
C                                                                        OUTELE.........200
C *** PURPOSE :                                                          OUTELE.........300
C ***  TO PRINT ELEMENT CENTROID COORDINATES AND VELOCITY COMPONENTS     OUTELE.........400
C ***  IN A FLEXIBLE, COLUMNWISE FORMAT.  OUTPUT IS TO THE ELE FILE.     OUTELE.........500
C                                                                        OUTELE.........600
      SUBROUTINE OUTELE(VMAG,VANG1,VANG2,IN,X,Y,Z,TITLE1,TITLE2,         OUTELE.........700
     1   BCSFL,BCSTR)                                                    OUTELE.........800
      USE EXPINT                                                         OUTELE.........900
      USE SCHDEF                                                         OUTELE........1000
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                OUTELE........1100
      PARAMETER (NCOLMX=9)                                               OUTELE........1200
      CHARACTER*1  TITLE1(80),TITLE2(80)                                 OUTELE........1300
      CHARACTER*15 COLTK6(7)                                             OUTELE........1400
      CHARACTER*1 CPVX,CPVY,CPVZ                                         OUTELE........1500
      CHARACTER*14 CTYPE2                                                OUTELE........1600
      CHARACTER*80 LAYSTR                                                OUTELE........1700
      LOGICAL ONCEK5,ONCEK6,ONCEK7,ONCEK8,ONCESTG                        OUTELE........1800
      LOGICAL PRINTE                                                     OUTELE........1900
      LOGICAL BCSFL(0:ITMAX),BCSTR(0:ITMAX)                              OUTELE........2000
      DIMENSION IN(NIN),IIN(8)                                           OUTELE........2100
      DIMENSION VMAG(NE),VANG1(NE),VANG2(NEX)                            OUTELE........2200
      DIMENSION X(NN),Y(NN),Z(NN)                                        OUTELE........2300
      DIMENSION VCOL(NCOLMX),VVAR(7)                                     OUTELE........2400
      DIMENSION J5COL(NCOLMX),J6COL(NCOLMX)                              OUTELE........2500
      DIMENSION KTYPE(2)                                                 OUTELE........2600
      ALLOCATABLE TT(:),ITT(:),ISVEL(:)                                  OUTELE........2700
      COMMON /CLAY/ LAYSTR                                               OUTELE........2800
      COMMON /CONTRL/ GNUP,GNUU,UP,DTMULT,DTMAX,ME,ISSFLO,ISSTRA,ITCYC,  OUTELE........2900
     1   NPCYC,NUCYC,NPRINT,NBCFPR,NBCSPR,NBCPPR,NBCUPR,NLAKPR,IREAD,    OUTELE........3000
     1   NBGPPR,NBGUPR,ISTORE,NOUMAT,IUNSAT,IALSAT,KTYPE                 OUTELE........3100
      COMMON /DIMLAY/ NLAYS,NNLAY,NELAY                                  OUTELE........3200
      COMMON /DIMS/ NN,NE,NIN,NBI,NCBI,NB,NBHALF,NPBC,NUBC,              OUTELE........3300
     1   NSOP,NSOU,NBCN,NPBG,NUBG,NCIDB                                  OUTELE........3400
      COMMON /DIMX/ NWI,NWF,NWL,NELT,NNNX,NEX,N48                        OUTELE........3500
      COMMON /FUNITS/ K00,K0,K1,K2,K3,K4,K5,K6,K7,K8,K9,                 OUTELE........3600
     1   K10,K11,K12,K13,K14,K15,K16,K17,K18,K19,K20,K21,K22,K23         OUTELE........3700
      COMMON /GRAVEC/ GRAVX,GRAVY,GRAVZ                                  OUTELE........3800
      COMMON /ITERAT/ RPM,RPMAX,RUM,RUMAX,ITER,ITRMAX,IPWORS,IUWORS      OUTELE........3900
      COMMON /JCOLS/ NCOLPR,LCOLPR,NCOLS5,NCOLS6,J5COL,J6COL             OUTELE........4000
      COMMON /KPRINT/ KNODAL,KELMNT,KINCID,KPLOTP,KPLOTU,                OUTELE........4100
     1   KPANDS,KVEL,KCORT,KBUDG,KSCRN,KPAUSE                            OUTELE........4200
      COMMON /PLT1/ ONCEK5, ONCEK6, ONCEK7, ONCEK8, ONCESTG              OUTELE........4300
      COMMON /SCH/ NSCH,ISCHTS,NSCHAU                                    OUTELE........4400
      COMMON /SOLVI/ KSOLVP,KSOLVU,NN1,NN2,NN3                           OUTELE........4500
      COMMON /TIMES/ DELT,TSEC,TMIN,THOUR,TDAY,TWEEK,TMONTH,TYEAR,       OUTELE........4600
     1   TMAX,DELTP,DELTU,DLTPM1,DLTUM1,IT,ITBCS,ITRST,ITMAX,TSTART      OUTELE........4700
      DATA (COLTK6(MM), MM=1,7) /'Element',                              OUTELE........4800
     1   '       X origin', '       Y origin', '       Z origin',        OUTELE........4900
     2   '     X velocity', '     Y velocity', '     Z velocity'/        OUTELE........5000
      SAVE COLTK6                                                        OUTELE........5100
C                                                                        OUTELE........5200
C.....CALCULATE HEADERS ON FIRST CALL AND CREATE OUTPUT ON EACH CALL.    OUTELE........5300
C                                                                        OUTELE........5400
      DKTM2 = DBLE(KTYPE(1) - 2)                                         OUTELE........5500
C                                                                        OUTELE........5600
      IF (.NOT. ONCEK6)  THEN                                            OUTELE........5700
C.....FIRST CALL -- CREATE FILE HEADER.                                  OUTELE........5800
C                                                                        OUTELE........5900
C........CALCULATE THE MAXIMUM NUMBER OF TIME STEPS, KTMAX.              OUTELE........6000
         KT=0                                                            OUTELE........6100
         DO 4 JT=1,ITMAX                                                 OUTELE........6200
            IF (MOD(JT,LCOLPR).EQ.0 .OR. JT.EQ.ITRST+1) KT = KT + 1      OUTELE........6300
    4    CONTINUE                                                        OUTELE........6400
         IF(ITMAX.GT.1 .AND. MOD(ITMAX,LCOLPR).NE.0) KT = KT + 1         OUTELE........6500
         KTMAX = KT                                                      OUTELE........6600
C                                                                        OUTELE........6700
C........ALLOCATE LOCAL ARRAYS                                           OUTELE........6800
         ALLOCATE(TT(KTMAX),ITT(KTMAX))                                  OUTELE........6900
         ALLOCATE(ISVEL(KTMAX))                                          OUTELE........7000
C                                                                        OUTELE........7100
C........CALCULATE AND PRINT TIME STEP INFORMATION                       OUTELE........7200
         TS=TSTART                                                       OUTELE........7300
C........TIME STEP VALUE                                                 OUTELE........7400
         JT=0                                                            OUTELE........7500
C........NUMBER OF PRINTED TIME STEPS                                    OUTELE........7600
         KT=0                                                            OUTELE........7700
C........TIME STEP INCREMENT                                             OUTELE........7800
         DELTK=DELT                                                      OUTELE........7900
C........INDICATORS OF WHEN VARIABLES ARE CALCULATED AND PRINTED         OUTELE........8000
         LCP = 0                                                         OUTELE........8100
         CPVX = 'N'                                                      OUTELE........8200
         CPVY = 'N'                                                      OUTELE........8300
         CPVZ = 'N'                                                      OUTELE........8400
         DO 8 M=1,NCOLS6                                                 OUTELE........8500
            IF (J6COL(M).EQ.5) CPVX = 'Y'                                OUTELE........8600
            IF (J6COL(M).EQ.6) CPVY = 'Y'                                OUTELE........8700
            IF (J6COL(M).EQ.7) CPVZ = 'Y'                                OUTELE........8800
    8    CONTINUE                                                        OUTELE........8900
         DO 10 JT=1,ITMAX                                                OUTELE........9000
            JTP1 = JT + 1                                                OUTELE........9100
            TS = SCHDLS(ISCHTS)%SLIST(JTP1)%DVALU1                       OUTELE........9200
            LCV = LCP                                                    OUTELE........9300
            IF (MOD(JT,NPCYC).EQ.0 .OR. BCSFL(JT) .OR. JT.EQ.1)          OUTELE........9400
     1         LCP = JT                                                  OUTELE........9500
            IF (MOD(JT,LCOLPR).EQ.0 .OR. JT.EQ.ITRST+1) THEN             OUTELE........9600
               KT = KT + 1                                               OUTELE........9700
               TT(KT) = TS                                               OUTELE........9800
               ITT(KT) = JT                                              OUTELE........9900
               ISVEL(KT) = LCV                                           OUTELE.......10000
               IF (JT.NE.1 .OR. ISSFLO.EQ.2) THEN                        OUTELE.......10100
                  IF (MOD(JT,NUCYC).NE.0 .AND. (.NOT.BCSTR(JT)))         OUTELE.......10200
     1               ISVEL(KT) = 0                                       OUTELE.......10300
               ENDIF                                                     OUTELE.......10400
            ENDIF                                                        OUTELE.......10500
   10    CONTINUE                                                        OUTELE.......10600
         IF (ISSTRA.EQ.1) TT(KT) = TSTART                                OUTELE.......10700
C                                                                        OUTELE.......10800
C                                                                        OUTELE.......10900
C........PRINT LAST TIME STEP ALWAYS, UNLESS ALREADY PRINTED             OUTELE.......11000
         IF(ITMAX.GT.1 .AND. MOD(ITMAX,LCOLPR).NE.0) THEN                OUTELE.......11100
            KT = KT + 1                                                  OUTELE.......11200
            TT(KT) = TS                                                  OUTELE.......11300
            ITT(KT) = ITMAX                                              OUTELE.......11400
            ISVEL(KT) = LCV                                              OUTELE.......11500
         ENDIF                                                           OUTELE.......11600
C                                                                        OUTELE.......11700
C........IF STEADY-STATE FLOW, V BASED ON TIME STEP 0 ONLY, AND          OUTELE.......11800
C           OUTPUT OCCURS ONLY ON TIME STEP 1.                           OUTELE.......11900
         IF (ISSFLO.NE.0) THEN                                           OUTELE.......12000
            KTMAX = 1                                                    OUTELE.......12100
            ISVEL(1) = 0                                                 OUTELE.......12200
         END IF                                                          OUTELE.......12300
C                                                                        OUTELE.......12400
C........COMPUTE ACTUAL NUMBER OF PRINTED TIME STEPS, KTPRN; LESS THAN   OUTELE.......12500
C           KTMAX IF RUN IS A RESTART                                    OUTELE.......12600
         IF (IREAD.EQ.+1) THEN                                           OUTELE.......12700
            KTPRN = KTMAX                                                OUTELE.......12800
         ELSE                                                            OUTELE.......12900
            KTPRN = 0                                                    OUTELE.......13000
            DO 17 KT=1,KTMAX                                             OUTELE.......13100
               IF (ITT(KT).GT.ITRST) KTPRN = KTPRN + 1                   OUTELE.......13200
   17       CONTINUE                                                     OUTELE.......13300
         END IF                                                          OUTELE.......13400
C                                                                        OUTELE.......13500
C........WRITE HEADER INFORMATION                                        OUTELE.......13600
         WRITE(K6,950) TITLE1, TITLE2                                    OUTELE.......13700
         IF (KTYPE(2).GT.1) THEN                                         OUTELE.......13800
            IF (KTYPE(2).EQ.3) THEN                                      OUTELE.......13900
               CTYPE2 = "BLOCKWISE MESH"                                 OUTELE.......14000
            ELSE                                                         OUTELE.......14100
               CTYPE2 = "REGULAR MESH  "                                 OUTELE.......14200
            END IF                                                       OUTELE.......14300
            IF (KTYPE(1).EQ.3) THEN                                      OUTELE.......14400
               WRITE(K6,951) KTYPE(1), CTYPE2, NN1-1, NN2-1, NN3-1,      OUTELE.......14500
     1            NE, " Elems", NN, " Nodes"                             OUTELE.......14600
            ELSE                                                         OUTELE.......14700
               WRITE(K6,952) KTYPE(1), CTYPE2, NN1-1, NN2-1,             OUTELE.......14800
     1            NE, " Elems", NN, " Nodes"                             OUTELE.......14900
            END IF                                                       OUTELE.......15000
         ELSE IF (KTYPE(2).EQ.1) THEN                                    OUTELE.......15100
            WRITE(K6,953) KTYPE(1), LAYSTR(1:6), NLAYS-1, NELAY,         OUTELE.......15200
     1         NE, " Elems", NN, " Nodes"                                OUTELE.......15300
         ELSE                                                            OUTELE.......15400
            WRITE(K6,954) KTYPE(1), NE, " Elems", NN, " Nodes"           OUTELE.......15500
         END IF                                                          OUTELE.......15600
         WRITE(K6,960) "VELOCITY RESULTS",                               OUTELE.......15700
     1      KTPRN, "Vx", "Vy", "Vz"                                      OUTELE.......15800
         DO 20 KT=1,KTMAX                                                OUTELE.......15900
            IF (ITT(KT).GT.ITRST)                                        OUTELE.......16000
     1         WRITE(K6,961) ITT(KT), TT(KT), CPVX, ISVEL(KT),           OUTELE.......16100
     2         CPVY, ISVEL(KT), CPVZ, ISVEL(KT)                          OUTELE.......16200
   20    CONTINUE                                                        OUTELE.......16300
  950    FORMAT("## ", 80A1,                                             OUTELE.......16400
     1         /"## ", 80A1,                                             OUTELE.......16500
     2         /"## ")                                                   OUTELE.......16600
  951    FORMAT("## ", I1, "-D, ", A, 2X,                                OUTELE.......16700
     1                 "(", 2(I9, ")*("), I9, ") = ", I9, A, 1X,         OUTELE.......16800
     2                 "(", I9, A, ")"                                   OUTELE.......16900
     3         /"## ")                                                   OUTELE.......17000
  952    FORMAT("## ", I1, "-D, ", A, 14X,                               OUTELE.......17100
     1                 "(", I9, ")*(", I9, ") = ", I9, A, 1X,            OUTELE.......17200
     2                 "(", I9, A, ")"                                   OUTELE.......17300
     3         /"## ")                                                   OUTELE.......17400
  953    FORMAT("## ", I1, "-D, LAYERED MESH [", A6, "]", 7X,            OUTELE.......17500
     1                 "(", I9, ")*(", I9, ") = ", I9, A, 1X,            OUTELE.......17600
     2                 "(", I9, A, ")"                                   OUTELE.......17700
     3         /"## ")                                                   OUTELE.......17800
  954    FORMAT("## ", I1, "-D, IRREGULAR MESH", 40X, I9, A, 1X,         OUTELE.......17900
     1                 "(", I9, A, ")"                                   OUTELE.......18000
     2          /"## ")                                                  OUTELE.......18100
  960    FORMAT("## ", 92("="),                                          OUTELE.......18200
     1         /"## ", A, 48X, I9, " Time steps printed",                OUTELE.......18300
     2         /"## ", 92("="),                                          OUTELE.......18400
     3         /"## ",                                                   OUTELE.......18500
     4         /"## ", 4X, "Time steps", 22X,                            OUTELE.......18600
     5                 "[Printed? / Time step on which V is based]"      OUTELE.......18700
     6         /"## ", 3X, "in this file      Time (sec)",               OUTELE.......18800
     7                 10X,A2, 13X,A2, 13X,A2,                           OUTELE.......18900
     8         /"## ", 2X, 14("-"), 3X, 13("-"), 1X, 3(3X, 12("-")) )    OUTELE.......19000
  961    FORMAT ("## ", 7X, I8, 4X, 1PE13.6, 3(5X, A1, 1X, I8))          OUTELE.......19100
C                                                                        OUTELE.......19200
C........DEALLOCATE LOCAL ARRAYS.                                        OUTELE.......19300
         DEALLOCATE(TT,ITT,ISVEL)                                        OUTELE.......19400
C                                                                        OUTELE.......19500
         ONCEK6 = .TRUE.                                                 OUTELE.......19600
      ENDIF                                                              OUTELE.......19700
C                                                                        OUTELE.......19800
C.....OUTPUT VELOCITIES FOR STEADY FLOW ONLY ON THE FIRST TIME STEP      OUTELE.......19900
      IF ((ISSFLO.EQ.2).AND.(IT.GT.1)) GOTO 9999                         OUTELE.......20000
C                                                                        OUTELE.......20100
C.....VELOCITY HEADER INFORMATION REPEATED BEFORE EACH TIME STEP         OUTELE.......20200
      IF ((IT.EQ.1).AND.(ISSTRA.EQ.1)) THEN                              OUTELE.......20300
         DURN = 0D0                                                      OUTELE.......20400
         TOUT = TSTART                                                   OUTELE.......20500
      ELSE                                                               OUTELE.......20600
         DURN = DELT                                                     OUTELE.......20700
         TOUT = TSEC                                                     OUTELE.......20800
      END IF                                                             OUTELE.......20900
      WRITE(K6,966) IT, DURN, TOUT                                       OUTELE.......21000
  966 FORMAT('## ',                                                      OUTELE.......21100
     1      /'## ', 92('='),                                             OUTELE.......21200
     2      /'## TIME STEP ', I8, 22X, 'Duration: ', 1PE11.4, ' sec',    OUTELE.......21300
     3                            6X, 'Time: ', 1PE11.4, ' sec',         OUTELE.......21400
     4      /'## ', 92('='))                                             OUTELE.......21500
      PRINTE = (J6COL(1).EQ.1)                                           OUTELE.......21600
      IF (PRINTE) THEN                                                   OUTELE.......21700
         WRITE(K6,982) (COLTK6(J6COL(M)), M=1,NCOLS6)                    OUTELE.......21800
  982    FORMAT ("## ", A8, 19(A15))                                     OUTELE.......21900
      ELSE                                                               OUTELE.......22000
         WRITE(K6,983) COLTK6(J6COL(1))(3:15),                           OUTELE.......22100
     1      (COLTK6(J6COL(M)), M=2,NCOLS6)                               OUTELE.......22200
  983    FORMAT ("## ", A13, 19(A15))                                    OUTELE.......22300
      END IF                                                             OUTELE.......22400
C                                                                        OUTELE.......22500
C.....VELOCITY DATA FOR THIS TIME STEP                                   OUTELE.......22600
      RN48 = 1D0/DBLE(N48)                                               OUTELE.......22700
      DO 5000 L=1, NE                                                    OUTELE.......22800
         CENTRX = 0D0                                                    OUTELE.......22900
         CENTRY = 0D0                                                    OUTELE.......23000
         CENTRZ = 0D0                                                    OUTELE.......23100
         DO 1400 II=1, N48                                               OUTELE.......23200
            III=II+(L-1)*N48                                             OUTELE.......23300
            IIN(II)=IN(III)                                              OUTELE.......23400
            CENTRX = CENTRX + X(IIN(II))                                 OUTELE.......23500
            CENTRY = CENTRY + Y(IIN(II))                                 OUTELE.......23600
            CENTRZ = CENTRZ + Z(IIN(II))                                 OUTELE.......23700
 1400    CONTINUE                                                        OUTELE.......23800
         CENTRX = CENTRX*RN48                                            OUTELE.......23900
         CENTRY = CENTRY*RN48                                            OUTELE.......24000
         CENTRZ = CENTRZ*RN48                                            OUTELE.......24100
         VA1 = 0.017453292D0*VANG1(L)                                    OUTELE.......24200
         LL = MIN(L, NEX)                                                OUTELE.......24300
         VA2 = 0.017453292D0*VANG2(LL)*DKTM2                             OUTELE.......24400
         CVA2 = DCOS(VA2)                                                OUTELE.......24500
         VECTRX=VMAG(L) * DCOS(VA1)*CVA2                                 OUTELE.......24600
         VECTRY=VMAG(L) * DSIN(VA1)*CVA2                                 OUTELE.......24700
         VECTRZ=VMAG(L) * DSIN(VA2)                                      OUTELE.......24800
         VVAR(1) = DBLE(L)                                               OUTELE.......24900
         VVAR(2) = CENTRX                                                OUTELE.......25000
         VVAR(3) = CENTRY                                                OUTELE.......25100
         VVAR(4) = CENTRZ                                                OUTELE.......25200
         VVAR(5) = VECTRX                                                OUTELE.......25300
         VVAR(6) = VECTRY                                                OUTELE.......25400
         VVAR(7) = VECTRZ                                                OUTELE.......25500
         DO 1984 M=1,NCOLS6                                              OUTELE.......25600
            VCOL(M) = VVAR(J6COL(M))                                     OUTELE.......25700
 1984    CONTINUE                                                        OUTELE.......25800
         IF (PRINTE) THEN                                                OUTELE.......25900
            WRITE(K6,1985) L,(CUTSML(VCOL(M)), M=2,NCOLS6)               OUTELE.......26000
 1985       FORMAT (I9, 2X, 19(1PE15.7))                                 OUTELE.......26100
         ELSE                                                            OUTELE.......26200
            WRITE(K6,1986) (CUTSML(VCOL(M)), M=1,NCOLS6)                 OUTELE.......26300
 1986       FORMAT (1X, 20(1PE15.7))                                     OUTELE.......26400
         END IF                                                          OUTELE.......26500
 5000 CONTINUE                                                           OUTELE.......26600
C                                                                        OUTELE.......26700
 9999 CONTINUE                                                           OUTELE.......26800
      RETURN                                                             OUTELE.......26900
C                                                                        OUTELE.......27000
      END                                                                OUTELE.......27100
C                                                                        OUTELE.......27200
C     SUBROUTINE        O  U  T  L  S  T  2        SUTRA VERSION 3.0     OUTLST2........100
C                                                                        OUTLST2........200
C *** PURPOSE :                                                          OUTLST2........300
C ***  TO PRINT PRESSURE AND TEMPERATURE OR CONCENTRATION                OUTLST2........400
C ***  SOLUTIONS AND TO OUTPUT INFORMATION ON TIME STEP, ITERATIONS,     OUTLST2........500
C ***  SATURATIONS, AND FLUID VELOCITIES FOR 2D PROBLEMS.                OUTLST2........600
C ***  OUTPUT IS TO THE LST FILE.                                        OUTLST2........700
C                                                                        OUTLST2........800
      SUBROUTINE OUTLST2(ML,ISTOP,IGOI,IERRP,ITRSP,ERRP,                 OUTLST2........900
     1   IERRU,ITRSU,ERRU,PVEC,UVEC,VMAG,VANG,SW,SI)                     OUTLST2.......1000
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                OUTLST2.......1100
      DIMENSION PVEC(NNVEC),UVEC(NNVEC),VMAG(NE),VANG(NE),SW(NN)         OUTLST2.......1200
      DIMENSION KTYPE(2)                                                 OUTLST2.......1300
      COMMON /CONTRL/ GNUP,GNUU,UP,DTMULT,DTMAX,ME,ISSFLO,ISSTRA,ITCYC,  OUTLST2.......1400
     1   NPCYC,NUCYC,NPRINT,NBCFPR,NBCSPR,NBCPPR,NBCUPR,NLAKPR,IREAD,    OUTLST2.......1500
     1   NBGPPR,NBGUPR,ISTORE,NOUMAT,IUNSAT,IALSAT,KTYPE                 OUTLST2.......1600
      COMMON /DIMS/ NN,NE,NIN,NBI,NCBI,NB,NBHALF,NPBC,NUBC,              OUTLST2.......1700
     1   NSOP,NSOU,NBCN,NPBG,NUBG,NCIDB                                  OUTLST2.......1800
      COMMON /DIMX/ NWI,NWF,NWL,NELT,NNNX,NEX,N48                        OUTLST2.......1900
      COMMON /DIMX2/ NELTA,NNVEC,NDIMIA,NDIMJA                           OUTLST2.......2000
      COMMON /FUNITS/ K00,K0,K1,K2,K3,K4,K5,K6,K7,K8,K9,                 OUTLST2.......2100
     1   K10,K11,K12,K13,K14,K15,K16,K17,K18,K19,K20,K21,K22,K23         OUTLST2.......2200
      COMMON /ITERAT/ RPM,RPMAX,RUM,RUMAX,ITER,ITRMAX,IPWORS,IUWORS      OUTLST2.......2300
      COMMON /KPRBCS/ KINACT                                             OUTLST2.......2400
      COMMON /KPRINT/ KNODAL,KELMNT,KINCID,KPLOTP,KPLOTU,                OUTLST2.......2500
     1   KPANDS,KVEL,KCORT,KBUDG,KSCRN,KPAUSE                            OUTLST2.......2600
      COMMON /SOLVI/ KSOLVP,KSOLVU,NN1,NN2,NN3                           OUTLST2.......2700
      COMMON /TIMES/ DELT,TSEC,TMIN,THOUR,TDAY,TWEEK,TMONTH,TYEAR,       OUTLST2.......2800
     1   TMAX,DELTP,DELTU,DLTPM1,DLTUM1,IT,ITBCS,ITRST,ITMAX,TSTART      OUTLST2.......2900
C                                                                        OUTLST2.......3000
C.....OUTPUT MAJOR HEADINGS FOR CURRENT TIME STEP                        OUTLST2.......3100
      ITREL = IT - ITRST                                                 OUTLST2.......3200
      IF(ITREL.GT.0.OR.ISSFLO.EQ.2.OR.ISSTRA.EQ.1) GOTO 100              OUTLST2.......3300
      WRITE(K3,60)                                                       OUTLST2.......3400
   60 FORMAT('1'////11X,'I N I T I A L   C O N D I T I O N S',           OUTLST2.......3500
     1             /11X,'___________________________________')           OUTLST2.......3600
      IF(IREAD.EQ.-1) WRITE(K3,65) ITRST                                 OUTLST2.......3700
   65 FORMAT(//11X,'INITIAL CONDITIONS RETRIEVED FROM A RESTART',        OUTLST2.......3800
     1   ' FILE (WARM START)'                                            OUTLST2.......3900
     2   /11X,'THAT WAS SAVED AT THE END OF TIME STEP ',I8,' OF THE ',   OUTLST2.......4000
     3        'ORIGINAL SIMULATION.')                                    OUTLST2.......4100
      GOTO 500                                                           OUTLST2.......4200
C                                                                        OUTLST2.......4300
  100 WRITE(K3,350) IT                                                   OUTLST2.......4400
  350 FORMAT('1'//11X,'RESULTS FOR TIME STEP ',I8/                       OUTLST2.......4500
     1   11X,'_______ ___ ____ ____ ________')                           OUTLST2.......4600
C                                                                        OUTLST2.......4700
      IF(ITRMAX.GT.1) THEN                                               OUTLST2.......4800
         IF(IGOI.EQ.0) THEN                                              OUTLST2.......4900
            WRITE(K3,355) ITER                                           OUTLST2.......5000
         ELSE                                                            OUTLST2.......5100
            WRITE(K3,356) ITER                                           OUTLST2.......5200
         END IF                                                          OUTLST2.......5300
  355    FORMAT(/11X,'NON-LINEARITY ITERATIONS CONVERGED AFTER ',I5,     OUTLST2.......5400
     1      ' ITERATIONS')                                               OUTLST2.......5500
  356    FORMAT(/11X,'NON-LINEARITY ITERATIONS  N O T  CONVERGED',       OUTLST2.......5600
     1      ' AFTER ',I5,' ITERATIONS')                                  OUTLST2.......5700
         WRITE(K3,450) RPM,IPWORS,RUM,IUWORS                             OUTLST2.......5800
  450    FORMAT(11X,'MAXIMUM P CHANGE FROM PREVIOUS ITERATION ',         OUTLST2.......5900
     1      1PE14.5,' AT NODE ',I9/11X,'MAXIMUM U CHANGE FROM PREVIOUS', OUTLST2.......6000
     2      ' ITERATION ',1PE14.5,' AT NODE ',I9)                        OUTLST2.......6100
      END IF                                                             OUTLST2.......6200
C                                                                        OUTLST2.......6300
      IF ((ML.EQ.0).OR.(ML.EQ.1)) THEN                                   OUTLST2.......6400
         IF (KSOLVP.EQ.0) THEN                                           OUTLST2.......6500
            WRITE(K3,452)                                                OUTLST2.......6600
         ELSE IF (IERRP.EQ.0) THEN                                       OUTLST2.......6700
            WRITE(K3,455) ITRSP, ERRP                                    OUTLST2.......6800
         ELSE                                                            OUTLST2.......6900
            WRITE(K3,456) ITRSP, ERRP                                    OUTLST2.......7000
         END IF                                                          OUTLST2.......7100
      END IF                                                             OUTLST2.......7200
      IF ((ML.EQ.0).OR.(ML.EQ.2)) THEN                                   OUTLST2.......7300
         IF (ML.EQ.2) WRITE(K3,*) ' '                                    OUTLST2.......7400
         IF (KSOLVU.EQ.0) THEN                                           OUTLST2.......7500
            WRITE(K3,453)                                                OUTLST2.......7600
         ELSE IF (IERRU.EQ.0) THEN                                       OUTLST2.......7700
            WRITE(K3,457) ITRSU, ERRU                                    OUTLST2.......7800
         ELSE                                                            OUTLST2.......7900
            WRITE(K3,458) ITRSU, ERRU                                    OUTLST2.......8000
         END IF                                                          OUTLST2.......8100
      END IF                                                             OUTLST2.......8200
  452 FORMAT(/11X,'P-SOLUTION COMPUTED USING DIRECT SOLVER')             OUTLST2.......8300
  453 FORMAT(11X,'U-SOLUTION COMPUTED USING DIRECT SOLVER')              OUTLST2.......8400
  455 FORMAT(/11X,'P-SOLUTION CONVERGED AFTER ',I5,' MATRIX'             OUTLST2.......8500
     1   ' SOLVER ITERATIONS; ESTIMATED ERROR ',1PE14.5)                 OUTLST2.......8600
  456 FORMAT(/11X,'P-SOLUTION  F A I L E D  AFTER ',I5,' MATRIX'         OUTLST2.......8700
     1   ' SOLVER ITERATIONS; ESTIMATED ERROR ',1PE14.5)                 OUTLST2.......8800
  457 FORMAT(11X,'U-SOLUTION CONVERGED AFTER ',I5,' MATRIX'              OUTLST2.......8900
     1   ' SOLVER ITERATIONS; ESTIMATED ERROR ',1PE14.5)                 OUTLST2.......9000
  458 FORMAT(11X,'U-SOLUTION  F A I L E D  AFTER ',I5,' MATRIX'          OUTLST2.......9100
     1   ' SOLVER ITERATIONS; ESTIMATED ERROR ',1PE14.5)                 OUTLST2.......9200
C                                                                        OUTLST2.......9300
  500 IF(IT.EQ.0.AND.ISSFLO.EQ.2) GOTO 680                               OUTLST2.......9400
      IF(ISSTRA.EQ.1) GOTO 800                                           OUTLST2.......9500
      WRITE(K3,550) DELT,TSEC,TMIN,THOUR,TDAY,TWEEK,                     OUTLST2.......9600
     1   TMONTH,TYEAR                                                    OUTLST2.......9700
  550 FORMAT(///11X,'TIME INCREMENT :',T27,1PE15.4,' SECONDS'//11X,      OUTLST2.......9800
     1   'TIME AT END',3X,T27,1PE15.4,' SECONDS',/11X,'OF STEP:',6X,T27, OUTLST2.......9900
     2   1PE15.4,' MINUTES'/T27,1PE15.4,' HOURS'/T27,1PE15.4,' DAYS'     OUTLST2......10000
     3   /T27,1PE15.4,' WEEKS'/T27,1PE15.4,' MONTHS'/T27,1PE15.4,        OUTLST2......10100
     4   ' YEARS')                                                       OUTLST2......10200
C                                                                        OUTLST2......10300
C.....OUTPUT PRESSURES FOR TRANSIENT FLOW SOLUTION (AND, POSSIBLY,       OUTLST2......10400
C        SATURATION AND VELOCITY)                                        OUTLST2......10500
      IF(ML.EQ.2.AND.ISTOP.GE.0) GOTO 700                                OUTLST2......10600
      IF(ISSFLO.GT.0) GOTO 700                                           OUTLST2......10700
      IF (KPANDS.EQ.1) THEN                                              OUTLST2......10800
         WRITE(K3,650) (I,CUTSML(PVEC(I)),I=1,NN)                        OUTLST2......10900
  650    FORMAT(///11X,'P  R  E  S  S  U  R  E'                          OUTLST2......11000
     1      //2X,5(6X,'NODE',16X)/(2X,5(1X,I9,1X,1PE15.8)))              OUTLST2......11100
         IF(IUNSAT.NE.0) WRITE(K3,651) (I,CUTSML(SW(I)),I=1,NN)          OUTLST2......11200
  651    FORMAT(///11X,'S  A  T  U  R  A  T  I  O  N'                    OUTLST2......11300
     1      //2X,5(6X,'NODE',16X)/(2X,5(1X,I9,1X,1PE15.8)))              OUTLST2......11400
      END IF                                                             OUTLST2......11500
      IF(KVEL.EQ.1.AND.ITREL.GT.0)                                       OUTLST2......11600
     1   WRITE(K3,655) (L,CUTSML(VMAG(L)),L=1,NE)                        OUTLST2......11700
      IF(KVEL.EQ.1.AND.ITREL.GT.0)                                       OUTLST2......11800
     1   WRITE(K3,656) (L,CUTSML(VANG(L)),L=1,NE)                        OUTLST2......11900
  655 FORMAT(///11X,'F  L  U  I  D     V  E  L  O  C  I  T  Y'//         OUTLST2......12000
     1   11X,'M A G N I T U D E   AT CENTROID OF ELEMENT'//              OUTLST2......12100
     2   2X,5(3X,'ELEMENT',16X)/(2X,5(1X,I9,1X,1PE15.8)))                OUTLST2......12200
  656 FORMAT(///11X,'F  L  U  I  D     V  E  L  O  C  I  T  Y'//         OUTLST2......12300
     1   11X,'A N G L E   IN DEGREES FROM +X-AXIS TO FLOW DIRECTION ',   OUTLST2......12400
     2   'AT CENTROID OF ELEMENT'//                                      OUTLST2......12500
     3   2X,5(3X,'ELEMENT',16X)/(2X,5(1X,I9,1X,1PE15.8)))                OUTLST2......12600
      GOTO 700                                                           OUTLST2......12700
C                                                                        OUTLST2......12800
C.....OUTPUT PRESSURES FOR STEADY-STATE FLOW SOLUTION                    OUTLST2......12900
  680 IF (KPANDS.EQ.1) THEN                                              OUTLST2......13000
         WRITE(K3,690) (I,CUTSML(PVEC(I)),I=1,NN)                        OUTLST2......13100
  690    FORMAT(///11X,'S  T  E  A  D  Y  -  S  T  A  T  E     ',        OUTLST2......13200
     1      'P  R  E  S  S  U  R  E'//2X,5(6X,'NODE',16X)                OUTLST2......13300
     2      /(2X,5(1X,I9,1X,1PE15.8)))                                   OUTLST2......13400
         IF(IUNSAT.NE.0) WRITE(K3,651) (I,CUTSML(SW(I)),I=1,NN)          OUTLST2......13500
      END IF                                                             OUTLST2......13600
      GOTO 1000                                                          OUTLST2......13700
C                                                                        OUTLST2......13800
C.....OUTPUT CONCENTRATIONS OR TEMPERATURES FOR                          OUTLST2......13900
C        TRANSIENT TRANSPORT SOLUTION                                    OUTLST2......14000
  700 IF(ML.EQ.1.AND.ISTOP.GE.0) GOTO 1000                               OUTLST2......14100
      IF (KCORT.EQ.1) THEN                                               OUTLST2......14200
         IF(ME) 720,720,730                                              OUTLST2......14300
  720    WRITE(K3,725) (I,CUTSML(UVEC(I)),I=1,NN)                        OUTLST2......14400
  725    FORMAT(///11X,'C  O  N  C  E  N  T  R  A  T  I  O  N'           OUTLST2......14500
     1      //2X,5(6X,'NODE',16X)/(2X,5(1X,I9,1X,1PE15.8)))              OUTLST2......14600
         GOTO 900                                                        OUTLST2......14700
  730    WRITE(K3,735) (I,CUTSML(UVEC(I)),I=1,NN)                        OUTLST2......14800
  735    FORMAT(///11X,'T  E  M  P  E  R  A  T  U  R  E'                 OUTLST2......14900
     1      //2X,5(6X,'NODE',16X)/(2X,5(1X,I9,1X,1PE15.8)))              OUTLST2......15000
         GOTO 900                                                        OUTLST2......15100
      END IF                                                             OUTLST2......15200
C                                                                        OUTLST2......15300
C.....OUTPUT CONCENTRATIONS OR TEMPERATURES FOR                          OUTLST2......15400
C        STEADY-STATE TRANSPORT SOLUTION                                 OUTLST2......15500
  800 IF (KCORT.EQ.1) THEN                                               OUTLST2......15600
         IF(ME) 820,820,830                                              OUTLST2......15700
  820    WRITE(K3,825) (I,CUTSML(UVEC(I)),I=1,NN)                        OUTLST2......15800
  825    FORMAT(///11X,'S  T  E  A  D  Y  -  S  T  A  T  E     ',        OUTLST2......15900
     1      'C  O  N  C  E  N  T  R  A  T  I  O  N'                      OUTLST2......16000
     2      //2X,5(6X,'NODE',16X)/(2X,5(1X,I9,1X,1PE15.8)))              OUTLST2......16100
         GOTO 900                                                        OUTLST2......16200
  830    WRITE(K3,835) (I,CUTSML(UVEC(I)),I=1,NN)                        OUTLST2......16300
  835    FORMAT(///11X,'S  T  E  A  D  Y  -  S  T  A  T  E     ',        OUTLST2......16400
     1      'T  E  M  P  E  R  A  T  U  R  E'                            OUTLST2......16500
     2      //2X,5(6X,'NODE',16X)/(2X,5(1X,I9,1X,1PE15.8)))              OUTLST2......16600
      END IF                                                             OUTLST2......16700
C                                                                        OUTLST2......16800
C.....OUTPUT VELOCITIES FOR STEADY-STATE FLOW SOLUTION                   OUTLST2......16900
  900 IF(ISSFLO.NE.2.OR.IT.NE.1.OR.KVEL.NE.1) GOTO 1000                  OUTLST2......17000
      WRITE(K3,925) (L,CUTSML(VMAG(L)),L=1,NE)                           OUTLST2......17100
      WRITE(K3,950) (L,CUTSML(VANG(L)),L=1,NE)                           OUTLST2......17200
  925 FORMAT(///11X,'S  T  E  A  D  Y  -  S  T  A  T  E     ',           OUTLST2......17300
     1   'F  L  U  I  D     V  E  L  O  C  I  T  Y'//                    OUTLST2......17400
     2   11X,'M A G N I T U D E   AT CENTROID OF ELEMENT'//              OUTLST2......17500
     3   2X,5(3X,'ELEMENT',16X)/(2X,5(1X,I9,1X,1PE15.8)))                OUTLST2......17600
  950 FORMAT(///11X,'S  T  E  A  D  Y  -  S  T  A  T  E     ',           OUTLST2......17700
     1   'F  L  U  I  D     V  E  L  O  C  I  T  Y'//                    OUTLST2......17800
     2   11X,'A N G L E   IN DEGREES FROM +X-AXIS TO FLOW DIRECTION ',   OUTLST2......17900
     3   'AT CENTROID OF ELEMENT'//                                      OUTLST2......18000
     4   2X,5(3X,'ELEMENT',16X)/(2X,5(1X,I9,1X,1PE15.8)))                OUTLST2......18100
C                                                                        OUTLST2......18200
 1000 RETURN                                                             OUTLST2......18300
C                                                                        OUTLST2......18400
      END                                                                OUTLST2......18500
C                                                                        OUTLST2......18600
C     SUBROUTINE        O  U  T  L  S  T  3        SUTRA VERSION 3.0     OUTLST3........100
C                                                                        OUTLST3........200
C *** PURPOSE :                                                          OUTLST3........300
C ***  TO PRINT PRESSURE AND TEMPERATURE OR CONCENTRATION                OUTLST3........400
C ***  SOLUTIONS AND TO OUTPUT INFORMATION ON TIME STEP, ITERATIONS,     OUTLST3........500
C ***  SATURATIONS, AND FLUID VELOCITIES FOR 3D PROBLEMS.                OUTLST3........600
C ***  OUTPUT IS TO THE LST FILE.                                        OUTLST3........700
C                                                                        OUTLST3........800
      SUBROUTINE OUTLST3(ML,ISTOP,IGOI,IERRP,ITRSP,ERRP,                 OUTLST3........900
     1   IERRU,ITRSU,ERRU,PVEC,UVEC,VMAG,VANG1,VANG2,SW,SI)              OUTLST3.......1000
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                OUTLST3.......1100
      DIMENSION PVEC(NNVEC),UVEC(NNVEC),VMAG(NE),VANG1(NE),VANG2(NEX),   OUTLST3.......1200
     1   SW(NN)                                                          OUTLST3.......1300
      DIMENSION KTYPE(2)                                                 OUTLST3.......1400
      COMMON /CONTRL/ GNUP,GNUU,UP,DTMULT,DTMAX,ME,ISSFLO,ISSTRA,ITCYC,  OUTLST3.......1500
     1   NPCYC,NUCYC,NPRINT,NBCFPR,NBCSPR,NBCPPR,NBCUPR,NLAKPR,IREAD,    OUTLST3.......1600
     1   NBGPPR,NBGUPR,ISTORE,NOUMAT,IUNSAT,IALSAT,KTYPE                 OUTLST3.......1700
      COMMON /DIMS/ NN,NE,NIN,NBI,NCBI,NB,NBHALF,NPBC,NUBC,              OUTLST3.......1800
     1   NSOP,NSOU,NBCN,NPBG,NUBG,NCIDB                                  OUTLST3.......1900
      COMMON /DIMX/ NWI,NWF,NWL,NELT,NNNX,NEX,N48                        OUTLST3.......2000
      COMMON /DIMX2/ NELTA,NNVEC,NDIMIA,NDIMJA                           OUTLST3.......2100
      COMMON /FUNITS/ K00,K0,K1,K2,K3,K4,K5,K6,K7,K8,K9,                 OUTLST3.......2200
     1   K10,K11,K12,K13,K14,K15,K16,K17,K18,K19,K20,K21,K22,K23         OUTLST3.......2300
      COMMON /ITERAT/ RPM,RPMAX,RUM,RUMAX,ITER,ITRMAX,IPWORS,IUWORS      OUTLST3.......2400
      COMMON /KPRBCS/ KINACT                                             OUTLST3.......2500
      COMMON /KPRINT/ KNODAL,KELMNT,KINCID,KPLOTP,KPLOTU,                OUTLST3.......2600
     1   KPANDS,KVEL,KCORT,KBUDG,KSCRN,KPAUSE                            OUTLST3.......2700
      COMMON /SOLVI/ KSOLVP,KSOLVU,NN1,NN2,NN3                           OUTLST3.......2800
      COMMON /TIMES/ DELT,TSEC,TMIN,THOUR,TDAY,TWEEK,TMONTH,TYEAR,       OUTLST3.......2900
     1   TMAX,DELTP,DELTU,DLTPM1,DLTUM1,IT,ITBCS,ITRST,ITMAX,TSTART      OUTLST3.......3000
C                                                                        OUTLST3.......3100
C.....OUTPUT MAJOR HEADINGS FOR CURRENT TIME STEP                        OUTLST3.......3200
      ITREL = IT - ITRST                                                 OUTLST3.......3300
      IF(ITREL.GT.0.OR.ISSFLO.EQ.2.OR.ISSTRA.EQ.1) GOTO 100              OUTLST3.......3400
      WRITE(K3,60)                                                       OUTLST3.......3500
   60 FORMAT('1'////11X,'I N I T I A L   C O N D I T I O N S',           OUTLST3.......3600
     1             /11X,'___________________________________')           OUTLST3.......3700
      IF(IREAD.EQ.-1) WRITE(K3,65) ITRST                                 OUTLST3.......3800
   65 FORMAT(//11X,'INITIAL CONDITIONS RETRIEVED FROM A RESTART',        OUTLST3.......3900
     1   ' FILE (WARM START)'                                            OUTLST3.......4000
     2   /11X,'THAT WAS SAVED AT THE END OF TIME STEP ',I8,' OF THE ',   OUTLST3.......4100
     3        'ORIGINAL SIMULATION.')                                    OUTLST3.......4200
      GOTO 500                                                           OUTLST3.......4300
C                                                                        OUTLST3.......4400
  100 WRITE(K3,350) IT                                                   OUTLST3.......4500
  350 FORMAT('1'//11X,'RESULTS FOR TIME STEP ',I8/                       OUTLST3.......4600
     1   11X,'_______ ___ ____ ____ ________')                           OUTLST3.......4700
C                                                                        OUTLST3.......4800
      IF(ITRMAX.GT.1) THEN                                               OUTLST3.......4900
         IF(IGOI.EQ.0) THEN                                              OUTLST3.......5000
            WRITE(K3,355) ITER                                           OUTLST3.......5100
         ELSE                                                            OUTLST3.......5200
            WRITE(K3,356) ITER                                           OUTLST3.......5300
         END IF                                                          OUTLST3.......5400
  355    FORMAT(/11X,'NON-LINEARITY ITERATIONS CONVERGED AFTER ',I5,     OUTLST3.......5500
     1      ' ITERATIONS')                                               OUTLST3.......5600
  356    FORMAT(/11X,'NON-LINEARITY ITERATIONS  N O T  CONVERGED',       OUTLST3.......5700
     1      ' AFTER ',I5,' ITERATIONS')                                  OUTLST3.......5800
         WRITE(K3,450) RPM,IPWORS,RUM,IUWORS                             OUTLST3.......5900
  450    FORMAT(11X,'MAXIMUM P CHANGE FROM PREVIOUS ITERATION ',         OUTLST3.......6000
     1      1PE14.5,' AT NODE ',I9/11X,'MAXIMUM U CHANGE FROM PREVIOUS', OUTLST3.......6100
     2      ' ITERATION ',1PE14.5,' AT NODE ',I9)                        OUTLST3.......6200
      END IF                                                             OUTLST3.......6300
C                                                                        OUTLST3.......6400
      IF ((ML.EQ.0).OR.(ML.EQ.1)) THEN                                   OUTLST3.......6500
         IF (KSOLVP.EQ.0) THEN                                           OUTLST3.......6600
            WRITE(K3,452)                                                OUTLST3.......6700
         ELSE IF (IERRP.EQ.0) THEN                                       OUTLST3.......6800
            WRITE(K3,455) ITRSP, ERRP                                    OUTLST3.......6900
         ELSE                                                            OUTLST3.......7000
            WRITE(K3,456) ITRSP, ERRP                                    OUTLST3.......7100
         END IF                                                          OUTLST3.......7200
      END IF                                                             OUTLST3.......7300
      IF ((ML.EQ.0).OR.(ML.EQ.2)) THEN                                   OUTLST3.......7400
         IF (ML.EQ.2) WRITE(K3,*) ' '                                    OUTLST3.......7500
         IF (KSOLVU.EQ.0) THEN                                           OUTLST3.......7600
            WRITE(K3,453)                                                OUTLST3.......7700
         ELSE IF (IERRU.EQ.0) THEN                                       OUTLST3.......7800
            WRITE(K3,457) ITRSU, ERRU                                    OUTLST3.......7900
         ELSE                                                            OUTLST3.......8000
            WRITE(K3,458) ITRSU, ERRU                                    OUTLST3.......8100
         END IF                                                          OUTLST3.......8200
      END IF                                                             OUTLST3.......8300
  452 FORMAT(/11X,'P-SOLUTION COMPUTED USING DIRECT SOLVER')             OUTLST3.......8400
  453 FORMAT(11X,'U-SOLUTION COMPUTED USING DIRECT SOLVER')              OUTLST3.......8500
  455 FORMAT(/11X,'P-SOLUTION CONVERGED AFTER ',I5,' MATRIX'             OUTLST3.......8600
     1   ' SOLVER ITERATIONS; ESTIMATED ERROR ',1PE14.5)                 OUTLST3.......8700
  456 FORMAT(/11X,'P-SOLUTION  F A I L E D  AFTER ',I5,' MATRIX'         OUTLST3.......8800
     1   ' SOLVER ITERATIONS; ESTIMATED ERROR ',1PE14.5)                 OUTLST3.......8900
  457 FORMAT(11X,'U-SOLUTION CONVERGED AFTER ',I5,' MATRIX'              OUTLST3.......9000
     1   ' SOLVER ITERATIONS; ESTIMATED ERROR ',1PE14.5)                 OUTLST3.......9100
  458 FORMAT(11X,'U-SOLUTION  F A I L E D  AFTER ',I5,' MATRIX'          OUTLST3.......9200
     1   ' SOLVER ITERATIONS; ESTIMATED ERROR ',1PE14.5)                 OUTLST3.......9300
C                                                                        OUTLST3.......9400
  500 IF(IT.EQ.0.AND.ISSFLO.EQ.2) GOTO 680                               OUTLST3.......9500
      IF(ISSTRA.EQ.1) GOTO 800                                           OUTLST3.......9600
      WRITE(K3,550) DELT,TSEC,TMIN,THOUR,TDAY,TWEEK,                     OUTLST3.......9700
     1   TMONTH,TYEAR                                                    OUTLST3.......9800
  550 FORMAT(///11X,'TIME INCREMENT :',T27,1PE15.4,' SECONDS'//11X,      OUTLST3.......9900
     1   'TIME AT END',3X,T27,1PE15.4,' SECONDS',/11X,'OF STEP:',6X,T27, OUTLST3......10000
     2   1PE15.4,' MINUTES'/T27,1PE15.4,' HOURS'/T27,1PE15.4,' DAYS'     OUTLST3......10100
     3   /T27,1PE15.4,' WEEKS'/T27,1PE15.4,' MONTHS'/T27,1PE15.4,        OUTLST3......10200
     4   ' YEARS')                                                       OUTLST3......10300
C                                                                        OUTLST3......10400
C.....OUTPUT PRESSURES FOR TRANSIENT FLOW SOLUTION (AND, POSSIBLY,       OUTLST3......10500
C        SATURATION AND VELOCITY)                                        OUTLST3......10600
      IF(ML.EQ.2.AND.ISTOP.GE.0) GOTO 700                                OUTLST3......10700
      IF(ISSFLO.GT.0) GOTO 700                                           OUTLST3......10800
      IF (KPANDS.EQ.1) THEN                                              OUTLST3......10900
         WRITE(K3,650) (I,CUTSML(PVEC(I)),I=1,NN)                        OUTLST3......11000
  650    FORMAT(///11X,'P  R  E  S  S  U  R  E'                          OUTLST3......11100
     1      //2X,5(6X,'NODE',16X)/(2X,5(1X,I9,1X,1PE15.8)))              OUTLST3......11200
         IF(IUNSAT.NE.0) WRITE(K3,651) (I,CUTSML(SW(I)),I=1,NN)          OUTLST3......11300
  651    FORMAT(///11X,'S  A  T  U  R  A  T  I  O  N'                    OUTLST3......11400
     1      //2X,5(6X,'NODE',16X)/(2X,5(1X,I9,1X,1PE15.8)))              OUTLST3......11500
      END IF                                                             OUTLST3......11600
      IF(KVEL.EQ.1.AND.ITREL.GT.0) THEN                                  OUTLST3......11700
         WRITE(K3,655) (L,CUTSML(VMAG(L)),L=1,NE)                        OUTLST3......11800
         WRITE(K3,656) (L,CUTSML(VANG1(L)),L=1,NE)                       OUTLST3......11900
         WRITE(K3,657) (L,CUTSML(VANG2(L)),L=1,NE)                       OUTLST3......12000
      END IF                                                             OUTLST3......12100
  655 FORMAT(///11X,'F  L  U  I  D     V  E  L  O  C  I  T  Y'//         OUTLST3......12200
     1   11X,'M A G N I T U D E   AT CENTROID OF ELEMENT'//              OUTLST3......12300
     2   2X,5(3X,'ELEMENT',16X)/(2X,5(1X,I9,1X,1PE15.8)))                OUTLST3......12400
  656 FORMAT(///11X,'F  L  U  I  D     V  E  L  O  C  I  T  Y'//         OUTLST3......12500
     1   11X,'A N G L E 1   AT CENTROID OF ELEMENT, IN DEGREES FROM ',   OUTLST3......12600
     2   '+X-AXIS TO PROJECTION OF FLOW DIRECTION IN XY-PLANE'//         OUTLST3......12700
     3   2X,5(3X,'ELEMENT',16X)/(2X,5(1X,I9,1X,1PE15.8)))                OUTLST3......12800
  657 FORMAT(///11X,'F  L  U  I  D     V  E  L  O  C  I  T  Y'//         OUTLST3......12900
     1   11X,'A N G L E 2   AT CENTROID OF ELEMENT, IN DEGREES FROM ',   OUTLST3......13000
     2   'XY-PLANE TO FLOW DIRECTION'//                                  OUTLST3......13100
     3   2X,5(3X,'ELEMENT',16X)/(2X,5(1X,I9,1X,1PE15.8)))                OUTLST3......13200
C     END IF                                                             OUTLST3......13300
      GOTO 700                                                           OUTLST3......13400
C                                                                        OUTLST3......13500
C.....OUTPUT PRESSURES FOR STEADY-STATE FLOW SOLUTION                    OUTLST3......13600
  680 IF (KPANDS.EQ.1) THEN                                              OUTLST3......13700
         WRITE(K3,690) (I,CUTSML(PVEC(I)),I=1,NN)                        OUTLST3......13800
  690    FORMAT(///11X,'S  T  E  A  D  Y  -  S  T  A  T  E     ',        OUTLST3......13900
     1      'P  R  E  S  S  U  R  E'//2X,5(6X,'NODE',16X)                OUTLST3......14000
     2      /(2X,5(1X,I9,1X,1PE15.8)))                                   OUTLST3......14100
         IF(IUNSAT.NE.0) WRITE(K3,651) (I,CUTSML(SW(I)),I=1,NN)          OUTLST3......14200
      END IF                                                             OUTLST3......14300
      GOTO 1000                                                          OUTLST3......14400
C                                                                        OUTLST3......14500
C.....OUTPUT CONCENTRATIONS OR TEMPERATURES FOR                          OUTLST3......14600
C        TRANSIENT TRANSPORT SOLUTION                                    OUTLST3......14700
  700 IF(ML.EQ.1.AND.ISTOP.GE.0) GOTO 1000                               OUTLST3......14800
      IF (KCORT.EQ.1) THEN                                               OUTLST3......14900
         IF(ME) 720,720,730                                              OUTLST3......15000
  720    WRITE(K3,725) (I,CUTSML(UVEC(I)),I=1,NN)                        OUTLST3......15100
  725    FORMAT(///11X,'C  O  N  C  E  N  T  R  A  T  I  O  N'           OUTLST3......15200
     1      //2X,5(6X,'NODE',16X)/(2X,5(1X,I9,1X,1PE15.8)))              OUTLST3......15300
         GOTO 900                                                        OUTLST3......15400
  730    WRITE(K3,735) (I,CUTSML(UVEC(I)),I=1,NN)                        OUTLST3......15500
  735    FORMAT(///11X,'T  E  M  P  E  R  A  T  U  R  E'                 OUTLST3......15600
     1      //2X,5(6X,'NODE',16X)/(2X,5(1X,I9,1X,1PE15.8)))              OUTLST3......15700
         GOTO 900                                                        OUTLST3......15800
      END IF                                                             OUTLST3......15900
C                                                                        OUTLST3......16000
C.....OUTPUT CONCENTRATIONS OR TEMPERATURES FOR                          OUTLST3......16100
C        STEADY-STATE TRANSPORT SOLUTION                                 OUTLST3......16200
  800 IF (KCORT.EQ.1) THEN                                               OUTLST3......16300
         IF(ME) 820,820,830                                              OUTLST3......16400
  820    WRITE(K3,825) (I,CUTSML(UVEC(I)),I=1,NN)                        OUTLST3......16500
  825    FORMAT(///11X,'S  T  E  A  D  Y  -  S  T  A  T  E     ',        OUTLST3......16600
     1      'C  O  N  C  E  N  T  R  A  T  I  O  N'                      OUTLST3......16700
     2      //2X,5(6X,'NODE',16X)/(2X,5(1X,I9,1X,1PE15.8)))              OUTLST3......16800
         GOTO 900                                                        OUTLST3......16900
  830    WRITE(K3,835) (I,CUTSML(UVEC(I)),I=1,NN)                        OUTLST3......17000
  835    FORMAT(///11X,'S  T  E  A  D  Y  -  S  T  A  T  E     ',        OUTLST3......17100
     1      'T  E  M  P  E  R  A  T  U  R  E'                            OUTLST3......17200
     2      //2X,5(6X,'NODE',16X)/(2X,5(1X,I9,1X,1PE15.8)))              OUTLST3......17300
      END IF                                                             OUTLST3......17400
C                                                                        OUTLST3......17500
C.....OUTPUT VELOCITIES FOR STEADY-STATE FLOW SOLUTION                   OUTLST3......17600
  900 IF(ISSFLO.NE.2.OR.IT.NE.1.OR.KVEL.NE.1) GOTO 1000                  OUTLST3......17700
      WRITE(K3,925) (L,CUTSML(VMAG(L)),L=1,NE)                           OUTLST3......17800
      WRITE(K3,950) (L,CUTSML(VANG1(L)),L=1,NE)                          OUTLST3......17900
      WRITE(K3,951) (L,CUTSML(VANG2(L)),L=1,NE)                          OUTLST3......18000
  925 FORMAT(///11X,'S  T  E  A  D  Y  -  S  T  A  T  E     ',           OUTLST3......18100
     1   'F  L  U  I  D     V  E  L  O  C  I  T  Y'//                    OUTLST3......18200
     2   11X,'M A G N I T U D E   AT CENTROID OF ELEMENT'//              OUTLST3......18300
     3   2X,5(3X,'ELEMENT',16X)/(2X,5(1X,I9,1X,1PE15.8)))                OUTLST3......18400
  950 FORMAT(///11X,'S  T  E  A  D  Y  -  S  T  A  T  E     ',           OUTLST3......18500
     1   'F  L  U  I  D     V  E  L  O  C  I  T  Y'//                    OUTLST3......18600
     2   11X,'A N G L E 1   AT CENTROID OF ELEMENT, IN DEGREES FROM ',   OUTLST3......18700
     3   '+X-AXIS TO PROJECTION OF FLOW DIRECTION IN XY-PLANE'//         OUTLST3......18800
     4   2X,5(3X,'ELEMENT',16X)/(2X,5(1X,I9,1X,1PE15.8)))                OUTLST3......18900
  951 FORMAT(///11X,'S  T  E  A  D  Y  -  S  T  A  T  E     ',           OUTLST3......19000
     1   'F  L  U  I  D     V  E  L  O  C  I  T  Y'//                    OUTLST3......19100
     2   11X,'A N G L E 2   AT CENTROID OF ELEMENT, IN DEGREES FROM ',   OUTLST3......19200
     3   'XY-PLANE TO FLOW DIRECTION'//                                  OUTLST3......19300
     4   2X,5(3X,'ELEMENT',16X)/(2X,5(1X,I9,1X,1PE15.8)))                OUTLST3......19400
C                                                                        OUTLST3......19500
 1000 RETURN                                                             OUTLST3......19600
C                                                                        OUTLST3......19700
      END                                                                OUTLST3......19800
C                                                                        OUTLST3......19900
C     SUBROUTINE        O  U  T  N  O  D           SUTRA VERSION 3.0     OUTNOD.........100
C                                                                        OUTNOD.........200
C *** PURPOSE :                                                          OUTNOD.........300
C ***  TO PRINT NODE COORDINATES, PRESSURES, CONCENTRATIONS OR           OUTNOD.........400
C ***  TEMPERATURES, AND SATURATIONS IN A FLEXIBLE, COLUMNWISE FORMAT.   OUTNOD.........500
C ***  OUTPUT IS TO THE NOD FILE.                                        OUTNOD.........600
C                                                                        OUTNOD.........700
      SUBROUTINE OUTNOD(PVEC,UVEC,SW,X,Y,Z,TITLE1,TITLE2,BCSFL,BCSTR)    OUTNOD.........800
      USE EXPINT                                                         OUTNOD.........900
      USE SCHDEF                                                         OUTNOD........1000
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                OUTNOD........1100
      PARAMETER (NCOLMX=9)                                               OUTNOD........1200
      CHARACTER*1  TITLE1(80),TITLE2(80)                                 OUTNOD........1300
      CHARACTER*8  HORP                                                  OUTNOD........1400
      CHARACTER*13 TORC                                                  OUTNOD........1500
      CHARACTER*15 COLTK5(7)                                             OUTNOD........1600
      CHARACTER*1 CPHORP,CPTORC,CPSATU                                   OUTNOD........1700
      CHARACTER*14 CTYPE2                                                OUTNOD........1800
      CHARACTER*80 LAYSTR                                                OUTNOD........1900
      LOGICAL ONCEK5,ONCEK6,ONCEK7,ONCEK8,ONCESTG                        OUTNOD........2000
      LOGICAL PRINTN                                                     OUTNOD........2100
      LOGICAL BCSFL(0:ITMAX),BCSTR(0:ITMAX)                              OUTNOD........2200
      DIMENSION PVEC(NNVEC),UVEC(NNVEC),SW(NN)                           OUTNOD........2300
      DIMENSION X(NN),Y(NN),Z(NN)                                        OUTNOD........2400
      DIMENSION VCOL(NCOLMX),VVAR(7)                                     OUTNOD........2500
      DIMENSION J5COL(NCOLMX),J6COL(NCOLMX)                              OUTNOD........2600
      DIMENSION KTYPE(2)                                                 OUTNOD........2700
      ALLOCATABLE TT(:),ITT(:),ISTORC(:),ISHORP(:),ISSATU(:)             OUTNOD........2800
      COMMON /CLAY/ LAYSTR                                               OUTNOD........2900
      COMMON /CONTRL/ GNUP,GNUU,UP,DTMULT,DTMAX,ME,ISSFLO,ISSTRA,ITCYC,  OUTNOD........3000
     1   NPCYC,NUCYC,NPRINT,NBCFPR,NBCSPR,NBCPPR,NBCUPR,NLAKPR,IREAD,    OUTNOD........3100
     1   NBGPPR,NBGUPR,ISTORE,NOUMAT,IUNSAT,IALSAT,KTYPE                 OUTNOD........3200
      COMMON /DIMLAY/ NLAYS,NNLAY,NELAY                                  OUTNOD........3300
      COMMON /DIMS/ NN,NE,NIN,NBI,NCBI,NB,NBHALF,NPBC,NUBC,              OUTNOD........3400
     1   NSOP,NSOU,NBCN,NPBG,NUBG,NCIDB                                  OUTNOD........3500
      COMMON /DIMX/ NWI,NWF,NWL,NELT,NNNX,NEX,N48                        OUTNOD........3600
      COMMON /DIMX2/ NELTA,NNVEC,NDIMIA,NDIMJA                           OUTNOD........3700
      COMMON /FUNITS/ K00,K0,K1,K2,K3,K4,K5,K6,K7,K8,K9,                 OUTNOD........3800
     1   K10,K11,K12,K13,K14,K15,K16,K17,K18,K19,K20,K21,K22,K23         OUTNOD........3900
      COMMON /GRAVEC/ GRAVX,GRAVY,GRAVZ                                  OUTNOD........4000
      COMMON /ITERAT/ RPM,RPMAX,RUM,RUMAX,ITER,ITRMAX,IPWORS,IUWORS      OUTNOD........4100
      COMMON /JCOLS/ NCOLPR,LCOLPR,NCOLS5,NCOLS6,J5COL,J6COL             OUTNOD........4200
      COMMON /KPRINT/ KNODAL,KELMNT,KINCID,KPLOTP,KPLOTU,                OUTNOD........4300
     1   KPANDS,KVEL,KCORT,KBUDG,KSCRN,KPAUSE                            OUTNOD........4400
      COMMON /PLT1/ ONCEK5, ONCEK6, ONCEK7, ONCEK8, ONCESTG              OUTNOD........4500
      COMMON /SCH/ NSCH,ISCHTS,NSCHAU                                    OUTNOD........4600
      COMMON /SOLVI/ KSOLVP,KSOLVU,NN1,NN2,NN3                           OUTNOD........4700
      COMMON /TIMES/ DELT,TSEC,TMIN,THOUR,TDAY,TWEEK,TMONTH,TYEAR,       OUTNOD........4800
     1   TMAX,DELTP,DELTU,DLTPM1,DLTUM1,IT,ITBCS,ITRST,ITMAX,TSTART      OUTNOD........4900
      DATA (COLTK5(MM), MM=1,7) /'Node',                                 OUTNOD........5000
     1   '              X', '              Y', '              Z',        OUTNOD........5100
     2   '       Pressure', '  Concentration', '     Saturation'/        OUTNOD........5200
      SAVE COLTK5                                                        OUTNOD........5300
C                                                                        OUTNOD........5400
C.....CALCULATE HEADERS ON FIRST CALL AND CREATE OUTPUT ON EACH CALL.    OUTNOD........5500
C                                                                        OUTNOD........5600
C                                                                        OUTNOD........5700
      IF (.NOT. ONCEK5)  THEN                                            OUTNOD........5800
C.....FIRST CALL -- CREATE FILE HEADER.                                  OUTNOD........5900
C                                                                        OUTNOD........6000
C........CALCULATE THE MAXIMUM NUMBER OF TIME STEPS, KTMAX.              OUTNOD........6100
         IF (ISSTRA.NE.1) THEN                                           OUTNOD........6200
            KT = 1                                                       OUTNOD........6300
         ELSE                                                            OUTNOD........6400
            KT = 0                                                       OUTNOD........6500
         END IF                                                          OUTNOD........6600
         DO 4 JT=1,ITMAX                                                 OUTNOD........6700
            IF (MOD(JT,NCOLPR).EQ.0 .OR. JT.EQ.ITRST .OR.                OUTNOD........6800
     1         ((JT.EQ.ITRST+1).AND.((ISSTRA.NE.0).OR.(NCOLPR.GT.0))))   OUTNOD........6900
     2         KT = KT + 1                                               OUTNOD........7000
    4    CONTINUE                                                        OUTNOD........7100
         IF(ITMAX.GT.1 .AND. MOD(ITMAX,NCOLPR).NE.0) KT = KT + 1         OUTNOD........7200
         KTMAX = KT                                                      OUTNOD........7300
C                                                                        OUTNOD........7400
C........ALLOCATE LOCAL ARRAYS                                           OUTNOD........7500
         ALLOCATE(TT(KTMAX),ITT(KTMAX))                                  OUTNOD........7600
         ALLOCATE(ISTORC(KTMAX),ISHORP(KTMAX),ISSATU(KTMAX))             OUTNOD........7700
C                                                                        OUTNOD........7800
C........CALCULATE AND PRINT TIME STEP INFORMATION                       OUTNOD........7900
         TS=TSTART                                                       OUTNOD........8000
C........TIME STEP VALUE                                                 OUTNOD........8100
         JT=0                                                            OUTNOD........8200
C........NUMBER OF PRINTED TIME STEPS                                    OUTNOD........8300
         KT=0                                                            OUTNOD........8400
C........TIME STEP INCREMENT                                             OUTNOD........8500
         DELTK=DELT                                                      OUTNOD........8600
C........INDICATORS OF WHEN VARIABLES ARE CALCULATED AND PRINTED         OUTNOD........8700
         LCHORP = 0                                                      OUTNOD........8800
         LCTORC = 0                                                      OUTNOD........8900
         CPHORP = 'N'                                                    OUTNOD........9000
         CPTORC = 'N'                                                    OUTNOD........9100
         CPSATU = 'N'                                                    OUTNOD........9200
         DO 8 M=1,NCOLS5                                                 OUTNOD........9300
            IF (J5COL(M).EQ.5) CPHORP = 'Y'                              OUTNOD........9400
            IF (J5COL(M).EQ.6) CPTORC = 'Y'                              OUTNOD........9500
            IF (J5COL(M).EQ.7) CPSATU = 'Y'                              OUTNOD........9600
    8    CONTINUE                                                        OUTNOD........9700
         IF (ISSTRA.NE.1) THEN                                           OUTNOD........9800
            KT = KT + 1                                                  OUTNOD........9900
            TT(KT) = TS                                                  OUTNOD.......10000
            ITT(KT) = JT                                                 OUTNOD.......10100
            ISHORP(KT) = 0                                               OUTNOD.......10200
            ISTORC(KT) = 0                                               OUTNOD.......10300
            ISSATU(KT) = 0                                               OUTNOD.......10400
         END IF                                                          OUTNOD.......10500
         DO 10 JT=1,ITMAX                                                OUTNOD.......10600
            JTP1 = JT + 1                                                OUTNOD.......10700
            TS = SCHDLS(ISCHTS)%SLIST(JTP1)%DVALU1                       OUTNOD.......10800
            IF (MOD(JT,NPCYC).EQ.0 .OR. BCSFL(JT) .OR. JT.EQ.1)          OUTNOD.......10900
     1         LCHORP = JT                                               OUTNOD.......11000
            IF (MOD(JT,NUCYC).EQ.0 .OR. BCSTR(JT) .OR. JT.EQ.1)          OUTNOD.......11100
     1         LCTORC = JT                                               OUTNOD.......11200
            IF (MOD(JT,NCOLPR).EQ.0 .OR. JT.EQ.ITRST .OR.                OUTNOD.......11300
     1         ((JT.EQ.ITRST+1).AND.((ISSTRA.NE.0).OR.(NCOLPR.GT.0))))   OUTNOD.......11400
     2         THEN                                                      OUTNOD.......11500
               KT = KT + 1                                               OUTNOD.......11600
               TT(KT) = TS                                               OUTNOD.......11700
               ITT(KT) = JT                                              OUTNOD.......11800
               ISHORP(KT) = LCHORP                                       OUTNOD.......11900
               ISTORC(KT) = LCTORC                                       OUTNOD.......12000
               ISSATU(KT) = LCHORP                                       OUTNOD.......12100
            ENDIF                                                        OUTNOD.......12200
   10    CONTINUE                                                        OUTNOD.......12300
         IF (ISSTRA.EQ.1) THEN                                           OUTNOD.......12400
            TT(KT) = TSTART                                              OUTNOD.......12500
            ITT(KT) = 0                                                  OUTNOD.......12600
         END IF                                                          OUTNOD.......12700
C                                                                        OUTNOD.......12800
C                                                                        OUTNOD.......12900
C........PRINT LAST TIME STEP ALWAYS, UNLESS ALREADY PRINTED             OUTNOD.......13000
         IF(ITMAX.GT.1 .AND. MOD(ITMAX,NCOLPR).NE.0) THEN                OUTNOD.......13100
            KT = KT + 1                                                  OUTNOD.......13200
            TT(KT) = TS                                                  OUTNOD.......13300
            ITT(KT) = ITMAX                                              OUTNOD.......13400
            IF (MOD(ITMAX,NPCYC).EQ.0 .OR. BCSFL(ITMAX)) LCHORP = ITMAX  OUTNOD.......13500
            IF (MOD(ITMAX,NUCYC).EQ.0 .OR. BCSTR(ITMAX)) LCTORC = ITMAX  OUTNOD.......13600
            ISHORP(KT) = LCHORP                                          OUTNOD.......13700
            ISTORC(KT) = LCTORC                                          OUTNOD.......13800
            ISSATU(KT) = LCHORP                                          OUTNOD.......13900
         ENDIF                                                           OUTNOD.......14000
C                                                                        OUTNOD.......14100
C........IF STEADY-STATE FLOW, P AND S CALCULATED ON TIME STEP 0 ONLY.   OUTNOD.......14200
         IF (ISSFLO.NE.0) THEN                                           OUTNOD.......14300
            DO 14 KT=1,KTMAX                                             OUTNOD.......14400
               ISHORP(KT) = 0                                            OUTNOD.......14500
               ISSATU(KT) = 0                                            OUTNOD.......14600
   14       CONTINUE                                                     OUTNOD.......14700
         END IF                                                          OUTNOD.......14800
C                                                                        OUTNOD.......14900
C........COMPUTE ACTUAL NUMBER OF PRINTED TIME STEPS, KTPRN; LESS THAN   OUTNOD.......15000
C           KTMAX IF RUN IS A RESTART                                    OUTNOD.......15100
         IF (IREAD.EQ.+1) THEN                                           OUTNOD.......15200
            KTPRN = KTMAX                                                OUTNOD.......15300
         ELSE                                                            OUTNOD.......15400
            KTPRN = 0                                                    OUTNOD.......15500
            DO 17 KT=1,KTMAX                                             OUTNOD.......15600
               IF (ITT(KT).GE.ITRST) KTPRN = KTPRN + 1                   OUTNOD.......15700
   17       CONTINUE                                                     OUTNOD.......15800
         END IF                                                          OUTNOD.......15900
C                                                                        OUTNOD.......16000
C........SET TEMPERATURE OR CONCENTRATION TEXT STRING FOR HEADER         OUTNOD.......16100
         IF (ME .GT. 0) THEN                                             OUTNOD.......16200
            TORC = "Temperature  "                                       OUTNOD.......16300
            COLTK5(6) = "    Temperature"                                OUTNOD.......16400
         ELSE                                                            OUTNOD.......16500
            TORC = "Concentration"                                       OUTNOD.......16600
         ENDIF                                                           OUTNOD.......16700
C                                                                        OUTNOD.......16800
C........SET PRESSURE TEXT STRING FOR HEADER                             OUTNOD.......16900
         HORP = "Pressure"                                               OUTNOD.......17000
C                                                                        OUTNOD.......17100
C........WRITE HEADER INFORMATION                                        OUTNOD.......17200
         WRITE(K5,950) TITLE1, TITLE2                                    OUTNOD.......17300
         IF (KTYPE(2).GT.1) THEN                                         OUTNOD.......17400
            IF (KTYPE(2).EQ.3) THEN                                      OUTNOD.......17500
               CTYPE2 = "BLOCKWISE MESH"                                 OUTNOD.......17600
            ELSE                                                         OUTNOD.......17700
               CTYPE2 = "REGULAR MESH  "                                 OUTNOD.......17800
            END IF                                                       OUTNOD.......17900
            IF (KTYPE(1).EQ.3) THEN                                      OUTNOD.......18000
               WRITE(K5,951) KTYPE(1),CTYPE2,NN1,NN2,NN3,NN," Nodes",    OUTNOD.......18100
     1            NE, " Elems"                                           OUTNOD.......18200
            ELSE                                                         OUTNOD.......18300
               WRITE(K5,952) KTYPE(1),CTYPE2,NN1,NN2,NN," Nodes",        OUTNOD.......18400
     1            NE, " Elems"                                           OUTNOD.......18500
            END IF                                                       OUTNOD.......18600
         ELSE IF (KTYPE(2).EQ.1) THEN                                    OUTNOD.......18700
            WRITE(K5,953) KTYPE(1), LAYSTR(1:6), NLAYS, NNLAY,           OUTNOD.......18800
     1         NN, " Nodes", NE, " Elems"                                OUTNOD.......18900
         ELSE                                                            OUTNOD.......19000
            WRITE(K5,954) KTYPE(1), NN, " Nodes", NE, " Elems"           OUTNOD.......19100
         END IF                                                          OUTNOD.......19200
         WRITE(K5,960) "NODEWISE RESULTS",                               OUTNOD.......19300
     1      KTPRN, HORP, TORC, "Sat"                                     OUTNOD.......19400
         DO 920 KT=1,KTMAX                                               OUTNOD.......19500
            IF (ITT(KT).GE.ITRST)                                        OUTNOD.......19600
     1         WRITE(K5,961) ITT(KT), TT(KT), CPHORP, ISHORP(KT),        OUTNOD.......19700
     2         CPTORC, ISTORC(KT), CPSATU, ISSATU(KT)                    OUTNOD.......19800
  920    CONTINUE                                                        OUTNOD.......19900
  950    FORMAT("## ", 80A1,                                             OUTNOD.......20000
     1         /"## ", 80A1,                                             OUTNOD.......20100
     2         /"## ")                                                   OUTNOD.......20200
  951    FORMAT("## ", I1, "-D, ", A, 2X,                                OUTNOD.......20300
     1                 "(", 2(I9, ")*("), I9, ") = ", I9, A, 1X,         OUTNOD.......20400
     2                 "(", I9, A, ")"                                   OUTNOD.......20500
     3         /"## ")                                                   OUTNOD.......20600
  952    FORMAT("## ", I1, "-D, ", A, 14X,                               OUTNOD.......20700
     1                 "(", I9, ")*(", I9, ") = ", I9, A, 1X,            OUTNOD.......20800
     2                 "(", I9, A, ")"                                   OUTNOD.......20900
     3         /"## ")                                                   OUTNOD.......21000
  953    FORMAT("## ", I1, "-D, LAYERED MESH [", A6, "]", 7X,            OUTNOD.......21100
     1                 "(", I9, ")*(", I9, ") = ", I9, A, 1X,            OUTNOD.......21200
     2                 "(", I9, A, ")"                                   OUTNOD.......21300
     3         /"## ")                                                   OUTNOD.......21400
  954    FORMAT("## ", I1, "-D, IRREGULAR MESH", 40X, I9, A, 1X,         OUTNOD.......21500
     1                 "(", I9, A, ")"                                   OUTNOD.......21600
     2         /"## ")                                                   OUTNOD.......21700
  960    FORMAT("## ", 92("="),                                          OUTNOD.......21800
     1         /"## ", A, 48X, I9, " Time steps printed",                OUTNOD.......21900
     2         /"## ", 92("="),                                          OUTNOD.......22000
     3         /"## ",                                                   OUTNOD.......22100
     4         /"## ", 4X, "Time steps", 23X,                            OUTNOD.......22200
     5                 "[Printed? / Latest time step computed]",         OUTNOD.......22300
     6         /"## ", 3X, "in this file      Time (sec)", 9X,A5,        OUTNOD.......22400
     7                 10X,A4, 11X,A3,                                   OUTNOD.......22500
     8         /"## ", 2X, 14("-"), 3X, 13("-"), 1X, 3(3X, 12("-")) )    OUTNOD.......22600
  961    FORMAT ("## ", 7X, I8, 4X, 1PE13.6, 3(5X, A1, 1X, I8))          OUTNOD.......22700
C                                                                        OUTNOD.......22800
C........DEALLOCATE LOCAL ARRAYS.                                        OUTNOD.......22900
         DEALLOCATE(TT,ITT,ISTORC,ISHORP,ISSATU)                         OUTNOD.......23000
C                                                                        OUTNOD.......23100
         ONCEK5 = .TRUE.                                                 OUTNOD.......23200
      ENDIF                                                              OUTNOD.......23300
C                                                                        OUTNOD.......23400
C.....NODEWISE HEADER INFORMATION REPEATED BEFORE EACH TIME STEP         OUTNOD.......23500
      IF ((IT.EQ.0).OR.((IT.EQ.1).AND.(ISSTRA.EQ.1))) THEN               OUTNOD.......23600
         DURN = 0D0                                                      OUTNOD.......23700
         TOUT = TSTART                                                   OUTNOD.......23800
         ITOUT = 0                                                       OUTNOD.......23900
      ELSE                                                               OUTNOD.......24000
         DURN = DELT                                                     OUTNOD.......24100
         TOUT = TSEC                                                     OUTNOD.......24200
         ITOUT = IT                                                      OUTNOD.......24300
      END IF                                                             OUTNOD.......24400
      WRITE(K5,966) ITOUT, DURN, TOUT                                    OUTNOD.......24500
  966 FORMAT('## ',                                                      OUTNOD.......24600
     1      /'## ', 92('='),                                             OUTNOD.......24700
     2      /'## TIME STEP ', I8, 22X, 'Duration: ', 1PE11.4, ' sec',    OUTNOD.......24800
     3                            6X, 'Time: ', 1PE11.4, ' sec',         OUTNOD.......24900
     4      /'## ', 92('='))                                             OUTNOD.......25000
      PRINTN = (J5COL(1).EQ.1)                                           OUTNOD.......25100
      IF (PRINTN) THEN                                                   OUTNOD.......25200
         WRITE(K5,968) (COLTK5(J5COL(M)), M=1,NCOLS5)                    OUTNOD.......25300
  968    FORMAT ("## ", 2X, A4, 19(A15))                                 OUTNOD.......25400
      ELSE                                                               OUTNOD.......25500
         WRITE(K5,969) COLTK5(J5COL(1))(3:15),                           OUTNOD.......25600
     1      (COLTK5(J5COL(M)), M=2,NCOLS5)                               OUTNOD.......25700
  969    FORMAT ("## ", A13, 19(A15))                                    OUTNOD.......25800
      END IF                                                             OUTNOD.......25900
C                                                                        OUTNOD.......26000
C.....NODEWISE DATA FOR THIS TIME STEP                                   OUTNOD.......26100
      DO 978 I=1,NN                                                      OUTNOD.......26200
         VVAR(1) = DBLE(I)                                               OUTNOD.......26300
         VVAR(2) = X(I)                                                  OUTNOD.......26400
         VVAR(3) = Y(I)                                                  OUTNOD.......26500
         VVAR(4) = Z(I)                                                  OUTNOD.......26600
         VVAR(5) = PVEC(I)                                               OUTNOD.......26700
         VVAR(6) = UVEC(I)                                               OUTNOD.......26800
         VVAR(7) = SW(I)                                                 OUTNOD.......26900
         DO 972 M=1,NCOLS5                                               OUTNOD.......27000
            VCOL(M) = VVAR(J5COL(M))                                     OUTNOD.......27100
  972    CONTINUE                                                        OUTNOD.......27200
         IF (PRINTN) THEN                                                OUTNOD.......27300
            WRITE(K5,975) I,(CUTSML(VCOL(M)), M=2,NCOLS5)                OUTNOD.......27400
  975       FORMAT (I9, 19(1PE15.7))                                     OUTNOD.......27500
         ELSE                                                            OUTNOD.......27600
            WRITE(K5,976) (CUTSML(VCOL(M)), M=1,NCOLS5)                  OUTNOD.......27700
  976       FORMAT (1X, 20(1PE15.7))                                     OUTNOD.......27800
         END IF                                                          OUTNOD.......27900
  978 CONTINUE                                                           OUTNOD.......28000
C                                                                        OUTNOD.......28100
      RETURN                                                             OUTNOD.......28200
C                                                                        OUTNOD.......28300
      END                                                                OUTNOD.......28400
C                                                                        OUTNOD.......28500
C     SUBROUTINE        O  U  T  O  B  C           SUTRA VERSION 3.0     OUTOBC.........100
C                                                                        OUTOBC.........200
C *** PURPOSE :                                                          OUTOBC.........300
C ***  TO PRINT THE SOLUTION AT OBSERVATION POINTS.  SPECIFICALLY,       OUTOBC.........400
C ***  TO PRINT PRESSURES, CONCENTRATIONS OR TEMPERATURES, AND           OUTOBC.........500
C ***  SATURATIONS IN A COLUMNWISE FORMAT SIMILAR TO THAT USED IN THE    OUTOBC.........600
C ***  NODEWISE AND ELEMENTWISE OUTPUT FILES.                            OUTOBC.........700
C                                                                        OUTOBC.........800
      SUBROUTINE OUTOBC(NFLO,OBSPTS,TIME,STEP,PM1,UM1,PVEC,UVEC,         OUTOBC.........900
     1   TITLE1,TITLE2,IN,LREG,BCSFL,BCSTR)                              OUTOBC........1000
      USE ALLARR, ONLY : OBSDAT                                          OUTOBC........1100
      USE LLDEF                                                          OUTOBC........1200
      USE EXPINT                                                         OUTOBC........1300
      USE SCHDEF                                                         OUTOBC........1400
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                OUTOBC........1500
      CHARACTER*1  TITLE1(80),TITLE2(80)                                 OUTOBC........1600
      CHARACTER*8  HORP                                                  OUTOBC........1700
      CHARACTER*13 TORC1,TORC2                                           OUTOBC........1800
      CHARACTER*15 COLTK8(7)                                             OUTOBC........1900
      CHARACTER*14 CTYPE2                                                OUTOBC........2000
      CHARACTER*80 UNAME,FNAME(0:23)                                     OUTOBC........2100
      CHARACTER*40 OBSNM, BLANKS                                         OUTOBC........2200
      CHARACTER*80 LAYSTR                                                OUTOBC........2300
      LOGICAL ONCEK5,ONCEK6,ONCEK7,ONCEK8,ONCESTG                        OUTOBC........2400
      LOGICAL IMPRTD                                                     OUTOBC........2500
      LOGICAL BCSFL(0:ITMAX),BCSTR(0:ITMAX)                              OUTOBC........2600
      DIMENSION PM1(NNVEC),UM1(NNVEC),PVEC(NNVEC),UVEC(NNVEC)            OUTOBC........2700
      DIMENSION IN(NIN),LREG(NE)                                         OUTOBC........2800
      DIMENSION KTYPE(2)                                                 OUTOBC........2900
      TYPE (OBSDAT), DIMENSION (NOBSN) :: OBSPTS                         OUTOBC........3000
      ALLOCATABLE TT(:),DITT(:),ISTORC(:),ISHORP(:),ISSATU(:)            OUTOBC........3100
      COMMON /CLAY/ LAYSTR                                               OUTOBC........3200
      COMMON /CONTRL/ GNUP,GNUU,UP,DTMULT,DTMAX,ME,ISSFLO,ISSTRA,ITCYC,  OUTOBC........3300
     1   NPCYC,NUCYC,NPRINT,NBCFPR,NBCSPR,NBCPPR,NBCUPR,NLAKPR,IREAD,    OUTOBC........3400
     1   NBGPPR,NBGUPR,ISTORE,NOUMAT,IUNSAT,IALSAT,KTYPE                 OUTOBC........3500
      COMMON /DIMLAY/ NLAYS,NNLAY,NELAY                                  OUTOBC........3600
      COMMON /DIMS/ NN,NE,NIN,NBI,NCBI,NB,NBHALF,NPBC,NUBC,              OUTOBC........3700
     1   NSOP,NSOU,NBCN,NPBG,NUBG,NCIDB                                  OUTOBC........3800
      COMMON /DIMX/ NWI,NWF,NWL,NELT,NNNX,NEX,N48                        OUTOBC........3900
      COMMON /DIMX2/ NELTA,NNVEC,NDIMIA,NDIMJA                           OUTOBC........4000
      COMMON /FNAMES/ UNAME,FNAME                                        OUTOBC........4100
      COMMON /FUNITS/ K00,K0,K1,K2,K3,K4,K5,K6,K7,K8,K9,                 OUTOBC........4200
     1   K10,K11,K12,K13,K14,K15,K16,K17,K18,K19,K20,K21,K22,K23         OUTOBC........4300
      COMMON /GRAVEC/ GRAVX,GRAVY,GRAVZ                                  OUTOBC........4400
      COMMON /ITERAT/ RPM,RPMAX,RUM,RUMAX,ITER,ITRMAX,IPWORS,IUWORS      OUTOBC........4500
      COMMON /KPRINT/ KNODAL,KELMNT,KINCID,KPLOTP,KPLOTU,                OUTOBC........4600
     1   KPANDS,KVEL,KCORT,KBUDG,KSCRN,KPAUSE                            OUTOBC........4700
      COMMON /OBS/ NOBSN,NTOBS,NOBCYC,NOBLIN,NFLOMX                      OUTOBC........4800
      COMMON /PLT1/ ONCEK5, ONCEK6, ONCEK7, ONCEK8, ONCESTG              OUTOBC........4900
      COMMON /SCH/ NSCH,ISCHTS,NSCHAU                                    OUTOBC........5000
      COMMON /SOLVI/ KSOLVP,KSOLVU,NN1,NN2,NN3                           OUTOBC........5100
      COMMON /TIMES/ DELT,TSEC,TMIN,THOUR,TDAY,TWEEK,TMONTH,TYEAR,       OUTOBC........5200
     1   TMAX,DELTP,DELTU,DLTPM1,DLTUM1,IT,ITBCS,ITRST,ITMAX,TSTART      OUTOBC........5300
      DATA (COLTK8(MM), MM=1,7) /'Name',                                 OUTOBC........5400
     1   '              X', '              Y', '              Z',        OUTOBC........5500
     2   '       Pressure', '  Concentration', '     Saturation'/        OUTOBC........5600
      DATA BLANKS /"                                        "/           OUTOBC........5700
      SAVE COLTK8                                                        OUTOBC........5800
C                                                                        OUTOBC........5900
C.....CALCULATE HEADERS ON FIRST CALL AND CREATE OUTPUT ON EACH CALL.    OUTOBC........6000
C                                                                        OUTOBC........6100
      NOBS=NOBSN-1                                                       OUTOBC........6200
      DITMAX = DNINT(DBLE(ITMAX))                                        OUTOBC........6300
      DITRST = DNINT(DBLE(ITRST))                                        OUTOBC........6400
C                                                                        OUTOBC........6500
      K8 = IUNIO(NFLO)                                                   OUTOBC........6600
      IF (.NOT. ONCK78(NFLO))  THEN                                      OUTOBC........6700
C.....FIRST CALL FOR THIS FILE -- CREATE FILE HEADER.                    OUTOBC........6800
C                                                                        OUTOBC........6900
C........IF NO OBSERVATION POINTS, WRITE MESSAGE AND RETURN              OUTOBC........7000
         IF (NOBSN-1.EQ.0) THEN                                          OUTOBC........7100
            WRITE(K8,5) TITLE1, TITLE2                                   OUTOBC........7200
    5       FORMAT("## ", 80A1,                                          OUTOBC........7300
     1         /"## ", 80A1,                                             OUTOBC........7400
     2         /"## ")                                                   OUTOBC........7500
            WRITE(K8,7)                                                  OUTOBC........7600
    7       FORMAT(/'  *** NO OBSERVATION POINTS SPECIFIED ',            OUTOBC........7700
     1         '(NOBS=0) ***')                                           OUTOBC........7800
            ONCK78(NFLO) = .TRUE.                                        OUTOBC........7900
            ONCEK8 = .TRUE.                                              OUTOBC........8000
            RETURN                                                       OUTOBC........8100
         END IF                                                          OUTOBC........8200
C                                                                        OUTOBC........8300
C........CALCULATE THE MAXIMUM NUMBER OF TIME STEPS, KTMAX.              OUTOBC........8400
         IF (ISSTRA.NE.0) THEN                                           OUTOBC........8500
            KTMAX = 1                                                    OUTOBC........8600
            IMPRTD = .TRUE.                                              OUTOBC........8700
         ELSE                                                            OUTOBC........8800
            KTMAX = 2                                                    OUTOBC........8900
            IMPRTD = .FALSE.                                             OUTOBC........9000
            LENSCH = SCHDLS(OFP(NFLO)%ISCHED)%LLEN                       OUTOBC........9100
            IF (LENSCH.NE.0) THEN                                        OUTOBC........9200
               SOBLAST = SCHDLS(OFP(NFLO)%ISCHED)%SLIST(LENSCH)%DVALU2   OUTOBC........9300
               IF (SOBLAST.LE.DITRST) THEN                               OUTOBC........9400
                  GOTO 6                                                 OUTOBC........9500
               ELSE                                                      OUTOBC........9600
                  DO 4 JT=1,LENSCH                                       OUTOBC........9700
                     SOB = SCHDLS(OFP(NFLO)%ISCHED)%SLIST(JT)%DVALU2     OUTOBC........9800
                     IF (SOB.GT.DITRST) THEN                             OUTOBC........9900
                        JT1 = JT                                         OUTOBC.......10000
                        EXIT                                             OUTOBC.......10100
                     END IF                                              OUTOBC.......10200
    4             CONTINUE                                               OUTOBC.......10300
                  KTMAX = KTMAX + LENSCH - (JT1 - 1)                     OUTOBC.......10400
                  IF (SOBLAST.EQ.DITMAX) THEN                            OUTOBC.......10500
                     KTMAX = KTMAX - 1                                   OUTOBC.......10600
                     IMPRTD = .TRUE.                                     OUTOBC.......10700
                  END IF                                                 OUTOBC.......10800
               END IF                                                    OUTOBC.......10900
            END IF                                                       OUTOBC.......11000
         END IF                                                          OUTOBC.......11100
    6    CONTINUE                                                        OUTOBC.......11200
C                                                                        OUTOBC.......11300
C........ALLOCATE LOCAL ARRAYS                                           OUTOBC.......11400
         ALLOCATE(TT(KTMAX),DITT(KTMAX))                                 OUTOBC.......11500
         ALLOCATE(ISTORC(KTMAX),ISHORP(KTMAX),ISSATU(KTMAX))             OUTOBC.......11600
C                                                                        OUTOBC.......11700
C........CALCULATE AND PRINT TIME STEP INFORMATION                       OUTOBC.......11800
         IF (ISSTRA.NE.0) THEN                                           OUTOBC.......11900
            KT = 1                                                       OUTOBC.......12000
            TT(KT) = TSTART                                              OUTOBC.......12100
            DITT(KT) = 1                                                 OUTOBC.......12200
            ISHORP(KT) = 0                                               OUTOBC.......12300
            ISTORC(KT) = 1                                               OUTOBC.......12400
            ISSATU(KT) = 0                                               OUTOBC.......12500
         ELSE                                                            OUTOBC.......12600
C...........NUMBER OF PRINTED TIME STEPS                                 OUTOBC.......12700
            KT=0                                                         OUTOBC.......12800
C...........TIME STEP INCREMENT                                          OUTOBC.......12900
            DELTK=DELT                                                   OUTOBC.......13000
C...........POINTERS TO TIME STEP AND OBSERVATIONS SCHEDULES             OUTOBC.......13100
            LCNT = 1                                                     OUTOBC.......13200
C...........OBSERVATION TIME AND STEP                                    OUTOBC.......13300
            TOB = SCHDLS(OFP(NFLO)%ISCHED)%SLIST(LCNT)%DVALU1            OUTOBC.......13400
            SOB = SCHDLS(OFP(NFLO)%ISCHED)%SLIST(LCNT)%DVALU2            OUTOBC.......13500
C...........INDICATORS OF WHEN VARIABLES ARE CALCULATED AND PRINTED      OUTOBC.......13600
            LCHORP = 0                                                   OUTOBC.......13700
            LCTORC = 0                                                   OUTOBC.......13800
C...........INITIAL/STARTING CONDITIONS ARE PRINTED                      OUTOBC.......13900
            JT0 = 1                                                      OUTOBC.......14000
            IF (ITRST.GT.0) THEN                                         OUTOBC.......14100
               DO 3 JT=1,ITRST                                           OUTOBC.......14200
                  JT0 = JT0 + 1                                          OUTOBC.......14300
                  IF (MOD(JT,NPCYC).EQ.0 .OR. BCSFL(JT) .OR. JT.EQ.1)    OUTOBC.......14400
     1               LCHORP = JT                                         OUTOBC.......14500
                  IF (MOD(JT,NUCYC).EQ.0 .OR. BCSTR(JT) .OR. JT.EQ.1)    OUTOBC.......14600
     1               LCTORC = JT                                         OUTOBC.......14700
    3          CONTINUE                                                  OUTOBC.......14800
            END IF                                                       OUTOBC.......14900
               TJT = SCHDLS(ISCHTS)%SLIST(JT0)%DVALU1                    OUTOBC.......15000
               SJT = SCHDLS(ISCHTS)%SLIST(JT0)%DVALU2                    OUTOBC.......15100
            DO WHILE ((SOB.LT.SJT).AND.(LCNT.LT.LENSCH))                 OUTOBC.......15200
               LCNT = LCNT + 1                                           OUTOBC.......15300
               TOB = SCHDLS(OFP(NFLO)%ISCHED)%SLIST(LCNT)%DVALU1         OUTOBC.......15400
               SOB = SCHDLS(OFP(NFLO)%ISCHED)%SLIST(LCNT)%DVALU2         OUTOBC.......15500
            END DO                                                       OUTOBC.......15600
            KT = KT + 1                                                  OUTOBC.......15700
            TT(KT) = TJT                                                 OUTOBC.......15800
            DITT(KT) = SJT                                               OUTOBC.......15900
            ISHORP(KT) = LCHORP                                          OUTOBC.......16000
            ISTORC(KT) = LCTORC                                          OUTOBC.......16100
            ISSATU(KT) = LCHORP                                          OUTOBC.......16200
            IF ((SOB.EQ.SJT).AND.(LCNT.LT.LENSCH)) THEN                  OUTOBC.......16300
               LCNT = LCNT + 1                                           OUTOBC.......16400
               TOB = SCHDLS(OFP(NFLO)%ISCHED)%SLIST(LCNT)%DVALU1         OUTOBC.......16500
               SOB = SCHDLS(OFP(NFLO)%ISCHED)%SLIST(LCNT)%DVALU2         OUTOBC.......16600
            END IF                                                       OUTOBC.......16700
C...........IDENTIFY AND RECORD SCHEDULED OUTPUT                         OUTOBC.......16800
            DO 10 JT=ITRST+1,ITMAX                                       OUTOBC.......16900
               DJT = DNINT(DBLE(JT))                                     OUTOBC.......17000
               JTTS = JT + 1                                             OUTOBC.......17100
               TJT = SCHDLS(ISCHTS)%SLIST(JTTS)%DVALU1                   OUTOBC.......17200
               SJT = SCHDLS(ISCHTS)%SLIST(JTTS)%DVALU2                   OUTOBC.......17300
               IF (MOD(JT,NPCYC).EQ.0 .OR. BCSFL(JT) .OR. JT.EQ.1)       OUTOBC.......17400
     1            LCHORP = JT                                            OUTOBC.......17500
               IF (MOD(JT,NUCYC).EQ.0 .OR. BCSTR(JT) .OR. JT.EQ.1)       OUTOBC.......17600
     1            LCTORC = JT                                            OUTOBC.......17700
               DO WHILE ((SOB.LE.DJT).AND.(LCNT.LE.LENSCH))              OUTOBC.......17800
                  IF (SOB.NE.DITRST) THEN                                OUTOBC.......17900
                  KT = KT + 1                                            OUTOBC.......18000
                  TT(KT) = TOB                                           OUTOBC.......18100
                  DITT(KT) = SOB                                         OUTOBC.......18200
                  ISHORP(KT) = LCHORP                                    OUTOBC.......18300
                  ISTORC(KT) = LCTORC                                    OUTOBC.......18400
                  ISSATU(KT) = LCHORP                                    OUTOBC.......18500
                  END IF                                                 OUTOBC.......18600
                  IF (LCNT.LT.LENSCH) THEN                               OUTOBC.......18700
                     LCNT = LCNT + 1                                     OUTOBC.......18800
                     TOB = SCHDLS(OFP(NFLO)%ISCHED)%SLIST(LCNT)%DVALU1   OUTOBC.......18900
                     SOB = SCHDLS(OFP(NFLO)%ISCHED)%SLIST(LCNT)%DVALU2   OUTOBC.......19000
                  ELSE                                                   OUTOBC.......19100
                     LCNT = LCNT + 1                                     OUTOBC.......19200
                  END IF                                                 OUTOBC.......19300
               END DO                                                    OUTOBC.......19400
   10       CONTINUE                                                     OUTOBC.......19500
         END IF                                                          OUTOBC.......19600
C                                                                        OUTOBC.......19700
C                                                                        OUTOBC.......19800
C........PRINT LAST TIME STEP ALWAYS, UNLESS ALREADY PRINTED             OUTOBC.......19900
         IF (.NOT.IMPRTD) THEN                                           OUTOBC.......20000
            KT = KT + 1                                                  OUTOBC.......20100
            TT(KT) = TJT                                                 OUTOBC.......20200
            DITT(KT) = SJT                                               OUTOBC.......20300
            IF (MOD(JT,NPCYC).EQ.0 .OR. BCSFL(ITMAX)) LCHORP = ITMAX     OUTOBC.......20400
            IF (MOD(JT,NUCYC).EQ.0 .OR. BCSTR(ITMAX)) LCTORC = ITMAX     OUTOBC.......20500
            ISHORP(KT) = LCHORP                                          OUTOBC.......20600
            ISTORC(KT) = LCTORC                                          OUTOBC.......20700
            ISSATU(KT) = LCHORP                                          OUTOBC.......20800
         ENDIF                                                           OUTOBC.......20900
C                                                                        OUTOBC.......21000
C........IF STEADY-STATE FLOW, P AND S CALCULATED ON TIME STEP 0 ONLY.   OUTOBC.......21100
         IF (ISSFLO.NE.0) THEN                                           OUTOBC.......21200
            DO 14 KT=1,KTMAX                                             OUTOBC.......21300
               ISHORP(KT) = 0                                            OUTOBC.......21400
               ISSATU(KT) = 0                                            OUTOBC.......21500
   14       CONTINUE                                                     OUTOBC.......21600
         END IF                                                          OUTOBC.......21700
C                                                                        OUTOBC.......21800
C........COMPUTE ACTUAL NUMBER OF PRINTED TIME STEPS, KTPRN; LESS THAN   OUTOBC.......21900
C           KTMAX IF RUN IS A RESTART                                    OUTOBC.......22000
         IF (IREAD.EQ.+1) THEN                                           OUTOBC.......22100
            KTPRN = KTMAX                                                OUTOBC.......22200
         ELSE                                                            OUTOBC.......22300
            KTPRN = 0                                                    OUTOBC.......22400
            DO 17 KT=1,KTMAX                                             OUTOBC.......22500
               IF (DITT(KT).GE.DITRST) KTPRN = KTPRN + 1                 OUTOBC.......22600
   17       CONTINUE                                                     OUTOBC.......22700
         END IF                                                          OUTOBC.......22800
C                                                                        OUTOBC.......22900
C........SET TEMPERATURE OR CONCENTRATION TEXT STRING FOR HEADER         OUTOBC.......23000
         IF (ME .GT. 0) THEN                                             OUTOBC.......23100
            TORC1 = "Temperature  "                                      OUTOBC.......23200
            TORC2 = "  Temperature"                                      OUTOBC.......23300
            COLTK8(6) = "    Temperature"                                ! satobs210709
         ELSE                                                            OUTOBC.......23400
            TORC1 = "Concentration"                                      OUTOBC.......23500
            TORC2 = "Concentration"                                      OUTOBC.......23600
         ENDIF                                                           OUTOBC.......23700
C                                                                        OUTOBC.......23800
C........SET PRESSURE TEXT STRING FOR HEADER                             OUTOBC.......23900
         HORP = "Pressure"                                               OUTOBC.......24000
C                                                                        OUTOBC.......24100
C........WRITE HEADER INFORMATION                                        OUTOBC.......24200
         WRITE(K8,5) TITLE1, TITLE2                                      OUTOBC.......24300
         IF (KTYPE(2).GT.1) THEN                                         OUTOBC.......24400
            IF (KTYPE(2).EQ.3) THEN                                      OUTOBC.......24500
               CTYPE2 = "BLOCKWISE MESH"                                 OUTOBC.......24600
            ELSE                                                         OUTOBC.......24700
               CTYPE2 = "REGULAR MESH  "                                 OUTOBC.......24800
            END IF                                                       OUTOBC.......24900
            IF (KTYPE(1).EQ.3) THEN                                      OUTOBC.......25000
               WRITE(K8,951) KTYPE(1),CTYPE2,NN1,NN2,NN3,NN," Nodes",    OUTOBC.......25100
     1            NE, " Elems"                                           OUTOBC.......25200
            ELSE                                                         OUTOBC.......25300
               WRITE(K8,952) KTYPE(1),CTYPE2,NN1,NN2,NN," Nodes",        OUTOBC.......25400
     1            NE, " Elems"                                           OUTOBC.......25500
            END IF                                                       OUTOBC.......25600
         ELSE IF (KTYPE(2).EQ.1) THEN                                    OUTOBC.......25700
            WRITE(K8,953) KTYPE(1), LAYSTR(1:6), NLAYS, NNLAY,           OUTOBC.......25800
     1         NN, " Nodes", NE, " Elems"                                OUTOBC.......25900
         ELSE                                                            OUTOBC.......26000
            WRITE(K8,954) KTYPE(1), NN, " Nodes", NE, " Elems"           OUTOBC.......26100
         END IF                                                          OUTOBC.......26200
         WRITE(K8,960) "OBSERVATION POINT RESULTS",KTPRN                 OUTOBC.......26300
         WRITE(K8,962) HORP, TORC1, "Sat"                                OUTOBC.......26400
         DO 920 KT=1,KTMAX                                               OUTOBC.......26500
            IF (DITT(KT).GE.DITRST)                                      OUTOBC.......26600
     1         WRITE(K8,963) DITT(KT), TT(KT), ISHORP(KT),               OUTOBC.......26700
     2         ISTORC(KT), ISSATU(KT)                                    OUTOBC.......26800
  920    CONTINUE                                                        OUTOBC.......26900
  951    FORMAT("## ", I1, "-D, ", A, 2X,                                OUTOBC.......27000
     1                 "(", 2(I9, ")*("), I9, ") = ", I9, A, 1X,         OUTOBC.......27100
     2                 "(", I9, A, ")"                                   OUTOBC.......27200
     3         /"## ")                                                   OUTOBC.......27300
  952    FORMAT("## ", I1, "-D, ", A, 14X,                               OUTOBC.......27400
     1                 "(", I9, ")*(", I9, ") = ", I9, A, 1X,            OUTOBC.......27500
     2                 "(", I9, A, ")"                                   OUTOBC.......27600
     3         /"## ")                                                   OUTOBC.......27700
  953    FORMAT("## ", I1, "-D, LAYERED MESH [", A6, "]", 7X,            OUTOBC.......27800
     1                 "(", I9, ")*(", I9, ") = ", I9, A, 1X,            OUTOBC.......27900
     2                 "(", I9, A, ")"                                   OUTOBC.......28000
     3         /"## ")                                                   OUTOBC.......28100
  954    FORMAT("## ", I1, "-D, IRREGULAR MESH", 40X, I9, A, 1X,         OUTOBC.......28200
     1                 "(", I9, A, ")"                                   OUTOBC.......28300
     2         /"## ")                                                   OUTOBC.......28400
  960    FORMAT("## ", 92("="),                                          OUTOBC.......28500
     1         /"## ", A, 39X, I9, " Time steps printed",                OUTOBC.......28600
     2         /"## ", 92("="))                                          OUTOBC.......28700
  962    FORMAT("## ",                                                   OUTOBC.......28800
     1         /"## ", 4X, "Time steps", 29X,                            OUTOBC.......28900
     2                 "[Latest time step computed]",                    OUTOBC.......29000
     3         /"## ", 3X, "in this file      Time (sec)", 9X,A5,        OUTOBC.......29100
     4                 10X,A4, 11X,A3,                                   OUTOBC.......29200
     5         /"## ", 2X, 14("-"), 3X, 13("-"), 1X, 3(3X, 12("-")) )    OUTOBC.......29300
  963    FORMAT("## ", 1X, F15.5, 3X, 1PE13.6, 3(7X, I8))                OUTOBC.......29400
C                                                                        OUTOBC.......29500
C........DEALLOCATE LOCAL ARRAYS.                                        OUTOBC.......29600
         DEALLOCATE(TT,DITT,ISTORC,ISHORP,ISSATU)                        OUTOBC.......29700
C                                                                        OUTOBC.......29800
         ONCK78(NFLO) = .TRUE.                                           OUTOBC.......29900
         ONCEK8 = .TRUE.                                                 OUTOBC.......30000
      ENDIF                                                              OUTOBC.......30100
C                                                                        OUTOBC.......30200
C.....IF NO OBSERVATIONS, RETURN.                                        OUTOBC.......30300
      IF (NOBSN-1.EQ.0) RETURN                                           OUTOBC.......30400
C                                                                        OUTOBC.......30500
C.....HEADER INFORMATION REPEATED BEFORE EACH TIME STEP                  OUTOBC.......30600
      SFRAC = STEP - CEILING(STEP) + 1D0                                 OUTOBC.......30700
      IF ((STEP.EQ.0D0).OR.((STEP.EQ.1D0).AND.(ISSTRA.EQ.1))) THEN       OUTOBC.......30800
         TOUT = TSTART                                                   OUTOBC.......30900
      ELSE                                                               OUTOBC.......31000
         TOUT = TIME                                                     OUTOBC.......31100
      END IF                                                             OUTOBC.......31200
      IF (KTYPE(1).EQ.3) THEN                                            OUTOBC.......31300
         WRITE(K8,966) STEP,  TOUT                                       OUTOBC.......31400
      ELSE                                                               OUTOBC.......31500
         WRITE(K8,967) STEP,  TOUT                                       OUTOBC.......31600
      END IF                                                             OUTOBC.......31700
  966 FORMAT('## ',                                                      OUTOBC.......31800
     1      /'## ', 129('='),                                            OUTOBC.......31900
     2      /'## TIME STEP ', F15.5, 83X, 'Time: ', 1PE11.4, ' sec',     OUTOBC.......32000
     3      /'## ', 129('='))                                            OUTOBC.......32100
  967 FORMAT('## ',                                                      OUTOBC.......32200
     1      /'## ', 114('='),                                            OUTOBC.......32300
     2      /'## TIME STEP ', F15.5, 68X, 'Time: ', 1PE11.4, ' sec',     OUTOBC.......32400
     3      /'## ', 114('='))                                            OUTOBC.......32500
      KCONT = 7 - KTYPE(1)                                               OUTOBC.......32600
      WRITE(K8,968) (COLTK8(K),K=1,3),(COLTK8(K),K=KCONT,7)              OUTOBC.......32700
  968 FORMAT ("## ", 33X, A4, 2X, 6(A15))                                OUTOBC.......32800
C                                                                        OUTOBC.......32900
C.....WRITE OBSERVATIONS FOR THIS TIME STEP.                             OUTOBC.......33000
      IF (KTYPE(1).EQ.3) THEN                                            OUTOBC.......33100
         DO 1010 JJ=1,NOBS                                               OUTOBC.......33200
            IF ((OBSPTS(JJ)%FRMT.EQ."OBC").AND.                          OUTOBC.......33300
     1         (OBSPTS(JJ)%SCHED.EQ.SCHDLS(OFP(NFLO)%ISCHED)%NAME))      OUTOBC.......33400
     2         THEN                                                      OUTOBC.......33500
               LENNAM = LEN_TRIM(OBSPTS(JJ)%NAME)                        OUTOBC.......33600
               OBSNM = BLANKS(1:40-LENNAM) // TRIM(OBSPTS(JJ)%NAME)      OUTOBC.......33700
               WRITE(K8,1000) OBSNM, OBSPTS(JJ)%X, OBSPTS(JJ)%Y,         OUTOBC.......33800
     1            OBSPTS(JJ)%Z, DP3STR(PUSWF(OBSPTS(JJ)%L,               OUTOBC.......33900
     2            OBSPTS(JJ)%XSI,OBSPTS(JJ)%ETA,OBSPTS(JJ)%ZET,SFRAC,    OUTOBC.......34000
     3            PM1,UM1,PVEC,UVEC,IN,LREG))                            OUTOBC.......34100
 1000          FORMAT(A40,2X,3(1PE15.7),A45)                             OUTOBC.......34200
            END IF                                                       OUTOBC.......34300
 1010    CONTINUE                                                        OUTOBC.......34400
      ELSE                                                               OUTOBC.......34500
         DO 1030 JJ=1,NOBS                                               OUTOBC.......34600
            IF ((OBSPTS(JJ)%FRMT.EQ."OBC").AND.                          OUTOBC.......34700
     1         (OBSPTS(JJ)%SCHED.EQ.SCHDLS(OFP(NFLO)%ISCHED)%NAME))      OUTOBC.......34800
     2         THEN                                                      OUTOBC.......34900
               LENNAM = LEN_TRIM(OBSPTS(JJ)%NAME)                        OUTOBC.......35000
               OBSNM = BLANKS(1:40-LENNAM) // TRIM(OBSPTS(JJ)%NAME)      OUTOBC.......35100
               WRITE(K8,1020) OBSNM, OBSPTS(JJ)%X, OBSPTS(JJ)%Y,         OUTOBC.......35200
     1            DP3STR(PUSWF(OBSPTS(JJ)%L,OBSPTS(JJ)%XSI,              OUTOBC.......35300
     2            OBSPTS(JJ)%ETA,OBSPTS(JJ)%ZET,SFRAC,                   OUTOBC.......35400
     3            PM1,UM1,PVEC,UVEC,IN,LREG))                            OUTOBC.......35500
 1020          FORMAT(A40,2X,2(1PE15.7),A45)                             OUTOBC.......35600
            END IF                                                       OUTOBC.......35700
 1030    CONTINUE                                                        OUTOBC.......35800
      END IF                                                             OUTOBC.......35900
C                                                                        OUTOBC.......36000
C                                                                        OUTOBC.......36100
      RETURN                                                             OUTOBC.......36200
C                                                                        OUTOBC.......36300
      END                                                                OUTOBC.......36400
C                                                                        OUTOBC.......36500
C     SUBROUTINE        O  U  T  O  B  S           SUTRA VERSION 3.0     OUTOBS.........100
C                                                                        OUTOBS.........200
C *** PURPOSE :                                                          OUTOBS.........300
C ***  TO PRINT THE SOLUTION AT OBSERVATION POINTS.  SPECIFICALLY,       OUTOBS.........400
C ***  TO PRINT PRESSURES, CONCENTRATIONS OR TEMPERATURES, AND           OUTOBS.........500
C ***  SATURATIONS IN A COLUMNWISE FORMAT.                               OUTOBS.........600
C                                                                        OUTOBS.........700
      SUBROUTINE OUTOBS(NFLO,OBSPTS,TIME,STEP,PM1,UM1,PVEC,UVEC,         OUTOBS.........800
     1   TITLE1,TITLE2,IN,LREG,BCSFL,BCSTR)                              OUTOBS.........900
      USE ALLARR, ONLY : OBSDAT                                          OUTOBS........1000
      USE LLDEF                                                          OUTOBS........1100
      USE EXPINT                                                         OUTOBS........1200
      USE SCHDEF                                                         OUTOBS........1300
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                OUTOBS........1400
      CHARACTER*1  TITLE1(80),TITLE2(80)                                 OUTOBS........1500
      CHARACTER*8  HORP                                                  OUTOBS........1600
      CHARACTER*13 TORC1,TORC2                                           OUTOBS........1700
      CHARACTER*14 CTYPE2                                                OUTOBS........1800
      CHARACTER*80 UNAME,FNAME(0:23),FRMT,FRMT2                          OUTOBS........1900
      CHARACTER*40 BLANKS                                                OUTOBS........2000
      CHARACTER*80 LAYSTR                                                OUTOBS........2100
      LOGICAL ONCEK5,ONCEK6,ONCEK7,ONCEK8,ONCESTG                        OUTOBS........2200
      LOGICAL IMPRTD                                                     OUTOBS........2300
      LOGICAL BCSFL(0:ITMAX),BCSTR(0:ITMAX)                              OUTOBS........2400
      DIMENSION PM1(NNVEC),UM1(NNVEC),PVEC(NNVEC),UVEC(NNVEC)            OUTOBS........2500
      DIMENSION IN(NIN),LREG(NE)                                         OUTOBS........2600
      DIMENSION KTYPE(2)                                                 OUTOBS........2700
      TYPE (OBSDAT), DIMENSION (NOBSN) :: OBSPTS                         OUTOBS........2800
      ALLOCATABLE TT(:),DITT(:),ISTORC(:),ISHORP(:),ISSATU(:)            OUTOBS........2900
      ALLOCATABLE JSET(:)                                                OUTOBS........3000
      COMMON /CLAY/ LAYSTR                                               OUTOBS........3100
      COMMON /CONTRL/ GNUP,GNUU,UP,DTMULT,DTMAX,ME,ISSFLO,ISSTRA,ITCYC,  OUTOBS........3200
     1   NPCYC,NUCYC,NPRINT,NBCFPR,NBCSPR,NBCPPR,NBCUPR,NLAKPR,IREAD,    OUTOBS........3300
     1   NBGPPR,NBGUPR,ISTORE,NOUMAT,IUNSAT,IALSAT,KTYPE                 OUTOBS........3400
      COMMON /DIMLAY/ NLAYS,NNLAY,NELAY                                  OUTOBS........3500
      COMMON /DIMS/ NN,NE,NIN,NBI,NCBI,NB,NBHALF,NPBC,NUBC,              OUTOBS........3600
     1   NSOP,NSOU,NBCN,NPBG,NUBG,NCIDB                                  OUTOBS........3700
      COMMON /DIMX/ NWI,NWF,NWL,NELT,NNNX,NEX,N48                        OUTOBS........3800
      COMMON /DIMX2/ NELTA,NNVEC,NDIMIA,NDIMJA                           OUTOBS........3900
      COMMON /FNAMES/ UNAME,FNAME                                        OUTOBS........4000
      COMMON /FUNITS/ K00,K0,K1,K2,K3,K4,K5,K6,K7,K8,K9,                 OUTOBS........4100
     1   K10,K11,K12,K13,K14,K15,K16,K17,K18,K19,K20,K21,K22,K23         OUTOBS........4200
      COMMON /GRAVEC/ GRAVX,GRAVY,GRAVZ                                  OUTOBS........4300
      COMMON /ITERAT/ RPM,RPMAX,RUM,RUMAX,ITER,ITRMAX,IPWORS,IUWORS      OUTOBS........4400
      COMMON /KPRINT/ KNODAL,KELMNT,KINCID,KPLOTP,KPLOTU,                OUTOBS........4500
     1   KPANDS,KVEL,KCORT,KBUDG,KSCRN,KPAUSE                            OUTOBS........4600
      COMMON /OBS/ NOBSN,NTOBS,NOBCYC,NOBLIN,NFLOMX                      OUTOBS........4700
      COMMON /PLT1/ ONCEK5, ONCEK6, ONCEK7, ONCEK8, ONCESTG              OUTOBS........4800
      COMMON /SCH/ NSCH,ISCHTS,NSCHAU                                    OUTOBS........4900
      COMMON /SOLVI/ KSOLVP,KSOLVU,NN1,NN2,NN3                           OUTOBS........5000
      COMMON /TIMES/ DELT,TSEC,TMIN,THOUR,TDAY,TWEEK,TMONTH,TYEAR,       OUTOBS........5100
     1   TMAX,DELTP,DELTU,DLTPM1,DLTUM1,IT,ITBCS,ITRST,ITMAX,TSTART      OUTOBS........5200
      DATA BLANKS /"                                        "/           OUTOBS........5300
C                                                                        OUTOBS........5400
C.....CALCULATE HEADERS ON FIRST CALL AND CREATE OUTPUT ON EACH CALL.    OUTOBS........5500
C                                                                        OUTOBS........5600
      NOBS=NOBSN-1                                                       OUTOBS........5700
      DITMAX = DNINT(DBLE(ITMAX))                                        OUTOBS........5800
      DITRST = DNINT(DBLE(ITRST))                                        OUTOBS........5900
C                                                                        OUTOBS........6000
      K7 = IUNIO(NFLO)                                                   OUTOBS........6100
      IF (.NOT. ONCK78(NFLO))  THEN                                      OUTOBS........6200
C.....FIRST CALL FOR THIS FILE -- CREATE FILE HEADER.                    OUTOBS........6300
C                                                                        OUTOBS........6400
C........IF NO OBSERVATION POINTS, WRITE MESSAGE AND RETURN              OUTOBS........6500
         IF (NOBSN-1.EQ.0) THEN                                          OUTOBS........6600
            WRITE(K7,5) TITLE1, TITLE2                                   OUTOBS........6700
    5       FORMAT("## ", 80A1,                                          OUTOBS........6800
     1         /"## ", 80A1,                                             OUTOBS........6900
     2         /"## ")                                                   OUTOBS........7000
            WRITE(K7,7)                                                  OUTOBS........7100
    7       FORMAT(/'  *** NO OBSERVATION POINTS SPECIFIED ',            OUTOBS........7200
     1         '(NOBS=0) ***')                                           OUTOBS........7300
            ONCK78(NFLO) = .TRUE.                                        OUTOBS........7400
            ONCEK7 = .TRUE.                                              OUTOBS........7500
            RETURN                                                       OUTOBS........7600
         END IF                                                          OUTOBS........7700
C                                                                        OUTOBS........7800
C........CALCULATE THE MAXIMUM NUMBER OF TIME STEPS, KTMAX.              OUTOBS........7900
         IF (ISSTRA.NE.0) THEN                                           OUTOBS........8000
            KTMAX = 1                                                    OUTOBS........8100
            IMPRTD = .TRUE.                                              OUTOBS........8200
         ELSE                                                            OUTOBS........8300
            KTMAX = 2                                                    OUTOBS........8400
            IMPRTD = .FALSE.                                             OUTOBS........8500
            LENSCH = SCHDLS(OFP(NFLO)%ISCHED)%LLEN                       OUTOBS........8600
            IF (LENSCH.NE.0) THEN                                        OUTOBS........8700
               SOBLAST = SCHDLS(OFP(NFLO)%ISCHED)%SLIST(LENSCH)%DVALU2   OUTOBS........8800
               IF (SOBLAST.LE.DITRST) THEN                               OUTOBS........8900
                  GOTO 6                                                 OUTOBS........9000
               ELSE                                                      OUTOBS........9100
                  DO 4 JT=1,LENSCH                                       OUTOBS........9200
                     SOB = SCHDLS(OFP(NFLO)%ISCHED)%SLIST(JT)%DVALU2     OUTOBS........9300
                     IF (SOB.GT.DITRST) THEN                             OUTOBS........9400
                        JT1 = JT                                         OUTOBS........9500
                        EXIT                                             OUTOBS........9600
                     END IF                                              OUTOBS........9700
    4             CONTINUE                                               OUTOBS........9800
                  KTMAX = KTMAX + LENSCH - (JT1 - 1)                     OUTOBS........9900
                  IF (SOBLAST.EQ.DITMAX) THEN                            OUTOBS.......10000
                     KTMAX = KTMAX - 1                                   OUTOBS.......10100
                     IMPRTD = .TRUE.                                     OUTOBS.......10200
                  END IF                                                 OUTOBS.......10300
               END IF                                                    OUTOBS.......10400
            END IF                                                       OUTOBS.......10500
         END IF                                                          OUTOBS.......10600
    6    CONTINUE                                                        OUTOBS.......10700
C                                                                        OUTOBS.......10800
C........ALLOCATE LOCAL ARRAYS                                           OUTOBS.......10900
         ALLOCATE(TT(KTMAX),DITT(KTMAX))                                 OUTOBS.......11000
         ALLOCATE(ISTORC(KTMAX),ISHORP(KTMAX),ISSATU(KTMAX))             OUTOBS.......11100
C                                                                        OUTOBS.......11200
C........CALCULATE AND PRINT TIME STEP INFORMATION                       OUTOBS.......11300
         IF (ISSTRA.NE.0) THEN                                           OUTOBS.......11400
            KT = 1                                                       OUTOBS.......11500
            TT(KT) = TSTART                                              OUTOBS.......11600
            DITT(KT) = 1                                                 OUTOBS.......11700
            ISHORP(KT) = 0                                               OUTOBS.......11800
            ISTORC(KT) = 1                                               OUTOBS.......11900
            ISSATU(KT) = 0                                               OUTOBS.......12000
         ELSE                                                            OUTOBS.......12100
C...........NUMBER OF PRINTED TIME STEPS                                 OUTOBS.......12200
            KT=0                                                         OUTOBS.......12300
C...........TIME STEP INCREMENT                                          OUTOBS.......12400
            DELTK=DELT                                                   OUTOBS.......12500
C...........POINTERS TO TIME STEP AND OBSERVATIONS SCHEDULES             OUTOBS.......12600
            LCNT = 1                                                     OUTOBS.......12700
C...........OBSERVATION TIME AND STEP                                    OUTOBS.......12800
            TOB = SCHDLS(OFP(NFLO)%ISCHED)%SLIST(LCNT)%DVALU1            OUTOBS.......12900
            SOB = SCHDLS(OFP(NFLO)%ISCHED)%SLIST(LCNT)%DVALU2            OUTOBS.......13000
C...........INDICATORS OF WHEN VARIABLES ARE CALCULATED AND PRINTED      OUTOBS.......13100
            LCHORP = 0                                                   OUTOBS.......13200
            LCTORC = 0                                                   OUTOBS.......13300
C...........INITIAL/STARTING CONDITIONS ARE PRINTED                      OUTOBS.......13400
            JT0 = 1                                                      OUTOBS.......13500
            IF (ITRST.GT.0) THEN                                         OUTOBS.......13600
               DO 3 JT=1,ITRST                                           OUTOBS.......13700
                  JT0 = JT0 + 1                                          OUTOBS.......13800
                  IF (MOD(JT,NPCYC).EQ.0 .OR. BCSFL(JT) .OR. JT.EQ.1)    OUTOBS.......13900
     1               LCHORP = JT                                         OUTOBS.......14000
                  IF (MOD(JT,NUCYC).EQ.0 .OR. BCSTR(JT) .OR. JT.EQ.1)    OUTOBS.......14100
     1               LCTORC = JT                                         OUTOBS.......14200
    3          CONTINUE                                                  OUTOBS.......14300
            END IF                                                       OUTOBS.......14400
               TJT = SCHDLS(ISCHTS)%SLIST(JT0)%DVALU1                    OUTOBS.......14500
               SJT = SCHDLS(ISCHTS)%SLIST(JT0)%DVALU2                    OUTOBS.......14600
            DO WHILE ((SOB.LT.SJT).AND.(LCNT.LT.LENSCH))                 OUTOBS.......14700
               LCNT = LCNT + 1                                           OUTOBS.......14800
               TOB = SCHDLS(OFP(NFLO)%ISCHED)%SLIST(LCNT)%DVALU1         OUTOBS.......14900
               SOB = SCHDLS(OFP(NFLO)%ISCHED)%SLIST(LCNT)%DVALU2         OUTOBS.......15000
            END DO                                                       OUTOBS.......15100
            KT = KT + 1                                                  OUTOBS.......15200
            TT(KT) = TJT                                                 OUTOBS.......15300
            DITT(KT) = SJT                                               OUTOBS.......15400
            ISHORP(KT) = LCHORP                                          OUTOBS.......15500
            ISTORC(KT) = LCTORC                                          OUTOBS.......15600
            ISSATU(KT) = LCHORP                                          OUTOBS.......15700
            IF ((SOB.EQ.SJT).AND.(LCNT.LT.LENSCH)) THEN                  OUTOBS.......15800
               LCNT = LCNT + 1                                           OUTOBS.......15900
               TOB = SCHDLS(OFP(NFLO)%ISCHED)%SLIST(LCNT)%DVALU1         OUTOBS.......16000
               SOB = SCHDLS(OFP(NFLO)%ISCHED)%SLIST(LCNT)%DVALU2         OUTOBS.......16100
            END IF                                                       OUTOBS.......16200
C...........IDENTIFY AND RECORD SCHEDULED OUTPUT                         OUTOBS.......16300
            DO 10 JT=ITRST+1,ITMAX                                       OUTOBS.......16400
               DJT = DNINT(DBLE(JT))                                     OUTOBS.......16500
               JTTS = JT + 1                                             OUTOBS.......16600
               TJT = SCHDLS(ISCHTS)%SLIST(JTTS)%DVALU1                   OUTOBS.......16700
               SJT = SCHDLS(ISCHTS)%SLIST(JTTS)%DVALU2                   OUTOBS.......16800
               IF (MOD(JT,NPCYC).EQ.0 .OR. BCSFL(JT) .OR. JT.EQ.1)       OUTOBS.......16900
     1            LCHORP = JT                                            OUTOBS.......17000
               IF (MOD(JT,NUCYC).EQ.0 .OR. BCSTR(JT) .OR. JT.EQ.1)       OUTOBS.......17100
     1            LCTORC = JT                                            OUTOBS.......17200
               DO WHILE ((SOB.LE.DJT).AND.(LCNT.LE.LENSCH))              OUTOBS.......17300
                  IF (SOB.NE.DITRST) THEN                                OUTOBS.......17400
                  KT = KT + 1                                            OUTOBS.......17500
                  TT(KT) = TOB                                           OUTOBS.......17600
                  DITT(KT) = SOB                                         OUTOBS.......17700
                  ISHORP(KT) = LCHORP                                    OUTOBS.......17800
                  ISTORC(KT) = LCTORC                                    OUTOBS.......17900
                  ISSATU(KT) = LCHORP                                    OUTOBS.......18000
                  END IF                                                 OUTOBS.......18100
                  IF (LCNT.LT.LENSCH) THEN                               OUTOBS.......18200
                     LCNT = LCNT + 1                                     OUTOBS.......18300
                     TOB = SCHDLS(OFP(NFLO)%ISCHED)%SLIST(LCNT)%DVALU1   OUTOBS.......18400
                     SOB = SCHDLS(OFP(NFLO)%ISCHED)%SLIST(LCNT)%DVALU2   OUTOBS.......18500
                  ELSE                                                   OUTOBS.......18600
                     LCNT = LCNT + 1                                     OUTOBS.......18700
                  END IF                                                 OUTOBS.......18800
               END DO                                                    OUTOBS.......18900
   10       CONTINUE                                                     OUTOBS.......19000
         END IF                                                          OUTOBS.......19100
C                                                                        OUTOBS.......19200
C                                                                        OUTOBS.......19300
C........PRINT LAST TIME STEP ALWAYS, UNLESS ALREADY PRINTED             OUTOBS.......19400
         IF (.NOT.IMPRTD) THEN                                           OUTOBS.......19500
            KT = KT + 1                                                  OUTOBS.......19600
            TT(KT) = TJT                                                 OUTOBS.......19700
            DITT(KT) = SJT                                               OUTOBS.......19800
            IF (MOD(JT,NPCYC).EQ.0 .OR. BCSFL(ITMAX)) LCHORP = ITMAX     OUTOBS.......19900
            IF (MOD(JT,NUCYC).EQ.0 .OR. BCSTR(ITMAX)) LCTORC = ITMAX     OUTOBS.......20000
            ISHORP(KT) = LCHORP                                          OUTOBS.......20100
            ISTORC(KT) = LCTORC                                          OUTOBS.......20200
            ISSATU(KT) = LCHORP                                          OUTOBS.......20300
         ENDIF                                                           OUTOBS.......20400
C                                                                        OUTOBS.......20500
C........IF STEADY-STATE FLOW, P AND S CALCULATED ON TIME STEP 0 ONLY.   OUTOBS.......20600
         IF (ISSFLO.NE.0) THEN                                           OUTOBS.......20700
            DO 14 KT=1,KTMAX                                             OUTOBS.......20800
               ISHORP(KT) = 0                                            OUTOBS.......20900
               ISSATU(KT) = 0                                            OUTOBS.......21000
   14       CONTINUE                                                     OUTOBS.......21100
         END IF                                                          OUTOBS.......21200
C                                                                        OUTOBS.......21300
C........COMPUTE ACTUAL NUMBER OF PRINTED TIME STEPS, KTPRN; LESS THAN   OUTOBS.......21400
C           KTMAX IF RUN IS A RESTART                                    OUTOBS.......21500
         IF (IREAD.EQ.+1) THEN                                           OUTOBS.......21600
            KTPRN = KTMAX                                                OUTOBS.......21700
         ELSE                                                            OUTOBS.......21800
            KTPRN = 0                                                    OUTOBS.......21900
            DO 17 KT=1,KTMAX                                             OUTOBS.......22000
               IF (DITT(KT).GE.DITRST) KTPRN = KTPRN + 1                 OUTOBS.......22100
   17       CONTINUE                                                     OUTOBS.......22200
         END IF                                                          OUTOBS.......22300
C                                                                        OUTOBS.......22400
C........SET TEMPERATURE OR CONCENTRATION TEXT STRING FOR HEADER         OUTOBS.......22500
         IF (ME .GT. 0) THEN                                             OUTOBS.......22600
            TORC1 = "Temperature  "                                      OUTOBS.......22700
            TORC2 = "  Temperature"                                      OUTOBS.......22800
         ELSE                                                            OUTOBS.......22900
            TORC1 = "Concentration"                                      OUTOBS.......23000
            TORC2 = "Concentration"                                      OUTOBS.......23100
         ENDIF                                                           OUTOBS.......23200
C                                                                        OUTOBS.......23300
C........SET PRESSURE TEXT STRING FOR HEADER                             OUTOBS.......23400
         HORP = "Pressure"                                               OUTOBS.......23500
C                                                                        OUTOBS.......23600
C........WRITE HEADER INFORMATION                                        OUTOBS.......23700
         WRITE(K7,5) TITLE1, TITLE2                                      OUTOBS.......23800
         IF (KTYPE(2).GT.1) THEN                                         OUTOBS.......23900
            IF (KTYPE(2).EQ.3) THEN                                      OUTOBS.......24000
               CTYPE2 = "BLOCKWISE MESH"                                 OUTOBS.......24100
            ELSE                                                         OUTOBS.......24200
               CTYPE2 = "REGULAR MESH  "                                 OUTOBS.......24300
            END IF                                                       OUTOBS.......24400
            IF (KTYPE(1).EQ.3) THEN                                      OUTOBS.......24500
               WRITE(K7,951) KTYPE(1),CTYPE2,NN1,NN2,NN3,NN," Nodes",    OUTOBS.......24600
     1            NE, " Elems"                                           OUTOBS.......24700
            ELSE                                                         OUTOBS.......24800
               WRITE(K7,952) KTYPE(1),CTYPE2,NN1,NN2,NN," Nodes",        OUTOBS.......24900
     1            NE, " Elems"                                           OUTOBS.......25000
            END IF                                                       OUTOBS.......25100
         ELSE IF (KTYPE(2).EQ.1) THEN                                    OUTOBS.......25200
            WRITE(K7,953) KTYPE(1), LAYSTR(1:6), NLAYS, NNLAY,           OUTOBS.......25300
     1         NN, " Nodes", NE, " Elems"                                OUTOBS.......25400
         ELSE                                                            OUTOBS.......25500
            WRITE(K7,954) KTYPE(1), NN, " Nodes", NE, " Elems"           OUTOBS.......25600
         END IF                                                          OUTOBS.......25700
         WRITE(K7,960) "OBSERVATION POINT RESULTS",KTPRN                 OUTOBS.......25800
         WRITE(K7,962) HORP, TORC1, "Sat"                                OUTOBS.......25900
         DO 920 KT=1,KTMAX                                               OUTOBS.......26000
            IF (DITT(KT).GE.DITRST)                                      OUTOBS.......26100
     1         WRITE(K7,963) DITT(KT), TT(KT), ISHORP(KT),               OUTOBS.......26200
     2         ISTORC(KT), ISSATU(KT)                                    OUTOBS.......26300
  920    CONTINUE                                                        OUTOBS.......26400
         WRITE(K7,964)                                                   OUTOBS.......26500
  951    FORMAT("## ", I1, "-D, ", A, 2X,                                OUTOBS.......26600
     1                 "(", 2(I9, ")*("), I9, ") = ", I9, A, 1X,         OUTOBS.......26700
     2                 "(", I9, A, ")"                                   OUTOBS.......26800
     3         /"## ")                                                   OUTOBS.......26900
  952    FORMAT("## ", I1, "-D, ", A, 14X,                               OUTOBS.......27000
     1                 "(", I9, ")*(", I9, ") = ", I9, A, 1X,            OUTOBS.......27100
     2                 "(", I9, A, ")"                                   OUTOBS.......27200
     3         /"## ")                                                   OUTOBS.......27300
  953    FORMAT("## ", I1, "-D, LAYERED MESH [", A6, "]", 7X,            OUTOBS.......27400
     1                 "(", I9, ")*(", I9, ") = ", I9, A, 1X,            OUTOBS.......27500
     2                 "(", I9, A, ")"                                   OUTOBS.......27600
     3         /"## ")                                                   OUTOBS.......27700
  954    FORMAT("## ", I1, "-D, IRREGULAR MESH", 40X, I9, A, 1X,         OUTOBS.......27800
     1                 "(", I9, A, ")"                                   OUTOBS.......27900
     2         /"## ")                                                   OUTOBS.......28000
  960    FORMAT("## ", 92("="),                                          OUTOBS.......28100
     1         /"## ", A, 39X, I9, " Time steps printed",                OUTOBS.......28200
     2         /"## ", 92("="))                                          OUTOBS.......28300
  962    FORMAT("## ",                                                   OUTOBS.......28400
     1         /"## ", 4X, "Time steps", 29X,                            OUTOBS.......28500
     2                 "[Latest time step computed]",                    OUTOBS.......28600
     3         /"## ", 3X, "in this file      Time (sec)", 9X,A5,        OUTOBS.......28700
     4                 10X,A4, 11X,A3,                                   OUTOBS.......28800
     5         /"## ", 2X, 14("-"), 3X, 13("-"), 1X, 3(3X, 12("-")) )    OUTOBS.......28900
  963    FORMAT("## ", 1X, F15.5, 3X, 1PE13.6, 3(7X, I8))                OUTOBS.......29000
  964    FORMAT("## "/"## ", 92("=")/"## ")                              OUTOBS.......29100
C                                                                        OUTOBS.......29200
         ALLOCATE(JSET(NOBLIN))                                          OUTOBS.......29300
         JLTOT = 0                                                       OUTOBS.......29400
         JSETS = 0                                                       OUTOBS.......29500
         JNEXT = 1                                                       OUTOBS.......29600
         DO WHILE (JNEXT.LE.NOBS)                                        OUTOBS.......29700
            CALL LODOBS(NFLO,JNEXT,OBSPTS,JSET,JLOAD)                    OUTOBS.......29800
            IF (JLOAD.EQ.0) EXIT                                         OUTOBS.......29900
            JLLAST = JLOAD                                               OUTOBS.......30000
            JLTOT = JLTOT + JLOAD                                        OUTOBS.......30100
            JSETS = JSETS + 1                                            OUTOBS.......30200
            WRITE(FRMT,"(A,I9,A)") '("## ",30X,',JLOAD,"(4X,A))"         OUTOBS.......30300
            WRITE(K7,FRMT)                                               OUTOBS.......30400
     1         (BLANKS(1:(44-LEN_TRIM(OBSPTS(JSET(JJ))%NAME))/2)         OUTOBS.......30500
     2         // TRIM(OBSPTS(JSET(JJ))%NAME) //                         OUTOBS.......30600
     3         BLANKS(1:44-LEN_TRIM(OBSPTS(JSET(JJ))%NAME)-              OUTOBS.......30700
     4         (44-LEN_TRIM(OBSPTS(JSET(JJ))%NAME))/2),                  OUTOBS.......30800
     5         JJ=1,JLOAD)                                               OUTOBS.......30900
         END DO                                                          OUTOBS.......31000
         IF (JSETS.EQ.1) THEN                                            OUTOBS.......31100
            JJMAX = JLLAST                                               OUTOBS.......31200
         ELSE                                                            OUTOBS.......31300
            JJMAX = NOBLIN                                               OUTOBS.......31400
         END IF                                                          OUTOBS.......31500
         WRITE(FRMT2,"(A,I9,A)") '("## ",30X,',NOBLIN,"(:A,44('-')))"    OUTOBS.......31600
         WRITE(K7,FRMT2) ("    ", JJ=1,JJMAX)                            OUTOBS.......31700
         JNEXT = 1                                                       OUTOBS.......31800
         DO WHILE (JNEXT.LE.NOBS)                                        OUTOBS.......31900
            CALL LODOBS(NFLO,JNEXT,OBSPTS,JSET,JLOAD)                    OUTOBS.......32000
            IF (JLOAD.EQ.0) EXIT                                         OUTOBS.......32100
            IF (KTYPE(1).EQ.2) THEN                                      OUTOBS.......32200
               WRITE(FRMT,"(A,I9,A)") '("## ",31X,',JLOAD,               OUTOBS.......32300
     1            "(2X,7X'(',1PE14.7,',',1PE14.7,')',8X))"               OUTOBS.......32400
               WRITE(K7,FRMT) (OBSPTS(JSET(JJ))%X, OBSPTS(JSET(JJ))%Y,   OUTOBS.......32500
     1            JJ=1,JLOAD)                                            OUTOBS.......32600
            ELSE                                                         OUTOBS.......32700
               WRITE(FRMT,"(A,I9,A)") '("## ",31X,',JLOAD,               OUTOBS.......32800
     1            "(2X,'(',2(1PE14.7,','),1PE14.7,')'))"                 OUTOBS.......32900
               WRITE(K7,FRMT) (OBSPTS(JSET(JJ))%X, OBSPTS(JSET(JJ))%Y,   OUTOBS.......33000
     1            OBSPTS(JSET(JJ))%Z, JJ=1,JLOAD)                        OUTOBS.......33100
            END IF                                                       OUTOBS.......33200
         END DO                                                          OUTOBS.......33300
         WRITE(K7,FRMT2) ("    ", JJ=1,JJMAX)                            OUTOBS.......33400
         WRITE(FRMT,"(A,I9,A)") '("## ",6X,"Time Step",5X,"Time (sec)",' OUTOBS.......33500
     1      ,NOBLIN,"(:10X,A,2X,A,5X,'Saturation'))"                     OUTOBS.......33600
         WRITE(K7,FRMT) (HORP, TORC2, JJ=1,JJMAX)                        OUTOBS.......33700
C                                                                        OUTOBS.......33800
C........DEALLOCATE LOCAL ARRAYS FOR HEADER.                             OUTOBS.......33900
         DEALLOCATE(TT,DITT,ISTORC,ISHORP,ISSATU,JSET)                   OUTOBS.......34000
C                                                                        OUTOBS.......34100
         ONCK78(NFLO) = .TRUE.                                           OUTOBS.......34200
         ONCEK7 = .TRUE.                                                 OUTOBS.......34300
      ENDIF                                                              OUTOBS.......34400
C                                                                        OUTOBS.......34500
C.....IF NO OBSERVATIONS, RETURN.                                        OUTOBS.......34600
      IF (NOBSN-1.EQ.0) RETURN                                           OUTOBS.......34700
C                                                                        OUTOBS.......34800
C.....WRITE OBSERVATIONS.                                                OUTOBS.......34900
      SFRAC = STEP - CEILING(STEP) + 1D0                                 OUTOBS.......35000
      IF ((STEP.EQ.0D0).OR.((STEP.EQ.1D0).AND.(ISSTRA.EQ.1))) THEN       OUTOBS.......35100
         TOUT = TSTART                                                   OUTOBS.......35200
      ELSE                                                               OUTOBS.......35300
         TOUT = TIME                                                     OUTOBS.......35400
      END IF                                                             OUTOBS.......35500
      ALLOCATE(JSET(NOBLIN))                                             OUTOBS.......35600
      NS = 0                                                             OUTOBS.......35700
      JNEXT = 1                                                          OUTOBS.......35800
      DO WHILE (JNEXT.LE.NOBS)                                           OUTOBS.......35900
         CALL LODOBS(NFLO,JNEXT,OBSPTS,JSET,JLOAD)                       OUTOBS.......36000
         IF (JLOAD.EQ.0) EXIT                                            OUTOBS.......36100
         NS = NS + 1                                                     OUTOBS.......36200
         IF (NS.EQ.1) THEN                                               OUTOBS.......36300
            WRITE(FRMT,"(A,I9,A)") "(3X,F15.5,1PE15.7,",JLOAD,"(:3X,A))" OUTOBS.......36400
            WRITE(K7,FRMT) STEP, TOUT,                                   OUTOBS.......36500
     1         (DP3STR(PUSWF(OBSPTS(JSET(JJ))%L,                         OUTOBS.......36600
     2         OBSPTS(JSET(JJ))%XSI,OBSPTS(JSET(JJ))%ETA,                OUTOBS.......36700
     3         OBSPTS(JSET(JJ))%ZET,SFRAC,PM1,UM1,                       OUTOBS.......36800
     4         PVEC,UVEC,IN,LREG)), JJ=1,JLOAD)                          OUTOBS.......36900
         ELSE                                                            OUTOBS.......37000
            WRITE(FRMT,"(A,I9,A)") "(33X,",JLOAD,"(:3X,A))"              OUTOBS.......37100
            WRITE(K7,FRMT) (DP3STR(PUSWF(OBSPTS(JSET(JJ))%L,             OUTOBS.......37200
     1         OBSPTS(JSET(JJ))%XSI,OBSPTS(JSET(JJ))%ETA,                OUTOBS.......37300
     2         OBSPTS(JSET(JJ))%ZET,SFRAC,PM1,UM1,                       OUTOBS.......37400
     3         PVEC,UVEC,IN,LREG)), JJ=1,JLOAD)                          OUTOBS.......37500
         END IF                                                          OUTOBS.......37600
      END DO                                                             OUTOBS.......37700
      DEALLOCATE(JSET)                                                   OUTOBS.......37800
C                                                                        OUTOBS.......37900
C                                                                        OUTOBS.......38000
      RETURN                                                             OUTOBS.......38100
C                                                                        OUTOBS.......38200
      END                                                                OUTOBS.......38300
C                                                                        OUTOBS.......38400
C     SUBROUTINE        O  U  T  R  S  T           SUTRA VERSION 3.0     OUTRST.........100
C                                                                        OUTRST.........200
C *** PURPOSE :                                                          OUTRST.........300
C ***  TO STORE RESULTS THAT MAY LATER BE USED TO RESTART                OUTRST.........400
C ***  THE SIMULATION.                                                   OUTRST.........500
C                                                                        OUTRST.........600
      SUBROUTINE OUTRST(PVEC,UVEC,PM1,UM1,CS1,RCIT,SW,QIN,PBC,           OUTRST.........700
     1   UIN,UBC,QUIN,PBG1,QPBG1,PBG2,QPBG2,UPBGI,UPBGO,UBG1,QUBG1,      OUTRST.........800
     2   UBG2,QUBG2,IBCPBC,IBCUBC,IBCSOP,IBCSOU,IBCPBG,IBCUBG,           OUTRST.........900
     3   IIDPBC,IIDUBC,IIDSOP,IIDSOU,IIDPBG,IIDUBG,                      OUTRST........1000
     4   IBCSF,IBCSS,IBCSP,IBCSU,IBCSPG,IBCSUG,                          OUTRST........1100
     5   CPQL1,CPQL2,CUPBGO,QPLITR,QPGITR,QINITR,ISPBG,LPBGSP)           OUTRST........1200
      USE ALLARR, ONLY : CIDBCS                                          OUTRST........1300
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                OUTRST........1400
      INTEGER(1) IBCPBC(NBCN),IBCUBC(NBCN),IBCSOP(NSOP),IBCSOU(NSOU),    OUTRST........1500
     1   IBCPBG(NPBG),IBCUBG(NUBG)                                       OUTRST........1600
      INTEGER IIDPBC(NBCN),IIDUBC(NBCN),IIDSOP(NSOP),IIDSOU(NSOU),       OUTRST........1700
     1   IIDPBG(NPBG),IIDUBG(NUBG)                                       OUTRST........1800
      INTEGER IBCSP(NBCN),IBCSU(NBCN),IBCSF(NSOP),IBCSS(NSOU),           OUTRST........1900
     1   IBCSPG(NPBG),IBCSUG(NUBG),ISPBG(NN)                             OUTRST........2000
      LOGICAL LPBGSP(NPBG)                                               OUTRST........2100
      CHARACTER*8 VERNUM, VERNIN                                         OUTRST........2200
      CHARACTER*1 CPQL1(NPBG),CPQL2(NPBG)                                OUTRST........2300
      CHARACTER*3 CUPBGO(NPBG)                                           OUTRST........2400
      DIMENSION PVEC(NNVEC),UVEC(NNVEC),PM1(NN),UM1(NN),CS1(NN),         OUTRST........2500
     1   RCIT(NN),SW(NN),PBC(NBCN),QIN(NN),UIN(NN),UBC(NBCN),            OUTRST........2600
     2   QUIN(NN),QPLITR(NBCN),QINITR(NN)                                OUTRST........2700
      DIMENSION PBG1(NPBG),QPBG1(NPBG),PBG2(NPBG),QPBG2(NPBG),           OUTRST........2800
     1   UPBGI(NPBG),UPBGO(NPBG),UBG1(NUBG),QUBG1(NUBG),                 OUTRST........2900
     2   UBG2(NUBG),QUBG2(NUBG),QPGITR(NPBG)                             OUTRST........3000
      COMMON /DIMS/ NN,NE,NIN,NBI,NCBI,NB,NBHALF,NPBC,NUBC,              OUTRST........3100
     1   NSOP,NSOU,NBCN,NPBG,NUBG,NCIDB                                  OUTRST........3200
      COMMON /DIMX2/ NELTA, NNVEC, NDIMIA, NDIMJA                        OUTRST........3300
      COMMON /FUNITS/ K00,K0,K1,K2,K3,K4,K5,K6,K7,K8,K9,                 OUTRST........3400
     1   K10,K11,K12,K13,K14,K15,K16,K17,K18,K19,K20,K21,K22,K23         OUTRST........3500
      COMMON /TIMES/ DELT,TSEC,TMIN,THOUR,TDAY,TWEEK,TMONTH,TYEAR,       OUTRST........3600
     1   TMAX,DELTP,DELTU,DLTPM1,DLTUM1,IT,ITBCS,ITRST,ITMAX,TSTART      OUTRST........3700
      COMMON /VER/ VERNUM, VERNIN                                        OUTRST........3800
C                                                                        OUTRST........3900
C.....REWIND RST FILE FOR WRITING RESULTS OF CURRENT TIME STEP           OUTRST........4000
      REWIND(K4)                                                         OUTRST........4100
C                                                                        OUTRST........4200
C.....STORE TIME INFORMATION                                             OUTRST........4300
      WRITE(K4,100) TSEC,DELTP,DELTU,IT,TSTART                           OUTRST........4400
  100 FORMAT(3E20.10,3X,I8,E20.10)                                       OUTRST........4500
C                                                                        OUTRST........4600
C.....STORE SOLUTION                                                     OUTRST........4700
      WRITE(K4,105)                                                      OUTRST........4800
      WRITE(K4,110) (CUTSML(PVEC(I)),I=1,NN)                             OUTRST........4900
      WRITE(K4,105)                                                      OUTRST........5000
      WRITE(K4,110) (CUTSML(UVEC(I)),I=1,NN)                             OUTRST........5100
      WRITE(K4,110) (CUTSML(PM1(I)),I=1,NN)                              OUTRST........5200
      WRITE(K4,110) (CUTSML(UM1(I)),I=1,NN)                              OUTRST........5300
      WRITE(K4,110) (CUTSML(CS1(I)),I=1,NN)                              OUTRST........5400
      WRITE(K4,110) (CUTSML(RCIT(I)),I=1,NN)                             OUTRST........5500
      WRITE(K4,110) (CUTSML(SW(I)),I=1,NN)                               OUTRST........5600
      IF ((VERNIN.EQ.'2.0').OR.(VERNIN.EQ.'2.1')) THEN                   OUTRST........5700
         WRITE(K4,110) (CUTSML(QIN(I)),I=1,NN)                           OUTRST........5800
         WRITE(K4,110) (CUTSML(PBC(IP)),IP=1,NBCN)                       OUTRST........5900
      ELSE                                                               OUTRST........6000
         WRITE(K4,110) (CUTSML(QIN(I)),I=1,NN)                           OUTRST........6100
         WRITE(K4,110) (CUTSML(UIN(I)),I=1,NN)                           OUTRST........6200
         WRITE(K4,112) (IBCSOP(IQP),IQP=1,NSOP)                          OUTRST........6300
         WRITE(K4,112) (IIDSOP(IQP),IQP=1,NSOP)                          OUTRST........6400
         WRITE(K4,110) (CUTSML(QUIN(I)),I=1,NN)                          OUTRST........6500
         WRITE(K4,112) (IBCSOU(IQU),IQU=1,NSOU)                          OUTRST........6600
         WRITE(K4,112) (IIDSOU(IQU),IQU=1,NSOU)                          OUTRST........6700
         WRITE(K4,110) (CUTSML(PBC(IP)),IP=1,NPBC)                       OUTRST........6800
         WRITE(K4,110) (CUTSML(UBC(IP)),IP=1,NPBC)                       OUTRST........6900
         WRITE(K4,112) (IBCPBC(IP),IP=1,NPBC)                            OUTRST........7000
         WRITE(K4,112) (IIDPBC(IP),IP=1,NPBC)                            OUTRST........7100
         WRITE(K4,110) (CUTSML(UBC(IUP)),IUP=1+NPBC,NUBC+NPBC)           OUTRST........7200
         WRITE(K4,112) (IBCUBC(IUP),IUP=1+NPBC,NUBC+NPBC)                OUTRST........7300
         WRITE(K4,112) (IIDUBC(IUP),IUP=1+NPBC,NUBC+NPBC)                OUTRST........7400
         IF (VERNIN.NE.'2.2') THEN                                       OUTRST........7500
            WRITE(K4,112) (IBCSF(IQP),IQP=1,NSOP)                        OUTRST........7600
            WRITE(K4,112) (IBCSS(IQU),IQU=1,NSOU)                        OUTRST........7700
            WRITE(K4,112) (IBCSP(IP),IP=1,NPBC)                          OUTRST........7800
            WRITE(K4,112) (IBCSU(IUP),IUP=1+NPBC,NUBC+NPBC)              OUTRST........7900
            WRITE(K4,110) (CUTSML(PBG1(IPG)),IPG=1,NPBG)                 OUTRST........8000
            WRITE(K4,110) (CUTSML(QPBG1(IPG)),IPG=1,NPBG)                OUTRST........8100
            WRITE(K4,110) (CUTSML(PBG2(IPG)),IPG=1,NPBG)                 OUTRST........8200
            WRITE(K4,110) (CUTSML(QPBG2(IPG)),IPG=1,NPBG)                OUTRST........8300
            WRITE(K4,'(A20,3(1X,A20))') (CPQL1(IPG),IPG=1,NPBG)          OUTRST........8400
            WRITE(K4,'(A20,3(1X,A20))') (CPQL2(IPG),IPG=1,NPBG)          OUTRST........8500
            WRITE(K4,110) (CUTSML(UPBGI(IPG)),IPG=1,NPBG)                OUTRST........8600
            WRITE(K4,'(A20,3(1X,A20))') (CUPBGO(IPG),IPG=1,NPBG)         OUTRST........8700
            WRITE(K4,110) (CUTSML(UPBGO(IPG)),IPG=1,NPBG)                OUTRST........8800
            WRITE(K4,112) (IBCPBG(IPG),IPG=1,NPBG)                       OUTRST........8900
            WRITE(K4,112) (IIDPBG(IPG),IPG=1,NPBG)                       OUTRST........9000
            WRITE(K4,112) (IBCSPG(IPG),IPG=1,NPBG)                       OUTRST........9100
            WRITE(K4,110) (CUTSML(UBG1(IUG)),IUG=1,NUBG)                 OUTRST........9200
            WRITE(K4,110) (CUTSML(QUBG1(IUG)),IUG=1,NUBG)                OUTRST........9300
            WRITE(K4,110) (CUTSML(UBG2(IUG)),IUG=1,NUBG)                 OUTRST........9400
            WRITE(K4,110) (CUTSML(QUBG2(IUG)),IUG=1,NUBG)                OUTRST........9500
            WRITE(K4,112) (IBCUBG(IUG),IUG=1,NUBG)                       OUTRST........9600
            WRITE(K4,112) (IIDUBG(IUG),IUG=1,NUBG)                       OUTRST........9700
            WRITE(K4,112) (IBCSUG(IUG),IUG=1,NUBG)                       OUTRST........9800
            WRITE(K4,110) (CUTSML(QPLITR(IP)),IP=1,NPBC)                 OUTRST........9900
            WRITE(K4,110) (CUTSML(QPGITR(IPG)),IPG=1,NPBG)               OUTRST.......10000
            WRITE(K4,110) (CUTSML(QINITR(I)),I=1,NN)                     OUTRST.......10100
            WRITE(K4,112) (ISPBG(I),I=1,NN)                              OUTRST.......10200
ccc            WRITE(K4,112) (LPBGSP(IPG),IPG=1,NPBG)                       OUTRST.......10300
            WRITE(K4,113) (LPBGSP(IPG),IPG=1,NPBG)                       ! fix rbw lpbgsp 200427
         END IF                                                          OUTRST.......10400
         WRITE(K4,'(I9)') NCIDB                                          OUTRST.......10500
         DO 103 NC=1,NCIDB                                               OUTRST.......10600
            WRITE(K4,'(A)') TRIM(ADJUSTL(CIDBCS(NC)))                    OUTRST.......10700
  103    CONTINUE                                                        OUTRST.......10800
      END IF                                                             OUTRST.......10900
  105 FORMAT("'NONUNIFORM'")                                             OUTRST.......11000
  110 FORMAT(1PE20.13,1X,1PE20.13,1X,1PE20.13,1X,1PE20.13)               OUTRST.......11100
  112 FORMAT(I20,1X,I20,1X,I20,1X,I20)                                   OUTRST.......11200
  113 FORMAT(L20,1X,L20,1X,L20,1X,L20)                                   ! fix rbw lpbgsp 200427
C                                                                        OUTRST.......11300
      ENDFILE(K4)                                                        OUTRST.......11400
C                                                                        OUTRST.......11500
      RETURN                                                             OUTRST.......11600
      END                                                                OUTRST.......11700
C                                                                        OUTRST.......11800
C     SUBROUTINE        P  R  S  W  D  S           SUTRA VERSION 3.0     PRSWDS.........100
C                                                                        PRSWDS.........200
C *** PURPOSE :                                                          PRSWDS.........300
C ***  PARSE A CHARACTER STRING INTO WORDS.  WORDS ARE CONSIDERED TO BE  PRSWDS.........400
C ***  SEPARATED BY ONE OR MORE OF THE SINGLE-CHARACTER DELIMITER DELIM  PRSWDS.........500
C ***  AND/OR BLANKS.  PARSING CONTINUES UNTIL THE ENTIRE STRING HAS     PRSWDS.........600
C ***  BEEN PROCESSED OR THE NUMBER OF WORDS PARSED EQUALS NWMAX.  IF    PRSWDS.........700
C ***  NWMAX IS SET TO ZERO, PRSWDS SIMPLY COMPUTES THE NUMBER OF WORDS. PRSWDS.........800
C                                                                        PRSWDS.........900
      SUBROUTINE PRSWDS(STRING, DELIM, NWMAX, WORD, NWORDS)              PRSWDS........1000
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                PRSWDS........1100
      CHARACTER*(*) STRING, WORD(NWMAX)                                  PRSWDS........1200
      CHARACTER DELIM*1, DELIM2*2                                        PRSWDS........1300
C                                                                        PRSWDS........1400
C.....DEFINE SET OF DELIMITERS (SPACE PLUS USER-SPECIFIED CHARACTER)     PRSWDS........1500
      DELIM2 = " " // DELIM                                              PRSWDS........1600
C                                                                        PRSWDS........1700
C.....COMPUTE LENGTH OF STRING WITHOUT TRAILING BLANKS                   PRSWDS........1800
      LSTRNG = LEN_TRIM(STRING)                                          PRSWDS........1900
C                                                                        PRSWDS........2000
C.....INITIALIZE WORD LIST AND COUNTERS                                  PRSWDS........2100
      DO 50 I=1,NWMAX                                                    PRSWDS........2200
         WORD(I) = ""                                                    PRSWDS........2300
   50 CONTINUE                                                           PRSWDS........2400
      NWORDS = 0                                                         PRSWDS........2500
      M2 = 0                                                             PRSWDS........2600
C                                                                        PRSWDS........2700
  300 CONTINUE                                                           PRSWDS........2800
C.....FIND THE NEXT CHARACTER THAT IS NOT A DELIMITER                    PRSWDS........2900
      M1L = VERIFY(STRING(M2+1:LSTRNG),DELIM2)                           PRSWDS........3000
      IF (M1L.EQ.0) RETURN                                               PRSWDS........3100
      M1 = M2 + M1L                                                      PRSWDS........3200
C                                                                        PRSWDS........3300
  400 CONTINUE                                                           PRSWDS........3400
C.....FIND THE NEXT CHARACTER THAT IS A DELIMITER                        PRSWDS........3500
      M2L = SCAN(STRING(M1+1:LSTRNG),DELIM2)                             PRSWDS........3600
      IF (M2L.EQ.0) THEN                                                 PRSWDS........3700
         M2 = LSTRNG + 1                                                 PRSWDS........3800
      ELSE                                                               PRSWDS........3900
         M2 = M1 + M2L                                                   PRSWDS........4000
      END IF                                                             PRSWDS........4100
C                                                                        PRSWDS........4200
  500 CONTINUE                                                           PRSWDS........4300
C.....STORE THE LATEST WORD FOUND                                        PRSWDS........4400
      NWORDS = NWORDS + 1                                                PRSWDS........4500
      IF (NWMAX.GT.0) WORD(NWORDS) = STRING(M1:M2-1)                     PRSWDS........4600
C                                                                        PRSWDS........4700
C.....IF END OF STRING NOT REACHED AND NUMBER OF WORDS IS LESS THAN      PRSWDS........4800
C        THE MAXIMUM ALLOWED, CONTINUE PARSING                           PRSWDS........4900
      IF ((M2.LT.LSTRNG).AND.((NWORDS.LT.NWMAX).OR.(NWMAX.EQ.0)))        PRSWDS........5000
     1   GOTO 300                                                        PRSWDS........5100
C                                                                        PRSWDS........5200
      RETURN                                                             PRSWDS........5300
      END                                                                PRSWDS........5400
C                                                                        PRSWDS........5500
C     SUBROUTINE        P  T  R  S  E  T           SUTRA VERSION 3.0     PTRSET.........100
C                                                                        PTRSET.........200
C *** PURPOSE :                                                          PTRSET.........300
C ***  TO SET UP POINTER ARRAYS NEEDED TO SPECIFY THE MATRIX STRUCTURE.  PTRSET.........400
C                                                                        PTRSET.........500
      SUBROUTINE PTRSET()                                                PTRSET.........600
      USE ALLARR                                                         PTRSET.........700
      USE PTRDEF                                                         PTRSET.........800
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                PTRSET.........900
      INTEGER RMVDIM,IMVDIM,I1VDIM,CMVDIM,LMVDIM,PMVDIM                  PTRSET........1000
      COMMON /DIMS/ NN,NE,NIN,NBI,NCBI,NB,NBHALF,NPBC,NUBC,              PTRSET........1100
     1   NSOP,NSOU,NBCN,NPBG,NUBG,NCIDB                                  PTRSET........1200
      COMMON /DIMX/ NWI,NWF,NWL,NELT,NNNX,NEX,N48                        PTRSET........1300
      COMMON /DIMX2/ NELTA, NNVEC, NDIMIA, NDIMJA                        PTRSET........1400
      COMMON /MEMCNT/ RMVDIM,IMVDIM,I1VDIM,CMVDIM,LMVDIM,PMVDIM          PTRSET........1500
C                                                                        PTRSET........1600
C.....SET UP POINTER ARRAYS IA AND JA THAT SPECIFY MATRIX STRUCTURE IN   PTRSET........1700
C        "SLAP COLUMN" FORMAT.  FOR EACH NODE, CONSTRUCT A LINKED LIST   PTRSET........1800
C        OF NEIGHBORING NODES.  HLIST(K) POINTS TO THE HEAD OF THE LIST  PTRSET........1900
C        FOR NODE K.  THEN, TRANSFER THE LISTS TO ARRAYS IA AND JA.      PTRSET........2000
C                                                                        PTRSET........2100
C.....ALLOCATE HLIST AND LLIST, AND INITIALIZE LIST LENGTHS TO ZERO.     PTRSET........2200
      ALLOCATE(LLIST(NN), HLIST(NN))                                     PTRSET........2300
      DO 490 I=1,NN                                                      PTRSET........2400
         ALLOCATE(HLIST(I)%PL)                                           PTRSET........2500
         LLIST(I) = 0                                                    PTRSET........2600
  490 CONTINUE                                                           PTRSET........2700
C.....LOOP THROUGH INCIDENCE LIST.                                       PTRSET........2800
      DO 500 L=1,NE                                                      PTRSET........2900
      DO 500 IL=1,N48                                                    PTRSET........3000
         IC = IN((L-1)*N48+IL)                                           PTRSET........3100
      DO 500 JL=1,N48                                                    PTRSET........3200
         JC = IN((L-1)*N48+JL)                                           PTRSET........3300
C........INSERT NEIGHBOR JC IN LIST FOR NODE IC IN ASCENDING ORDER.      PTRSET........3400
C           (IF DUPLICATE OR SELF-NEIGHBOR, SKIP IT.)                    PTRSET........3500
         IF (JC.EQ.IC) THEN                                              PTRSET........3600
C...........SKIP SELF-NEIGHBOR.                                          PTRSET........3700
            GOTO 500                                                     PTRSET........3800
         ELSE IF (LLIST(IC).EQ.0) THEN                                   PTRSET........3900
C...........PLACE FIRST LIST ENTRY AT HEAD.                              PTRSET........4000
            HLIST(IC)%PL%NODNUM = JC                                     PTRSET........4100
            GOTO 498                                                     PTRSET........4200
         ELSE                                                            PTRSET........4300
C...........INSERT INTO LIST, OR SKIP IF DUPLICATE.                      PTRSET........4400
            ALLOCATE(DENTPV)                                             PTRSET........4500
            DENTPI => DENTPV                                             PTRSET........4600
            DENTPV%NENT => HLIST(IC)%PL                                  PTRSET........4700
            DO 495 K=1,LLIST(IC)                                         PTRSET........4800
               DENT => DENTPV%NENT                                       PTRSET........4900
               IF (JC.EQ.DENT%NODNUM) THEN                               PTRSET........5000
                  GOTO 500                                               PTRSET........5100
               ELSE IF (JC.LT.DENT%NODNUM) THEN                          PTRSET........5200
                  ALLOCATE(DENTNW)                                       PTRSET........5300
                  DENTNW%NODNUM = JC                                     PTRSET........5400
                  DENTNW%NENT => DENT                                    PTRSET........5500
                  IF (K.EQ.1) THEN                                       PTRSET........5600
                     HLIST(IC)%PL => DENTNW                              PTRSET........5700
                  ELSE                                                   PTRSET........5800
                     DENTPV%NENT => DENTNW                               PTRSET........5900
                  END IF                                                 PTRSET........6000
                  DEALLOCATE(DENTPI)                                     PTRSET........6100
                  GOTO 498                                               PTRSET........6200
               END IF                                                    PTRSET........6300
               DENTPV => DENT                                            PTRSET........6400
  495       CONTINUE                                                     PTRSET........6500
C...........APPEND TO TAIL.                                              PTRSET........6600
            ALLOCATE(DENTNW)                                             PTRSET........6700
            DENTNW%NODNUM = JC                                           PTRSET........6800
            DENT%NENT => DENTNW                                          PTRSET........6900
            DEALLOCATE(DENTPI)                                           PTRSET........7000
         END IF                                                          PTRSET........7100
  498    LLIST(IC) = LLIST(IC) + 1                                       PTRSET........7200
  500 CONTINUE                                                           PTRSET........7300
C.....COMPUTE THE ARRAY DIMENSION NELT AND ALLOCATE ARRAY IA.            PTRSET........7400
      NELT = 0                                                           PTRSET........7500
      DO 600 I=1,NN                                                      PTRSET........7600
  600    NELT = NELT + LLIST(I) + 1                                      PTRSET........7700
      NDIMIA = NELT                                                      PTRSET........7800
      ALLOCATE(IA(NDIMIA))                                               PTRSET........7900
      IMVDIM = IMVDIM + NDIMIA                                           PTRSET........8000
C.....TRANSFER THE LINKED LISTS TO ARRAYS IA AND JA IN SLAP COLUMN       PTRSET........8100
C        FORMAT.  DEALLOCATE POINTERS AS THEY ARE TRANSFERRED.           PTRSET........8200
      JASTRT = 1                                                         PTRSET........8300
      DO 660 I=1,NN                                                      PTRSET........8400
         JA(I) = JASTRT                                                  PTRSET........8500
         IA(JASTRT) = I                                                  PTRSET........8600
         DENT => HLIST(I)%PL                                             PTRSET........8700
         DO 650 K=1,LLIST(I)                                             PTRSET........8800
            IA(JASTRT + K) = DENT%NODNUM                                 PTRSET........8900
            DENTPV => DENT                                               PTRSET........9000
            DENT => DENT%NENT                                            PTRSET........9100
            DEALLOCATE(DENTPV)                                           PTRSET........9200
  650    CONTINUE                                                        PTRSET........9300
         JASTRT = JASTRT + LLIST(I) + 1                                  PTRSET........9400
  660 CONTINUE                                                           PTRSET........9500
      JA(NN + 1) = NELT + 1                                              PTRSET........9600
      DEALLOCATE(HLIST, LLIST)                                           PTRSET........9700
C                                                                        PTRSET........9800
      RETURN                                                             PTRSET........9900
      END                                                                PTRSET.......10000
C                                                                        PTRSET.......10100
C                                                                        PTRSET.......10200
C     SUBROUTINE        P  U                       SUTRA VERSION 3.0     PU.............100
C                                                                        PU.............200
C *** PURPOSE :                                                          PU.............300
C ***  TO EVALUATE P AND U AT SPECIFIED LOCAL COORDINATES WITHIN A       PU.............400
C ***  2D OR 3D ELEMENT.  ADAPTED FROM SUBROUTINES BASIS2 AND BASIS3.    PU.............500
C                                                                        PU.............600
      SUBROUTINE PU(L,XLOC,YLOC,ZLOC,PVEC,UVEC,IN,P,U)                   PU.............700
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                PU.............800
      DIMENSION FX(8),FY(8),FZ(8),F(8)                                   PU.............900
      DIMENSION PVEC(NN),UVEC(NN)                                        PU............1000
      DIMENSION IN(NIN),KTYPE(2)                                         PU............1100
      COMMON /CONTRL/ GNUP,GNUU,UP,DTMULT,DTMAX,ME,ISSFLO,ISSTRA,ITCYC,  PU............1200
     1   NPCYC,NUCYC,NPRINT,NBCFPR,NBCSPR,NBCPPR,NBCUPR,NLAKPR,IREAD,    PU............1300
     1   NBGPPR,NBGUPR,ISTORE,NOUMAT,IUNSAT,IALSAT,KTYPE                 PU............1400
      COMMON /DIMS/ NN,NE,NIN,NBI,NCBI,NB,NBHALF,NPBC,NUBC,              PU............1500
     1   NSOP,NSOU,NBCN,NPBG,NUBG,NCIDB                                  PU............1600
C                                                                        PU............1700
      IF (KTYPE(1).EQ.2) THEN                                            PU............1800
C.....2D MESH                                                            PU............1900
C........EVALUATE BASIS FUNCTIONS                                        PU............2000
         XF1=1.D0-XLOC                                                   PU............2100
         XF2=1.D0+XLOC                                                   PU............2200
         YF1=1.D0-YLOC                                                   PU............2300
         YF2=1.D0+YLOC                                                   PU............2400
         FX(1)=XF1                                                       PU............2500
         FX(2)=XF2                                                       PU............2600
         FX(3)=XF2                                                       PU............2700
         FX(4)=XF1                                                       PU............2800
         FY(1)=YF1                                                       PU............2900
         FY(2)=YF1                                                       PU............3000
         FY(3)=YF2                                                       PU............3100
         FY(4)=YF2                                                       PU............3200
         DO 20 I=1,4                                                     PU............3300
   20       F(I)=0.250D0*FX(I)*FY(I)                                     PU............3400
C........EVALUATE P AND U                                                PU............3500
         P=0.D0                                                          PU............3600
         U=0.D0                                                          PU............3700
         DO 25 IL=1,4                                                    PU............3800
            II=(L-1)*4 +IL                                               PU............3900
            I=IN(II)                                                     PU............4000
            P=P+PVEC(I)*F(IL)                                            PU............4100
            U=U+UVEC(I)*F(IL)                                            PU............4200
   25    CONTINUE                                                        PU............4300
      ELSE                                                               PU............4400
C.....3D MESH                                                            PU............4500
C........EVALUATE BASIS FUNCTIONS                                        PU............4600
         XF1=1.D0-XLOC                                                   PU............4700
         XF2=1.D0+XLOC                                                   PU............4800
         YF1=1.D0-YLOC                                                   PU............4900
         YF2=1.D0+YLOC                                                   PU............5000
         ZF1=1.D0-ZLOC                                                   PU............5100
         ZF2=1.D0+ZLOC                                                   PU............5200
         FX(1)=XF1                                                       PU............5300
         FX(2)=XF2                                                       PU............5400
         FX(3)=XF2                                                       PU............5500
         FX(4)=XF1                                                       PU............5600
         FX(5)=XF1                                                       PU............5700
         FX(6)=XF2                                                       PU............5800
         FX(7)=XF2                                                       PU............5900
         FX(8)=XF1                                                       PU............6000
         FY(1)=YF1                                                       PU............6100
         FY(2)=YF1                                                       PU............6200
         FY(3)=YF2                                                       PU............6300
         FY(4)=YF2                                                       PU............6400
         FY(5)=YF1                                                       PU............6500
         FY(6)=YF1                                                       PU............6600
         FY(7)=YF2                                                       PU............6700
         FY(8)=YF2                                                       PU............6800
         FZ(1)=ZF1                                                       PU............6900
         FZ(2)=ZF1                                                       PU............7000
         FZ(3)=ZF1                                                       PU............7100
         FZ(4)=ZF1                                                       PU............7200
         FZ(5)=ZF2                                                       PU............7300
         FZ(6)=ZF2                                                       PU............7400
         FZ(7)=ZF2                                                       PU............7500
         FZ(8)=ZF2                                                       PU............7600
         DO 30 I=1,8                                                     PU............7700
   30       F(I)=0.125D0*FX(I)*FY(I)*FZ(I)                               PU............7800
C........EVALUATE P AND U                                                PU............7900
         P=0.D0                                                          PU............8000
         U=0.D0                                                          PU............8100
         DO 35 IL=1,8                                                    PU............8200
            II=(L-1)*8 +IL                                               PU............8300
            I=IN(II)                                                     PU............8400
            P=P+PVEC(I)*F(IL)                                            PU............8500
            U=U+UVEC(I)*F(IL)                                            PU............8600
   35    CONTINUE                                                        PU............8700
      END IF                                                             PU............8800
      END                                                                PU............8900
C                                                                        PU............9000
C     FUNCTION          P  U  S  W  F              SUTRA VERSION 3.0     PUSWF..........100
C                                                                        PUSWF..........200
C *** PURPOSE :                                                          PUSWF..........300
C ***  TO INTERPOLATE P, U, AND SW AT A FRACTIONAL TIME STEP (BETWEEN    PUSWF..........400
C ***  THE CURRENT AND PREVIOUS TIME STEPS) AND RETURN THE VALUES IN     PUSWF..........500
C ***  AN ARRAY.                                                         PUSWF..........600
C                                                                        PUSWF..........700
      FUNCTION PUSWF(L,XLOC,YLOC,ZLOC,SFRAC,PM1,UM1,PVEC,UVEC,IN,LREG)   PUSWF..........800
      IMPLICIT DOUBLE PRECISION (A-H, O-Z)                               PUSWF..........900
      DIMENSION PUSWF(3)                                                 PUSWF.........1000
      DIMENSION PM1(NN),UM1(NN),PVEC(NN),UVEC(NN)                        PUSWF.........1100
      DIMENSION IN(NIN),LREG(NE)                                         PUSWF.........1200
      DIMENSION KTYPE(2)                                                 PUSWF.........1300
      COMMON /CONTRL/ GNUP,GNUU,UP,DTMULT,DTMAX,ME,ISSFLO,ISSTRA,ITCYC,  PUSWF.........1400
     1   NPCYC,NUCYC,NPRINT,NBCFPR,NBCSPR,NBCPPR,NBCUPR,NLAKPR,IREAD,    PUSWF.........1500
     1   NBGPPR,NBGUPR,ISTORE,NOUMAT,IUNSAT,IALSAT,KTYPE                 PUSWF.........1600
      COMMON /DIMS/ NN,NE,NIN,NBI,NCBI,NB,NBHALF,NPBC,NUBC,              PUSWF.........1700
     1   NSOP,NSOU,NBCN,NPBG,NUBG,NCIDB                                  PUSWF.........1800
C                                                                        PUSWF.........1900
C.....EVALUATE P AND U AT PREVIOUS AND CURRENT TIME STEPS                PUSWF.........2000
      CALL PU(L,XLOC,YLOC,ZLOC,PM1,UM1,IN,P1,U1)                         PUSWF.........2100
      CALL PU(L,XLOC,YLOC,ZLOC,PVEC,UVEC,IN,P2,U2)                       PUSWF.........2200
C                                                                        PUSWF.........2300
C.....INTERPOLATE P AND U AT FRACTIONAL TIME STEP                        PUSWF.........2400
      CSFRAC = 1D0 - SFRAC                                               PUSWF.........2500
      PINT = CSFRAC*P1 + SFRAC*P2                                        PUSWF.........2600
      PUSWF(1) = PINT                                                    PUSWF.........2700
      UINT = CSFRAC*U1 + SFRAC*U2                                        PUSWF.........2800
      PUSWF(2) = UINT                                                    PUSWF.........2900
C                                                                        PUSWF.........3000
C.....EVALUATE SW AND SI AT FRACTIONAL TIME STEP                         PUSWF.........3100
      IF (IALSAT.NE.0) THEN                                              PUSWF.........3200
         IF (IUNSAT.NE.0) IUNSAT = 3                                     PUSWF.........3300
         IALSAT = 3                                                      PUSWF.........3400
         CALL GETSAT(SWINT,DSWDPG,RELK,PINT,LREG(L))                     PUSWF.........3500
      ELSE                                                               PUSWF.........3600
         SWINT = 1D0                                                     PUSWF.........3700
         SIINT = 0D0                                                     PUSWF.........3800
      END IF                                                             PUSWF.........3900
C                                                                        PUSWF.........4000
      PUSWF(3) = SWINT                                                   PUSWF.........4100
C                                                                        PUSWF.........4200
      RETURN                                                             PUSWF.........4300
      END                                                                PUSWF.........4400
C                                                                        PUSWF.........4500
C     SUBROUTINE        R  E  A  D  I  F           SUTRA VERSION 3.0     READIF.........100
C                                                                        READIF.........200
C *** PURPOSE :                                                          READIF.........300
C ***  TO READ A LINE FROM AN INPUT FILE INTO THE CHARACTER VARIABLE     READIF.........400
C ***  INTFIL.  HANDLE OPENING AND CLOSING OF INSERTED FILES AS          READIF.........500
C ***  NECESSARY.                                                        READIF.........600
C                                                                        READIF.........700
      SUBROUTINE READIF(KUU, NFB, INTFIL, ERRCIO, CHERIN)                READIF.........800
      USE SCHDEF, ONLY : IUNIO, FNAMO                                    READIF.........900
      USE BCSDEF                                                         READIF........1000
      USE FINDEF                                                         READIF........1100
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                READIF........1200
      PARAMETER (KINMIN=10)                                              READIF........1300
      CHARACTER INTFIL*1000                                              READIF........1400
      CHARACTER*80 ERRCOD,ERRCIO,CHERR(10)                               READIF........1500
      CHARACTER*80, DIMENSION(10), OPTIONAL :: CHERIN                    READIF........1600
      CHARACTER*80 UNAME,FNAME                                           READIF........1700
      CHARACTER ERRF*3, FINS*80                                          READIF........1800
      LOGICAL IS                                                         READIF........1900
      DIMENSION INERR(10),RLERR(10)                                      READIF........2000
      DIMENSION IUNIT(0:23)                                              READIF........2100
      DIMENSION FNAME(0:23)                                              READIF........2200
      COMMON /FNAMES/ UNAME,FNAME                                        READIF........2300
      COMMON /FUNIB/ NFBCS                                               READIF........2400
      COMMON /FUNITA/ IUNIT                                              READIF........2500
      COMMON /FUNITS/ K00,K0,K1,K2,K3,K4,K5,K6,K7,K8,K9,                 READIF........2600
     1   K10,K11,K12,K13,K14,K15,K16,K17,K18,K19,K20,K21,K22,K23         READIF........2700
      COMMON /OBS/ NOBSN,NTOBS,NOBCYC,NOBLIN,NFLOMX                      READIF........2800
C                                                                        READIF........2900
C.....COPY ERRCIO INTO ERRCOD AND ARRAY CHERIN (IF PRESENT AS AN         READIF........3000
C        ARGUMENT) INTO CHERR.                                           READIF........3100
      ERRCOD = ERRCIO                                                    READIF........3200
      IF (PRESENT(CHERIN)) CHERR = CHERIN                                READIF........3300
C                                                                        READIF........3400
C.....COPY KUU INTO KU. SHOULD AVOID CHANGING KUU, SINCE IT IS ALREADY   READIF........3500
C        LINKED TO K1, K2, OR K9 THROUGH THE ARGUMENT LIST, AND THE      READIF........3600
C        LATTER ARE ALSO PASSED IN THROUGH COMMON BLOCK FUNITS.          READIF........3700
      KU = KUU                                                           READIF........3800
C                                                                        READIF........3900
C.....READ A LINE OF INPUT (UP TO 1000 CHARACTERS) FROM UNIT KU          READIF........4000
C        INTO INTFIL                                                     READIF........4100
100   READ(KU,'(A)',IOSTAT=INERR(1)) INTFIL                              READIF........4200
C.....IF THE END OF AN INSERTED FILE IS REACHED, CLOSE THAT FILE AND     READIF........4300
C        CONTINUE READING FROM THE NEXT-LEVEL-UP FILE                    READIF........4400
      IF (INERR(1).LT.0) THEN                                            READIF........4500
C........SET FLAG IK TO INDICATE WHETHER THE READ WAS ATTEMPTED FROM     READIF........4600
C           AN INP DATASET (IK=1), AN ICS DATASET (IK=2), OR A BCS       READIF........4700
C           DATASET (IK>2)                                               READIF........4800
         IF (KU.EQ.K1) THEN                                              READIF........4900
            IK = 1                                                       READIF........5000
            IIK = 1                                                      READIF........5100
         ELSE IF (KU.EQ.K2) THEN                                         READIF........5200
            IK = 2                                                       READIF........5300
            IIK = 2                                                      READIF........5400
         ELSE                                                            READIF........5500
            IK = 2 + NFB                                                 READIF........5600
            IIK = 9                                                      READIF........5700
         END IF                                                          READIF........5800
C........IF READING FROM AN INSERTED FILE, CLOSE THAT FILE, UPDATE       READIF........5900
C           UNIT NUMBERS, FILENAME, AND COUNTER TO INDICATE THE          READIF........6000
C           NEXT-LEVEL-UP FILE, AND CONTINUE READING                     READIF........6100
         IF (NKS(IK).GT.0) THEN                                          READIF........6200
            CLOSE(KU)                                                    READIF........6300
            IF (KU.EQ.K1) THEN                                           READIF........6400
               K1 = KLIST(IK, NKS(IK))                                   READIF........6500
               FNAME(IIK) = FNAIN(IK, NKS(IK))                           READIF........6600
            ELSE IF (KU.EQ.K2) THEN                                      READIF........6700
               K2 = KLIST(IK, NKS(IK))                                   READIF........6800
               FNAME(IIK) = FNAIN(IK, NKS(IK))                           READIF........6900
            ELSE                                                         READIF........7000
               K9 = KLIST(IK, NKS(IK))                                   READIF........7100
               FNAMB(NFB) = FNAIN(IK, NKS(IK))                           READIF........7200
               IUNIB(NFB) = K9                                           READIF........7300
               FNAME(IIK) = FNAIN(IK, NKS(IK))                           READIF........7400
            END IF                                                       READIF........7500
            KU = KLIST(IK, NKS(IK))                                      READIF........7600
            NKS(IK) = NKS(IK) - 1                                        READIF........7700
            GOTO 100                                                     READIF........7800
         ELSE                                                            READIF........7900
C...........REACHED END OF ZERO-LEVEL FILE. IF ERRCOD="NO_EOF_ERR"       READIF........8000
C                ON INPUT, RETURN; ELSE GENERATE ERROR.                  READIF........8100
            IF (ERRCIO.EQ."NO_EOF_ERR") THEN                             READIF........8200
               ERRCIO = "EOF"                                            READIF........8300
               GOTO 999                                                  READIF........8400
            ELSE                                                         READIF........8500
               CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                  READIF........8600
            END IF                                                       READIF........8700
         END IF                                                          READIF........8800
C.....ELSE IF THE READ RESULTS IN A DIFFERENT KIND OF ERROR, GENERATE    READIF........8900
C        ERROR MESSAGE                                                   READIF........9000
      ELSE IF (INERR(1).GT.0) THEN                                       READIF........9100
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        READIF........9200
      END IF                                                             READIF........9300
C                                                                        READIF........9400
C.....IF BLANK OR COMMENT LINE, SKIP IT.                                 READIF........9500
      IF ((INTFIL(1:1).EQ.'#').OR.(INTFIL.EQ.'')) GOTO 100               READIF........9600
C                                                                        READIF........9700
C.....IF INSERT STATEMENT, OPEN THE FILE AND CONTINUE READING            READIF........9800
      IF (INTFIL(1:7).EQ.'@INSERT') THEN                                 READIF........9900
C........SET FLAG IK TO INDICATE WHETHER THE READ WAS DONE FROM          READIF.......10000
C           AN INP DATASET (IK=1), AN ICS DATASET (IK=2), OR A BCS       READIF.......10100
C           DATASET (IK>2).  SET ERRF TO THE FILE TYPE ('INP', 'ICS',    READIF.......10200
C           OR 'BCS').                                                   READIF.......10300
         IF (KU.EQ.K1) THEN                                              READIF.......10400
            IK = 1                                                       READIF.......10500
            IIK = 1                                                      READIF.......10600
            ERRF = 'INP'                                                 READIF.......10700
         ELSE IF (KU.EQ.K2) THEN                                         READIF.......10800
            IK = 2                                                       READIF.......10900
            IIK = 2                                                      READIF.......11000
            ERRF = 'ICS'                                                 READIF.......11100
         ELSE                                                            READIF.......11200
            IK = 2 + NFB                                                 READIF.......11300
            IIK = 9                                                      READIF.......11400
            ERRF = 'BCS'                                                 READIF.......11500
         END IF                                                          READIF.......11600
C........READ THE FILE SPECIFICATION FOR THE INSERTED FILE               READIF.......11700
         READ(INTFIL(8:),*,IOSTAT=INERR(1)) KINS, FINS                   READIF.......11800
         IF (INERR(1).NE.0) THEN                                         READIF.......11900
            CHERR(1) = ERRCOD                                            READIF.......12000
            ERRCOD = 'REA-' // ERRF // '-INS'                            READIF.......12100
            CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                     READIF.......12200
         END IF                                                          READIF.......12300
C........CHECK FOR DUPLICATE FILENAME AMONG INSERTED FILES               READIF.......12400
         DO 550 I=1,2+NFB                                                READIF.......12500
         DO 550 K=1,NKS(I)                                               READIF.......12600
            IF (FINS.EQ.FNAIN(I, K)) THEN                                READIF.......12700
               ERRCOD = 'FIL-4'                                          READIF.......12800
               INERR(1) = KINS                                           READIF.......12900
               CHERR(1) = FNAME(IIK)                                     READIF.......13000
               CHERR(2) = FINS                                           READIF.......13100
               CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                  READIF.......13200
            END IF                                                       READIF.......13300
  550    CONTINUE                                                        READIF.......13400
C........CHECK FOR DUPLICATE FILENAME AMONG NON-INSERTED,                READIF.......13500
C           NON-OBSERVATION FILES                                        READIF.......13600
         DO 560 NFF=0,23                                                 READIF.......13700
            IF ((NFF.GE.7).OR.(NFF.LE.9)) CYCLE                          READIF.......13800
            IF (FINS.EQ.FNAME(NFF)) THEN                                 READIF.......13900
               ERRCOD = 'FIL-4'                                          READIF.......14000
               INERR(1) = KINS                                           READIF.......14100
               CHERR(1) = FNAME(IIK)                                     READIF.......14200
               CHERR(2) = FINS                                           READIF.......14300
               CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                  READIF.......14400
            END IF                                                       READIF.......14500
  560    CONTINUE                                                        READIF.......14600
         DO 565 NFFB=1,NFBCS                                             READIF.......14700
            IF (FINS.EQ.FNAMB(NFFB)) THEN                                READIF.......14800
               ERRCOD = 'FIL-4'                                          READIF.......14900
               INERR(1) = KINS                                           READIF.......15000
               CHERR(1) = FNAME(IIK)                                     READIF.......15100
               CHERR(2) = FINS                                           READIF.......15200
               CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                  READIF.......15300
            END IF                                                       READIF.......15400
  565    CONTINUE                                                        READIF.......15500
C........CHECK FOR DUPLICATE FILENAME AMONG OBSERVATION FILES            READIF.......15600
         DO 570 NJ=1,NFLOMX                                              READIF.......15700
            IF (FINS.EQ.FNAMO(NJ)) THEN                                  READIF.......15800
               ERRCOD = 'FIL-4'                                          READIF.......15900
               INERR(1) = KINS                                           READIF.......16000
               CHERR(1) = FNAME(IIK)                                     READIF.......16100
               CHERR(2) = FINS                                           READIF.......16200
               CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                  READIF.......16300
            END IF                                                       READIF.......16400
  570    CONTINUE                                                        READIF.......16500
C........IF THE SPECIFIED UNIT NUMBER IS LESS THAN KINMIN,               READIF.......16600
C           SET IT TO KINMIN                                             READIF.......16700
         KINS = MAX(KINS, KINMIN)                                        READIF.......16800
C........IF THE FILE TO BE INSERTED EXISTS, ASSIGN IT A UNIT NUMBER      READIF.......16900
C           AND OPEN IT                                                  READIF.......17000
         INQUIRE(FILE=FINS,EXIST=IS)                                     READIF.......17100
         IF (IS) THEN                                                    READIF.......17200
            CALL NAFU(KINS,NFLOMX,FINS)                                  READIF.......17300
            OPEN(UNIT=KINS,FILE=FINS,STATUS='OLD',FORM='FORMATTED',      READIF.......17400
     1         IOSTAT=KERR)                                              READIF.......17500
            IF (KERR.GT.0) THEN                                          READIF.......17600
               CHERR(1) = FNAME(IIK)                                     READIF.......17700
               CHERR(2) = FINS                                           READIF.......17800
               INERR(1) = KINS                                           READIF.......17900
               ERRCOD = 'FIL-2'                                          READIF.......18000
               CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                  READIF.......18100
            END IF                                                       READIF.......18200
         ELSE                                                            READIF.......18300
            CHERR(1) = FNAME(IIK)                                        READIF.......18400
            CHERR(2) = FINS                                              READIF.......18500
            ERRCOD = 'FIL-1'                                             READIF.......18600
            CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                     READIF.......18700
         END IF                                                          READIF.......18800
C........UPDATE THE INSERTION COUNTER.  IF THE COUNT EXCEEDS 20,         READIF.......18900
C           GENERATE AN ERROR                                            READIF.......19000
         NKS(IK) = NKS(IK) + 1                                           READIF.......19100
         IF (NKS(IK).GT.20) THEN                                         READIF.......19200
            CHERR(1) = FNAME(IIK)                                        READIF.......19300
            CHERR(2) = FINS                                              READIF.......19400
            ERRCOD = 'FIL-8'                                             READIF.......19500
            CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                     READIF.......19600
         END IF                                                          READIF.......19700
C........UPDATE UNIT NUMBERS AND FILENAMES TO INDICATE THE NEWLY         READIF.......19800
C           INSERTED FILE, AND CONTINUE READING                          READIF.......19900
         IF (KU.EQ.K1) THEN                                              READIF.......20000
            K1 = KINS                                                    READIF.......20100
            FNAIN(IK, NKS(IK)) = FNAME(IIK)                              READIF.......20200
            FNAME(IIK) = FINS                                            READIF.......20300
         ELSE IF (KU.EQ.K2) THEN                                         READIF.......20400
            K2 = KINS                                                    READIF.......20500
            FNAIN(IK, NKS(IK)) = FNAME(IIK)                              READIF.......20600
            FNAME(IIK) = FINS                                            READIF.......20700
         ELSE                                                            READIF.......20800
            K9 = KINS                                                    READIF.......20900
            FNAIN(IK, NKS(IK)) = FNAMB(NFB)                              READIF.......21000
            FNAMB(NFB) = FINS                                            READIF.......21100
            IUNIB(NFB) = KINS                                            READIF.......21200
C...........SET FNAME(9) EQUAL TO FNAMB(NFB) FOR CONVENIENCE IN          READIF.......21300
C              ERROR HANDLING                                            READIF.......21400
            FNAME(9) = FNAMB(NFB)                                        READIF.......21500
         END IF                                                          READIF.......21600
         KLIST(IK, NKS(IK)) = KU                                         READIF.......21700
         KU = KINS                                                       READIF.......21800
         GOTO 100                                                        READIF.......21900
      END IF                                                             READIF.......22000
C                                                                        READIF.......22100
  999 RETURN                                                             READIF.......22200
      END                                                                READIF.......22300
C                                                                        READIF.......22400
C     FUNCTION          R  H  O  F  U  N           SUTRA VERSION 3.0     RHOFUN.........100
C                                                                        RHOFUN.........200
C *** PURPOSE :                                                          RHOFUN.........300
C ***  TO RETURN A VALUE OF DENSITY BASED ON TEMPERATURE OR              RHOFUN.........400
C ***  CONCENTRATION (U), USING A LINEAR FUNCTION.                       RHOFUN.........500
C                                                                        RHOFUN.........600
      DOUBLE PRECISION FUNCTION RHOFUN(U)                                RHOFUN.........700
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                RHOFUN.........800
      COMMON /PARAMS/ COMPFL,COMPMA,DRWDU,CW,CS,RHOS,SIGMAW,SIGMAS,      RHOFUN.........900
     1   RHOW0,URHOW0,VISC0,PRODF1,PRODS1,PRODF0,PRODS0,CHI1,CHI2        RHOFUN........1000
C                                                                        RHOFUN........1100
      RHOFUN = RHOW0 + DRWDU*(U - URHOW0)                                RHOFUN........1200
C                                                                        RHOFUN........1300
      RETURN                                                             RHOFUN........1400
      END                                                                RHOFUN........1500
C                                                                        RHOFUN........1600
C     SUBROUTINE        R  O  T  A  T  E           SUTRA VERSION 3.0     ROTATE.........100
C                                                                        ROTATE.........200
C *** PURPOSE :                                                          ROTATE.........300
C ***  TO TRANSFORM THE COORDINATES OF A VECTOR, {x}, BY APPLYING THE    ROTATE.........400
C ***  ROTATION MATRIX, [G]:  {xp}=[G]{x}.                               ROTATE.........500
C                                                                        ROTATE.........600
      SUBROUTINE ROTATE(G11,G12,G13,G21,G22,G23,G31,G32,G33,X,Y,Z,       ROTATE.........700
     1   XP,YP,ZP)                                                       ROTATE.........800
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                ROTATE.........900
C                                                                        ROTATE........1000
C.....COMPUTE VECTOR {xp} AS THE PRODUCT OF MATRIX [G] AND VECTOR {x}    ROTATE........1100
      XP= G11*X + G12*Y + G13*Z                                          ROTATE........1200
      YP= G21*X + G22*Y + G23*Z                                          ROTATE........1300
      ZP= G31*X + G32*Y + G33*Z                                          ROTATE........1400
C                                                                        ROTATE........1500
      RETURN                                                             ROTATE........1600
      END                                                                ROTATE........1700
C                                                                        ROTATE........1800
C     SUBROUTINE        R  O  T  M  A  T           SUTRA VERSION 3.0     ROTMAT.........100
C                                                                        ROTMAT.........200
C *** PURPOSE :                                                          ROTMAT.........300
C ***  TO COMPUTE A TRANSFORMATION MATRIX, [G], THAT CONVERTS            ROTMAT.........400
C ***  COORDINATES OF A VECTOR, {v}, FROM A COORDINATE SYSTEM (X, Y, Z)  ROTMAT.........500
C ***  TO A NEW COORDINATE SYSTEM (X', Y', Z'):  {v'} = [G]{v}.          ROTMAT.........600
C ***  THE OVERALL TRANSFORMATION IS THE RESULT OF THREE ROTATIONS       ROTMAT.........700
C ***  APPLIED CONSECUTIVELY:                                            ROTMAT.........800
C ***  A1 = ROTATION IN THE XY-PLANE, COUNTER-CLOCKWISE FROM THE         ROTMAT.........900
C ***     +X-AXIS (LOOKING DOWN THE +Z-AXIS TOWARD THE ORIGIN),          ROTMAT........1000
C ***  A2 = ROTATION IN THE NEW XZ-PLANE, COUNTER-CLOCKWISE FROM THE     ROTMAT........1100
C ***     NEW +X-AXIS (LOOKING DOWN THE NEW +Y-AXIS TOWARD THE ORIGIN),  ROTMAT........1200
C ***  A3 = ROTATION IN THE NEW YZ-PLANE, COUNTER-CLOCKWISE FROM THE     ROTMAT........1300
C ***     NEW +Y-AXIS (LOOKING DOWN THE NEW +X-AXIS TOWARD THE ORIGIN).  ROTMAT........1400
C                                                                        ROTMAT........1500
      SUBROUTINE ROTMAT(A1,A2,A3,G11,G12,G13,G21,G22,G23,G31,G32,G33)    ROTMAT........1600
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                ROTMAT........1700
C                                                                        ROTMAT........1800
C.....COMPUTE SINES AND COSINES OF ANGLES.                               ROTMAT........1900
      S1= DSIN(A1)                                                       ROTMAT........2000
      C1= DCOS(A1)                                                       ROTMAT........2100
      S2= DSIN(A2)                                                       ROTMAT........2200
      C2= DCOS(A2)                                                       ROTMAT........2300
      S3= DSIN(A3)                                                       ROTMAT........2400
      C3= DCOS(A3)                                                       ROTMAT........2500
C                                                                        ROTMAT........2600
C.....COMPUTE ROTATION MATRIX.                                           ROTMAT........2700
      G11 =  C1*C2                                                       ROTMAT........2800
      G12 =  -C1*S2*S3 - S1*C3                                           ROTMAT........2900
      G13 =  -C1*S2*C3 + S1*S3                                           ROTMAT........3000
      G21 =  S1*C2                                                       ROTMAT........3100
      G22 =  -S1*S2*S3 + C1*C3                                           ROTMAT........3200
      G23 =  -S1*S2*C3 - C1*S3                                           ROTMAT........3300
      G31 =  S2                                                          ROTMAT........3400
      G32 =  C2*S3                                                       ROTMAT........3500
      G33 =  C2*C3                                                       ROTMAT........3600
      RETURN                                                             ROTMAT........3700
      END                                                                ROTMAT........3800
C                                                                        ROTMAT........3900
C     SUBROUTINE        S  O  L  V  E  B           SUTRA VERSION 3.0     SOLVEB.........100
C                                                                        SOLVEB.........200
C *** PURPOSE :                                                          SOLVEB.........300
C ***  TO SOLVE THE MATRIX EQUATION BY:                                  SOLVEB.........400
C ***   (1) DECOMPOSING THE MATRIX                                       SOLVEB.........500
C ***   (2) MODIFYING THE RIGHT-HAND SIDE                                SOLVEB.........600
C ***   (3) BACK-SUBSTITUTING FOR THE SOLUTION                           SOLVEB.........700
C                                                                        SOLVEB.........800
      SUBROUTINE SOLVEB(KMT,C,R,NNP,IHALFB,MAXNP,MAXBW)                  SOLVEB.........900
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                SOLVEB........1000
      DIMENSION C(MAXNP,MAXBW),R(MAXNP)                                  SOLVEB........1100
C                                                                        SOLVEB........1200
      IHBP=IHALFB+1                                                      SOLVEB........1300
C                                                                        SOLVEB........1400
C.....DECOMPOSE MATRIX C BY BANDED GAUSSIAN ELIMINATION FOR              SOLVEB........1500
C        NON-SYMMETRIC MATRIX                                            SOLVEB........1600
      IF(KMT-1) 5,5,50                                                   SOLVEB........1700
    5 NU=NNP-IHALFB                                                      SOLVEB........1800
      DO 20 NI=1,NU                                                      SOLVEB........1900
      PIVOTI=1.D0/C(NI,IHBP)                                             SOLVEB........2000
      NJ=NI+1                                                            SOLVEB........2100
      IB=IHBP                                                            SOLVEB........2200
      NK=NI+IHALFB                                                       SOLVEB........2300
      DO 10 NL=NJ,NK                                                     SOLVEB........2400
      IB=IB-1                                                            SOLVEB........2500
      A=-C(NL,IB)*PIVOTI                                                 SOLVEB........2600
      C(NL,IB)=A                                                         SOLVEB........2700
      JB=IB+1                                                            SOLVEB........2800
      KB=IB+IHALFB                                                       SOLVEB........2900
      LB=IHBP-IB                                                         SOLVEB........3000
      DO10 MB=JB,KB                                                      SOLVEB........3100
      NB=LB+MB                                                           SOLVEB........3200
   10 C(NL,MB)=C(NL,MB)+A*C(NI,NB)                                       SOLVEB........3300
   20 CONTINUE                                                           SOLVEB........3400
      NR=NU+1                                                            SOLVEB........3500
      NU=NNP-1                                                           SOLVEB........3600
      NK=NNP                                                             SOLVEB........3700
      DO 40 NI=NR,NU                                                     SOLVEB........3800
      PIVOTI=1.D0/(C(NI,IHBP))                                           SOLVEB........3900
      NJ=NI+1                                                            SOLVEB........4000
      IB=IHBP                                                            SOLVEB........4100
      DO 30 NL=NJ,NK                                                     SOLVEB........4200
      IB=IB-1                                                            SOLVEB........4300
      A=-C(NL,IB)*PIVOTI                                                 SOLVEB........4400
      C(NL,IB)=A                                                         SOLVEB........4500
      JB=IB+1                                                            SOLVEB........4600
      KB=IB+IHALFB                                                       SOLVEB........4700
      LB=IHBP-IB                                                         SOLVEB........4800
      DO 30 MB=JB,KB                                                     SOLVEB........4900
      NB=LB+MB                                                           SOLVEB........5000
   30 C(NL,MB)=C(NL,MB)+A*C(NI,NB)                                       SOLVEB........5100
   40 CONTINUE                                                           SOLVEB........5200
      IF(KMT-1) 50,44,50                                                 SOLVEB........5300
   44 RETURN                                                             SOLVEB........5400
C                                                                        SOLVEB........5500
C.....UPDATE RIGHT-HAND SIDE VECTOR, R                                   SOLVEB........5600
   50 NU=NNP+1                                                           SOLVEB........5700
      IBAND=2*IHALFB+1                                                   SOLVEB........5800
      DO 70 NI=2,IHBP                                                    SOLVEB........5900
      IB=IHBP-NI+1                                                       SOLVEB........6000
      NJ=1                                                               SOLVEB........6100
      SUM=0.0D0                                                          SOLVEB........6200
      DO 60 JB=IB,IHALFB                                                 SOLVEB........6300
      SUM=SUM+C(NI,JB)*R(NJ)                                             SOLVEB........6400
   60 NJ=NJ+1                                                            SOLVEB........6500
   70 R(NI)=R(NI)+SUM                                                    SOLVEB........6600
      IB=1                                                               SOLVEB........6700
      NL=IHBP+1                                                          SOLVEB........6800
      DO 90 NI=NL,NNP                                                    SOLVEB........6900
      NJ=NI-IHBP+1                                                       SOLVEB........7000
      SUM=0.D0                                                           SOLVEB........7100
      DO 80 JB=IB,IHALFB                                                 SOLVEB........7200
      SUM=SUM+C(NI,JB)*R(NJ)                                             SOLVEB........7300
   80 NJ=NJ+1                                                            SOLVEB........7400
   90 R(NI)=R(NI)+SUM                                                    SOLVEB........7500
C                                                                        SOLVEB........7600
C.....BACK SOLVE                                                         SOLVEB........7700
      R(NNP)=R(NNP)/C(NNP,IHBP)                                          SOLVEB........7800
      DO 110 IB=2,IHBP                                                   SOLVEB........7900
      NI=NU-IB                                                           SOLVEB........8000
      NJ=NI                                                              SOLVEB........8100
      MB=IHALFB+IB                                                       SOLVEB........8200
      SUM=0.D0                                                           SOLVEB........8300
      DO 100 JB=NL,MB                                                    SOLVEB........8400
      NJ=NJ+1                                                            SOLVEB........8500
  100 SUM=SUM+C(NI,JB)*R(NJ)                                             SOLVEB........8600
  110 R(NI)=(R(NI)-SUM)/C(NI,IHBP)                                       SOLVEB........8700
      MB=IBAND                                                           SOLVEB........8800
      DO 130 IB=NL,NNP                                                   SOLVEB........8900
      NI=NU-IB                                                           SOLVEB........9000
      NJ=NI                                                              SOLVEB........9100
      SUM=0.D0                                                           SOLVEB........9200
      DO 120 JB=NL,MB                                                    SOLVEB........9300
      NJ=NJ+1                                                            SOLVEB........9400
  120 SUM=SUM+C(NI,JB)*R(NJ)                                             SOLVEB........9500
  130 R(NI)=(R(NI)-SUM)/C(NI,IHBP)                                       SOLVEB........9600
C                                                                        SOLVEB........9700
C                                                                        SOLVEB........9800
      RETURN                                                             SOLVEB........9900
      END                                                                SOLVEB.......10000
C                                                                        SOLVEB.......10100
C     SUBROUTINE        S  O  L  V  E  R           SUTRA VERSION 3.0     SOLVER.........100
C                                                                        SOLVER.........200
C *** PURPOSE :                                                          SOLVER.........300
C ***  TO CALL THE APPROPRIATE MATRIX EQUATION SOLVER.                   SOLVER.........400
C                                                                        SOLVER.........500
      SUBROUTINE SOLVER(KMT,KPU,KSOLVR,C,R,XITER,B,NNP,IHALFB,MAXNP,     SOLVER.........600
     1                  MAXBW,IWK,FWK,IA,JA,IERR,ITRS,ERR)               SOLVER.........700
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                SOLVER.........800
      CHARACTER SOLNAM(0:10)*40,SOLWRD(0:10)*10,KPUTXT(2)*1              SOLVER.........900
      DIMENSION C(MAXNP,MAXBW),R(NNVEC),XITER(NNP),B(NNNX)               SOLVER........1000
      DIMENSION IWK(NWI),FWK(NWF)                                        SOLVER........1100
      DIMENSION IA(NDIMIA),JA(NDIMJA)                                    SOLVER........1200
      COMMON /DIMX/ NWI,NWF,NWL,NELT,NNNX,NEX,N48                        SOLVER........1300
      COMMON /DIMX2/ NELTA, NNVEC, NDIMIA, NDIMJA                        SOLVER........1400
      COMMON /FUNITS/ K00,K0,K1,K2,K3,K4,K5,K6,K7,K8,K9,                 SOLVER........1500
     1   K10,K11,K12,K13,K14,K15,K16,K17,K18,K19,K20,K21,K22,K23         SOLVER........1600
      COMMON /KPRINT/ KNODAL,KELMNT,KINCID,KPLOTP,KPLOTU,                SOLVER........1700
     1   KPANDS,KVEL,KCORT,KBUDG,KSCRN,KPAUSE                            SOLVER........1800
      COMMON /SOLVC/ SOLWRD, SOLNAM                                      SOLVER........1900
      COMMON /SOLVI/ KSOLVP,KSOLVU,NN1,NN2,NN3                           SOLVER........2000
      DATA (KPUTXT(K), K=1,2) /'P', 'U'/                                 SOLVER........2100
      SAVE KPUTXT                                                        SOLVER........2200
C                                                                        SOLVER........2300
C.....IF THE RIGHT-HAND-SIDE VECTOR OF THE MATRIX EQUATION IS ZERO,      SOLVER........2400
C        RETURN A ZERO SOLUTION VECTOR.                                  SOLVER........2500
      LENR = NNVEC                                                       SOLVER........2600
      RHSNRM = DNRM2(LENR, R, 1)                                         SOLVER........2700
      IF (RHSNRM.EQ.0D0) THEN                                            SOLVER........2800
         IERR = 0                                                        SOLVER........2900
         ITRS = 0                                                        SOLVER........3000
         ERR = 0D0                                                       SOLVER........3100
         DO 44 I=1,NNVEC                                                 SOLVER........3200
   44       R(I) = 0D0                                                   SOLVER........3300
         IF (KSCRN.EQ.1) WRITE(*,55) KPUTXT(KPU),KPUTXT(KPU),KPUTXT(KPU) SOLVER........3400
         WRITE (K00,55) KPUTXT(KPU), KPUTXT(KPU), KPUTXT(KPU)            SOLVER........3500
   55    FORMAT (1X, 6X, A1, '-solution (', A1, '=0)'                    SOLVER........3600
     1      ' inferred from matrix equation A*', A1, '=0;'               SOLVER........3700
     1      ' solver not called.')                                       SOLVER........3800
         RETURN                                                          SOLVER........3900
      END IF                                                             SOLVER........4000
C                                                                        SOLVER........4100
C.....SIGNAL THE START OF A SOLUTION                                     SOLVER........4200
  101 IF (KSCRN.EQ.1) WRITE(*,133) KPUTXT(KPU),TRIM(SOLWRD(KSOLVR))      SOLVER........4300
      WRITE (K00,133) KPUTXT(KPU), TRIM(SOLWRD(KSOLVR))                  SOLVER........4400
  133 FORMAT (1X, 6X, "Starting ", A1, "-solution using ", A,            SOLVER........4500
     1   " solver ...")                                                  SOLVER........4600
C                                                                        SOLVER........4700
C.....IF KSOLVR=0, CALL BANDED GAUSSIAN (DIRECT) SOLVER.                 SOLVER........4800
C        OTHERWISE, CALL ITERATIVE SOLVER.                               SOLVER........4900
      IF (KSOLVR.EQ.0) THEN                                              SOLVER........5000
         CALL SOLVEB(KMT, C, R, NNP, IHALFB, MAXNP, MAXBW)               SOLVER........5100
         IERR = 0                                                        SOLVER........5200
         ITRS = 0                                                        SOLVER........5300
         ERR = 0D0                                                       SOLVER........5400
      ELSE                                                               SOLVER........5500
         CALL SOLWRP(KPU, KSOLVR, C, R, XITER, B, NNP,                   SOLVER........5600
     1         IWK, FWK, IA, JA, IERR, ITRS, ERR)                        SOLVER........5700
      END IF                                                             SOLVER........5800
C                                                                        SOLVER........5900
      RETURN                                                             SOLVER........6000
      END                                                                SOLVER........6100
C                                                                        SOLVER........6200
C     SUBROUTINE        S  O  L  W  R  P           SUTRA VERSION 3.0     SOLWRP.........100
C                                                                        SOLWRP.........200
C *** PURPOSE :                                                          SOLWRP.........300
C ***  TO SERVE AS A WRAPPER FOR THE ITERATIVE SOLVERS, PERFORMING       SOLWRP.........400
C ***  SOME PRELIMINARIES ON VECTORS BEFORE CALLING A SOLVER.            SOLWRP.........500
C                                                                        SOLWRP.........600
      SUBROUTINE SOLWRP(KPU, KSOLVR, A, R, XITER, B, NNP,                SOLWRP.........700
     1                  IWK, FWK, IA, JA, IERR, ITRS, ERR)               SOLWRP.........800
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                SOLWRP.........900
      CHARACTER*80 UNAME,FNAME(0:23)                                     SOLWRP........1000
      CHARACTER*1 KPUTXT(2)                                              SOLWRP........1100
      CHARACTER*40 SOLNAM(0:10)                                          SOLWRP........1200
      CHARACTER*10 SOLWRD(0:10)                                          SOLWRP........1300
      DIMENSION A(NELT)                                                  SOLWRP........1400
      DIMENSION IA(NDIMIA),JA(NDIMJA)                                    SOLWRP........1500
      DIMENSION IWK(NWI),FWK(NWF)                                        SOLWRP........1600
      DIMENSION XITER(NNP),R(NNP),B(NNNX)                                SOLWRP........1700
      COMMON /DIMX/ NWI,NWF,NWL,NELT,NNNX,NEX,N48                        SOLWRP........1800
      COMMON /DIMX2/ NELTA,NNVEC,NDIMIA,NDIMJA                           SOLWRP........1900
      COMMON /FNAMES/ UNAME,FNAME                                        SOLWRP........2000
      COMMON /FUNITS/ K00,K0,K1,K2,K3,K4,K5,K6,K7,K8,K9,                 SOLWRP........2100
     1   K10,K11,K12,K13,K14,K15,K16,K17,K18,K19,K20,K21,K22,K23         SOLWRP........2200
      COMMON /ITSOLI/ ITRMXP,ITOLP,NSAVEP,ITRMXU,ITOLU,NSAVEU            SOLWRP........2300
      COMMON /ITSOLR/ TOLP,TOLU                                          SOLWRP........2400
      COMMON /KPRINT/ KNODAL,KELMNT,KINCID,KPLOTP,KPLOTU,                SOLWRP........2500
     1   KPANDS,KVEL,KCORT,KBUDG,KSCRN,KPAUSE                            SOLWRP........2600
      COMMON /SOLVC/ SOLWRD, SOLNAM                                      SOLWRP........2700
      COMMON /SOLVI/ KSOLVP, KSOLVU, NN1, NN2, NN3                       SOLWRP........2800
      COMMON /SOLVN/ NSLVRS                                              SOLWRP........2900
      DATA (KPUTXT(K), K=1,2) /'P', 'U'/                                 SOLWRP........3000
      SAVE KPUTXT                                                        SOLWRP........3100
      EXTERNAL DSLUGM,DSLUOM                                             SOLWRP........3200
C                                                                        SOLWRP........3300
C.....COPY THE RHS VECTOR R INTO VECTOR B, THEN USE R AS THE             SOLWRP........3400
C        SOLUTION VECTOR.  INITIALIZE IT FROM THE LATEST SUTRA           SOLWRP........3500
C        SOLUTION.  XITER IS NOT USED AS THE SOLUTION VECTOR BECAUSE     SOLWRP........3600
C        DOING SO MIGHT INTERFERE WITH SUBSEQUENT CALCULATIONS.          SOLWRP........3700
      IF (KPU.EQ.1) THEN                                                 SOLWRP........3800
C........SOLVING FOR P WITH ITERATIVE SOLVER; INITIAL GUESS COMES IN     SOLWRP........3900
C           THROUGH XITER.                                               SOLWRP........4000
         DO 150 N=1,NNP                                                  SOLWRP........4100
            B(N) = R(N)                                                  SOLWRP........4200
            R(N) = XITER(N)                                              SOLWRP........4300
  150    CONTINUE                                                        SOLWRP........4400
      ELSE                                                               SOLWRP........4500
C........SOLVING FOR U [SPECIFICALLY, U(0)] WITH ITERATIVE SOLVER;       SOLWRP........4600
C           INITIAL GUESS COMES IN THROUGH B TO PRESERVE UITER.          SOLWRP........4700
         DO 160 N=1,NNP                                                  SOLWRP........4800
            BSAV = B(N)                                                  SOLWRP........4900
            B(N) = R(N)                                                  SOLWRP........5000
            R(N) = BSAV                                                  SOLWRP........5100
  160    CONTINUE                                                        SOLWRP........5200
      END IF                                                             SOLWRP........5300
C                                                                        SOLWRP........5400
C.....SET ITERATIVE SOLVER PARAMETERS.                                   SOLWRP........5500
C        IUNITE --> UNIT ON WHICH TO WRITE SOLVER ERROR (0 = NONE)       SOLWRP........5600
C        ISYM  --> 0 = FULL STORAGE; 1 = SYMMETRIC STORAGE               SOLWRP........5700
C        ITRMX --> MAXIMUM NUMBER OF SOLVER ITERATIONS                   SOLWRP........5800
C        ITOL  --> TYPE OF CONVERGENCE CRITERION                         SOLWRP........5900
C        TOL   --> CONVERGENCE TOLERANCE                                 SOLWRP........6000
C        NSAVE --> NUMBER OF DIRECTION VECTORS                           SOLWRP........6100
      IF (KPU.EQ.1) THEN                                                 SOLWRP........6200
C........SET PARAMETERS FOR ITERATIVE P SOLUTION.                        SOLWRP........6300
         ISYM = 0                                                        SOLWRP........6400
         ITRMX = MAX(ITRMXP, 1)                                          SOLWRP........6500
         ITOL = ITOLP                                                    SOLWRP........6600
         TOL = TOLP                                                      SOLWRP........6700
         NSAVE = NSAVEP                                                  SOLWRP........6800
      ELSE                                                               SOLWRP........6900
C........SET PARAMETERS FOR ITERATIVE U SOLUTION.                        SOLWRP........7000
         ISYM = 0                                                        SOLWRP........7100
         ITRMX = MAX(ITRMXU, 1)                                          SOLWRP........7200
         ITOL = ITOLU                                                    SOLWRP........7300
         TOL = TOLU                                                      SOLWRP........7400
         NSAVE = NSAVEU                                                  SOLWRP........7500
      END IF                                                             SOLWRP........7600
      IUNITE = K00                                                       SOLWRP........7700
C                                                                        SOLWRP........7800
C.....CALL AN ITERATIVE SOLVER:                                          SOLWRP........7900
C        DSICCG = CG WITH IC PRECONDITIONING,                            SOLWRP........8000
C        DSLUGM = GMRES WITH ILU PRECONDITIONING,                        SOLWRP........8100
C        DSLUOM = ORTHOMIN WITH ILU PRECONDITIONING.                     SOLWRP........8200
      IF (KSOLVR.EQ.1) THEN                                              SOLWRP........8300
         CALL DSICCG(NNP, B, R, NELT, IA, JA, A, ISYM, ITOL, TOL,        SOLWRP........8400
     1            ITRMX, ITRS, ERR, IERR, IUNITE, FWK, NWF, IWK, NWI)    SOLWRP........8500
      ELSE IF (KSOLVR.EQ.2) THEN                                         SOLWRP........8600
         CALL DSLUGM(NNP, B, R, NELT, IA, JA, A, ISYM, NSAVE, ITOL, TOL, SOLWRP........8700
     1            ITRMX, ITRS, ERR, IERR, IUNITE, FWK, NWF, IWK, NWI)    SOLWRP........8800
      ELSE                                                               SOLWRP........8900
         CALL DSLUOM(NNP, B, R, NELT, IA, JA, A, ISYM, NSAVE, ITOL, TOL, SOLWRP........9000
     1            ITRMX, ITRS, ERR, IERR, IUNITE, FWK, NWF, IWK, NWI)    SOLWRP........9100
      END IF                                                             SOLWRP........9200
C                                                                        SOLWRP........9300
C.....WRITE CONVERGENCE INFORMATION.                                     SOLWRP........9400
      IF (IERR.EQ.0) THEN                                                SOLWRP........9500
         IF (KSCRN.EQ.1) WRITE (*,555) KPUTXT(KPU), ITRS, ERR            SOLWRP........9600
         WRITE (K00,555) KPUTXT(KPU), ITRS, ERR                          SOLWRP........9700
  555    FORMAT (1X, 6X, A1, '-solution converged in ', I5,              SOLWRP........9800
     1      ' solver iterations  (Error ~ ', 1PE8.1, ')')                SOLWRP........9900
      ELSE                                                               SOLWRP.......10000
         IF (KSCRN.EQ.1) WRITE (*,557) KPUTXT(KPU), ITRS, ERR            SOLWRP.......10100
         WRITE (K00,557) KPUTXT(KPU), ITRS, ERR                          SOLWRP.......10200
  557    FORMAT (1X, 6X, A1, '-solution FAILED after ', I5,              SOLWRP.......10300
     1      ' solver iterations  (Error ~ ', 1PE8.1, ')')                SOLWRP.......10400
      END IF                                                             SOLWRP.......10500
C                                                                        SOLWRP.......10600
      RETURN                                                             SOLWRP.......10700
      END                                                                SOLWRP.......10800
C                                                                        SOLWRP.......10900
C     SUBROUTINE        S  O  U  R  C  E           SUTRA VERSION 3.0     SOURCE.........100
C                                                                        SOURCE.........200
C *** PURPOSE :                                                          SOURCE.........300
C ***  TO READ AND ORGANIZE DEFAULT VALUES FOR FLUID MASS SOURCE DATA    SOURCE.........400
C ***  AND ENERGY OR SOLUTE MASS SOURCE DATA.                            SOURCE.........500
C                                                                        SOURCE.........600
      SUBROUTINE SOURCE(QIN,UIN,IQSOP,QUIN,IQSOU,IQSOPT,IQSOUT,          SOURCE.........700
     1   IBCSOP,IBCSOU)                                                  SOURCE.........800
      USE EXPINT                                                         SOURCE.........900
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                SOURCE........1000
      CHARACTER INTFIL*1000                                              SOURCE........1100
      CHARACTER*80 ERRCOD,CHERR(10),UNAME,FNAME(0:23)                    SOURCE........1200
      INTEGER(1) IBCSOP(NSOP),IBCSOU(NSOU)                               SOURCE........1300
      DIMENSION KTYPE(2)                                                 SOURCE........1400
      COMMON /CONTRL/ GNUP,GNUU,UP,DTMULT,DTMAX,ME,ISSFLO,ISSTRA,ITCYC,  SOURCE........1500
     1   NPCYC,NUCYC,NPRINT,NBCFPR,NBCSPR,NBCPPR,NBCUPR,NLAKPR,IREAD,    SOURCE........1600
     1   NBGPPR,NBGUPR,ISTORE,NOUMAT,IUNSAT,IALSAT,KTYPE                 SOURCE........1700
      COMMON /DIMS/ NN,NE,NIN,NBI,NCBI,NB,NBHALF,NPBC,NUBC,              SOURCE........1800
     1   NSOP,NSOU,NBCN,NPBG,NUBG,NCIDB                                  SOURCE........1900
      COMMON /FNAMES/ UNAME,FNAME                                        SOURCE........2000
      COMMON /FUNITS/ K00,K0,K1,K2,K3,K4,K5,K6,K7,K8,K9,                 SOURCE........2100
     1   K10,K11,K12,K13,K14,K15,K16,K17,K18,K19,K20,K21,K22,K23         SOURCE........2200
      DIMENSION QIN(NN),UIN(NN),IQSOP(NSOP),QUIN(NN),IQSOU(NSOU)         SOURCE........2300
      DIMENSION INERR(10),RLERR(10)                                      SOURCE........2400
C                                                                        SOURCE........2500
C.....NSOPI IS ACTUAL NUMBER OF FLUID SOURCE NODES.                      SOURCE........2600
C.....NSOUI IS ACTUAL NUMBER OF SOLUTE MASS OR ENERGY SOURCE NODES.      SOURCE........2700
      NSOPI=NSOP-1                                                       SOURCE........2800
      NSOUI=NSOU-1                                                       SOURCE........2900
      NIQP=0                                                             SOURCE........3000
      NIQU=0                                                             SOURCE........3100
      IF(NSOPI.EQ.0) GOTO 1000                                           SOURCE........3200
      IF(ME) 50,50,150                                                   SOURCE........3300
   50 WRITE(K3,100)                                                      SOURCE........3400
  100 FORMAT('1'////11X,'F L U I D   S O U R C E   D A T A'              SOURCE........3500
     1   ////11X,'**** NODES AT WHICH FLUID INFLOWS OR OUTFLOWS ARE ',   SOURCE........3600
     2   'SPECIFIED ****'                                                SOURCE........3700
     3   //16X,13X,'DEFAULT FLUID',5X,'DEFAULT CONCENTRATION'            SOURCE........3800
     4    /16X,6X,'INFLOW(+)/OUTFLOW(-)',8X,'OF INFLOWING FLUID'         SOURCE........3900
     5    /12X,'NODE',7X,'(FLUID MASS/SECOND)',2X,                       SOURCE........4000
     6   '(MASS SOLUTE/MASS WATER)'//)                                   SOURCE........4100
      GOTO 300                                                           SOURCE........4200
  150 WRITE(K3,200)                                                      SOURCE........4300
  200 FORMAT('1'////11X,'F L U I D   S O U R C E   D A T A'              SOURCE........4400
     1   ////11X,'**** NODES AT WHICH FLUID INFLOWS OR OUTFLOWS ARE ',   SOURCE........4500
     2   'SPECIFIED ****'                                                SOURCE........4600
     3   //16X,13X,'DEFAULT FLUID',5X,'  DEFAULT TEMPERATURE'            SOURCE........4700
     4    /16X,6X,'INFLOW(+)/OUTFLOW(-)',8X,'OF INFLOWING FLUID'         SOURCE........4800
     5    /12X,'NODE',7X,'(FLUID MASS/SECOND)',2X,                       SOURCE........4900
     6   '       (DEGREES CELSIUS)'//)                                   SOURCE........5000
C                                                                        SOURCE........5100
C.....INPUT DATASET 17:  DATA FOR FLUID SOURCES AND SINKS                SOURCE........5200
  300 CONTINUE                                                           SOURCE........5300
  305 NIQP=NIQP+1                                                        SOURCE........5400
      ERRCOD = 'REA-INP-17'                                              SOURCE........5500
      CALL READIF(K1, 0, INTFIL, ERRCOD)                                 SOURCE........5600
      READ(INTFIL,*,IOSTAT=INERR(1)) IQCP                                SOURCE........5700
      IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)        SOURCE........5800
      IQCPA = IABS(IQCP)                                                 SOURCE........5900
      IF (IQCP.EQ.0) THEN                                                SOURCE........6000
         GOTO 700                                                        SOURCE........6100
      ELSE IF (IQCPA.GT.NN) THEN                                         SOURCE........6200
         ERRCOD = 'INP-17-1'                                             SOURCE........6300
         INERR(1) = IQCPA                                                SOURCE........6400
         INERR(2) = NN                                                   SOURCE........6500
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        SOURCE........6600
      ELSE IF (NIQP.GT.NSOPI) THEN                                       SOURCE........6700
         GOTO 305                                                        SOURCE........6800
      END IF                                                             SOURCE........6900
      ERRCOD = 'REA-INP-17'                                              SOURCE........7000
      IF (IQCP.GT.0) THEN                                                SOURCE........7100
         READ(INTFIL,*,IOSTAT=INERR(1)) IQCP,QINC                        SOURCE........7200
         IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)     SOURCE........7300
         IF (QINC.GT.0D0) THEN                                           SOURCE........7400
            READ(INTFIL,*,IOSTAT=INERR(1)) IQCP,QINC,UINC                SOURCE........7500
            IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)  SOURCE........7600
         ELSE                                                            SOURCE........7700
            UINC = 0D0                                                   SOURCE........7800
         END IF                                                          SOURCE........7900
      ELSE                                                               SOURCE........8000
         QINC = 0D0                                                      SOURCE........8100
         UINC = 0D0                                                      SOURCE........8200
      END IF                                                             SOURCE........8300
      IQSOP(NIQP)=IQCP                                                   SOURCE........8400
      IF(IQCP.LT.0) IQSOPT=-1                                            SOURCE........8500
      IQP=IABS(IQCP)                                                     SOURCE........8600
      QIN(IQP)=QINC                                                      SOURCE........8700
      UIN(IQP)=UINC                                                      SOURCE........8800
      IF(IQCP.GT.0) GOTO 450                                             SOURCE........8900
      WRITE(K3,500) IQCP                                                 SOURCE........9000
      GOTO 600                                                           SOURCE........9100
  450 IF(QINC.GT.0) GOTO 460                                             SOURCE........9200
      WRITE(K3,500) IQCP,QINC                                            SOURCE........9300
      GOTO 600                                                           SOURCE........9400
  460 WRITE(K3,500) IQCP,QINC,UINC                                       SOURCE........9500
  500 FORMAT(7X,I9,6X,1PE20.13,6X,1PE20.13)                              SOURCE........9600
  600 GOTO 305                                                           SOURCE........9700
  700 NIQP = NIQP - 1                                                    SOURCE........9800
      IF(NIQP.EQ.NSOPI) GOTO 800                                         SOURCE........9900
         ERRCOD = 'INP-3,17-1'                                           SOURCE.......10000
         INERR(1) = NIQP                                                 SOURCE.......10100
         INERR(2) = NSOPI                                                SOURCE.......10200
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        SOURCE.......10300
  800 IF(IQSOPT.NE.-1) GOTO 950                                          SOURCE.......10400
      IF(ME) 805,805,815                                                 SOURCE.......10500
  805 WRITE(K3,806)                                                      SOURCE.......10600
  806 FORMAT(//12X,'TIME-DEPENDENT FLUID SOURCE/SINK OR INFLOW ',        SOURCE.......10700
     1   'CONCENTRATION'/12X,'SET IN SUBROUTINE BCTIME IS INDICATED ',   SOURCE.......10800
     2   'BY NEGATIVE NODE NUMBER')                                      SOURCE.......10900
      GOTO 950                                                           SOURCE.......11000
  815 WRITE(K3,816)                                                      SOURCE.......11100
  816 FORMAT(//12X,'TIME-DEPENDENT FLUID SOURCE/SINK OR INFLOW ',        SOURCE.......11200
     1   'TEMPERATURE'/12X,'SET IN SUBROUTINE BCTIME IS INDICATED ',     SOURCE.......11300
     2   'BY NEGATIVE NODE NUMBER')                                      SOURCE.......11400
  950 WRITE(K3,952)                                                      SOURCE.......11500
  952 FORMAT(/11X,'SPECIFICATIONS MADE IN (OPTIONAL) ',                  SOURCE.......11600
     1   'BCS INPUT FILES TAKE PRECEDENCE OVER THE'/11X,                 SOURCE.......11700
     2   'DEFAULT VALUES LISTED ABOVE AND ANY VALUES ',                  SOURCE.......11800
     3   'SET IN SUBROUTINE BCTIME.')                                    SOURCE.......11900
C.....INITIALIZE ARRAY THAT INDICATES WHERE FLUID SOURCE                 SOURCE.......12000
C        CONDITIONS WERE SET (0 = INP FILE)                              SOURCE.......12100
      IBCSOP = 0                                                         SOURCE.......12200
C                                                                        SOURCE.......12300
C                                                                        SOURCE.......12400
C                                                                        SOURCE.......12500
 1000 IF(NSOUI.EQ.0) GOTO 9000                                           SOURCE.......12600
      IF(ME) 1050,1050,1150                                              SOURCE.......12700
 1050 WRITE(K3,1100)                                                     SOURCE.......12800
 1100 FORMAT(////////11X,'S O L U T E   S O U R C E   D A T A'           SOURCE.......12900
     1   ////11X,'**** NODES AT WHICH SOURCES OR SINKS OF SOLUTE ',      SOURCE.......13000
     2   'MASS ARE SPECIFIED ****'                                       SOURCE.......13100
     3   //16X,12X,'DEFAULT SOLUTE'/16X,9X,'SOURCE(+)/SINK(-)'           SOURCE.......13200
     4    /12X,'NODE',6X,'(SOLUTE MASS/SECOND)'//)                       SOURCE.......13300
      GOTO 1305                                                          SOURCE.......13400
 1150 WRITE(K3,1200)                                                     SOURCE.......13500
 1200 FORMAT(////////11X,'E N E R G Y   S O U R C E   D A T A'           SOURCE.......13600
     1   ////11X,'**** NODES AT WHICH SOURCES OR SINKS OF ',             SOURCE.......13700
     2   'ENERGY ARE SPECIFIED ****'                                     SOURCE.......13800
     3   //16X,12X,'DEFAULT ENERGY'/16X,9X,'SOURCE(+)/SINK(-)'           SOURCE.......13900
     4    /12X,'NODE',11X,'(ENERGY/SECOND)'//)                           SOURCE.......14000
C                                                                        SOURCE.......14100
C.....INPUT DATASET 18:  DATA FOR ENERGY OR SOLUTE MASS SOURCES OR SINKS SOURCE.......14200
 1305 NIQU=NIQU+1                                                        SOURCE.......14300
      ERRCOD = 'REA-INP-18'                                              SOURCE.......14400
      CALL READIF(K1, 0, INTFIL, ERRCOD)                                 SOURCE.......14500
      READ(INTFIL,*,IOSTAT=INERR(1)) IQCU                                SOURCE.......14600
      IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)        SOURCE.......14700
      IQCUA = IABS(IQCU)                                                 SOURCE.......14800
      IF (IQCU.EQ.0) THEN                                                SOURCE.......14900
         GOTO 1700                                                       SOURCE.......15000
      ELSE IF (IQCUA.GT.NN) THEN                                         SOURCE.......15100
         ERRCOD = 'INP-18-1'                                             SOURCE.......15200
         INERR(1) = IQCUA                                                SOURCE.......15300
         INERR(2) = NN                                                   SOURCE.......15400
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        SOURCE.......15500
      ELSE IF (NIQU.GT.NSOUI) THEN                                       SOURCE.......15600
         GOTO 1305                                                       SOURCE.......15700
      END IF                                                             SOURCE.......15800
      IF (IQCU.GT.0) THEN                                                SOURCE.......15900
         ERRCOD = 'REA-INP-18'                                           SOURCE.......16000
         READ(INTFIL,*,IOSTAT=INERR(1)) IQCU,QUINC                       SOURCE.......16100
         IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)     SOURCE.......16200
      ELSE                                                               SOURCE.......16300
         QUINC = 0D0                                                     SOURCE.......16400
      END IF                                                             SOURCE.......16500
      IQSOU(NIQU)=IQCU                                                   SOURCE.......16600
      IF(IQCU.LT.0) IQSOUT=-1                                            SOURCE.......16700
      IQU=IABS(IQCU)                                                     SOURCE.......16800
      QUIN(IQU)=QUINC                                                    SOURCE.......16900
      IF(IQCU.GT.0) GOTO 1450                                            SOURCE.......17000
      WRITE(K3,1500) IQCU                                                SOURCE.......17100
      GOTO 1600                                                          SOURCE.......17200
 1450 WRITE(K3,1500) IQCU,QUINC                                          SOURCE.......17300
 1500 FORMAT(7X,I9,6X,1PE20.13)                                          SOURCE.......17400
 1600 GOTO 1305                                                          SOURCE.......17500
 1700 NIQU = NIQU - 1                                                    SOURCE.......17600
      IF(NIQU.EQ.NSOUI) GOTO 1800                                        SOURCE.......17700
         ERRCOD = 'INP-3,18-1'                                           SOURCE.......17800
         IF (ME.EQ.1) THEN                                               SOURCE.......17900
            CHERR(1) = 'energy'                                          SOURCE.......18000
         ELSE                                                            SOURCE.......18100
            CHERR(1) = 'solute'                                          SOURCE.......18200
         END IF                                                          SOURCE.......18300
         INERR(1) = NIQU                                                 SOURCE.......18400
         INERR(2) = NSOUI                                                SOURCE.......18500
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        SOURCE.......18600
 1800 IF(IQSOUT.NE.-1) GOTO 6000                                         SOURCE.......18700
      IF(ME) 1805,1805,1815                                              SOURCE.......18800
 1805 WRITE(K3,1806)                                                     SOURCE.......18900
 1806 FORMAT(//12X,'TIME-DEPENDENT SOLUTE SOURCE/SINK SET IN ',          SOURCE.......19000
     1   /12X,'SUBROUTINE BCTIME IS INDICATED ',                         SOURCE.......19100
     2   'BY NEGATIVE NODE NUMBER')                                      SOURCE.......19200
      GOTO 6000                                                          SOURCE.......19300
 1815 WRITE(K3,1816)                                                     SOURCE.......19400
 1816 FORMAT(//12X,'TIME-DEPENDENT ENERGY SOURCE/SINK SET IN ',          SOURCE.......19500
     1   /12X,'SUBROUTINE BCTIME IS INDICATED ',                         SOURCE.......19600
     2   'BY NEGATIVE NODE NUMBER')                                      SOURCE.......19700
 6000 WRITE(K3,952)                                                      SOURCE.......19800
C.....INITIALIZE ARRAY THAT INDICATES WHERE ENERGY OR SOLUTE SOURCE      SOURCE.......19900
C        CONDITIONS WERE SET (0 = INP FILE)                              SOURCE.......20000
      IBCSOU = 0                                                         SOURCE.......20100
C                                                                        SOURCE.......20200
C                                                                        SOURCE.......20300
 9000 RETURN                                                             SOURCE.......20400
C                                                                        SOURCE.......20500
      END                                                                SOURCE.......20600
C                                                                        SOURCE.......20700
C     SUBROUTINE        S  O  U  R  C  E  1        SUTRA VERSION 3.0     SOURCE1........100
C                                                                        SOURCE1........200
C *** PURPOSE :                                                          SOURCE1........300
C ***  TO READ AND ORGANIZE TIME-DEPENDENT FLUID MASS SOURCE DATA AND    SOURCE1........400
C ***  ENERGY OR SOLUTE MASS SOURCE DATA SPECIFIED IN THE OPTIONAL       SOURCE1........500
C ***  BCS INPUT FILE.                                                   SOURCE1........600
C                                                                        SOURCE1........700
      SUBROUTINE SOURCE1(QIN1,UIN1,IQSOP1,QUIN1,IQSOU1,IQSOPT1,IQSOUT1,  SOURCE1........800
     1   NSOP1,NSOU1,NFB,BCSID)                                          SOURCE1........900
      USE EXPINT                                                         SOURCE1.......1000
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                SOURCE1.......1100
      CHARACTER INTFIL*1000                                              SOURCE1.......1200
      CHARACTER*80 ERRCOD,CHERR(10),UNAME,FNAME(0:23)                    SOURCE1.......1300
      CHARACTER*40 BCSID                                                 SOURCE1.......1400
      DIMENSION KTYPE(2)                                                 SOURCE1.......1500
      COMMON /CONTRL/ GNUP,GNUU,UP,DTMULT,DTMAX,ME,ISSFLO,ISSTRA,ITCYC,  SOURCE1.......1600
     1   NPCYC,NUCYC,NPRINT,NBCFPR,NBCSPR,NBCPPR,NBCUPR,NLAKPR,IREAD,    SOURCE1.......1700
     1   NBGPPR,NBGUPR,ISTORE,NOUMAT,IUNSAT,IALSAT,KTYPE                 SOURCE1.......1800
      COMMON /DIMS/ NN,NE,NIN,NBI,NCBI,NB,NBHALF,NPBC,NUBC,              SOURCE1.......1900
     1   NSOP,NSOU,NBCN,NPBG,NUBG,NCIDB                                  SOURCE1.......2000
      COMMON /FNAMES/ UNAME,FNAME                                        SOURCE1.......2100
      COMMON /FUNITS/ K00,K0,K1,K2,K3,K4,K5,K6,K7,K8,K9,                 SOURCE1.......2200
     1   K10,K11,K12,K13,K14,K15,K16,K17,K18,K19,K20,K21,K22,K23         SOURCE1.......2300
      COMMON /TIMES/ DELT,TSEC,TMIN,THOUR,TDAY,TWEEK,TMONTH,TYEAR,       SOURCE1.......2400
     1   TMAX,DELTP,DELTU,DLTPM1,DLTUM1,IT,ITBCS,ITRST,ITMAX,TSTART      SOURCE1.......2500
      DIMENSION QIN1(NN),UIN1(NN),IQSOP1(NSOP1)                          SOURCE1.......2600
      DIMENSION QUIN1(NN),IQSOU1(NSOU1)                                  SOURCE1.......2700
      DIMENSION INERR(10),RLERR(10)                                      SOURCE1.......2800
C                                                                        SOURCE1.......2900
C.....NSOPI1 IS ACTUAL NUMBER OF TIME-STEP-DEPENDENT FLUID SOURCE NODES. SOURCE1.......3000
C.....NSOUI1 IS ACTUAL NUMBER OF TIME-STEP-DEPENDENT SOLUTE MASS OR      SOURCE1.......3100
C        ENERGY SOURCE NODES.                                            SOURCE1.......3200
      NSOPI1=NSOP1 - 1                                                   SOURCE1.......3300
      NSOUI1=NSOU1 - 1                                                   SOURCE1.......3400
C                                                                        SOURCE1.......3500
      NIQP = 0                                                           SOURCE1.......3600
      NIQU = 0                                                           SOURCE1.......3700
      IQSOPT1 = +1                                                       SOURCE1.......3800
      IQSOUT1 = +1                                                       SOURCE1.......3900
C                                                                        SOURCE1.......4000
      IF (NSOPI1.EQ.0) GOTO 1000                                         SOURCE1.......4100
C                                                                        SOURCE1.......4200
C.....INPUT BCS DATASET 3:  DATA FOR FLUID SOURCES AND SINKS             SOURCE1.......4300
      IQSOPT1 = -1                                                       SOURCE1.......4400
  305 NIQP = NIQP + 1                                                    SOURCE1.......4500
      ERRCOD = 'REA-BCS-3'                                               SOURCE1.......4600
      WRITE(CHERR(1),*) ITBCS                                            SOURCE1.......4700
      CHERR(2) = BCSID                                                   SOURCE1.......4800
      CALL READIF(K9, NFB, INTFIL, ERRCOD, CHERR)                        SOURCE1.......4900
      READ(INTFIL,*,IOSTAT=INERR(1)) IQCP                                SOURCE1.......5000
      IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)        SOURCE1.......5100
      IQP = IABS(IQCP)                                                   SOURCE1.......5200
      IF (IQCP.EQ.0) THEN                                                SOURCE1.......5300
         GOTO 700                                                        SOURCE1.......5400
      ELSE IF (IQP.GT.NN) THEN                                           SOURCE1.......5500
         ERRCOD = 'BCS-3-1'                                              SOURCE1.......5600
         INERR(1) = IQP                                                  SOURCE1.......5700
         INERR(2) = NN                                                   SOURCE1.......5800
         INERR(3) = ITBCS                                                SOURCE1.......5900
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        SOURCE1.......6000
      ELSE IF (NIQP.GT.NSOPI1) THEN                                      SOURCE1.......6100
         GOTO 305                                                        SOURCE1.......6200
      END IF                                                             SOURCE1.......6300
      ERRCOD = 'REA-BCS-3'                                               SOURCE1.......6400
      WRITE(CHERR(1),*) ITBCS                                            SOURCE1.......6500
      CHERR(2) = BCSID                                                   SOURCE1.......6600
      IF (IQCP.GT.0) THEN                                                SOURCE1.......6700
         READ(INTFIL,*,IOSTAT=INERR(1)) IQCP,QINC                        SOURCE1.......6800
         IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)     SOURCE1.......6900
         IF (QINC.GT.0D0) THEN                                           SOURCE1.......7000
            READ(INTFIL,*,IOSTAT=INERR(1)) IQCP,QINC,UINC                SOURCE1.......7100
            IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)  SOURCE1.......7200
            QIN1(IQP)=QINC                                               SOURCE1.......7300
            UIN1(IQP)=UINC                                               SOURCE1.......7400
         ELSE                                                            SOURCE1.......7500
            QIN1(IQP)=QINC                                               SOURCE1.......7600
         END IF                                                          SOURCE1.......7700
      END IF                                                             SOURCE1.......7800
      IQSOP1(NIQP)=IQCP                                                  SOURCE1.......7900
  600 GOTO 305                                                           SOURCE1.......8000
  700 NIQP = NIQP - 1                                                    SOURCE1.......8100
      IF(NIQP.EQ.NSOPI1) GOTO 1000                                       SOURCE1.......8200
         ERRCOD = 'BCS-2,3-1'                                            SOURCE1.......8300
         INERR(1) = NIQP                                                 SOURCE1.......8400
         INERR(2) = NSOPI1                                               SOURCE1.......8500
         INERR(3) = ITBCS                                                SOURCE1.......8600
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        SOURCE1.......8700
C                                                                        SOURCE1.......8800
C                                                                        SOURCE1.......8900
 1000 IF(NSOUI1.EQ.0) GOTO 9000                                          SOURCE1.......9000
C                                                                        SOURCE1.......9100
C.....INPUT BCS DATASET 4:  DATA FOR ENERGY OR SOLUTE MASS SOURCES       SOURCE1.......9200
C        OR SINKS                                                        SOURCE1.......9300
      IQSOUT1 = -1                                                       SOURCE1.......9400
 1305 NIQU=NIQU+1                                                        SOURCE1.......9500
      ERRCOD = 'REA-BCS-4'                                               SOURCE1.......9600
      WRITE(CHERR(1),*) ITBCS                                            SOURCE1.......9700
      CHERR(2) = BCSID                                                   SOURCE1.......9800
      CALL READIF(K9, NFB, INTFIL, ERRCOD, CHERR)                        SOURCE1.......9900
      READ(INTFIL,*,IOSTAT=INERR(1)) IQCU                                SOURCE1......10000
      IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)        SOURCE1......10100
      IQU = IABS(IQCU)                                                   SOURCE1......10200
      IF (IQCU.EQ.0) THEN                                                SOURCE1......10300
         GOTO 1700                                                       SOURCE1......10400
      ELSE IF (IQU.GT.NN) THEN                                           SOURCE1......10500
         ERRCOD = 'BCS-4-1'                                              SOURCE1......10600
         INERR(1) = IQU                                                  SOURCE1......10700
         INERR(2) = NN                                                   SOURCE1......10800
         INERR(3) = ITBCS                                                SOURCE1......10900
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        SOURCE1......11000
      ELSE IF (NIQU.GT.NSOUI1) THEN                                      SOURCE1......11100
         GOTO 1305                                                       SOURCE1......11200
      END IF                                                             SOURCE1......11300
      IF (IQCU.GT.0) THEN                                                SOURCE1......11400
         ERRCOD = 'REA-BCS-4'                                            SOURCE1......11500
         WRITE(CHERR(1),*) ITBCS                                         SOURCE1......11600
         CHERR(2) = BCSID                                                SOURCE1......11700
         READ(INTFIL,*,IOSTAT=INERR(1)) IQCU,QUINC                       SOURCE1......11800
         IF (INERR(1).NE.0) CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)     SOURCE1......11900
         QUIN1(IQU)=QUINC                                                SOURCE1......12000
      END IF                                                             SOURCE1......12100
      IQSOU1(NIQU)=IQCU                                                  SOURCE1......12200
 1600 GOTO 1305                                                          SOURCE1......12300
 1700 NIQU = NIQU - 1                                                    SOURCE1......12400
      IF(NIQU.EQ.NSOUI1) GOTO 9000                                       SOURCE1......12500
         ERRCOD = 'BCS-2,4-1'                                            SOURCE1......12600
         IF (ME.EQ.1) THEN                                               SOURCE1......12700
            CHERR(1) = 'energy'                                          SOURCE1......12800
         ELSE                                                            SOURCE1......12900
            CHERR(1) = 'solute'                                          SOURCE1......13000
         END IF                                                          SOURCE1......13100
         INERR(1) = NIQU                                                 SOURCE1......13200
         INERR(2) = NSOUI1                                               SOURCE1......13300
         INERR(3) = ITBCS                                                SOURCE1......13400
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        SOURCE1......13500
C                                                                        SOURCE1......13600
 9000 RETURN                                                             SOURCE1......13700
C                                                                        SOURCE1......13800
      END                                                                SOURCE1......13900
C                                                                        SOURCE1......14000
C     SUBROUTINE        S  U  T  E  R  R           SUTRA VERSION 3.0     SUTERR.........100
C                                                                        SUTERR.........200
C *** PURPOSE :                                                          SUTERR.........300
C ***  TO HANDLE SUTRA AND FORTRAN ERRORS.                               SUTERR.........400
C                                                                        SUTERR.........500
      SUBROUTINE SUTERR(ERRCOD, CHERR, INERR, RLERR)                     SUTERR.........600
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                SUTERR.........700
      CHARACTER*80 ERRCOD,CHERR(10),CODE(3),CODUM(3),UNAME,FNAME(0:23)   SUTERR.........800
      CHARACTER*70 DS(50),EX(50)                                         SUTERR.........900
      CHARACTER CDUM80*80                                                SUTERR........1000
      CHARACTER CINERR(10)*9,CRLERR(10)*15                               SUTERR........1100
      CHARACTER SOLNAM(0:10)*40,SOLWRD(0:10)*10                          SUTERR........1200
      CHARACTER*8 VERNUM, VERNIN                                         SUTERR........1300
      DIMENSION INERR(10), RLERR(10)                                     SUTERR........1400
      COMMON /DIMS/ NN,NE,NIN,NBI,NCBI,NB,NBHALF,NPBC,NUBC,              SUTERR........1500
     1   NSOP,NSOU,NBCN,NPBG,NUBG,NCIDB                                  SUTERR........1600
      COMMON /FNAMES/ UNAME,FNAME                                        SUTERR........1700
      COMMON /FUNITS/ K00,K0,K1,K2,K3,K4,K5,K6,K7,K8,K9,                 SUTERR........1800
     1   K10,K11,K12,K13,K14,K15,K16,K17,K18,K19,K20,K21,K22,K23         SUTERR........1900
      COMMON /KPRINT/ KNODAL,KELMNT,KINCID,KPLOTP,KPLOTU,                SUTERR........2000
     1   KPANDS,KVEL,KCORT,KBUDG,KSCRN,KPAUSE                            SUTERR........2100
      COMMON /SOLVC/ SOLWRD,SOLNAM                                       SUTERR........2200
      COMMON /SOLVN/ NSLVRS                                              SUTERR........2300
      COMMON /VER/ VERNUM, VERNIN                                        SUTERR........2400
C                                                                        SUTERR........2500
C.....PARSE THE ERROR CODE                                               SUTERR........2600
      CALL PRSWDS(ERRCOD, '-', 3, CODE, NWORDS)                          SUTERR........2700
C                                                                        SUTERR........2800
C.....IF AN ERROR OTHER THAN A MATRIX SOLVER OR NONLINEAR CONVERGENCE    SUTERR........2900
C        ERROR HAS OCCURRED, OVERRIDE THE SCREEN OUTPUT CONTROLS SO      SUTERR........3000
C        THAT THE ERROR IS PRINTED TO THE SCREEN AND SUTRA PAUSES FOR    SUTERR........3100
C        A USER RESPONSE.                                                SUTERR........3200
      IF ((CODE(1).NE.'SOL').AND.(CODE(1).NE.'CON')) THEN                SUTERR........3300
         KSCRN = +1                                                      SUTERR........3400
         KPAUSE = +1                                                     SUTERR........3500
      END IF                                                             SUTERR........3600
C                                                                        SUTERR........3700
C.....COPY INTEGER AND REAL ERROR PARAMETERS INTO CHARACTER STRINGS      SUTERR........3800
      DO 150 I=1,10                                                      SUTERR........3900
         WRITE(UNIT=CINERR(I), FMT='(I9)') INERR(I)                      SUTERR........4000
         WRITE(UNIT=CRLERR(I), FMT='(1PE15.7)') RLERR(I)                 SUTERR........4100
  150 CONTINUE                                                           SUTERR........4200
C                                                                        SUTERR........4300
C.....INITIALIZE THE ERROR OUTPUT STRINGS                                SUTERR........4400
      DO 200 I=1,50                                                      SUTERR........4500
         DS(I) = "null_line"                                             SUTERR........4600
         EX(I) = "null_line"                                             SUTERR........4700
  200 CONTINUE                                                           SUTERR........4800
C                                                                        SUTERR........4900
C.....SET THE ERROR OUTPUT STRINGS ACCORDING TO THE TYPE OF ERROR        SUTERR........5000
      IF (ERRCOD.EQ.'INP-2A-1') THEN                                     SUTERR........5100
        DS(1)="The first word of SIMULA is not 'SUTRA'."                 SUTERR........5200
        EX(1)="In dataset 2A of the main input file, the first word"     SUTERR........5300
        EX(2)="of the variable SIMULA must be 'SUTRA'."                  SUTERR........5400
        EX(3)=" "                                                        SUTERR........5500
        EX(4)="Example of a valid dataset 2A:"                           SUTERR........5600
        EX(5)="'SUTRA SOLUTE TRANSPORT'"                                 SUTERR........5700
      ELSE IF (ERRCOD.EQ.'INP-2A-2') THEN                                SUTERR........5800
        DS(1)="The second word of SIMULA is not 'SOLUTE' or 'ENERGY'."   SUTERR........5900
        EX(1)="In dataset 2A of the main input file, when the second"    SUTERR........6000
        EX(2)="word is not 'VERSION', the version 2.0 input format is"   SUTERR........6100
        EX(3)="assumed, and the second word must be 'SOLUTE' or"         SUTERR........6200
        EX(4)="'ENERGY'."                                                SUTERR........6300
        EX(5)=" "                                                        SUTERR........6400
        EX(6)="Example of a valid (version 2.0) dataset 2A:"             SUTERR........6500
        EX(7)="'SUTRA SOLUTE TRANSPORT'"                                 SUTERR........6600
      ELSE IF (ERRCOD.EQ.'INP-2A-3') THEN                                SUTERR........6700
        DS(1)="The fourth word of SIMULA is not 'SOLUTE' or 'ENERGY'."   SUTERR........6800
        EX(1)="In dataset 2A of the main input file, the fourth word"    SUTERR........6900
        EX(2)="must be 'SOLUTE' or 'ENERGY' (unless the version 2.0"     SUTERR........7000
        EX(3)="input format is being used)."                             SUTERR........7100
        EX(4)=" "                                                        SUTERR........7200
        EX(5)="Example of a valid (version 2.0) dataset 2A:"             SUTERR........7300
        EX(6)="'SUTRA VERSION " // TRIM(VERNUM) // " SOLUTE TRANSPORT'"  SUTERR........7400
      ELSE IF (ERRCOD.EQ.'INP-2A-4') THEN                                SUTERR........7500
        DS(1)="Unsupported SUTRA version: " // CHERR(1)                  SUTERR........7600
        EX(1)="Input files from SUTRA version " // TRIM(CHERR(1))        SUTERR........7700
        EX(2)="are not supported by version " // TRIM(VERNUM) // "."     SUTERR........7800
      ELSE IF (ERRCOD.EQ.'INP-2B-1') THEN                                SUTERR........7900
        DS(1)="The first word of MSHSTR is not '2D' or '3D'."            SUTERR........8000
        EX(1)="In dataset 2B of the main input file, the first word"     SUTERR........8100
        EX(2)="of the variable MSHSTR must be '2D' or '3D'."             SUTERR........8200
        EX(3)=" "                                                        SUTERR........8300
        EX(4)="Example of a valid dataset 2B:"                           SUTERR........8400
        EX(5)="'3D REGULAR MESH'  10  20  30"                            SUTERR........8500
C.....ERROR CODE 'INP-2B-2' IS NO LONGER USED.                           SUTERR........8600
      ELSE IF (ERRCOD.EQ.'INP-2B-3') THEN                                SUTERR........8700
        DS(1)="At least one of the rectangular dimensions NN1, NN2,"     SUTERR........8800
        DS(2)="and NN3 is set improperly."                               SUTERR........8900
        EX(1)="In dataset 2B of the main input file, the rectangular"    SUTERR........9000
        EX(2)="dimensions NN1, NN2, and (for 3D problems) NN3 must"      SUTERR........9100
        EX(3)="each be greater than 1."                                  SUTERR........9200
        EX(4)=" "                                                        SUTERR........9300
        EX(5)="Example of a valid dataset 2B:"                           SUTERR........9400
        EX(6)="'3D BLOCKWISE MESH'  10  20  30"                          SUTERR........9500
      ELSE IF (ERRCOD.EQ.'INP-2B-4') THEN                                SUTERR........9600
        DS(1)="The second word of MSHSTR is not 'IRREGULAR', 'REGULAR'," SUTERR........9700
        DS(2)="'BLOCKWISE', or 'LAYERED'."                               SUTERR........9800
        EX(1)="In dataset 2B of the main input file, the second word"    SUTERR........9900
        EX(2)="of the variable MSHSTR must be 'IRREGULAR', 'REGULAR',"   SUTERR.......10000
        EX(3)="'BLOCKWISE' or 'LAYERED'.  By definition, only 3D meshes" SUTERR.......10100
        EX(4)="can be LAYERED."                                          SUTERR.......10200
        EX(5)=" "                                                        SUTERR.......10300
        EX(6)="Example of a valid dataset 2B:"                           SUTERR.......10400
        EX(7)="'3D REGULAR MESH'  10  20  30"                            SUTERR.......10500
      ELSE IF (ERRCOD.EQ.'INP-2B-5') THEN                                SUTERR.......10600
        DS(1)="A 2D LAYERED mesh has been specified."                    SUTERR.......10700
        EX(1)="By definition, only 3D meshes can be LAYERED."            SUTERR.......10800
        EX(2)=" "                                                        SUTERR.......10900
        EX(3)="Example of a valid dataset 2B:"                           SUTERR.......11000
        EX(4)="'3D LAYERED MESH'  10  2560  2210  'ACROSS'"              SUTERR.......11100
      ELSE IF (ERRCOD.EQ.'INP-2B-6') THEN                                SUTERR.......11200
        DS(1)="The first word of LAYSTR is not 'ACROSS' or 'WITHIN'."    SUTERR.......11300
        EX(1)="In dataset 2B of the main input file, the first word"     SUTERR.......11400
        EX(2)="of the variable LAYSTR must be 'ACROSS' or 'WITHIN'."     SUTERR.......11500
        EX(3)=" "                                                        SUTERR.......11600
        EX(4)="Example of a valid dataset 2B:"                           SUTERR.......11700
        EX(5)="'3D LAYERED MESH'  10  2560  2210  'ACROSS'"              SUTERR.......11800
      ELSE IF (ERRCOD.EQ.'INP-2B-7') THEN                                SUTERR.......11900
        DS(1)="At least one of the layer dimensions NLAYS, NNLAY,"       SUTERR.......12000
        DS(2)="and NELAY is set improperly."                             SUTERR.......12100
        EX(1)="In dataset 2B of the main input file, the layer"          SUTERR.......12200
        EX(2)="dimensions are subject to the following constraints:"     SUTERR.......12300
        EX(3)="NLAYS>1, NNLAY>3, and NELAY>0."                           SUTERR.......12400
        EX(4)=" "                                                        SUTERR.......12500
        EX(5)="Example of a valid dataset 2B:"                           SUTERR.......12600
        EX(6)="'3D LAYERED MESH'  10  2560  2210  'ACROSS'"              SUTERR.......12700
      ELSE IF (ERRCOD.EQ.'INP-2B-8') THEN                                SUTERR.......12800
        DS(1)="The type of mesh specified cannot be used with lakes."    SUTERR.......12900
        EX(1)="If the lake capability is used, the type of mesh"         SUTERR.......13000
        EX(2)="specified in dataset 2B of the main input file"           SUTERR.......13100
        EX(3)="must be 3D REGULAR, BLOCKWISE, or LAYERED."               SUTERR.......13200
      ELSE IF (ERRCOD.EQ.'INP-2B,3-1') THEN                              SUTERR.......13300
        DS(1)="The number of nodes, NN, does not match the rectangular"  SUTERR.......13400
        DS(2)="dimensions, NN1*NN2(*NN3)."                               SUTERR.......13500
        EX(1)="In datasets 2B and 3 of the main input file, the total"   SUTERR.......13600
        EX(2)="number of nodes, NN, must equal the product of the"       SUTERR.......13700
        EX(3)="rectangular dimensions, NN1*NN2 in 2D, or NN1*NN2*NN3"    SUTERR.......13800
        EX(4)="in 3D."                                                   SUTERR.......13900
        EX(5)=" "                                                        SUTERR.......14000
        EX(6)="Example:"                                                 SUTERR.......14100
        EX(7)="If NN1=10, NN2=20, and NN3=30 (dataset 2B), then"         SUTERR.......14200
        EX(8)="NN=10*20*30=6000 (dataset 3)."                            SUTERR.......14300
      ELSE IF (ERRCOD.EQ.'INP-2B,3-2') THEN                              SUTERR.......14400
        DS(1)="The number of elements, NE, does not match the"           SUTERR.......14500
        DS(2)="rectangular dimensions, (NN1-1)*(NN2-1)[*(NN3-1)]."       SUTERR.......14600
        EX(1)="In datasets 2B and 3 of the main input file, the total"   SUTERR.......14700
        EX(2)="number of elements, NE, must equal the product of the"    SUTERR.......14800
        EX(3)="rectangular dimensions, (NN1-1)*(NN2-1) in 2D, or"        SUTERR.......14900
        EX(4)="(NN1-1)*(NN2-1)*(NN3-1) in 3D."                           SUTERR.......15000
        EX(5)=" "                                                        SUTERR.......15100
        EX(6)="Example:"                                                 SUTERR.......15200
        EX(7)="If NN1=10, NN2=20, and NN3=30 (dataset 2B), then"         SUTERR.......15300
        EX(8)="NE=9*19*29=4959 (dataset 3)."                             SUTERR.......15400
      ELSE IF (ERRCOD.EQ.'INP-2B,3-3') THEN                              SUTERR.......15500
        DS(1)="The number of nodes, NN, does not match the layered"      SUTERR.......15600
        DS(2)="dimensions, NLAYS*NNLAY."                                 SUTERR.......15700
        EX(1)="In datasets 2B and 3 of the main input file, the total"   SUTERR.......15800
        EX(2)="number of nodes, NN, must equal the product of the"       SUTERR.......15900
        EX(3)="layered dimensions, NLAYS*NNLAY."                         SUTERR.......16000
        EX(4)=" "                                                        SUTERR.......16100
        EX(5)="Example:"                                                 SUTERR.......16200
        EX(6)="If NLAYS=10 and NNLAY=2560 (dataset 2B), then"            SUTERR.......16300
        EX(7)="NN=10*2560=25600 (dataset 3)."                            SUTERR.......16400
      ELSE IF (ERRCOD.EQ.'INP-2B,3-4') THEN                              SUTERR.......16500
        DS(1)="The number of nodes, NE, does not match the layered"      SUTERR.......16600
        DS(2)="dimensions, (NLAYS-1)*NELAY."                             SUTERR.......16700
        EX(1)="In datasets 2B and 3 of the main input file, the total"   SUTERR.......16800
        EX(2)="number of nodes, NE, must equal the product of the"       SUTERR.......16900
        EX(3)="layered dimensions, (NLAYS-1)*NELAY."                     SUTERR.......17000
        EX(4)=" "                                                        SUTERR.......17100
        EX(5)="Example:"                                                 SUTERR.......17200
        EX(6)="If NLAYS=10 and NELAY=2210 (dataset 2B), then"            SUTERR.......17300
        EX(7)="NN=9*2210=19890 (dataset 3)."                             SUTERR.......17400
      ELSE IF (ERRCOD.EQ.'INP-4-1') THEN                                 SUTERR.......17500
        DS(1)="The first word of CUNSAT is not 'SATURATED' or"           SUTERR.......17600
        DS(2)="'UNSATURATED'."                                           SUTERR.......17700
        EX(1)="In dataset 4 of the main input file, the first word"      SUTERR.......17800
        EX(2)="of the variable CUNSAT must be 'SATURATED' or"            SUTERR.......17900
        EX(3)="'UNSATURATED'."                                           SUTERR.......18000
        EX(4)=" "                                                        SUTERR.......18100
        EX(5)="Example of a valid dataset 4:"                            SUTERR.......18200
        EX(6)="'SATURATED FLOW' 'STEADY FLOW' 'TRANSIENT TRANSPORT'" //  SUTERR.......18300
     1        " 'COLD' 10"                                               SUTERR.......18400
      ELSE IF (ERRCOD.EQ.'INP-4-2') THEN                                 SUTERR.......18500
        DS(1)="The first word of CSSFLO is not 'STEADY' or 'TRANSIENT'." SUTERR.......18600
        EX(1)="In dataset 4 of the main input file, the first word"      SUTERR.......18700
        EX(2)="of the variable CSSFLO must be 'STEADY' or 'TRANSIENT'."  SUTERR.......18800
        EX(3)=" "                                                        SUTERR.......18900
        EX(4)="Example of a valid dataset 4:"                            SUTERR.......19000
        EX(5)="'SATURATED FLOW' 'STEADY FLOW' 'TRANSIENT TRANSPORT'" //  SUTERR.......19100
     1        " 'COLD' 10"                                               SUTERR.......19200
      ELSE IF (ERRCOD.EQ.'INP-4-3') THEN                                 SUTERR.......19300
        DS(1)="The first word of CSSTRA is not 'STEADY' or 'TRANSIENT'." SUTERR.......19400
        EX(1)="In dataset 4 of the main input file, the first word"      SUTERR.......19500
        EX(2)="of the variable CSSTRA must be 'STEADY' or 'TRANSIENT'."  SUTERR.......19600
        EX(3)=" "                                                        SUTERR.......19700
        EX(4)="Example of a valid dataset 4:"                            SUTERR.......19800
        EX(5)="'SATURATED FLOW' 'STEADY FLOW' 'TRANSIENT TRANSPORT'" //  SUTERR.......19900
     1        " 'COLD' 10"                                               SUTERR.......20000
      ELSE IF (ERRCOD.EQ.'INP-4-4') THEN                                 SUTERR.......20100
        DS(1)="The first word of CREAD is not 'COLD' or 'WARM'."         SUTERR.......20200
        EX(1)="In dataset 4 of the main input file, the first word"      SUTERR.......20300
        EX(2)="of the variable CREAD must be 'COLD' or 'WARM'."          SUTERR.......20400
        EX(3)=" "                                                        SUTERR.......20500
        EX(4)="Example of a valid dataset 4:"                            SUTERR.......20600
        EX(5)="'SATURATED FLOW' 'STEADY FLOW' 'TRANSIENT TRANSPORT'" //  SUTERR.......20700
     1        " 'COLD' 10"                                               SUTERR.......20800
      ELSE IF (ERRCOD.EQ.'INP-4-5') THEN                                 SUTERR.......20900
        DS(1)="Specified TRANSIENT flow with STEADY transport."          SUTERR.......21000
        EX(1)="In dataset 4 of the main input file, TRANSIENT flow"      SUTERR.......21100
        EX(2)="requires TRANSIENT transport.  Likewise, STEADY"          SUTERR.......21200
        EX(3)="transport requires STEADY flow.  The following are"       SUTERR.......21300
        EX(4)="valid combinations:"                                      SUTERR.......21400
        EX(5)=" "                                                        SUTERR.......21500
        EX(6)="     CSSFLO      CSSTRA"                                  SUTERR.......21600
        EX(7)="   ----------- -----------"                               SUTERR.......21700
        EX(8)="    'STEADY'    'STEADY'"                                 SUTERR.......21800
        EX(9)="    'STEADY'   'TRANSIENT'"                               SUTERR.......21900
        EX(10)="   'TRANSIENT' 'TRANSIENT'"                              SUTERR.......22000
        EX(11)=" "                                                       SUTERR.......22100
        EX(12)="Example of a valid dataset 4:"                           SUTERR.......22200
        EX(13)="'SATURATED FLOW' 'STEADY FLOW' 'STEADY TRANSPORT'" //    SUTERR.......22300
     1        " 'COLD' 10"                                               SUTERR.......22400
      ELSE IF (ERRCOD.EQ.'INP-4-6') THEN                                 SUTERR.......22500
        DS(1)="Specified STEADY flow with TRANSIENT transport"           SUTERR.......22600
        DS(2)="when using the lake capability."                          SUTERR.......22700
        EX(1)="When the lake capability is used, the following"          SUTERR.......22800
        EX(2)="simulation modes may be specified in dataset 4 of"        SUTERR.......22900
        EX(3)="the main input file:"                                     SUTERR.......23000
        EX(4)=" "                                                        SUTERR.......23100
        EX(5)="     CSSFLO      CSSTRA"                                  SUTERR.......23200
        EX(6)="   ----------- -----------"                               SUTERR.......23300
        EX(7)="    'STEADY'    'STEADY'"                                 SUTERR.......23400
        EX(8)="   'TRANSIENT' 'TRANSIENT'"                               SUTERR.......23500
      ELSE IF (ERRCOD.EQ.'INP-7B&C-1') THEN                              SUTERR.......23600
        DS(1)="Unrecognized solver name."                                SUTERR.......23700
        EX(1)="In datasets 7B&C, valid solver selections are:"           SUTERR.......23800
        EX(2)=" "                                                        SUTERR.......23900
        DO 400 M=0,NSLVRS-1                                              SUTERR.......24000
           EX(M+3)=SOLWRD(M) // " --> " // SOLNAM(M)                     SUTERR.......24100
  400   CONTINUE                                                         SUTERR.......24200
        EX(NSLVRS+3)=" "                                                 SUTERR.......24300
        EX(NSLVRS+4)="Note that solver selections for P and U must be"   SUTERR.......24400
        EX(NSLVRS+5)="both DIRECT or both iterative."                    SUTERR.......24500
      ELSE IF (ERRCOD.EQ.'INP-7B&C-2') THEN                              SUTERR.......24600
        DS(1)="Solver selections for P and U are not both DIRECT or"     SUTERR.......24700
        DS(2)="both iterative."                                          SUTERR.......24800
        EX(1)="The solver selections for P and U must be both"           SUTERR.......24900
        EX(2)="DIRECT or both iterative."                                SUTERR.......25000
      ELSE IF (ERRCOD.EQ.'INP-7B&C-3') THEN                              SUTERR.......25100
        DS(1)="Invalid selection of the CG solver."                      SUTERR.......25200
        EX(1)="The CG solver may be used only for the flow (P) equation" SUTERR.......25300
        EX(2)="with no upstream weighting (UP=0.0).  It may not be used" SUTERR.......25400
        EX(3)="for the transport (U) equation."                          SUTERR.......25500
C.....ERROR CODE 'INP-7B&C-4' IS NO LONGER USED.                         SUTERR.......25600
      ELSE IF (ERRCOD.EQ.'INP-3,19-1') THEN                              SUTERR.......25700
        DS(1)="The actual number of specified pressure nodes, "          SUTERR.......25800
     1        // CINERR(1) // ","                                        SUTERR.......25900
        DS(2)="does not equal the input value,                "          SUTERR.......26000
     1        // CINERR(2) // "."                                        SUTERR.......26100
        EX(1)="In dataset 3 of the main input file, the variable NPBC"   SUTERR.......26200
        EX(2)="must specify the exact number of specified pressure"      SUTERR.......26300
        EX(3)="nodes listed in dataset 19."                              SUTERR.......26400
      ELSE IF (ERRCOD.EQ.'INP-3,20-1') THEN                              SUTERR.......26500
        DS(1)="The actual number of specified conc. nodes, "             SUTERR.......26600
     1        // CINERR(1) // ","                                        SUTERR.......26700
        DS(2)="does not equal the input value,             "             SUTERR.......26800
     1        // CINERR(2) // "."                                        SUTERR.......26900
        EX(1)="In dataset 3 of the main input file, the variable NUBC"   SUTERR.......27000
        EX(2)="must specify the exact number of specified concentration" SUTERR.......27100
        EX(3)="nodes listed in dataset 20."                              SUTERR.......27200
      ELSE IF (ERRCOD.EQ.'INP-3,20-2') THEN                              SUTERR.......27300
        DS(1)="The actual number of specified temp. nodes, "             SUTERR.......27400
     1        // CINERR(1) // ","                                        SUTERR.......27500
        DS(2)="does not equal the input value,             "             SUTERR.......27600
     1        // CINERR(2) // "."                                        SUTERR.......27700
        EX(1)="In dataset 3 of the main input file, the variable NUBC"   SUTERR.......27800
        EX(2)="must specify the exact number of specified temperature"   SUTERR.......27900
        EX(3)="nodes listed in dataset 20."                              SUTERR.......28000
      ELSE IF (ERRCOD.EQ.'INP-3,21A-1') THEN                             SUTERR.......28100
        DS(1)="The actual number of generalized-flow nodes, "            SUTERR.......28200
     1        // CINERR(1) // ","                                        SUTERR.......28300
        DS(2)="does not equal the input value,                "          SUTERR.......28400
     1        // CINERR(2) // "."                                        SUTERR.......28500
        EX(1)="In dataset 3 of the main input file, the variable NPBG"   SUTERR.......28600
        EX(2)="must specify the exact number of specified pressure"      SUTERR.......28700
        EX(3)="nodes listed in dataset 21A."                             SUTERR.......28800
      ELSE IF (ERRCOD.EQ.'INP-3,21B-1') THEN                             SUTERR.......28900
        DS(1)="The actual number of generalized-transport nodes, "       SUTERR.......29000
     1        // CINERR(1) // ","                                        SUTERR.......29100
        DS(2)="does not equal the input value,                "          SUTERR.......29200
     1        // CINERR(2) // "."                                        SUTERR.......29300
        EX(1)="In dataset 3 of the main input file, the variable NUBG"   SUTERR.......29400
        EX(2)="must specify the exact number of specified pressure"      SUTERR.......29500
        EX(3)="nodes listed in dataset 21B."                             SUTERR.......29600
      ELSE IF (ERRCOD.EQ.'INP-22-1') THEN                                SUTERR.......29700
        DS(1)="Line 1 of the element incidence data does not begin with" SUTERR.......29800
        DS(2)="the word 'INCIDENCE'."                                    SUTERR.......29900
        EX(1)="In dataset 22 of the main input file, the first line"     SUTERR.......30000
        EX(2)="must begin with the word 'INCIDENCE'."                    SUTERR.......30100
      ELSE IF (ERRCOD.EQ.'INP-22-2') THEN                                SUTERR.......30200
        DS(1)="The incidence data for element " // CINERR(1)             SUTERR.......30300
        DS(2)="are not in numerical order in the dataset."               SUTERR.......30400
        EX(1)="In dataset 22 of the main input file, incidence data"     SUTERR.......30500
        EX(2)="must be listed in order of increasing element number."    SUTERR.......30600
        EX(3)="Note that the numbering of elements must begin at 1"      SUTERR.......30700
        EX(4)="and be continuous; element numbers may not be skipped."   SUTERR.......30800
      ELSE IF (ERRCOD.EQ.'INP-14B,22-1') THEN                            SUTERR.......30900
        DS(1)="At least one element has incorrect geometry."             SUTERR.......31000
        EX(1)="Incorrect element geometry can result from improper"      SUTERR.......31100
        EX(2)="specification of node coordinates in dataset 14B of the"  SUTERR.......31200
        EX(3)="main input file, or from improper ordering of nodes in"   SUTERR.......31300
        EX(4)="a node incidence list in dataset 22 of the same file."    SUTERR.......31400
      ELSE IF (ERRCOD.EQ.'FIL-1') THEN                                   SUTERR.......31500
        DS(1)="The file " // CHERR(2)                                    SUTERR.......31600
        DS(2)="does not exist."                                          SUTERR.......31700
        EX(1)="One of the files required by SUTRA does not exist."       SUTERR.......31800
        EX(2)="Check the filename and the directory path."               SUTERR.......31900
      ELSE IF (ERRCOD.EQ.'FIL-2') THEN                                   SUTERR.......32000
        DS(1)="The file " // CHERR(2)                                    SUTERR.......32100
        DS(2)="could not be opened on FORTRAN unit " // CINERR(1) // "." SUTERR.......32200
        EX(1)="One of the files required by SUTRA could not be opened."  SUTERR.......32300
        EX(2)="Check to make sure the file is not protected or in use"   SUTERR.......32400
        EX(3)="by another application, and that the FORTRAN unit number" SUTERR.......32500
        EX(4)="is valid."                                                SUTERR.......32600
C.....ERROR CODE 'FIL-3' IS NO LONGER USED.                              SUTERR.......32700
      ELSE IF (ERRCOD.EQ.'FIL-4') THEN                                   SUTERR.......32800
        DS(1)="An attempt was made to use the file"                      SUTERR.......32900
        DS(2)=CHERR(2)                                                   SUTERR.......33000
        DS(3)="for more than one purpose simultaneously."                SUTERR.......33100
        EX(1)='Each filename listed in "SUTRA.FIL" must be unique'       SUTERR.......33200
        EX(2)='and may not be reused in an "@INSERT" statement.'         SUTERR.......33300
        EX(3)='Also, if you have nested "@INSERT" statements'            SUTERR.......33400
        EX(4)='(i.e., a file inserted into a file, which is itself'      SUTERR.......33500
        EX(5)='inserted into a file, etc.), a given file may be'         SUTERR.......33600
        EX(6)='used only once in the nested sequence.'                   SUTERR.......33700
      ELSE IF (ERRCOD.EQ.'FIL-5') THEN                                   SUTERR.......33800
        DS(1)="Invalid file type: " // CHERR(2)                          SUTERR.......33900
        EX(1)="Valid file types are:"                                    SUTERR.......34000
        EX(2)='   INP (".inp" input file)'                               SUTERR.......34100
        EX(3)='   ICS (".ics" input file)'                               SUTERR.......34200
        EX(4)='   BCS (".bcs" input file)'                               SUTERR.......34300
        EX(5)='   SMY (".smy" output file)'                              SUTERR.......34400
        EX(6)='   LST (".lst" output file)'                              SUTERR.......34500
        EX(7)='   RST (".rst" output file)'                              SUTERR.......34600
        EX(8)='   NOD (".nod" output file)'                              SUTERR.......34700
        EX(9)='   ELE (".ele" output file)'                              SUTERR.......34800
        EX(10)='   OBS (".obs" output file)'                             SUTERR.......34900
        EX(11)='   OBC (".obc" output file)'                             SUTERR.......35000
        EX(12)='   BCOF (".bcof" output file)'                           SUTERR.......35100
        EX(13)='   BCOP (".bcop" output file)'                           SUTERR.......35200
        EX(14)='   BCOS (".bcos" output file)'                           SUTERR.......35300
        EX(15)='   BCOU (".bcou" output file)'                           SUTERR.......35400
      ELSE IF (ERRCOD.EQ.'FIL-6') THEN                                   SUTERR.......35500
        DS(1)="File type " // CHERR(2)                                   SUTERR.......35600
        DS(2)="has been assigned more than once."                        SUTERR.......35700
        EX(1)="The following file types must be assigned:"               SUTERR.......35800
        EX(2)='   INP (".inp" input file)'                               SUTERR.......35900
        EX(3)='   ICS (".ics" input file)'                               SUTERR.......36000
        EX(4)='   LST (".lst" output file)'                              SUTERR.......36100
        EX(5)="The following file types are optional:"                   SUTERR.......36200
        EX(6)='   BCS (".bcs" input file)'                               SUTERR.......36300
        EX(7)='   SMY (".smy" output file; defaults to "SUTRA.SMY")'     SUTERR.......36400
        EX(8)='   RST (".rst" output file)'                              SUTERR.......36500
        EX(9)='   NOD (".nod" output file)'                              SUTERR.......36600
        EX(10)='   ELE (".ele" output file)'                             SUTERR.......36700
        EX(11)='   OBS (".obs" output file)'                             SUTERR.......36800
        EX(12)='   OBC (".obc" output file)'                             SUTERR.......36900
        EX(13)='   BCOF (".bcof" output file)'                           SUTERR.......37000
        EX(14)='   BCOP (".bcop" output file)'                           SUTERR.......37100
        EX(15)='   BCOS (".bcos" output file)'                           SUTERR.......37200
        EX(16)='   BCOU (".bcou" output file)'                           SUTERR.......37300
        EX(17)="No file type except BCS may be assigned more than once." SUTERR.......37400
      ELSE IF (ERRCOD.EQ.'FIL-7') THEN                                   SUTERR.......37500
        DS(1)="Required file type " // CHERR(2)                          SUTERR.......37600
        DS(2)="has not been assigned."                                   SUTERR.......37700
        EX(1)="The following file types must be assigned:"               SUTERR.......37800
        EX(2)='   INP (".inp" input file)'                               SUTERR.......37900
        EX(3)='   ICS (".ics" input file)'                               SUTERR.......38000
        EX(4)='   LST (".lst" output file)'                              SUTERR.......38100
        EX(5)="The following file types are optional:"                   SUTERR.......38200
        EX(6)='   BCS (".bcs" input file)'                               SUTERR.......38300
        EX(7)='   SMY (".smy" output file; defaults to "SUTRA.SMY")'     SUTERR.......38400
        EX(8)='   RST (".rst" output file)'                              SUTERR.......38500
        EX(9)='   NOD (".nod" output file)'                              SUTERR.......38600
        EX(10)='   ELE (".ele" output file)'                             SUTERR.......38700
        EX(11)='   OBS (".obs" output file)'                             SUTERR.......38800
        EX(12)='   OBC (".obc" output file)'                             SUTERR.......38900
        EX(13)='   BCOF (".bcof" output file)'                           SUTERR.......39000
        EX(14)='   BCOP (".bcop" output file)'                           SUTERR.......39100
        EX(15)='   BCOS (".bcos" output file)'                           SUTERR.......39200
        EX(16)='   BCOU (".bcou" output file)'                           SUTERR.......39300
        EX(17)="No file type except BCS may be assigned more than once." SUTERR.......39400
      ELSE IF (ERRCOD.EQ.'FIL-8') THEN                                   SUTERR.......39500
        DS(1)="The file " // CHERR(2)                                    SUTERR.......39600
        DS(2)="could not be inserted."                                   SUTERR.......39700
        EX(1)="Inserts cannot be nested more than 20 levels deep."       SUTERR.......39800
      ELSE IF (ERRCOD.EQ.'FIL-9') THEN                                   SUTERR.......39900
        DS(1)="A file listed in 'SUTRA.FIL' is named 'SUTRA.FIL'."       SUTERR.......40000
        EX(1)="The filename 'SUTRA.FIL' is reserved by SUTRA."           SUTERR.......40100
        EX(2)="Files listed in 'SUTRA.FIL' may not be named"             SUTERR.......40200
        EX(3)="'SUTRA.FIL'."                                             SUTERR.......40300
      ELSE IF (ERRCOD.EQ.'FIL-10') THEN                                  SUTERR.......40400
        DS(1)="SUTRA was unable to automatically"                        SUTERR.......40500
        DS(2)="assign unit number " // CINERR(1)                         SUTERR.......40600
        DS(3)="to file " // CHERR(2)                                     SUTERR.......40700
        EX(1)="SUTRA attempted to automatically assign to one of the "   SUTERR.......40800
        EX(2)="files listed in 'SUTRA.FIL' a unit number that is not"    SUTERR.......40900
        EX(3)="allowed on this computer.  Please check the unit"         SUTERR.......41000
        EX(4)="number assignments in 'SUTRA.FIL'.  It may be possible"   SUTERR.......41100
        EX(5)="to avoid this problem by explicitly assigning a"          SUTERR.......41200
        EX(6)="different unit number to the file in question or by"      SUTERR.......41300
        EX(7)="reducing the number of optional files listed in"          SUTERR.......41400
        EX(8)="'SUTRA.FIL'."                                             SUTERR.......41500
      ELSE IF (ERRCOD.EQ.'INP-6-1') THEN                                 SUTERR.......41600
        DS(1)="NPCYC<1 and/or NUCYC<1."                                  SUTERR.......41700
        EX(1)="In dataset 6 of the main input file, both NPCYC and"      SUTERR.......41800
        EX(2)="NUCYC must be set greater than or equal to 1."            SUTERR.......41900
      ELSE IF (ERRCOD.EQ.'INP-6-2') THEN                                 SUTERR.......42000
        DS(1)="Neither NPCYC nor NUCYC is set to 1."                     SUTERR.......42100
        EX(1)="In dataset 6 of the main input file, either NPCYC or"     SUTERR.......42200
        EX(2)="NUCYC (or both) must be set to 1."                        SUTERR.......42300
      ELSE IF (ERRCOD.EQ.'INP-6-3') THEN                                 SUTERR.......42400
        DS(1)="DELT is greater than DTMAX."                              SUTERR.......42500
        EX(1)="In dataset 6 of the main input file, DELT must be set"    SUTERR.......42600
        EX(2)="less than or equal to DTMAX."                             SUTERR.......42700
      ELSE IF (ERRCOD.EQ.'INP-6-4') THEN                                 SUTERR.......42800
        DS(1)="The actual number of schedules listed does not equal"     SUTERR.......42900
        DS(2)="the input value, or the schedule list does not end"       SUTERR.......43000
        DS(3)="with '-'."                                                SUTERR.......43100
        EX(1)="In dataset 6 of the main input file, the number of"       SUTERR.......43200
        EX(2)="schedules listed must equal the number, NSCH, specified"  SUTERR.......43300
        EX(3)="in dataset 6 of the same file, and the final entry in"    SUTERR.......43400
        EX(4)="the list must be '-'."                                    SUTERR.......43500
        EX(5)=" "                                                        SUTERR.......43600
        EX(6)="Example of a valid dataset 6 with two schedules:"         SUTERR.......43700
        EX(7)="2   1   1"                                                SUTERR.......43800
        EX(8)="'TIME_STEPS' 'TIME CYCLE' 'ELAPSED'  1. 100   0. " //     SUTERR.......43900
     1     "3.e+9 3.e+7 999 1. 0. 1.e+99"                                SUTERR.......44000
        EX(9)="'SCHED_A'    'STEP LIST'        4   20  40  60  80"       SUTERR.......44100
        EX(10)="'-'"                                                     SUTERR.......44200
      ELSE IF (ERRCOD.EQ.'INP-6-5') THEN                                 SUTERR.......44300
        DS(1)="Multiple definitions of schedule " // CHERR(1)            SUTERR.......44400
        EX(1)="A given schedule name may not be defined more than once"  SUTERR.......44500
        EX(2)="in dataset 6 of the main input file."                     SUTERR.......44600
      ELSE IF (ERRCOD.EQ.'INP-6-6') THEN                                 SUTERR.......44700
        DS(1)="Invalid time descriptor " // CHERR(1)                     SUTERR.......44800
        EX(1)="Time-based schedules must be defined in terms of either"  SUTERR.......44900
        EX(2)="ABSOLUTE or ELAPSED times."                               SUTERR.......45000
      ELSE IF (ERRCOD.EQ.'INP-6-7') THEN                                 SUTERR.......45100
        DS(1)="ELAPSED times in TIME_STEPS schedule,"                    SUTERR.......45200
        DS(2)="but initial elapsed time is not zero."                    SUTERR.......45300
        EX(1)="When the TIME_STEPS schedule is defined in terms of"      SUTERR.......45400
        EX(2)="ELAPSED times, the first (initial) elapsed time in the"   SUTERR.......45500
        EX(3)="schedule must be set to zero."                            SUTERR.......45600
      ELSE IF (ERRCOD.EQ.'INP-6-8') THEN                                 SUTERR.......45700
        DS(1)="Invalid number of schedules (NSCH<0)."                    SUTERR.......45800
        EX(1)="The number of schedules, NSCH, must be non-negative."     SUTERR.......45900
        EX(2)="NSCH=0 is allowed only if flow and transport are both"    SUTERR.......46000
        EX(3)="steady-state."                                            SUTERR.......46100
      ELSE IF (ERRCOD.EQ.'INP-6-9') THEN                                 SUTERR.......46200
        DS(1)="Invalid schedule type " // CHERR(1)                       SUTERR.......46300
        EX(1)="An invalid schedule type has been specified."             SUTERR.......46400
        EX(2)="Valid schedule types are:"                                SUTERR.......46500
        EX(3)="   'TIME CYCLE'"                                          SUTERR.......46600
        EX(4)="   'TIME LIST'"                                           SUTERR.......46700
        EX(5)="   'STEP CYCLE'"                                          SUTERR.......46800
        EX(6)="   'STEP LIST'"                                           SUTERR.......46900
      ELSE IF (ERRCOD.EQ.'INP-6-10') THEN                                SUTERR.......47000
        DS(1)="Incomplete TIME_STEPS schedule."                          SUTERR.......47100
        EX(1)="The TIME_STEPS schedule must contain at least two"        SUTERR.......47200
        EX(2)="distinct times, including the starting time."             SUTERR.......47300
      ELSE IF (ERRCOD.EQ.'INP-6-11') THEN                                SUTERR.......47400
        DS(1)="Invalid user-defined schedule name, " // TRIM(CHERR(1))   SUTERR.......47500
        EX(1)="Schedule names 'STEP_0', 'STEP_1', and 'STEPS_1&UP'"      SUTERR.......47600
        EX(2)="are reserved by SUTRA and may not be used to name a"      SUTERR.......47700
        EX(3)="user-defined schedule."                                   SUTERR.......47800
      ELSE IF (ERRCOD.EQ.'INP-6-12') THEN                                SUTERR.......47900
        DS(1)="Repeated " // TRIM(CHERR(1)) // " " // CRLERR(1)          SUTERR.......48000
        DS(2)="in schedule " // CHERR(2)                                 SUTERR.......48100
        EX(1)="A time or time step value may not appear more than once"  SUTERR.......48200
        EX(2)="in a given schedule."                                     SUTERR.......48300
      ELSE IF (ERRCOD.EQ.'INP-6-13') THEN                                SUTERR.......48400
        DS(1)="Invalid number of schedules (NSCH=0)."                    SUTERR.......48500
        EX(1)="NSCH=0 is allowed only if flow and transport are both"    SUTERR.......48600
        EX(2)="steady-state."                                            SUTERR.......48700
      ELSE IF (ERRCOD.EQ.'INP-6-14') THEN                                SUTERR.......48800
        DS(1)="Missing TIME_STEPS schedule."                             SUTERR.......48900
        EX(1)="When transport is transient, a TIME_STEPS schedule must"  SUTERR.......49000
        EX(2)="be defined by the user in dataset 6."                     SUTERR.......49100
      ELSE IF (ERRCOD.EQ.'INP-6-15') THEN                                SUTERR.......49200
        DS(1)="Schedule name " // CHERR(1)                               SUTERR.......49300
        DS(2)="is too long"                                              SUTERR.......49400
        EX(1)="Schedule names are limited to 10 characters."             SUTERR.......49500
      ELSE IF (ERRCOD.EQ.'INP-6-16') THEN                                SUTERR.......49600
        DS(1)="Invalid solution cycling."                                SUTERR.......49700
        EX(1)="When lakes are used, must set NPCYC=NUCYC=1."             SUTERR.......49800
      ELSE IF (ERRCOD.EQ.'INP-6-17') THEN                                SUTERR.......49900
        DS(1)="Entry for " // TRIM(CHERR(1)) // " " // CRLERR(1)         SUTERR.......50000
        DS(2)="out of numerical order in schedule " // CHERR(2)          SUTERR.......50100
        EX(1)="Times and time step values must be listed in ascending"   SUTERR.......50200
        EX(2)="order in a given schedule."                               SUTERR.......50300
      ELSE IF (ERRCOD.EQ.'INP-6-18') THEN                                SUTERR.......50400
        DS(1)="Schedule 'TIME_STEPS' not listed first."                  SUTERR.......50500
        EX(1)="Schedule 'TIME_STEPS' must appear first in the list"      SUTERR.......50600
        EX(2)="of schedules in dataset 6."                               SUTERR.......50700
      ELSE IF ((ERRCOD.EQ.'INP-8A-1').OR.(ERRCOD.EQ.'INP-8A-2')          SUTERR.......50800
     1     .OR.(ERRCOD.EQ.'INP-8A-3').OR.(ERRCOD.EQ.'INP-8A-4')          SUTERR.......50900
     2     .OR.(ERRCOD.EQ.'INP-8A-5').OR.(ERRCOD.EQ.'INP-8A-6')          SUTERR.......51000
     3     .OR.(ERRCOD.EQ.'INP-8A-7').OR.(ERRCOD.EQ.'INP-8A-8')          SUTERR.......51100
     4     .OR.(ERRCOD.EQ.'INP-8A-9')) THEN                              SUTERR.......51200
        DS(1)=CHERR(1)(1:6) // " is not 'Y' or 'N'."                     SUTERR.......51300
        EX(1)="In dataset 8A of the main input file, " // CHERR(1)(1:6)  SUTERR.......51400
        EX(2)="must be set to either 'Y' or 'N'."                        SUTERR.......51500
        EX(3)=" "                                                        SUTERR.......51600
        EX(4)="Example of a valid dataset 8A:"                           SUTERR.......51700
        EX(5)="10  'N' 'N' 'N' 'Y' 'Y' 'Y' 'Y' 'Y' 'Y' 'Y' 'Y'"          SUTERR.......51800
      ELSE IF (ERRCOD.EQ.'INP-8B-1') THEN                                SUTERR.......51900
        DS(1)="Node number listed in column other than column 1."        SUTERR.......52000
        EX(1)="In dataset 8B of the main input file, if the node number" SUTERR.......52100
        EX(2)="is to appear, it must appear only in column 1, i.e.,"     SUTERR.......52200
        EX(3)="only NCOL(1) can be set to 'N'."                          SUTERR.......52300
      ELSE IF (ERRCOD.EQ.'INP-8B-2') THEN                                SUTERR.......52400
        DS(1)="Specified that 'Z' be output for a 2D problem."           SUTERR.......52500
        EX(1)="In dataset 8B of the main input file, 'Z' can be listed"  SUTERR.......52600
        EX(2)="only if the problem is 3D."                               SUTERR.......52700
      ELSE IF (ERRCOD.EQ.'INP-8B-3') THEN                                SUTERR.......52800
        DS(1)="Unrecognized value for NCOL."                             SUTERR.......52900
        EX(1)="In dataset 8B of the main input file, the following"      SUTERR.......53000
        EX(2)="variables may be listed:"                                 SUTERR.......53100
        EX(3)=" "                                                        SUTERR.......53200
        EX(4)="'N'  =  node number (if used, it must appear first)"      SUTERR.......53300
        EX(5)="'X'  =  X-coordinate of node"                             SUTERR.......53400
        EX(6)="'Y'  =  Y-coordinate of node"                             SUTERR.......53500
        EX(7)="'Z'  =  Z-coordinate of node (3D only)"                   SUTERR.......53600
        EX(8)="'P'  =  pressure"                                         SUTERR.......53700
        EX(9)="'U'  =  concentration or temperature"                     SUTERR.......53800
        EX(10)="'S'  =  saturation"                                      SUTERR.......53900
        EX(11)=" "                                                       SUTERR.......54000
        EX(12)="The symbol '-' (a single dash) is used to end the list." SUTERR.......54100
        EX(13)="Any symbols following '-' are ignored."                  SUTERR.......54200
        EX(14)=" "                                                       SUTERR.......54300
        EX(15)="Example of a valid dataset 8B for a 3D problem:"         SUTERR.......54400
        EX(16)="10  'N'  'X'  'Y'  'Z'  'S'  'U'  '-'"                   SUTERR.......54500
      ELSE IF (ERRCOD.EQ.'INP-8C-1') THEN                                SUTERR.......54600
        DS(1)="Element number listed in column other than column 1."     SUTERR.......54700
        EX(1)="In dataset 8C of the main input file, if the element"     SUTERR.......54800
        EX(2)="number is to appear, it must appear only in column 1,"    SUTERR.......54900
        EX(3)="i.e., only LCOL(1) can be set to 'E'."                    SUTERR.......55000
      ELSE IF (ERRCOD.EQ.'INP-8C-2') THEN                                SUTERR.......55100
        DS(1)="Specified that 'Z' be output for a 2D problem."           SUTERR.......55200
        EX(1)="In dataset 8C of the main input file, 'Z' can be listed"  SUTERR.......55300
        EX(2)="only if the problem is 3D."                               SUTERR.......55400
      ELSE IF (ERRCOD.EQ.'INP-8C-3') THEN                                SUTERR.......55500
        DS(1)="Unrecognized value for LCOL."                             SUTERR.......55600
        EX(1)="In dataset 8C of the main input file, the following"      SUTERR.......55700
        EX(2)="variables may be listed:"                                 SUTERR.......55800
        EX(3)=" "                                                        SUTERR.......55900
        EX(4)="'E'  =  element number (if used, it must appear first)"   SUTERR.......56000
        EX(5)="'X'  =  X-coordinate of element centroid"                 SUTERR.......56100
        EX(6)="'Y'  =  Y-coordinate of element centroid"                 SUTERR.......56200
        EX(7)="'Z'  =  Z-coordinate of element centroid (3D only)"       SUTERR.......56300
        EX(8)="'VX'  =  X-component of fluid velocity"                   SUTERR.......56400
        EX(9)="'VY'  =  Y-component of fluid velocity"                   SUTERR.......56500
        EX(10)="'VZ'  =  Z-component of fluid velocity (3D only)"        SUTERR.......56600
        EX(11)=" "                                                       SUTERR.......56700
        EX(12)="The symbol '-' (a single dash) is used to end the list." SUTERR.......56800
        EX(13)="Any symbols following '-' are ignored."                  SUTERR.......56900
        EX(14)=" "                                                       SUTERR.......57000
        EX(15)="Example of a valid dataset 8B for a 3D problem:"         SUTERR.......57100
        EX(16)="10  'E'  'X'  'Y'  'Z'  'VX'  'VY'  'VZ'  '-'"           SUTERR.......57200
      ELSE IF (ERRCOD.EQ.'INP-8C-4') THEN                                SUTERR.......57300
        DS(1)="Specified that 'VZ' be output for a 2D problem."          SUTERR.......57400
        EX(1)="In dataset 8C of the main input file, 'VZ' can be listed" SUTERR.......57500
        EX(2)="only if the problem is 3D."                               SUTERR.......57600
      ELSE IF (ERRCOD.EQ.'INP-8D-1') THEN                                SUTERR.......57700
        DS(1)="The actual number of observation points listed does not"  SUTERR.......57800
        DS(2)="equal the input value, or the observation point list"     SUTERR.......57900
        DS(3)="does not end with a zero."                                SUTERR.......58000
        EX(1)="In dataset 8D of the main input file, the number of"      SUTERR.......58100
        EX(2)="points listed must equal the number, NOBS, specified in"  SUTERR.......58200
        EX(3)="dataset 3 of the same file, and a zero must appear after" SUTERR.......58300
        EX(4)="the last point in the list when the old format is used."  SUTERR.......58400
        EX(5)="Any information appearing after the zero is ignored."     SUTERR.......58500
        EX(6)=" "                                                        SUTERR.......58600
        EX(7)="Example of a valid old-format dataset 8D with three"      SUTERR.......58700
        EX(8)="observation points (nodes 45, 46, and 7347),"             SUTERR.......58800
        EX(9)="assuming NN>=7347:"                                       SUTERR.......58900
        EX(10)="10   45   46   7347   0"                                 SUTERR.......59000
      ELSE IF (ERRCOD.EQ.'INP-8D-2') THEN                                SUTERR.......59100
        DS(1)="The observation node list contains an invalid node"       SUTERR.......59200
        DS(2)="number."                                                  SUTERR.......59300
        EX(1)="In dataset 8D of the main input file, all node numbers"   SUTERR.......59400
        EX(2)="must be greater than or equal to 1, and less than or"     SUTERR.......59500
        EX(3)="equal to NN, the total number of nodes.  The last entry"  SUTERR.......59600
        EX(4)="must be a zero, which signals the end of the list."       SUTERR.......59700
        EX(5)=" "                                                        SUTERR.......59800
        EX(6)="Example of a valid old-format dataset 8D with three"      SUTERR.......59900
        EX(7)="observation nodes (45, 46, and 7347),"                    SUTERR.......60000
        EX(8)="assuming NN>=7347:"                                       SUTERR.......60100
        EX(9)="10   45   46   7347   0"                                  SUTERR.......60200
      ELSE IF (ERRCOD.EQ.'INP-8D-3') THEN                                SUTERR.......60300
        DS(1)="Element not found for the following observation point:"   SUTERR.......60400
        DS(2)="   " // CHERR(1)                                          SUTERR.......60500
        DS(3)="   " // CHERR(2)                                          SUTERR.......60600
        EX(1)="SUTRA was unable to find an element that contains"        SUTERR.......60700
        EX(2)="the observation point named above.  Please check"         SUTERR.......60800
        EX(3)="to make sure the coordinates specified for that"          SUTERR.......60900
        EX(4)="observation point are within the model domain."           SUTERR.......61000
      ELSE IF (ERRCOD.EQ.'INP-8D-4') THEN                                SUTERR.......61100
        DS(1)="The actual number of observation points listed does not"  SUTERR.......61200
        DS(2)="equal the input value, or the observation point list"     SUTERR.......61300
        DS(3)="does not end with '-'."                                   SUTERR.......61400
        EX(1)="In dataset 8D of the main input file, the number of"      SUTERR.......61500
        EX(2)="points listed must equal the number, NOBS, specified in"  SUTERR.......61600
        EX(3)="dataset 3 of the same file, and the final entry in the"   SUTERR.......61700
        EX(4)="list must be '-'."                                        SUTERR.......61800
        EX(5)=" "                                                        SUTERR.......61900
        EX(6)="Example of a valid dataset 8D with two 3D observation"    SUTERR.......62000
        EX(7)="points, assuming schedules A and B have been defined:"    SUTERR.......62100
        EX(8)="100"                                                      SUTERR.......62200
        EX(9)="'POINT_1'     0.   100.   500.   'A'   'OBS'"             SUTERR.......62300
        EX(10)="'POINT_2'   100.   200.   800.   'B'   'OBC'"            SUTERR.......62400
        EX(11)="'-'"                                                     SUTERR.......62500
      ELSE IF (ERRCOD.EQ.'INP-8D-5') THEN                                SUTERR.......62600
        DS(1)="Undefined schedule " // CHERR(1)                          SUTERR.......62700
        DS(2)="specified for observation " // CHERR(2)                   SUTERR.......62800
        EX(1)="The output schedule specified for one of the"             SUTERR.......62900
        EX(2)="observation points has not been defined in dataset 6"     SUTERR.......63000
        EX(3)="of the main input file."                                  SUTERR.......63100
      ELSE IF (ERRCOD.EQ.'INP-8D-6') THEN                                SUTERR.......63200
        DS(1)="Schedule name " // CHERR(1)                               SUTERR.......63300
        DS(2)="is too long"                                              SUTERR.......63400
        EX(1)="Schedule names are limited to 10 characters."             SUTERR.......63500
      ELSE IF (ERRCOD.EQ.'INP-8E-1') THEN                                SUTERR.......63600
        DS(1)=CHERR(1)(1:6) // " is not 'Y' or 'N'."                     SUTERR.......63700
        EX(1)="In dataset 8E of the main input file, " // CHERR(1)(1:6)  SUTERR.......63800
        EX(2)="must be set to either 'Y' or 'N'."                        SUTERR.......63900
        EX(3)=" "                                                        SUTERR.......64000
        EX(4)="Example of a valid dataset 8E:"                           SUTERR.......64100
        EX(5)="1   1    1    1   'Y'"                                    SUTERR.......64200
      ELSE IF (ERRCOD.EQ.'INP-11-1') THEN                                SUTERR.......64300
        DS(1)="Unrecognized sorption model."                             SUTERR.......64400
        EX(1)="In dataset 11 of the main input file, the sorption model" SUTERR.......64500
        EX(2)="may be chosen from the following:"                        SUTERR.......64600
        EX(3)=" "                                                        SUTERR.......64700
        EX(4)="'NONE'       =  No sorption"                              SUTERR.......64800
        EX(5)="'LINEAR'     =  Linear sorption model"                    SUTERR.......64900
        EX(6)="'FREUNDLICH' =  Freundlich sorption model"                SUTERR.......65000
        EX(7)="'LANGMUIR'   =  Langmuir sorption model"                  SUTERR.......65100
      ELSE IF (ERRCOD.EQ.'INP-11-2') THEN                                SUTERR.......65200
        DS(1)="The second Freundlich sorption coefficient is less than"  SUTERR.......65300
        DS(2)="or equal to zero."                                        SUTERR.......65400
        EX(1)="In dataset 11 of the main input file, the second"         SUTERR.......65500
        EX(2)="coefficient, CHI2, must be positive if Freundlich"        SUTERR.......65600
        EX(3)="sorption is chosen."                                      SUTERR.......65700
      ELSE IF (ERRCOD.EQ.'INP-14A-1') THEN                               SUTERR.......65800
        DS(1)="Dataset 14A does not begin with the word 'NODE'."         SUTERR.......65900
        EX(1)="Dataset 14A of the main input file must begin with the"   SUTERR.......66000
        EX(2)="word 'NODE'."                                             SUTERR.......66100
        EX(3)=" "                                                        SUTERR.......66200
        EX(4)="Example of a valid dataset 14A:"                          SUTERR.......66300
        EX(5)="'NODE'  1000.  1000.  1.  0.1"                            SUTERR.......66400
      ELSE IF (ERRCOD.EQ.'INP-14B-1') THEN                               SUTERR.......66500
        DS(1)="Unsaturated region number greater than 10."               SUTERR.......66600
        EX(1)="For node " // CINERR(1)                                   SUTERR.......66700
        EX(2)="the unsaturated region number, "                          SUTERR.......66800
     1         // CINERR(2) // ","                                       SUTERR.......66900
        EX(3)="is greater than the maximum allowed, 10."                 SUTERR.......67000
      ELSE IF (ERRCOD.EQ.'INP-14B-2') THEN                               SUTERR.......67100
        DS(1)="Undefined unsaturated region number used."                SUTERR.......67200
        EX(1)="The unsaturated region number, "                          SUTERR.......67300
     1         // CINERR(2) // ","                                       SUTERR.......67400
        EX(2)="specified for node " // CINERR(1)                         SUTERR.......67500
        EX(3)="has not been defined in dataset 11B."                     SUTERR.......67600
      ELSE IF (ERRCOD.EQ.'INP-14B-3') THEN                               SUTERR.......67700
        DS(1)="Adsorption region number greater than 10."                SUTERR.......67800
        EX(1)="For node " // CINERR(1)                                   SUTERR.......67900
        EX(2)="the adsorption region number, "                           SUTERR.......68000
     1         // CINERR(2) // ","                                       SUTERR.......68100
        EX(3)="is greater than the maximum allowed, 10."                 SUTERR.......68200
      ELSE IF (ERRCOD.EQ.'INP-14B-4') THEN                               SUTERR.......68300
        DS(1)="Undefined adsorption region number used."                 SUTERR.......68400
        EX(1)="The adsorption region number, "                           SUTERR.......68500
     1         // CINERR(2) // ","                                       SUTERR.......68600
        EX(2)="specified for node " // CINERR(1)                         SUTERR.......68700
        EX(3)="has not been defined in dataset 11A."                     SUTERR.......68800
      ELSE IF (ERRCOD.EQ.'INP-15A-1') THEN                               SUTERR.......68900
        DS(1)="Dataset 15A does not begin with the word 'ELEMENT'."      SUTERR.......69000
        EX(1)="Dataset 15A of the main input file must begin with the"   SUTERR.......69100
        EX(2)="word 'ELEMENT'."                                          SUTERR.......69200
        EX(3)=" "                                                        SUTERR.......69300
        EX(4)="Example of a valid dataset 15A for a " // CHERR(1)(1:2)   SUTERR.......69400
     1         // " problem:"                                            SUTERR.......69500
        IF (CHERR(1).EQ."3D") THEN                                       SUTERR.......69600
          EX(5)="'ELEMENT' 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1." SUTERR.......69700
        ELSE                                                             SUTERR.......69800
          EX(5)="'ELEMENT' 1. 1. 1. 1. 1. 1. 1."                         SUTERR.......69900
        END IF                                                           SUTERR.......70000
      ELSE IF (ERRCOD.EQ.'ICS-1-1') THEN                                 SUTERR.......70100
        DS(1)="Unable to restart simulation."                            SUTERR.......70200
        EX(1)="The time step number from which the simulation is trying" SUTERR.......70300
        EX(2)="to restart (" // CINERR(1) // ") equals or exceeds the"   SUTERR.......70400
        EX(3)="number of the final time step (" // CINERR(2) // ")."     SUTERR.......70500
      ELSE IF (ERRCOD.EQ.'ICS-2-1') THEN                                 SUTERR.......70600
        DS(1)="Unrecognized initialization type."                        SUTERR.......70700
        EX(1)="In dataset 2 of the initial conditions input file,"       SUTERR.......70800
        EX(2)="the valid types of initializations for P are UNIFORM"     SUTERR.......70900
        EX(3)="and NONUNIFORM."                                          SUTERR.......71000
      ELSE IF (ERRCOD.EQ.'ICS-2-2') THEN                                 SUTERR.......71100
        DS(1)="Did not specify NONUNIFORM initial values during a WARM"  SUTERR.......71200
        DS(2)="start."                                                   SUTERR.......71300
        EX(1)="In dataset 2 of the initial conditions input file,"       SUTERR.......71400
        EX(2)="initial values for P must be specified as NONUNIFORM"     SUTERR.......71500
        EX(3)="during a WARM start (i.e., if CREAD='WARM' in dataset 4"  SUTERR.......71600
        EX(4)="of the main input file)."                                 SUTERR.......71700
      ELSE IF (ERRCOD.EQ.'ICS-3-1') THEN                                 SUTERR.......71800
        DS(1)="Unrecognized initialization type."                        SUTERR.......71900
        EX(1)="In dataset 3 of the initial conditions input file,"       SUTERR.......72000
        EX(2)="the valid types of initializations for U are UNIFORM"     SUTERR.......72100
        EX(3)="and NONUNIFORM."                                          SUTERR.......72200
      ELSE IF (ERRCOD.EQ.'ICS-3-2') THEN                                 SUTERR.......72300
        DS(1)="Did not specify NONUNIFORM initial values during a WARM"  SUTERR.......72400
        DS(2)="start."                                                   SUTERR.......72500
        EX(1)="In dataset 3 of the initial conditions input file,"       SUTERR.......72600
        EX(2)="initial values for U must be specified as NONUNIFORM"     SUTERR.......72700
        EX(3)="during a WARM start (i.e., if CREAD='WARM' in dataset 4"  SUTERR.......72800
        EX(4)="of the main input file)."                                 SUTERR.......72900
      ELSE IF (ERRCOD.EQ.'SOL-1') THEN                                   SUTERR.......73000
        DS(1)="Error returned by the " // CHERR(2)(1:10)                 SUTERR.......73100
        DS(2)="solver while solving for " // CHERR(1)(1:1) // "."        SUTERR.......73200
        EX(1)="The iterative solver has stopped because of an error."    SUTERR.......73300
        EX(2)="Error flag values are interpreted as follows:"            SUTERR.......73400
        EX(3)="  "                                                       SUTERR.......73500
        EX(4)="IERR = 2  =>  Method stalled or failed to converge in"    SUTERR.......73600
        EX(5)="              the maximum number of iterations allowed."  SUTERR.......73700
        EX(6)="IERR = 4  =>  Convergence tolerance set too tight for"    SUTERR.......73800
        EX(7)="              machine precision."                         SUTERR.......73900
        EX(8)="IERR = 5  =>  Method broke down because preconditioning"  SUTERR.......74000
        EX(9)="              matrix is non-positive-definite."           SUTERR.......74100
        EX(10)="IERR = 6  =>  Method broke down because matrix is non-"  SUTERR.......74200
        EX(11)="              positive-definite or nearly so."           SUTERR.......74300
        EX(12)=" "                                                       SUTERR.......74400
        EX(13)="If the P-solution resulted in a solver error, an"        SUTERR.......74500
        EX(14)="attempt was still made to obtain a U-solution."          SUTERR.......74600
        EX(15)="The last P and U solutions were written to the"          SUTERR.......74700
        EX(16)="appropriate output files (except the restart file)"      SUTERR.......74800
        EX(17)="whether or not they resulted in solver errors."          SUTERR.......74900
      ELSE IF (ERRCOD.EQ.'INP-3,17-1') THEN                              SUTERR.......75000
        DS(1)="The actual number of"                                     SUTERR.......75100
        DS(2)="specified fluid source nodes,   " // CINERR(1) // ","     SUTERR.......75200
        DS(3)="does not equal the input value, " // CINERR(2) // "."     SUTERR.......75300
        EX(1)="In dataset 3 of the main input file, the variable NSOP"   SUTERR.......75400
        EX(2)="must specify the exact number of specified fluid source"  SUTERR.......75500
        EX(3)="nodes listed in dataset 17."                              SUTERR.......75600
      ELSE IF (ERRCOD.EQ.'INP-3,18-1') THEN                              SUTERR.......75700
        DS(1)="The actual number of"                                     SUTERR.......75800
        DS(2)="specified " // CHERR(1)(1:6) // " source nodes,  "        SUTERR.......75900
     1         // CINERR(1) // ","                                       SUTERR.......76000
        DS(3)="does not equal the input value, " // CINERR(2) // "."     SUTERR.......76100
        EX(1)="In dataset 3 of the main input file, the variable NSOU"   SUTERR.......76200
        EX(2)="must specify the exact number of specified "              SUTERR.......76300
     1         // CHERR(1)(1:6) // " source"                             SUTERR.......76400
        EX(3)="nodes listed in dataset 18."                              SUTERR.......76500
      ELSE IF (ERRCOD.EQ.'INP-17-1') THEN                                SUTERR.......76600
        DS(1)="Invalid node number referenced in dataset 17: "           SUTERR.......76700
     1         // CINERR(1)                                              SUTERR.......76800
        EX(1)="Dataset 17 of the main input file contains a reference"   SUTERR.......76900
        EX(2)="to a non-existent node number.  All node numbers must"    SUTERR.......77000
        EX(3)="be less than or equal to the total number of nodes,"      SUTERR.......77100
        EX(4)="NN = " // CINERR(2)                                       SUTERR.......77200
        EX(5)="(excluding the negative sign that precedes nodes with"    SUTERR.......77300
        EX(6)="time-dependent boundary conditions)."                     SUTERR.......77400
      ELSE IF (ERRCOD.EQ.'INP-18-1') THEN                                SUTERR.......77500
        DS(1)="Invalid node number referenced in dataset 18: "           SUTERR.......77600
     1         // CINERR(1)                                              SUTERR.......77700
        EX(1)="Dataset 18 of the main input file contains a reference"   SUTERR.......77800
        EX(2)="to a non-existent node number.  All node numbers must"    SUTERR.......77900
        EX(3)="be less than or equal to the total number of nodes,"      SUTERR.......78000
        EX(4)="NN = " // CINERR(2)                                       SUTERR.......78100
        EX(5)="(excluding the negative sign that precedes nodes with"    SUTERR.......78200
        EX(6)="time-dependent boundary conditions)."                     SUTERR.......78300
      ELSE IF (ERRCOD.EQ.'INP-19-1') THEN                                SUTERR.......78400
        DS(1)="Invalid node number referenced in dataset 19: "           SUTERR.......78500
     1         // CINERR(1)                                              SUTERR.......78600
        EX(1)="Dataset 19 of the main input file contains a reference"   SUTERR.......78700
        EX(2)="to a non-existent node number.  All node numbers must"    SUTERR.......78800
        EX(3)="be less than or equal to the total number of nodes,"      SUTERR.......78900
        EX(4)="NN = " // CINERR(2)                                       SUTERR.......79000
        EX(5)="(excluding the negative sign that precedes nodes with"    SUTERR.......79100
        EX(6)="time-dependent boundary conditions)."                     SUTERR.......79200
      ELSE IF (ERRCOD.EQ.'INP-20-1') THEN                                SUTERR.......79300
        DS(1)="Invalid node number referenced in dataset 20: "           SUTERR.......79400
     1         // CINERR(1)                                              SUTERR.......79500
        EX(1)="Dataset 20 of the main input file contains a reference"   SUTERR.......79600
        EX(2)="to a non-existent node number.  All node numbers must"    SUTERR.......79700
        EX(3)="be less than or equal to the total number of nodes,"      SUTERR.......79800
        EX(4)="NN = " // CINERR(2)                                       SUTERR.......79900
        EX(5)="(excluding the negative sign that precedes nodes with"    SUTERR.......80000
        EX(6)="time-dependent boundary conditions)."                     SUTERR.......80100
      ELSE IF (ERRCOD.EQ.'INP-21A-1') THEN                               SUTERR.......80200
        DS(1)="Invalid node number referenced in dataset 21A: "          SUTERR.......80300
     1         // CINERR(1)                                              SUTERR.......80400
        EX(1)="Dataset 21A of the main input file contains a reference"  SUTERR.......80500
        EX(2)="to a non-existent node number.  All node numbers must"    SUTERR.......80600
        EX(3)="be less than or equal to the total number of nodes,"      SUTERR.......80700
        EX(4)="NN = " // CINERR(2)                                       SUTERR.......80800
        EX(5)="(excluding the negative sign that precedes nodes with"    SUTERR.......80900
        EX(6)="time-dependent boundary conditions)."                     SUTERR.......81000
      ELSE IF (ERRCOD.EQ.'INP-21A-2') THEN                               SUTERR.......81100
        DS(1)="Invalid pressures and/or flows specified in dataset 21A." SUTERR.......81200
        EX(1)="Pressures and flows specified in dataset 21A must obey"   SUTERR.......81300
        EX(2)="the following constraints:"                               SUTERR.......81400
        EX(3)="   PBG2 > PBG1"                                           SUTERR.......81500
        EX(4)="   QPBG2 <= QPBG1"                                        SUTERR.......81600
      ELSE IF (ERRCOD.EQ.'INP-21A-4') THEN                               SUTERR.......81700
        DS(1)="Invalid assignment of CUPBGO in dataset 21A."             SUTERR.......81800
        EX(1)="The type of outflow concentration or temperature"         SUTERR.......81900
        EX(2)="specification, CUPBGO, must be either direct ('DIR')"     SUTERR.......82000
        EX(3)="or relative ('REL') in dataset 21A."                      SUTERR.......82100
      ELSE IF (ERRCOD.EQ.'INP-21B-1') THEN                               SUTERR.......82200
        DS(1)="Invalid node number referenced in dataset 21B: "          SUTERR.......82300
     1         // CINERR(1)                                              SUTERR.......82400
        EX(1)="Dataset 21B of the main input file contains a reference"  SUTERR.......82500
        EX(2)="to a non-existent node number.  All node numbers must"    SUTERR.......82600
        EX(3)="be less than or equal to the total number of nodes,"      SUTERR.......82700
        EX(4)="NN = " // CINERR(2)                                       SUTERR.......82800
        EX(5)="(excluding the negative sign that precedes nodes with"    SUTERR.......82900
        EX(6)="time-dependent boundary conditions)."                     SUTERR.......83000
      ELSE IF (ERRCOD.EQ.'BCS-1-1') THEN                                 SUTERR.......83100
        DS(1)="Undefined schedule " // CHERR(1)                          SUTERR.......83200
        DS(2)="specified in BCS file " // CHERR(2)                       SUTERR.......83300
        EX(1)="The schedule specified in the BCS file mentioned"         SUTERR.......83400
        EX(2)="above has not been defined in dataset 6 of the"           SUTERR.......83500
        EX(3)="main input file."                                         SUTERR.......83600
      ELSE IF (ERRCOD.EQ.'BCS-1-2') THEN                                 SUTERR.......83700
        DS(1)="Schedule " // CHERR(1)                                    SUTERR.......83800
        DS(2)="used in BCS file " // CHERR(2)                            SUTERR.......83900
        DS(3)="includes a fractional time step number, " // CRLERR(1)    SUTERR.......84000
        EX(1)="Schedules that are used in BCS files must not include"    SUTERR.......84100
        EX(2)="fractional time step numbers.  Only whole-numbered"       SUTERR.......84200
        EX(3)="time steps (0, 1, 2, 3, etc.) are allowed."               SUTERR.......84300
      ELSE IF (ERRCOD.EQ.'BCS-1-3') THEN                                 SUTERR.......84400
        DS(1)="Undefined schedule " // CHERR(1)                          SUTERR.......84500
        DS(2)="specified in BCS file " // CHERR(2)                       SUTERR.......84600
        EX(1)="When transport is steady-state, user-defined"             SUTERR.......84700
        EX(2)="schedules are not in effect, and steady-state boundary"   SUTERR.......84800
        EX(3)="conditions in BCS files must be controlled using the"     SUTERR.......84900
        EX(4)="following schedules automatically defined by SUTRA:"      SUTERR.......85000
        EX(5)=" "                                                        SUTERR.......85100
        EX(6)="TIME_STEPS (time steps 0 and 1)"                          SUTERR.......85200
        EX(7)="STEP_0     (time step 0 only)"                            SUTERR.......85300
        EX(8)="STEP_1     (time step 1 only)"                            SUTERR.......85400
        EX(9)="STEPS_1&UP (equivalent to 'STEP_1' in this case)"         SUTERR.......85500
      ELSE IF (ERRCOD.EQ.'BCS-1-4') THEN                                 SUTERR.......85600
        DS(1)="Schedule name " // CHERR(1)                               SUTERR.......85700
        DS(2)="specified in BCS file " // CHERR(2)                       SUTERR.......85800
        DS(3)="is too long"                                              SUTERR.......85900
        EX(1)="Schedule names are limited to 10 characters."             SUTERR.......86000
      ELSE IF (ERRCOD.EQ.'BCS-2-1') THEN                                 SUTERR.......86100
        DS(1)="Transport boundary conditions"                            SUTERR.......86200
        DS(2)="are specified for time step 0"                            SUTERR.......86300
        DS(3)="in the BCS file mentioned above."                         SUTERR.......86400
        EX(1)="Boundary conditions for transport (BCS datasets 4 and 6)" SUTERR.......86500
        EX(2)="cannot be specified for time step 0.  If transport is"    SUTERR.......86600
        EX(3)="steady-state, use time step 1 (not 0) to specify"         SUTERR.......86700
        EX(4)="boundary conditions for transport in BCS files."          SUTERR.......86800
      ELSE IF (ERRCOD.EQ.'BCS-2,3-1') THEN                               SUTERR.......86900
        DS(1)="The actual number of time-"                               SUTERR.......87000
        DS(2)="varying fluid source nodes,     " // CINERR(1) // ","     SUTERR.......87100
        DS(3)="does not equal the input value, " // CINERR(2) // ","     SUTERR.......87200
        DS(4)="for BCS time step " // CINERR(3) // "."                   SUTERR.......87300
        EX(1)="In dataset 2 of the BCS file, the variable NSOP1"         SUTERR.......87400
        EX(2)="must specify the exact number of time-dependent fluid"    SUTERR.......87500
        EX(3)="source nodes listed in dataset 3."                        SUTERR.......87600
      ELSE IF (ERRCOD.EQ.'BCS-2,4-1') THEN                               SUTERR.......87700
        DS(1)="The actual number of time-"                               SUTERR.......87800
        DS(2)="varying " // CHERR(1)(1:6) // " source nodes,    "        SUTERR.......87900
     1         // CINERR(1) // ","                                       SUTERR.......88000
        DS(3)="does not equal the input value, " // CINERR(2) // ","     SUTERR.......88100
        DS(4)="for BCS time step " // CINERR(3) // "."                   SUTERR.......88200
        EX(1)="In dataset 2 of the BCS file, the variable NSOU1"         SUTERR.......88300
        EX(2)="must specify the exact number of time-dependent "         SUTERR.......88400
     1         // CHERR(1)(1:6) // " source"                             SUTERR.......88500
        EX(3)="nodes listed in dataset 4."                               SUTERR.......88600
      ELSE IF (ERRCOD.EQ.'BCS-2,5-1') THEN                               SUTERR.......88700
        DS(1)="The actual number of"                                     SUTERR.......88800
        DS(2)="TIME-DEPENDENT pressure nodes,    " // CINERR(1) // ","   SUTERR.......88900
        DS(3)="does not equal the input value, " // CINERR(2) // ","     SUTERR.......89000
        DS(4)="for BCS time step " // CINERR(3) // "."                   SUTERR.......89100
        EX(1)="In dataset 2 of the BCS file, the variable NPBC1"         SUTERR.......89200
        EX(2)="must specify the exact number of time-dependent"          SUTERR.......89300
        EX(3)="pressure nodes listed in dataset 5."                      SUTERR.......89400
      ELSE IF (ERRCOD.EQ.'BCS-2,6-1') THEN                               SUTERR.......89500
        DS(1)="The actual number of"                                     SUTERR.......89600
        DS(2)="TIME-DEPENDENT " // CHERR(1)(1:13) // " nodes,  "         SUTERR.......89700
     1         // CINERR(1) // ","                                       SUTERR.......89800
        DS(3)="does not equal the input value,   " // CINERR(2) // ","   SUTERR.......89900
        DS(4)="for BCS time step " // CINERR(3) // "."                   SUTERR.......90000
        EX(1)="In dataset 2 of the BCS file, the variable NUBC1"         SUTERR.......90100
        EX(2)="must specify the exact number of time-dependent "         SUTERR.......90200
     1         // CHERR(1)(1:13)                                         SUTERR.......90300
        EX(3)="nodes listed in dataset 6."                               SUTERR.......90400
      ELSE IF (ERRCOD.EQ.'BCS-2,7A-1') THEN                              SUTERR.......90500
        DS(1)="The actual number of"                                     SUTERR.......90600
        DS(2)="TIME-DEPENDENT generalized-flow nodes,    "               SUTERR.......90700
     1        // CINERR(1) // ","                                        SUTERR.......90800
        DS(3)="does not equal the input value, " // CINERR(2) // ","     SUTERR.......90900
        DS(4)="for BCS time step " // CINERR(3) // "."                   SUTERR.......91000
        EX(1)="In dataset 2 of the BCS file, the variable NPBG1"         SUTERR.......91100
        EX(2)="must specify the exact number of time-dependent"          SUTERR.......91200
        EX(3)="pressure nodes listed in dataset 7A."                     SUTERR.......91300
      ELSE IF (ERRCOD.EQ.'BCS-2,7B-1') THEN                              SUTERR.......91400
        DS(1)="The actual number of"                                     SUTERR.......91500
        DS(2)="TIME-DEPENDENT generalized-transport nodes,    "          SUTERR.......91600
     1        // CINERR(1) // ","                                        SUTERR.......91700
        DS(3)="does not equal the input value, " // CINERR(2) // ","     SUTERR.......91800
        DS(4)="for BCS time step " // CINERR(3) // "."                   SUTERR.......91900
        EX(1)="In dataset 2 of the BCS file, the variable NUBG1"         SUTERR.......92000
        EX(2)="must specify the exact number of time-dependent"          SUTERR.......92100
        EX(3)="pressure nodes listed in dataset 7B."                     SUTERR.......92200
      ELSE IF (ERRCOD.EQ.'BCS-3-1') THEN                                 SUTERR.......92300
        DS(1)="Invalid node number referenced in dataset 3: "            SUTERR.......92400
     1         // CINERR(1)                                              SUTERR.......92500
        DS(2)="on BCS time step " // CINERR(3) // "."                    SUTERR.......92600
        EX(1)="Dataset 3 of the BCS file contains a reference"           SUTERR.......92700
        EX(2)="to a non-existent node number.  All node numbers must"    SUTERR.......92800
        EX(3)="be less than or equal to the total number of nodes,"      SUTERR.......92900
        EX(4)="NN = " // CINERR(2)                                       SUTERR.......93000
        EX(5)="(excluding the negative sign that precedes node"          SUTERR.......93100
        EX(6)="numbers for inactive boundary conditions)."               SUTERR.......93200
      ELSE IF (ERRCOD.EQ.'BCS-3-2') THEN                                 SUTERR.......93300
        DS(1)="Invalid node number referenced in dataset 3: "            SUTERR.......93400
     1         // CINERR(1)                                              SUTERR.......93500
        DS(2)="on BCS time step " // CINERR(2) // "."                    SUTERR.......93600
        EX(1)="Dataset 3 of the BCS file contains a reference"           SUTERR.......93700
        EX(2)="to an unrecognized boundary-condition node number."       SUTERR.......93800
        EX(3)="Any node number used in dataset 3 of the BCS file must"   SUTERR.......93900
        EX(4)="also appear in dataset 17 of the main input file"         SUTERR.......94000
        EX(5)="(excluding the negative signs that precede node"          SUTERR.......94100
        EX(6)="numbers for inactive and BCTIME boundary conditions)."    SUTERR.......94200
      ELSE IF (ERRCOD.EQ.'BCS-4-1') THEN                                 SUTERR.......94300
        DS(1)="Invalid node number referenced in dataset 4: "            SUTERR.......94400
     1         // CINERR(1)                                              SUTERR.......94500
        DS(2)="on BCS time step " // CINERR(3) // "."                    SUTERR.......94600
        EX(1)="Dataset 4 of the BCS file contains a reference"           SUTERR.......94700
        EX(2)="to a non-existent node number.  All node numbers must"    SUTERR.......94800
        EX(3)="be less than or equal to the total number of nodes,"      SUTERR.......94900
        EX(4)="NN = " // CINERR(2)                                       SUTERR.......95000
        EX(5)="(excluding the negative sign that precedes node"          SUTERR.......95100
        EX(6)="numbers for inactive boundary conditions)."               SUTERR.......95200
      ELSE IF (ERRCOD.EQ.'BCS-4-2') THEN                                 SUTERR.......95300
        DS(1)="Invalid node number referenced in dataset 4: "            SUTERR.......95400
     1         // CINERR(1)                                              SUTERR.......95500
        DS(2)="on BCS time step " // CINERR(2) // "."                    SUTERR.......95600
        EX(1)="Dataset 4 of the BCS file contains a reference"           SUTERR.......95700
        EX(2)="to an unrecognized boundary-condition node number."       SUTERR.......95800
        EX(3)="Any node number used in dataset 4 of the BCS file must"   SUTERR.......95900
        EX(4)="also appear in dataset 18 of the main input file"         SUTERR.......96000
        EX(5)="(excluding the negative signs that precede node"          SUTERR.......96100
        EX(6)="numbers for inactive and BCTIME boundary conditions)."    SUTERR.......96200
      ELSE IF (ERRCOD.EQ.'BCS-5-1') THEN                                 SUTERR.......96300
        DS(1)="Invalid node number referenced in dataset 5: "            SUTERR.......96400
     1         // CINERR(1)                                              SUTERR.......96500
        DS(2)="on BCS time step " // CINERR(3) // "."                    SUTERR.......96600
        EX(1)="Dataset 5 of the BCS file contains a reference"           SUTERR.......96700
        EX(2)="to a non-existent node number.  All node numbers must"    SUTERR.......96800
        EX(3)="be less than or equal to the total number of nodes,"      SUTERR.......96900
        EX(4)="NN = " // CINERR(2)                                       SUTERR.......97000
        EX(5)="(excluding the negative sign that precedes node"          SUTERR.......97100
        EX(6)="numbers for inactive boundary conditions)."               SUTERR.......97200
      ELSE IF (ERRCOD.EQ.'BCS-5-2') THEN                                 SUTERR.......97300
        DS(1)="Invalid node number referenced in dataset 5: "            SUTERR.......97400
     1         // CINERR(1)                                              SUTERR.......97500
        DS(2)="on BCS time step " // CINERR(2) // "."                    SUTERR.......97600
        EX(1)="Dataset 5 of the BCS file contains a reference"           SUTERR.......97700
        EX(2)="to an unrecognized boundary-condition node number."       SUTERR.......97800
        EX(3)="Any node number used in dataset 5 of the BCS file must"   SUTERR.......97900
        EX(4)="also appear in dataset 19 of the main input file"         SUTERR.......98000
        EX(5)="(excluding the negative signs that precede node"          SUTERR.......98100
        EX(6)="numbers for inactive and BCTIME boundary conditions)."    SUTERR.......98200
      ELSE IF (ERRCOD.EQ.'BCS-6-1') THEN                                 SUTERR.......98300
        DS(1)="Invalid node number referenced in dataset 6: "            SUTERR.......98400
     1         // CINERR(1)                                              SUTERR.......98500
        DS(2)="on BCS time step " // CINERR(3) // "."                    SUTERR.......98600
        EX(1)="Dataset 6 of the BCS file contains a reference"           SUTERR.......98700
        EX(2)="to a non-existent node number.  All node numbers must"    SUTERR.......98800
        EX(3)="be less than or equal to the total number of nodes,"      SUTERR.......98900
        EX(4)="NN = " // CINERR(2)                                       SUTERR.......99000
        EX(5)="(excluding the negative sign that precedes node"          SUTERR.......99100
        EX(6)="numbers for inactive boundary conditions)."               SUTERR.......99200
      ELSE IF (ERRCOD.EQ.'BCS-6-2') THEN                                 SUTERR.......99300
        DS(1)="Invalid node number referenced in dataset 6: "            SUTERR.......99400
     1         // CINERR(1)                                              SUTERR.......99500
        DS(2)="on BCS time step " // CINERR(2) // "."                    SUTERR.......99600
        EX(1)="Dataset 6 of the BCS file contains a reference"           SUTERR.......99700
        EX(2)="to an unrecognized boundary-condition node number."       SUTERR.......99800
        EX(3)="Any node number used in dataset 6 of the BCS file must"   SUTERR.......99900
        EX(4)="also appear in dataset 20 of the main input file"         SUTERR......100000
        EX(5)="(excluding the negative signs that precede node"          SUTERR......100100
        EX(6)="numbers for inactive and BCTIME boundary conditions)."    SUTERR......100200
      ELSE IF (ERRCOD.EQ.'BCS-7A-1') THEN                                SUTERR......100300
        DS(1)="Invalid node number referenced in dataset 7A: "           SUTERR......100400
     1         // CINERR(1)                                              SUTERR......100500
        DS(2)="on BCS time step " // CINERR(3) // "."                    SUTERR......100600
        EX(1)="Dataset 7A of the BCS file contains a reference"          SUTERR......100700
        EX(2)="to a non-existent node number.  All node numbers must"    SUTERR......100800
        EX(3)="be less than or equal to the total number of nodes,"      SUTERR......100900
        EX(4)="NN = " // CINERR(2)                                       SUTERR......101000
        EX(5)="(excluding the negative sign that precedes node"          SUTERR......101100
        EX(6)="numbers for inactive boundary conditions)."               SUTERR......101200
      ELSE IF (ERRCOD.EQ.'BCS-7A-2') THEN                                SUTERR......101300
        DS(1)="Invalid node number referenced in dataset 7A: "           SUTERR......101400
     1         // CINERR(1)                                              SUTERR......101500
        DS(2)="on BCS time step " // CINERR(2) // "."                    SUTERR......101600
        EX(1)="Dataset 7A of the BCS file contains a reference"          SUTERR......101700
        EX(2)="to an unrecognized boundary-condition node number."       SUTERR......101800
        EX(3)="Any node number used in dataset 7A of the BCS file must"  SUTERR......101900
        EX(4)="also appear in dataset 21A of the main input file"        SUTERR......102000
        EX(5)="(excluding the negative signs that precede node"          SUTERR......102100
        EX(6)="numbers for inactive and BCTIME boundary conditions)."    SUTERR......102200
      ELSE IF (ERRCOD.EQ.'BCS-7A-3') THEN                                SUTERR......102300
        DS(1)="Invalid pressures and/or flows specified in dataset 7A."  SUTERR......102400
        EX(1)="Pressures and flows specified in dataset 7A of the BCS"   SUTERR......102500
        EX(2)="file must obey the following constraints:"                SUTERR......102600
        EX(3)="   PBG21 > PBG11"                                         SUTERR......102700
        EX(4)="   QPBG21 <= QPBG11"                                      SUTERR......102800
      ELSE IF (ERRCOD.EQ.'BCS-7A-4') THEN                                SUTERR......102900
        DS(1)="Invalid assignment of CUPBGO1 in dataset 7A."             SUTERR......103000
        EX(1)="The type of outflow concentration or temperature"         SUTERR......103100
        EX(2)="specification, CUPBGO1, must be either direct ('DIR')"    SUTERR......103200
        EX(3)="or relative ('REL') in dataset 7A."                       SUTERR......103300
      ELSE IF (ERRCOD.EQ.'BCS-7B-1') THEN                                SUTERR......103400
        DS(1)="Invalid node number referenced in dataset 7B: "           SUTERR......103500
     1         // CINERR(1)                                              SUTERR......103600
        DS(2)="on BCS time step " // CINERR(3) // "."                    SUTERR......103700
        EX(1)="Dataset 7B of the BCS file contains a reference"          SUTERR......103800
        EX(2)="to a non-existent node number.  All node numbers must"    SUTERR......103900
        EX(3)="be less than or equal to the total number of nodes,"      SUTERR......104000
        EX(4)="NN = " // CINERR(2)                                       SUTERR......104100
        EX(5)="(excluding the negative sign that precedes node"          SUTERR......104200
        EX(6)="numbers for inactive boundary conditions)."               SUTERR......104300
      ELSE IF (ERRCOD.EQ.'BCS-7B-2') THEN                                SUTERR......104400
        DS(1)="Invalid node number referenced in dataset 7B: "           SUTERR......104500
     1         // CINERR(1)                                              SUTERR......104600
        DS(2)="on BCS time step " // CINERR(2) // "."                    SUTERR......104700
        EX(1)="Dataset 7B of the BCS file contains a reference"          SUTERR......104800
        EX(2)="to an unrecognized boundary-condition node number."       SUTERR......104900
        EX(3)="Any node number used in dataset 7B of the BCS file must"  SUTERR......105000
        EX(4)="also appear in dataset 21B of the main input file"        SUTERR......105100
        EX(5)="(excluding the negative signs that precede node"          SUTERR......105200
        EX(6)="numbers for inactive and BCTIME boundary conditions)."    SUTERR......105300
      ELSE IF (ERRCOD.EQ.'BCS-7B-3') THEN                                SUTERR......105400
        DS(1)="Invalid concentrations/temperatures specified in"         SUTERR......105500
        DS(2)="dataset 7B."                                              SUTERR......105600
        EX(1)="Concentrations/temperatures specified in dataset 7B"      SUTERR......105700
        EX(2)="of the BCS file must obey the following constraint:"      SUTERR......105800
        EX(3)="   UBG21 <> UBG11"                                        SUTERR......105900
      ELSE IF (ERRCOD.EQ.'LKIN-3-1') THEN                                SUTERR......106000
        DS(1)="Initial lake specifiation at non-surface node "           SUTERR......106100
     1         // CINERR(1) // "."                                       SUTERR......106200
        EX(1)="An initial lake specification in the LKIN file"           SUTERR......106300
        EX(2)="has been made at a node that is not on the top"           SUTERR......106400
        EX(3)="surface of the groundwater model."                        SUTERR......106500
      ELSE IF (ERRCOD.EQ.'LKIN-3-2') THEN                                SUTERR......106600
        DS(1)="Initial lake specifiation at non-lake node "              SUTERR......106700
     1         // CINERR(1) // "."                                       SUTERR......106800
        EX(1)="An initial lake specification in the LKIN file"           SUTERR......106900
        EX(2)="has been made at a node at which lakes cannot"            SUTERR......107000
        EX(3)="form."                                                    SUTERR......107100
      ELSE IF (ERRCOD.EQ.'LKIN-3-3') THEN                                SUTERR......107200
        DS(1)="Invalid initial lake specification type "                 SUTERR......107300
     1         // CHERR(1) // "."                                        SUTERR......107400
        EX(1)="Valid initial lake specification types in the"            SUTERR......107500
        EX(2)="LKIN file are 'LAKE' and 'NODE'."                         SUTERR......107600
      ELSE IF (ERRCOD.EQ.'LKIN-3-4') THEN                                SUTERR......107700
        DS(1)="Initial lake specifiation at disqualified lake "          SUTERR......107800
     1         // CINERR(1) // "."                                       SUTERR......107900
        EX(1)="An initial lake specification in the LKIN file"           SUTERR......108000
        EX(2)="has been made in a lake that has been disqualified"       SUTERR......108100
        EX(3)="from forming because of lake-area limits."                SUTERR......108200
      ELSE IF (ERRCOD.EQ.'LKIN-3-5') THEN                                SUTERR......108300
        DS(1)="Initial stage specification at " // CHERR(1)(1:4)         SUTERR......108400
     1         // " " // CINERR(1) // "."                                SUTERR......108500
        DS(2)="results in overfilling of lake " // CINERR(2) // "."      SUTERR......108600
        EX(1)="An initial stage specification in the LKIN file"          SUTERR......108700
        EX(2)="has resulted in a lake being filled beyond its"           SUTERR......108800
        EX(3)="capacity."                                                SUTERR......108900
      ELSE IF (ERRCOD.EQ.'LKIN-3-6') THEN                                SUTERR......109000
        DS(1)="Multiple specifications implied for lake "                SUTERR......109100
     1         // CINERR(3)                                              SUTERR......109200
        DS(2)="by the following initial lake specifications:"            SUTERR......109300
        DS(3)= CHERR(1) // " " // CINERR(1)                              SUTERR......109400
        DS(4)= CHERR(2) // " " // CINERR(2)                              SUTERR......109500
        EX(1)="Two initial lake specifications result directly or"       SUTERR......109600
        EX(2)="indirectly in multiple specifications for a lake."        SUTERR......109700
      ELSE IF ((ERRCOD.EQ.'LKBC-2-1').OR.(ERRCOD.EQ.'LKBC-3-1').OR.      SUTERR......109800
     1         (ERRCOD.EQ.'LKBC-4-1').OR.(ERRCOD.EQ.'LKBC-5-1').OR.      SUTERR......109900
     2         (ERRCOD.EQ.'LKBC-6A-1').OR.(ERRCOD.EQ.'LKBC-6B-1')) THEN  SUTERR......110000
        DS(1)="First boundary-condition interaction specification"       SUTERR......110100
        DS(2)="for a dataset is not 'DEFAULT'."                          SUTERR......110200
        EX(1)="In datasets 2 - 6B of the LKBC file, the first"           SUTERR......110300
        EX(2)="boundary-condition interaction specification"             SUTERR......110400
        EX(3)="must be 'DEFAULT'."                                       SUTERR......110500
      ELSE IF ((ERRCOD.EQ.'LKBC-2-2').OR.(ERRCOD.EQ.'LKBC-3-2').OR.      SUTERR......110600
     1         (ERRCOD.EQ.'LKBC-4-2').OR.(ERRCOD.EQ.'LKBC-5-2').OR.      SUTERR......110700
     2         (ERRCOD.EQ.'LKBC-6A-2').OR.(ERRCOD.EQ.'LKBC-6B-2')) THEN  SUTERR......110800
        DS(1)="'DEFAULT' boundary-condition interaction specification"   SUTERR......110900
        DS(2)="is repeated within a dataset."                            SUTERR......111000
        EX(1)="In datasets 2 - 6B of the LKBC file, the 'DEFAULT'"       SUTERR......111100
        EX(2)="boundary-condition interaction specification"             SUTERR......111200
        EX(3)="must be listed first and must not be repeated"            SUTERR......111300
        EX(4)="within a given dataset."                                  SUTERR......111400
      ELSE IF ((ERRCOD.EQ.'LKBC-2-3').OR.(ERRCOD.EQ.'LKBC-3-3').OR.      SUTERR......111500
     1         (ERRCOD.EQ.'LKBC-4-3').OR.(ERRCOD.EQ.'LKBC-5-3').OR.      SUTERR......111600
     2         (ERRCOD.EQ.'LKBC-6A-3').OR.(ERRCOD.EQ.'LKBC-6B-3')) THEN  SUTERR......111700
        DS(1)="Unrecognized BCS file: " // CHERR(2)                      SUTERR......111800
        EX(1)="Each BCS file to which a boundary-condition interaction"  SUTERR......111900
        EX(2)="specification is applied must be listed in the"           SUTERR......112000
        EX(3)="'SUTRA.FIL' file."                                        SUTERR......112100
      ELSE IF (ERRCOD.EQ.'LKBC-6A-4') THEN                               SUTERR......112200
        DS(1)="Invalid interaction type: " // CHERR(2)                   SUTERR......112300
        EX(1)="The type of interaction between a generalized-flow"       SUTERR......112400
        EX(2)="condition and lakes must one of the following:"           SUTERR......112500
        EX(3)="'F' - analogous to fluid source/sink"                     SUTERR......112600
        EX(4)="'P' - analogous to specified pressure"                    SUTERR......112700
      ELSE IF (ERRCOD.EQ.'LKBC-6B-4') THEN                               SUTERR......112800
        DS(1)="Invalid interaction type: " // CHERR(2)                   SUTERR......112900
        EX(1)="The type of interaction between a generalized-flow"       SUTERR......113000
        EX(2)="condition and lakes must one of the following:"           SUTERR......113100
        EX(3)="'S' - analogous to solute/energy source/sink"             SUTERR......113200
        EX(4)="'U' - analogous to specified concentration/temperature"   SUTERR......113300
      ELSE IF (ERRCOD.EQ.'LKAR-1A-1') THEN                               SUTERR......113400
        DS(1)="Dataset 1A does not begin with the word 'LAKE'."          SUTERR......113500
        EX(1)="Dataset 1A of the LKAR input file must begin with the"    SUTERR......113600
        EX(2)="word 'LAKE'."                                             SUTERR......113700
      ELSE IF (ERRCOD.EQ.'LKAR-1B-1') THEN                               SUTERR......113800
        DS(1)="More than two children identified for lake "              SUTERR......113900
     1         // CINERR(1) // "."                                       SUTERR......114000
        EX(1)="The lake-bottom elevations specified in the LKAR"         SUTERR......114100
        EX(2)="file, or by default using the top of the groundwater"     SUTERR......114200
        EX(3)="model, result in the lake noted above to split into"      SUTERR......114300
        EX(4)="more than two child lakes because more than one sill"     SUTERR......114400
        EX(5)="is encountered simulataneously as the stage in that"      SUTERR......114500
        EX(6)="lake decreases.  This can be remedied by adjusting"       SUTERR......114600
        EX(7)="lake-bottom elevations using the LKAR file so that"       SUTERR......114700
        EX(8)="the relevant sills are no longer at the same elevation."  SUTERR......114800
      ELSE IF (ERRCOD.EQ.'LKAR-1B-2') THEN                               SUTERR......114900
        DS(1)="Invalid lake-bottom specification type "                  SUTERR......115000
     1         // CHERR(1) // "."                                        SUTERR......115100
        EX(1)="Valid lake-bottom specification types in the LKAR"        SUTERR......115200
        EX(2)="file and 'DEFAULT' and 'SPECIFIED'."                      SUTERR......115300
      ELSE IF (ERRCOD.EQ.'LKAR-1B-3') THEN                               SUTERR......115400
        DS(1)="Lake-area specification at non-surface node "             SUTERR......115500
     1         // CINERR(1) // "."                                       SUTERR......115600
        EX(1)="An lake-area specification in the LKAR file"              SUTERR......115700
        EX(2)="has been made at a node that is not on the top"           SUTERR......115800
        EX(3)="surface of the groundwater model."                        SUTERR......115900
      ELSE IF (ERRCOD.EQ.'LKAR-1B-4') THEN                               SUTERR......116000
        DS(1)="Number of lake-area specifications not equal to "         SUTERR......116100
     1         // CINERR(1) // "."                                       SUTERR......116200
        EX(1)="The number of lake-area specifications in the LKAR file"  SUTERR......116300
        EX(2)="is not equal to the specified number, NLAN."              SUTERR......116400
      ELSE IF (ERRCOD.EQ.'CON-1') THEN                                   SUTERR......116500
        CDUM80 = 's'                                                     SUTERR......116600
        IF (INERR(4).GT.13) THEN                                         SUTERR......116700
           LDUM = 1                                                      SUTERR......116800
        ELSE                                                             SUTERR......116900
           LDUM = 0                                                      SUTERR......117000
        END IF                                                           SUTERR......117100
        DS(1)="Simulation terminated due to unconverged non-linearity"   SUTERR......117200
        DS(2)="iterations.  Tolerance" // CDUM80(1:LDUM)                 SUTERR......117300
     1         // " for " // CHERR(1)(1:INERR(4))                        SUTERR......117400
        DS(3)="not reached."                                             SUTERR......117500
        EX(1)="The " // CHERR(1)(1:INERR(4)) // " solution"              SUTERR......117600
     1         // CDUM80(1:LDUM) // " failed"                            SUTERR......117700
        EX(2)="to converge to the specified tolerance"                   SUTERR......117800
     1         // CDUM80(1:LDUM) // " within"                            SUTERR......117900
        EX(3)="the maximum number of iterations allowed to resolve"      SUTERR......118000
        EX(4)="non-linearities.  The parameters that control these"      SUTERR......118100
        EX(5)="iterations are set in dataset 7A of the main input file." SUTERR......118200
      ELSE IF ((CODE(1).EQ.'REA').AND.(CODE(2).EQ.'FIL')) THEN           SUTERR......118300
        DS(1)='FORTRAN returned an error while reading "SUTRA.FIL".'     SUTERR......118400
        EX(1)='A FORTRAN error has occurred while reading "SUTRA.FIL".'  SUTERR......118500
        EX(2)="Error status flag values are interpreted as follows:"     SUTERR......118600
        EX(3)=" "                                                        SUTERR......118700
        EX(4)="IOSTAT < 0  =>  The end of a line was reached before"     SUTERR......118800
        EX(5)="                all the required data were read from"     SUTERR......118900
        EX(6)='                that line.  Check "SUTRA.FIL" for'        SUTERR......119000
        EX(7)="                missing data."                            SUTERR......119100
        EX(8)="IOSTAT > 0  =>  An error occurred while the input"        SUTERR......119200
        EX(9)="                file was being read.  Usually, this"      SUTERR......119300
        EX(10)="                indicates that the READ statement"       SUTERR......119400
        EX(11)="                encountered data of a type that is"      SUTERR......119500
        EX(12)="                incompatible with the type it expected." SUTERR......119600
        EX(13)='                Check "SUTRA.FIL" for typographical'     SUTERR......119700
        EX(14)="                errors and missing or extraneous data."  SUTERR......119800
      ELSE IF (CODE(1).EQ.'REA') THEN                                    SUTERR......119900
        IF (CODE(2).EQ.'INP') THEN                                       SUTERR......120000
           CDUM80 = 'main input'                                         SUTERR......120100
           LDUM = 10                                                     SUTERR......120200
        ELSE IF (CODE(2).EQ.'ICS') THEN                                  SUTERR......120300
           CDUM80 = 'initial conditions'                                 SUTERR......120400
           LDUM = 18                                                     SUTERR......120500
        ELSE IF (CODE(2).EQ.'BCS') THEN                                  SUTERR......120600
           CDUM80 = 'boundary conditions'                                SUTERR......120700
           LDUM = 19                                                     SUTERR......120800
        ELSE IF (CODE(2).EQ.'LKIN') THEN                                 SUTERR......120900
           CDUM80 = 'lakes main input'                                   SUTERR......121000
           LDUM = 16                                                     SUTERR......121100
        ELSE IF (CODE(2).EQ.'LKBC') THEN                                 SUTERR......121200
           CDUM80 = 'lake-bc interactions'                               SUTERR......121300
           LDUM = 20                                                     SUTERR......121400
        ELSE IF (CODE(2).EQ.'LKAR') THEN                                 SUTERR......121500
           CDUM80 = 'lake-area input'                                    SUTERR......121600
           LDUM = 15                                                     SUTERR......121700
        END IF                                                           SUTERR......121800
        IF ((CODE(2).EQ.'ICS').AND.(CODE(3).EQ.'4')) THEN                SUTERR......121900
          DS(1)="FORTRAN returned an error while reading the restart"    SUTERR......122000
          DS(2)="information following dataset 3 of the initial"         SUTERR......122100
          DS(3)="conditions."                                            SUTERR......122200
        ELSE IF (CODE(3).EQ.'INS') THEN                                  SUTERR......122300
          CALL PRSWDS(CHERR(1), '-', 3, CODUM, NWORDS)                   SUTERR......122400
          DS(1)="FORTRAN returned an error while reading an '@INSERT'"   SUTERR......122500
          DS(2)="statement in the vicinity of dataset " // CODUM(3)(1:3) SUTERR......122600
          DS(3)="of the " // CDUM80(1:LDUM) // "."                       SUTERR......122700
        ELSE                                                             SUTERR......122800
          DS(1)="FORTRAN returned an error while reading"                SUTERR......122900
          DS(2)="dataset " // CODE(3)(1:3)                               SUTERR......123000
     1           // " of the " // CDUM80(1:LDUM) // "."                  SUTERR......123100
        END IF                                                           SUTERR......123200
        EX(1)="A FORTRAN error has occurred while reading input data."   SUTERR......123300
        EX(2)="Error status flag values are interpreted as follows:"     SUTERR......123400
        EX(3)=" "                                                        SUTERR......123500
        EX(4)="IOSTAT < 0  =>  The end of a line was reached before"     SUTERR......123600
        EX(5)="                all the required data were read from"     SUTERR......123700
        EX(6)="                that line.  Check the specified dataset"  SUTERR......123800
        EX(7)="                for missing data or lines of data that"   SUTERR......123900
        EX(8)="                exceed 1000 characters."                  SUTERR......124000
        EX(9)="IOSTAT > 0  =>  An error occurred while the specified"    SUTERR......124100
        EX(10)="                dataset was being read.  Usually, this"  SUTERR......124200
        EX(11)="                indicates that the READ statement"       SUTERR......124300
        EX(12)="                encountered data of a type that is"      SUTERR......124400
        EX(13)="                incompatible with the type it expected." SUTERR......124500
        EX(14)="                Check the dataset for typographical"     SUTERR......124600
        EX(15)="                errors and missing or extraneous data."  SUTERR......124700
      ELSE IF (CODE(1).EQ.'COD') THEN                                    SUTERR......124800
        DS(1)="Unexpected condition encountered in the code."            SUTERR......124900
        EX(1)="SUTRA has encountered an unexpected condition that"       SUTERR......125000
        EX(2)="indicates a problem with the code.  Please contact"       SUTERR......125100
        EX(3)="the developer."                                           SUTERR......125200
      END IF                                                             SUTERR......125300
C                                                                        SUTERR......125400
C.....WRITE ERROR MESSAGE.  FORMAT DEPENDS ON THE TYPE OF ERROR.         SUTERR......125500
      IF ((CODE(1).EQ.'INP').OR.(CODE(1).EQ.'ICS').OR.                   SUTERR......125600
     1    (CODE(1).EQ.'BCS').OR.(CODE(1).EQ.'LKIN').OR.                  SUTERR......125700
     2    (CODE(1).EQ.'LKBC').OR.(CODE(1).EQ.'LKAR')) THEN               SUTERR......125800
C........ERROR TYPES 'INP', 'ICS', 'BCS', 'LKIN', 'LKBC', AND 'LKAR'     SUTERR......125900
C           (INPUT DATA ERROR)                                           SUTERR......126000
         IF (KSCRN.EQ.1)                                                 SUTERR......126100
     1      WRITE (*,1888) '           INPUT DATA ERROR           '      SUTERR......126200
         WRITE (K00,1888) '           INPUT DATA ERROR           '       SUTERR......126300
         IF (KSCRN.EQ.1) WRITE (*,1011)                                  SUTERR......126400
         WRITE (K00,1011)                                                SUTERR......126500
 1011    FORMAT (/1X,'DESCRIPTION')                                      SUTERR......126600
         IF (CODE(1).EQ.'INP') THEN                                      SUTERR......126700
            CDUM80 = FNAME(1)                                            SUTERR......126800
         ELSE IF (CODE(1).EQ.'ICS') THEN                                 SUTERR......126900
            CDUM80 = FNAME(2)                                            SUTERR......127000
         ELSE IF (CODE(1).EQ.'BCS') THEN                                 SUTERR......127100
            CDUM80 = FNAME(9)                                            SUTERR......127200
         ELSE IF (CODE(1).EQ.'LKIN') THEN                                SUTERR......127300
            CDUM80 = FNAME(16)                                           SUTERR......127400
         ELSE IF (CODE(1).EQ.'LKBC') THEN                                SUTERR......127500
            CDUM80 = FNAME(17)                                           SUTERR......127600
         ELSE IF (CODE(1).EQ.'LKAR') THEN                                SUTERR......127700
            CDUM80 = FNAME(18)                                           SUTERR......127800
         END IF                                                          SUTERR......127900
         IF (KSCRN.EQ.1) WRITE (*,1013) ERRCOD, CDUM80, CODE(2)          SUTERR......128000
         WRITE (K00,1013) ERRCOD, CDUM80, CODE(2)                        SUTERR......128100
 1013    FORMAT (/4X,'Error code:',2X,A40                                SUTERR......128200
     1           /4X,'File:      ',2X,A40                                SUTERR......128300
     1           /4X,'Dataset(s):',2X,A40/)                              SUTERR......128400
         DO 1015 I=1,50                                                  SUTERR......128500
            IF (DS(I).EQ.'null_line') EXIT                               SUTERR......128600
            IF (KSCRN.EQ.1) WRITE(*,'(4X,A70)') DS(I)                    SUTERR......128700
            WRITE(K00,'(4X,A70)') DS(I)                                  SUTERR......128800
 1015    CONTINUE                                                        SUTERR......128900
         IF (KSCRN.EQ.1) WRITE (*,1021)                                  SUTERR......129000
         WRITE (K00,1021)                                                SUTERR......129100
 1021    FORMAT (/1X,'EXPLANATION'/)                                     SUTERR......129200
         DO 1025 I=1,50                                                  SUTERR......129300
            IF (EX(I).EQ.'null_line') EXIT                               SUTERR......129400
            IF (KSCRN.EQ.1) WRITE(*,'(4X,A70)') EX(I)                    SUTERR......129500
            WRITE(K00,'(4X,A70)') EX(I)                                  SUTERR......129600
 1025    CONTINUE                                                        SUTERR......129700
         IF (KSCRN.EQ.1) WRITE (*,1081)                                  SUTERR......129800
         WRITE (K00,1081)                                                SUTERR......129900
 1081    FORMAT (/1X,'GENERAL NOTE'/                                     SUTERR......130000
     1     /4X,'If the dataset for which SUTRA has reported an error'    SUTERR......130100
     1     /4X,'appears to be correct, check the preceding lines'        SUTERR......130200
     1     /4X,'for missing data or extraneous characters.')             SUTERR......130300
      ELSE IF (CODE(1).EQ.'FIL') THEN                                    SUTERR......130400
C........ERROR TYPE 'FIL' (FILE ERROR)                                   SUTERR......130500
         IF (KSCRN.EQ.1)                                                 SUTERR......130600
     1      WRITE (*,1888)'              FILE ERROR              '       SUTERR......130700
         WRITE (K00,1888) '              FILE ERROR              '       SUTERR......130800
         IF (KSCRN.EQ.1) WRITE (*,1211)                                  SUTERR......130900
         WRITE (K00,1211)                                                SUTERR......131000
 1211    FORMAT (/1X,'DESCRIPTION')                                      SUTERR......131100
         IF (KSCRN.EQ.1) WRITE (*,1213) ERRCOD, CHERR(1)                 SUTERR......131200
         WRITE (K00,1213) ERRCOD, CHERR(1)                               SUTERR......131300
 1213    FORMAT (/4X,'Error code:',2X,A40                                SUTERR......131400
     1           /4X,'File:      ',2X,A40/)                              SUTERR......131500
         DO 1215 I=1,50                                                  SUTERR......131600
            IF (DS(I).EQ.'null_line') EXIT                               SUTERR......131700
            IF (KSCRN.EQ.1) WRITE(*,'(4X,A70)') DS(I)                    SUTERR......131800
            WRITE(K00,'(4X,A70)') DS(I)                                  SUTERR......131900
 1215    CONTINUE                                                        SUTERR......132000
         IF (KSCRN.EQ.1) WRITE (*,1221)                                  SUTERR......132100
         WRITE (K00,1221)                                                SUTERR......132200
 1221    FORMAT (/1X,'EXPLANATION'/)                                     SUTERR......132300
         DO 1225 I=1,50                                                  SUTERR......132400
            IF (EX(I).EQ.'null_line') EXIT                               SUTERR......132500
            IF (KSCRN.EQ.1) WRITE(*,'(4X,A70)') EX(I)                    SUTERR......132600
            WRITE(K00,'(4X,A70)') EX(I)                                  SUTERR......132700
 1225    CONTINUE                                                        SUTERR......132800
      ELSE IF (CODE(1).EQ.'SOL') THEN                                    SUTERR......132900
C........ERROR TYPE 'SOL' (MATRIX SOLVER ERROR)                          SUTERR......133000
         IF (KSCRN.EQ.1)                                                 SUTERR......133100
     1      WRITE (*,1888) '         MATRIX SOLVER ERROR          '      SUTERR......133200
         WRITE (K00,1888) '         MATRIX SOLVER ERROR          '       SUTERR......133300
         IF (KSCRN.EQ.1) WRITE (*,1311)                                  SUTERR......133400
         WRITE (K00,1311)                                                SUTERR......133500
 1311    FORMAT (/1X,'DESCRIPTION')                                      SUTERR......133600
         IF (KSCRN.EQ.1) WRITE (*,1313) ERRCOD, CHERR(2),                SUTERR......133700
     1      INERR(1), INERR(2), RLERR(1), RLERR(2)                       SUTERR......133800
         WRITE (K00,1313) ERRCOD, CHERR(2), INERR(1), INERR(2),          SUTERR......133900
     1      RLERR(1), RLERR(2)                                           SUTERR......134000
 1313    FORMAT (/4X,'Error code:',2X,A40                                SUTERR......134100
     1           /4X,'Solver:    ',2X,A40                                SUTERR......134200
     1          //4X,'Error flag..........IERR = ',I3                    SUTERR......134300
     1           /4X,'# of solver iters...ITRS = ',I5                    SUTERR......134400
     1           /4X,'Error estimate.......ERR = ',1PE8.1                SUTERR......134500
     1           /4X,'Error tolerance......TOL = ',1PE8.1/)              SUTERR......134600
         DO 1315 I=1,50                                                  SUTERR......134700
            IF (DS(I).EQ.'null_line') EXIT                               SUTERR......134800
            IF (KSCRN.EQ.1) WRITE(*,'(4X,A70)') DS(I)                    SUTERR......134900
            WRITE(K00,'(4X,A70)') DS(I)                                  SUTERR......135000
 1315    CONTINUE                                                        SUTERR......135100
         IF (KSCRN.EQ.1) WRITE (*,1321)                                  SUTERR......135200
         WRITE (K00,1321)                                                SUTERR......135300
 1321    FORMAT (/1X,'EXPLANATION'/)                                     SUTERR......135400
         DO 1325 I=1,50                                                  SUTERR......135500
            IF (EX(I).EQ.'null_line') EXIT                               SUTERR......135600
            IF (KSCRN.EQ.1) WRITE(*,'(4X,A70)') EX(I)                    SUTERR......135700
            WRITE(K00,'(4X,A70)') EX(I)                                  SUTERR......135800
 1325    CONTINUE                                                        SUTERR......135900
      ELSE IF (CODE(1).EQ.'CON') THEN                                    SUTERR......136000
C........ERROR TYPE 'CON' (CONVERGENCE ERROR)                            SUTERR......136100
         IF (KSCRN.EQ.1)                                                 SUTERR......136200
     1      WRITE (*,1888) '          CONVERGENCE ERROR           '      SUTERR......136300
         WRITE (K00,1888) '         CONVERGENCE ERROR          '         SUTERR......136400
         IF (KSCRN.EQ.1) WRITE (*,1411)                                  SUTERR......136500
         WRITE (K00,1411)                                                SUTERR......136600
 1411    FORMAT (/1X,'DESCRIPTION')                                      SUTERR......136700
         IF (KSCRN.EQ.1) WRITE (*,1413) ERRCOD, CHERR(1), INERR(3),      SUTERR......136800
     1       RLERR(1), INERR(1), RLERR(2), RLERR(3), INERR(2), RLERR(4)  SUTERR......136900
         WRITE (K00,1413) ERRCOD, CHERR(1), INERR(3),                    SUTERR......137000
     1       RLERR(1), INERR(1), RLERR(2), RLERR(3), INERR(2), RLERR(4)  SUTERR......137100
 1413    FORMAT (/4X,'Error code: ',2X,A40                               SUTERR......137200
     1           /4X,'Unconverged:',2X,A40                               SUTERR......137300
     1      //4X,'# of iterations.....ITER = ',I5                        SUTERR......137400
     1       /4X,'Maximum P change.....RPM = ',1PE14.5,' (node ',I9,')'  SUTERR......137500
     1       /4X,'Tolerance for P....RPMAX = ',1PE14.5                   SUTERR......137600
     1       /4X,'Maximum U change.....RUM = ',1PE14.5,' (node ',I9,')'  SUTERR......137700
     1       /4X,'Tolerance for U....RUMAX = ',1PE14.5/)                 SUTERR......137800
         DO 1415 I=1,50                                                  SUTERR......137900
            IF (DS(I).EQ.'null_line') EXIT                               SUTERR......138000
            IF (KSCRN.EQ.1) WRITE(*,'(4X,A70)') DS(I)                    SUTERR......138100
            WRITE(K00,'(4X,A70)') DS(I)                                  SUTERR......138200
 1415    CONTINUE                                                        SUTERR......138300
         IF (KSCRN.EQ.1) WRITE (*,1421)                                  SUTERR......138400
         WRITE (K00,1421)                                                SUTERR......138500
 1421    FORMAT (/1X,'EXPLANATION'/)                                     SUTERR......138600
         DO 1425 I=1,50                                                  SUTERR......138700
            IF (EX(I).EQ.'null_line') EXIT                               SUTERR......138800
            IF (KSCRN.EQ.1) WRITE(*,'(4X,A70)') EX(I)                    SUTERR......138900
            WRITE(K00,'(4X,A70)') EX(I)                                  SUTERR......139000
 1425    CONTINUE                                                        SUTERR......139100
      ELSE IF ((CODE(1).EQ.'REA').AND.(CODE(2).EQ.'FIL')) THEN           SUTERR......139200
C........ERROR TYPE 'REA-FIL' (FORTRAN READ ERROR)                       SUTERR......139300
         IF (KSCRN.EQ.1)                                                 SUTERR......139400
     1      WRITE (*,1888) '          FORTRAN READ ERROR          '      SUTERR......139500
         WRITE (K00,1888) '          FORTRAN READ ERROR          '       SUTERR......139600
         IF (KSCRN.EQ.1) WRITE (*,1611)                                  SUTERR......139700
         WRITE (K00,1611)                                                SUTERR......139800
 1611    FORMAT (/1X,'DESCRIPTION')                                      SUTERR......139900
         IF (KSCRN.EQ.1) WRITE (*,1613) ERRCOD, INERR(1)                 SUTERR......140000
         WRITE (K00,1613) ERRCOD, INERR(1)                               SUTERR......140100
 1613    FORMAT (/4X,'Error code:',2X,A40                                SUTERR......140200
     1           /4X,'File:      ',2X,'SUTRA.FIL'                        SUTERR......140300
     1          //4X,'Error status flag.....IOSTAT = ',I5/)              SUTERR......140400
         DO 1615 I=1,50                                                  SUTERR......140500
            IF (DS(I).EQ.'null_line') EXIT                               SUTERR......140600
            IF (KSCRN.EQ.1) WRITE(*,'(4X,A70)') DS(I)                    SUTERR......140700
            WRITE(K00,'(4X,A70)') DS(I)                                  SUTERR......140800
 1615    CONTINUE                                                        SUTERR......140900
         IF (KSCRN.EQ.1) WRITE (*,1621)                                  SUTERR......141000
         WRITE (K00,1621)                                                SUTERR......141100
 1621    FORMAT (/1X,'EXPLANATION'/)                                     SUTERR......141200
         DO 1625 I=1,50                                                  SUTERR......141300
            IF (EX(I).EQ.'null_line') EXIT                               SUTERR......141400
            IF (KSCRN.EQ.1) WRITE(*,'(4X,A70)') EX(I)                    SUTERR......141500
            WRITE(K00,'(4X,A70)') EX(I)                                  SUTERR......141600
 1625    CONTINUE                                                        SUTERR......141700
      ELSE IF (CODE(1).EQ.'REA') THEN                                    SUTERR......141800
C........ERROR TYPE 'REA-' (FORTRAN READ ERROR) OTHER THAN 'REA-FIL'     SUTERR......141900
         IF (KSCRN.EQ.1)                                                 SUTERR......142000
     1      WRITE (*,1888) '          FORTRAN READ ERROR          '      SUTERR......142100
         WRITE (K00,1888) '          FORTRAN READ ERROR          '       SUTERR......142200
         IF (KSCRN.EQ.1) WRITE (*,1511)                                  SUTERR......142300
         WRITE (K00,1511)                                                SUTERR......142400
 1511    FORMAT (/1X,'DESCRIPTION')                                      SUTERR......142500
         IF (CODE(2).EQ.'INP') THEN                                      SUTERR......142600
            CDUM80 = FNAME(1)                                            SUTERR......142700
         ELSE IF (CODE(2).EQ.'ICS') THEN                                 SUTERR......142800
            CDUM80 = FNAME(2)                                            SUTERR......142900
         ELSE IF (CODE(2).EQ.'BCS') THEN                                 SUTERR......143000
            CDUM80 = FNAME(9)                                            SUTERR......143100
         ELSE IF (CODE(2).EQ.'LKIN') THEN                                SUTERR......143200
            CDUM80 = FNAME(16)                                           SUTERR......143300
         ELSE IF (CODE(2).EQ.'LKBC') THEN                                SUTERR......143400
            CDUM80 = FNAME(17)                                           SUTERR......143500
         ELSE IF (CODE(2).EQ.'LKAR') THEN                                SUTERR......143600
            CDUM80 = FNAME(18)                                           SUTERR......143700
         END IF                                                          SUTERR......143800
         IF (((CODE(2).EQ.'ICS').AND.(CODE(3).EQ.'4')).OR.               SUTERR......143900
     1       (CODE(3).EQ.'INS')) THEN                                    SUTERR......144000
           IF (KSCRN.EQ.1) WRITE (*,1512) ERRCOD, CDUM80, INERR(1)       SUTERR......144100
           WRITE (K00,1512) ERRCOD, CDUM80, INERR(1)                     SUTERR......144200
 1512      FORMAT (/4X,'Error code:',2X,A40                              SUTERR......144300
     1             /4X,'File:      ',2X,A40                              SUTERR......144400
     1            //4X,'Error status flag.....IOSTAT = ',I5/)            SUTERR......144500
         ELSE IF (CODE(2).EQ.'BCS') THEN                                 SUTERR......144600
           IF (KSCRN.EQ.1) WRITE (*,1513) ERRCOD, CDUM80,                SUTERR......144700
     1        ADJUSTL(TRIM(CHERR(1))), ADJUSTL(TRIM(CHERR(2))),          SUTERR......144800
     2        CODE(3)(1:3), INERR(1)                                     SUTERR......144900
           WRITE (K00,1513) ERRCOD, CDUM80, ADJUSTL(TRIM(CHERR(1))),     SUTERR......145000
     1        ADJUSTL(TRIM(CHERR(2))), CODE(3)(1:3), INERR(1)            SUTERR......145100
 1513      FORMAT (/4X,'Error code:',2X,A40                              SUTERR......145200
     1             /4X,'File:      ',2X,A40                              SUTERR......145300
     1             /4X,'Time step: ',2X,A                                SUTERR......145400
     1             /4X,'Identifier:',2X,A                                SUTERR......145500
     1             /4X,'Dataset:   ',2X,A3                               SUTERR......145600
     1            //4X,'Error status flag.....IOSTAT = ',I5/)            SUTERR......145700
         ELSE                                                            SUTERR......145800
           IF (KSCRN.EQ.1) WRITE (*,1514) ERRCOD, CDUM80, CODE(3)(1:3),  SUTERR......145900
     1        INERR(1)                                                   SUTERR......146000
           WRITE (K00,1514) ERRCOD, CDUM80, CODE(3)(1:3), INERR(1)       SUTERR......146100
 1514      FORMAT (/4X,'Error code:',2X,A40                              SUTERR......146200
     1             /4X,'File:      ',2X,A40                              SUTERR......146300
     1             /4X,'Dataset:   ',2X,A3                               SUTERR......146400
     1            //4X,'Error status flag.....IOSTAT = ',I5/)            SUTERR......146500
         END IF                                                          SUTERR......146600
         DO 1515 I=1,50                                                  SUTERR......146700
            IF (DS(I).EQ.'null_line') EXIT                               SUTERR......146800
            IF (KSCRN.EQ.1) WRITE(*,'(4X,A70)') DS(I)                    SUTERR......146900
            WRITE(K00,'(4X,A70)') DS(I)                                  SUTERR......147000
 1515    CONTINUE                                                        SUTERR......147100
         IF (KSCRN.EQ.1) WRITE (*,1521)                                  SUTERR......147200
         WRITE (K00,1521)                                                SUTERR......147300
 1521    FORMAT (/1X,'EXPLANATION'/)                                     SUTERR......147400
         DO 1525 I=1,50                                                  SUTERR......147500
            IF (EX(I).EQ.'null_line') EXIT                               SUTERR......147600
            IF (KSCRN.EQ.1) WRITE(*,'(4X,A70)') EX(I)                    SUTERR......147700
            WRITE(K00,'(4X,A70)') EX(I)                                  SUTERR......147800
 1525    CONTINUE                                                        SUTERR......147900
         IF (KSCRN.EQ.1) WRITE (*,1581)                                  SUTERR......148000
         WRITE (K00,1581)                                                SUTERR......148100
 1581    FORMAT (/1X,'GENERAL NOTE'/                                     SUTERR......148200
     1     /4X,'If the dataset for which SUTRA has reported an error'    SUTERR......148300
     1     /4X,'appears to be correct, check the preceding lines'        SUTERR......148400
     1     /4X,'for missing data or extraneous characters.')             SUTERR......148500
      ELSE IF (CODE(1).EQ.'COD') THEN                                    SUTERR......148600
C........ERROR TYPE 'COD' (CODE ERROR)                                   SUTERR......148700
         IF (KSCRN.EQ.1)                                                 SUTERR......148800
     1      WRITE (*,1888)'              CODE ERROR              '       SUTERR......148900
         WRITE (K00,1888) '              CODE ERROR              '       SUTERR......149000
         IF (KSCRN.EQ.1) WRITE (*,1711)                                  SUTERR......149100
         WRITE (K00,1711)                                                SUTERR......149200
 1711    FORMAT (/1X,'DESCRIPTION')                                      SUTERR......149300
         IF (KSCRN.EQ.1) WRITE (*,1713) ERRCOD, CODE(2)                  SUTERR......149400
         WRITE (K00,1713) ERRCOD, CODE(2)                                SUTERR......149500
 1713    FORMAT (/4X,'Error code:',2X,A40                                SUTERR......149600
     1           /4X,'Module:    ',2X,A40/)                              SUTERR......149700
         DO 1715 I=1,50                                                  SUTERR......149800
            IF (DS(I).EQ.'null_line') EXIT                               SUTERR......149900
            IF (KSCRN.EQ.1) WRITE(*,'(4X,A70)') DS(I)                    SUTERR......150000
            WRITE(K00,'(4X,A70)') DS(I)                                  SUTERR......150100
 1715    CONTINUE                                                        SUTERR......150200
         IF (KSCRN.EQ.1) WRITE (*,1721)                                  SUTERR......150300
         WRITE (K00,1721)                                                SUTERR......150400
 1721    FORMAT (/1X,'EXPLANATION'/)                                     SUTERR......150500
         DO 1725 I=1,50                                                  SUTERR......150600
            IF (EX(I).EQ.'null_line') EXIT                               SUTERR......150700
            IF (KSCRN.EQ.1) WRITE(*,'(4X,A70)') EX(I)                    SUTERR......150800
            WRITE(K00,'(4X,A70)') EX(I)                                  SUTERR......150900
 1725    CONTINUE                                                        SUTERR......151000
      END IF                                                             SUTERR......151100
 1888 FORMAT (                                                           SUTERR......151200
     1   /1X,'+--------+',38('-'),'+--------+'                           SUTERR......151300
     1   /1X,'| \\  // |',38('-'),'| \\  // |'                           SUTERR......151400
     1   /1X,'|  \\//  |',38(' '),'|  \\//  |'                           SUTERR......151500
     1   /1X,'|   //   |',A38,    '|   //   |'                           SUTERR......151600
     1   /1X,'|  //\\  |',38(' '),'|  //\\  |'                           SUTERR......151700
     1   /1X,'| //  \\ |',38('-'),'| //  \\ |'                           SUTERR......151800
     1   /1X,'+--------+',38('-'),'+--------+')                          SUTERR......151900
C                                                                        SUTERR......152000
C.....WRITE RUN TERMINATION MESSAGES AND CALL TERMINATION SEQUENCE       SUTERR......152100
      IF (KSCRN.EQ.1) WRITE (*,8888)                                     SUTERR......152200
      WRITE (K00,8888)                                                   SUTERR......152300
      IF (K3.NE.-1) WRITE (K3,8889)                                      SUTERR......152400
      IF (K5.NE.-1) WRITE (K5,8889)                                      SUTERR......152500
      IF (K6.NE.-1) WRITE (K6,8889)                                      SUTERR......152600
 8888 FORMAT (/1X,'+',56('-'),'+'/1X,'| ',54X,' |'/1X,'|',3X,            SUTERR......152700
     1   8('*'),3X,'RUN TERMINATED DUE TO ERROR',3X,9('*'),              SUTERR......152800
     1   3X,'|'/1X,'| ',54X,' |'/1X,'+',56('-'),'+')                     SUTERR......152900
 8889 FORMAT (//13X,'+',56('-'),'+'/13X,'| ',54X,' |'/13X,'|',3X,        SUTERR......153000
     1   8('*'),3X,'RUN TERMINATED DUE TO ERROR',3X,9('*'),              SUTERR......153100
     1   3X,'|'/13X,'| ',54X,' |'/13X,'+',56('-'),'+')                   SUTERR......153200
      IF (KSCRN.EQ.1) WRITE (*,8890)                                     SUTERR......153300
 8890 FORMAT (/' The above error message also appears in the SMY file,'  SUTERR......153400
     1        /' which may contain additional error information.')       SUTERR......153500
      CALL TERSEQ()                                                      SUTERR......153600
C                                                                        SUTERR......153700
      RETURN                                                             SUTERR......153800
      END                                                                SUTERR......153900
C                                                                        SUTERR......154000
C     SUBROUTINE        S  U  T  R  A              SUTRA VERSION 3.0     SUTRA..........100
C                                                                        SUTRA..........200
C *** PURPOSE :                                                          SUTRA..........300
C ***  MAIN CONTROL ROUTINE FOR SUTRA SIMULATION.  ORGANIZES             SUTRA..........400
C ***  INITIALIZATION, CALCULATIONS FOR EACH TIME STEP AND ITERATION,    SUTRA..........500
C ***  AND VARIOUS OUTPUTS.                                              SUTRA..........600
C                                                                        SUTRA..........700
      SUBROUTINE SUTRA(TITLE1,TITLE2,PMAT,UMAT,PITER,UITER,PM1,DPDTITR,  SUTRA..........800
     1   UM1,DUDTITR,PVEL,SL,SR,X,Y,Z,VOL,POR,CS1,CS2,CS3,SW,            SUTRA..........900
     1   DSWDP,RHO,SOP,QIN,UIN,QUIN,QINITR,RCIT,RCITM1,PVEC,UVEC,        SUTRA.........1000
     1   ALMAX,ALMID,ALMIN,ATMAX,ATMID,ATMIN,VMAG,VANG1,VANG2,           SUTRA.........1100
     1   PERMXX,PERMXY,PERMXZ,PERMYX,PERMYY,PERMYZ,PERMZX,PERMZY,PERMZZ, SUTRA.........1200
     1   PANGL1,PANGL2,PANGL3,PBC,UBC,QPLITR,BPBC,PZERO,BUBC,UZERO,      SUTRA.........1300
     1   BPBG,PZERG,GXSI,GETA,GZET,FWK,B,GNUPP,GNUUU,IN,IQSOP,IQSOU,     SUTRA.........1400
     1   IPBC,IUBC,ISPBC,ISUBC,ISPBG,LPBGSP,                             SUTRA.........1500
     1   OBSPTS,NREG,NREGAD,LREG,IWK,IA,JA,                              SUTRA.........1600
     1   IBCPBC,IBCUBC,IBCSOP,IBCSOU,IBCPBG,IBCUBG,                      SUTRA.........1700
     1   IIDPBC,IIDUBC,IIDSOP,IIDSOU,IIDPBG,IIDUBG,                      SUTRA.........1800
     1   IBCSF,IBCSS,IBCSP,IBCSU,IBCSPG,IBCSUG,                          SUTRA.........1900
     1   IQSOPT,IQSOUT,IPBCT,IUBCT,IPBGT,IUBGT,                          SUTRA.........2000
     1   BCSFL,BCSTR,IPBG,PBG1,QPBG1,PBG2,QPBG2,CPQL1,CPQL2,UPBGI,       SUTRA.........2100
     1   CUPBGO,UPBGO,IUBG,UBG1,QUBG1,UBG2,QUBG2,QPBGIC,GNUPG,QUBGIC,    SUTRA.........2200
     1   GNUUG,QPGITR)                                                   SUTRA.........2300
      USE ALLARR, ONLY : OBSDAT,CIDBCS                                   SUTRA.........2400
      USE LLDEF                                                          SUTRA.........2500
      USE EXPINT                                                         SUTRA.........2600
      USE SCHDEF                                                         SUTRA.........2700
      USE LARR, ONLY : ISLAKE,PLK,                                       SUTRA.........2800
     1   STGB,STGBO,UWMS,UWMSO,UW,UWO,ISTATO,ISTAT,VOLW,VOLWO,LAKNOD,    SUTRA.........2900
     2   VOLWM1,UWM1,UWMSM1,ISTATM1,ITIPG,                               SUTRA.........3000
     3   ULK,ULKITR,LKBCPBC,LKBCUBC,LKBCSOP,LKBCSOU,LKBCPBG,LKBCUBG      SUTRA.........3100
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                SUTRA.........3200
      PARAMETER (NCOLMX=9)                                               SUTRA.........3300
      CHARACTER*8 VERNUM, VERNIN                                         SUTRA.........3400
      CHARACTER*1 TITLE1(80),TITLE2(80)                                  SUTRA.........3500
      CHARACTER*10 ADSMOD,ADSMOD1(10)                                    SUTRA.........3600
      CHARACTER*80 ERRCOD,CHERR(10),UNAME,FNAME(0:23),CDUM80             SUTRA.........3700
      CHARACTER*40 SOLNAM(0:10)                                          SUTRA.........3800
      CHARACTER*10 SOLWRD(0:10)                                          SUTRA.........3900
      CHARACTER*1 CPQL1(NPBG),CPQL2(NPBG)                                SUTRA.........4000
      CHARACTER*3 CUPBGO(NPBG)                                           SUTRA.........4100
      LOGICAL PRNALL,PRN0,PRNDEF,PRNK3,PRNK5,PRNK6                       SUTRA.........4200
      LOGICAL PRNBCF,PRNBCS,PRNBCP,PRNBCU,PRNBGP,PRNBGU,PRNLK            SUTRA.........4300
      LOGICAL TSPRTD                                                     SUTRA.........4400
      LOGICAL ONCEK5,ONCEK6,ONCEK7,ONCEK8,ONCESTG                        SUTRA.........4500
      LOGICAL ONCEK10,ONCEK11,ONCEK12,ONCEK13,ONCEK14,ONCEK15            SUTRA.........4600
      LOGICAL ONCEKLK                                                    SUTRA.........4700
      LOGICAL ONCEP,ONCEU                                                SUTRA.........4800
      LOGICAL ONCEBCS, SETBCS, BCSFL(0:ITMAX), BCSTR(0:ITMAX)            SUTRA.........4900
      LOGICAL LAKUSD, LAKUP, LUNCON                                      SUTRA.........5000
      LOGICAL LPBGSP(NPBG)                                               SUTRA.........5100
      INTEGER(1) IBCPBC(NBCN),IBCUBC(NBCN),IBCSOP(NSOP),IBCSOU(NSOU),    SUTRA.........5200
     1   IBCPBG(NPBG),IBCUBG(NUBG)                                       SUTRA.........5300
      INTEGER IIDPBC(NBCN),IIDUBC(NBCN),IIDSOP(NSOP),IIDSOU(NSOU),       SUTRA.........5400
     1   IIDPBG(NPBG),IIDUBG(NUBG)                                       SUTRA.........5500
      INTEGER IBCSP(NBCN),IBCSU(NBCN),IBCSF(NSOP),IBCSS(NSOU),           SUTRA.........5600
     1   IBCSPG(NPBG),IBCSUG(NUBG)                                       SUTRA.........5700
      DIMENSION INERR(10),RLERR(10)                                      SUTRA.........5800
      DIMENSION J5COL(NCOLMX), J6COL(NCOLMX)                             SUTRA.........5900
      DIMENSION PMAT(NELT,NCBI),UMAT(NELT,NCBI)                          SUTRA.........6000
      DIMENSION PITER(NN),UITER(NN),PM1(NN),DPDTITR(NN),UM1(NN),         SUTRA.........6100
     1   DUDTITR(NN),PVEL(NN),SL(NN),SR(NN),X(NN),Y(NN),Z(NN),VOL(NN),   SUTRA.........6200
     2   POR(NN),CS1(NN),CS2(NN),CS3(NN),SW(NN),DSWDP(NN),RHO(NN),       SUTRA.........6300
     4   SOP(NN),QIN(NN),QINITR(NN),UIN(NN),QUIN(NN),                    SUTRA.........6400
     5   RCIT(NN),RCITM1(NN)                                             SUTRA.........6500
      DIMENSION PVEC(NNVEC),UVEC(NNVEC)                                  SUTRA.........6600
      DIMENSION ALMAX(NE),ALMIN(NE),ATMAX(NE),ATMIN(NE),VMAG(NE),        SUTRA.........6700
     1   VANG1(NE),PERMXX(NE),PERMXY(NE),PERMYX(NE),PERMYY(NE),          SUTRA.........6800
     2   PANGL1(NE)                                                      SUTRA.........6900
      DIMENSION ALMID(NEX),ATMID(NEX),                                   SUTRA.........7000
     1   VANG2(NEX),PERMXZ(NEX),PERMYZ(NEX),PERMZX(NEX),                 SUTRA.........7100
     2   PERMZY(NEX),PERMZZ(NEX),PANGL2(NEX),PANGL3(NEX)                 SUTRA.........7200
      DIMENSION PBC(NBCN),UBC(NBCN),QPLITR(NBCN),GNUPP(NBCN),GNUUU(NBCN) SUTRA.........7300
      DIMENSION BPBC(NPBC),PZERO(NPBC),BUBC(NUBC),UZERO(NUBC),           SUTRA.........7400
     1   BPBG(NPBG),PZERG(NPBG)                                          SUTRA.........7500
      DIMENSION PBG1(NPBG),QPBG1(NPBG),PBG2(NPBG),QPBG2(NPBG),           SUTRA.........7600
     1   UPBGI(NPBG),UBG1(NUBG),QUBG1(NUBG),UBG2(NUBG),QUBG2(NUBG),      SUTRA.........7700
     2   QPBGIC(NPBG),GNUPG(NPBG),QUBGIC(NUBG),GNUUG(NUBG),QPGITR(NPBG), SUTRA.........7800
     3   UPBGO(NPBG)                                                     SUTRA.........7900
      DIMENSION IPBG(NPBG),IUBG(NUBG),ISPBC(NN),ISUBC(NN),ISPBG(NN)      SUTRA.........8000
      DIMENSION GXSI(NE,N48),GETA(NE,N48),GZET(NEX,N48)                  SUTRA.........8100
      DIMENSION FWK(NWF),B(NNNX)                                         SUTRA.........8200
      DIMENSION IN(NIN),IQSOP(NSOP),IQSOU(NSOU),IPBC(NBCN),IUBC(NBCN),   SUTRA.........8300
     1   NREG(NN),NREGAD(NN),LREG(NE),IWK(NWI),IA(NDIMIA),JA(NDIMJA)     SUTRA.........8400
      TYPE (OBSDAT), DIMENSION (NOBSN) :: OBSPTS                         SUTRA.........8500
      DIMENSION KTYPE(2)                                                 SUTRA.........8600
      TYPE (SCHLST), ALLOCATABLE :: DENOB(:)                             SUTRA.........8700
ccc      DIMENSION LCNT(NFLOMX)                                             SUTRA.........8800
      DIMENSION LCOB(NFLOMX)                                             ! fix rbw 200519b
      COMMON /BCSL/ ONCEBCS                                              SUTRA.........8900
      COMMON /BUDO/ TSECO,LUTSO                                          SUTRA.........9000
      COMMON /CONTRL/ GNUP,GNUU,UP,DTMULT,DTMAX,ME,ISSFLO,ISSTRA,ITCYC,  SUTRA.........9100
     1   NPCYC,NUCYC,NPRINT,NBCFPR,NBCSPR,NBCPPR,NBCUPR,NLAKPR,IREAD,    SUTRA.........9200
     1   NBGPPR,NBGUPR,ISTORE,NOUMAT,IUNSAT,IALSAT,KTYPE                 SUTRA.........9300
      COMMON /DIMEN/ NLAKES, NSIL, NCEL, NPLK                            SUTRA.........9400
      COMMON /DIMS/ NN,NE,NIN,NBI,NCBI,NB,NBHALF,NPBC,NUBC,              SUTRA.........9500
     1   NSOP,NSOU,NBCN,NPBG,NUBG,NCIDB                                  SUTRA.........9600
      COMMON /DIMSRF/ MAXCON, NNSURF, NNVERT                             SUTRA.........9700
      COMMON /DIMX/ NWI,NWF,NWL,NELT,NNNX,NEX,N48                        SUTRA.........9800
      COMMON /DIMX2/ NELTA, NNVEC, NDIMIA, NDIMJA                        SUTRA.........9900
      COMMON /FNAMES/ UNAME,FNAME                                        SUTRA........10000
      COMMON /FUNITS/ K00,K0,K1,K2,K3,K4,K5,K6,K7,K8,K9,                 SUTRA........10100
     1   K10,K11,K12,K13,K14,K15,K16,K17,K18,K19,K20,K21,K22,K23         SUTRA........10200
      COMMON /ITERAT/ RPM,RPMAX,RUM,RUMAX,ITER,ITRMAX,IPWORS,IUWORS      SUTRA........10300
      COMMON /ITSOLR/ TOLP,TOLU                                          SUTRA........10400
      COMMON /JCOLS/ NCOLPR,LCOLPR,NCOLS5,NCOLS6,J5COL,J6COL             SUTRA........10500
      COMMON /KPRINT/ KNODAL,KELMNT,KINCID,KPLOTP,KPLOTU,                SUTRA........10600
     1   KPANDS,KVEL,KCORT,KBUDG,KSCRN,KPAUSE                            SUTRA........10700
      COMMON /LAKU/ LAKUSD                                               SUTRA........10800
      COMMON /LUP/ LAKUP                                                 SUTRA........10900
      COMMON /MODSOR/ ADSMOD,ADSMOD1                                     SUTRA........11000
      COMMON /OBS/ NOBSN,NTOBS,NOBCYC,NOBLIN,NFLOMX                      SUTRA........11100
      COMMON /PARAMS/ COMPFL,COMPMA,DRWDU,CW,CS,RHOS,SIGMAW,SIGMAS,      SUTRA........11200
     1   RHOW0,URHOW0,VISC0,PRODF1,PRODS1,PRODF0,PRODS0,CHI1,CHI2        SUTRA........11300
      COMMON /PLT1/ ONCEK5, ONCEK6, ONCEK7, ONCEK8, ONCESTG              SUTRA........11400
      COMMON /PLT2/ ONCEK10, ONCEK11, ONCEK12, ONCEK13, ONCEK14, ONCEK15 SUTRA........11500
      COMMON /PLTLK/ ONCEKLK                                             SUTRA........11600
      COMMON /SCH/ NSCH,ISCHTS,NSCHAU                                    SUTRA........11700
      COMMON /SOLVC/ SOLWRD,SOLNAM                                       SUTRA........11800
      COMMON /SOLVI/ KSOLVP,KSOLVU,NN1,NN2,NN3                           SUTRA........11900
      COMMON /TIMES/ DELT,TSEC,TMIN,THOUR,TDAY,TWEEK,TMONTH,TYEAR,       SUTRA........12000
     1   TMAX,DELTP,DELTU,DLTPM1,DLTUM1,IT,ITBCS,ITRST,ITMAX,TSTART      SUTRA........12100
      COMMON /VER/ VERNUM, VERNIN                                        SUTRA........12200
C                                                                        SUTRA........12300
C.....INITIALIZE FLAG TO INDICATE THAT BCSTEP HAS NOT YET BEEN CALLED    SUTRA........12400
C        IN THIS SUBROUTINE                                              SUTRA........12500
      ONCEBCS = .FALSE.                                                  SUTRA........12600
C                                                                        SUTRA........12700
C.....WRITE TITLE TO CONSOLE                                             SUTRA........12800
      DO 100 I=80,1,-1                                                   SUTRA........12900
         IF (TITLE1(I).NE.' ') THEN                                      SUTRA........13000
            LENT1 = I                                                    SUTRA........13100
            GOTO 101                                                     SUTRA........13200
         END IF                                                          SUTRA........13300
  100 CONTINUE                                                           SUTRA........13400
      LENT1 = 1                                                          SUTRA........13500
  101 DO 105 I=80,1,-1                                                   SUTRA........13600
         IF (TITLE2(I).NE.' ') THEN                                      SUTRA........13700
            LENT2 = I                                                    SUTRA........13800
            GOTO 106                                                     SUTRA........13900
         END IF                                                          SUTRA........14000
  105 CONTINUE                                                           SUTRA........14100
      LENT2 = 1                                                          SUTRA........14200
  106 CONTINUE                                                           SUTRA........14300
      IF (KSCRN.EQ.1) WRITE (*,121) VERNUM                               SUTRA........14400
      WRITE (K00,121) VERNUM                                             SUTRA........14500
  121 FORMAT (/1X,9X,53("=")//1X,25X,"S    U    T    R    A",//          SUTRA........14600
     1   31X,"Version ",A8//1X,9X,53("=")/)                              SUTRA........14700
      IF (KSCRN.EQ.1) WRITE (*,122) (TITLE1(I),I=1,LENT1)                SUTRA........14800
      WRITE (K00,122) (TITLE1(I),I=1,LENT1)                              SUTRA........14900
      IF (KSCRN.EQ.1) WRITE (*,122) (TITLE2(I),I=1,LENT2)                SUTRA........15000
      WRITE (K00,122) (TITLE2(I),I=1,LENT2)                              SUTRA........15100
  122 FORMAT (1X,80A1)                                                   SUTRA........15200
      IF (KSCRN.EQ.1) WRITE (*,*)                                        SUTRA........15300
      WRITE (K00,*)                                                      SUTRA........15400
C                                                                        SUTRA........15500
C.....DETERMINE MAXIMUM SIMULATION TIME AND DURATION FROM TIME           SUTRA........15600
C        STEP SCHEDULE.                                                  SUTRA........15700
      IF (ISSTRA.EQ.0) THEN                                              SUTRA........15800
         LENSCH = SCHDLS(ISCHTS)%LLEN                                    SUTRA........15900
         TMAX = SCHDLS(ISCHTS)%SLIST(LENSCH)%DVALU1                      SUTRA........16000
      ELSE                                                               SUTRA........16100
         TMAX = TSTART                                                   SUTRA........16200
      END IF                                                             SUTRA........16300
      TEMAX = TMAX - TSTART                                              SUTRA........16400
C                                                                        SUTRA........16500
C.....INITIALIZE TIME STEP NUMBER AND SCHEDULE POINTERS.  IF RESTART,    SUTRA........16600
C        SKIP AHEAD THROUGH TIME STEPS AND OBSERVATION SCHEDULES AND     SUTRA........16700
C        UPDATE TSEC.                                                    SUTRA........16800
      IT = ITRST                                                         SUTRA........16900
      ITBCS = IT                                                         SUTRA........17000
      DIT = DNINT(DBLE(IT))                                              SUTRA........17100
      ITP1 = IT + 1                                                      SUTRA........17200
      IF (IT.EQ.0) THEN                                                  SUTRA........17300
         DELTLC = DELT                                                   SUTRA........17400
      ELSE                                                               SUTRA........17500
         TMITM1 = SCHDLS(ISCHTS)%SLIST(IT)%DVALU1                        SUTRA........17600
         TMIT = SCHDLS(ISCHTS)%SLIST(ITP1)%DVALU1                        SUTRA........17700
         DELT = TMIT - TMITM1                                            SUTRA........17800
         DELTLC = DELT                                                   SUTRA........17900
         TSEC = TMIT                                                     SUTRA........18000
      END IF                                                             SUTRA........18100
      ALLOCATE(DENOB(NFLOMX))                                            SUTRA........18200
      DO 400 NFLO=1,NFLOMX                                               SUTRA........18300
         LENSCH = SCHDLS(OFP(NFLO)%ISCHED)%LLEN                          SUTRA........18400
         LEN1 = 0                                                        SUTRA........18500
         LEN2 = 0                                                        SUTRA........18600
         IF ((SCHDLS(OFP(NFLO)%ISCHED)%SLIST(1)%DVALU2).NE.ITRST)        SUTRA........18700
     1      LEN1 = 1                                                     SUTRA........18800
         IF ((SCHDLS(OFP(NFLO)%ISCHED)%SLIST(LENSCH)%DVALU2).NE.ITMAX)   SUTRA........18900
     1      LEN2 = 1                                                     SUTRA........19000
         LENDEN = LENSCH + LEN1 + LEN2                                   SUTRA........19100
         ALLOCATE(DENOB(NFLO)%SLIST(LENDEN))                             SUTRA........19200
         DENOB(NFLO)%LLEN = LENDEN                                       SUTRA........19300
         DENOB(NFLO)%SLIST(1+LEN1:LENSCH+LEN1) =                         SUTRA........19400
     1         SCHDLS(OFP(NFLO)%ISCHED)%SLIST(1:LENSCH)                  SUTRA........19500
         IF (LEN1.EQ.1) THEN                                             SUTRA........19600
            TIME = SCHDLS(ISCHTS)%SLIST(ITRST+1)%DVALU1                  SUTRA........19700
            STEP = ITRST                                                 SUTRA........19800
            DENOB(NFLO)%SLIST(1)%DVALU1 = TIME                           SUTRA........19900
            DENOB(NFLO)%SLIST(1)%DVALU2 = STEP                           SUTRA........20000
         END IF                                                          SUTRA........20100
         IF (LEN2.EQ.1) THEN                                             SUTRA........20200
            TIME = SCHDLS(ISCHTS)%SLIST(ITMAX+1)%DVALU1                  SUTRA........20300
            STEP = ITMAX                                                 SUTRA........20400
            DENOB(NFLO)%SLIST(LENDEN)%DVALU1 = TIME                      SUTRA........20500
            DENOB(NFLO)%SLIST(LENDEN)%DVALU2 = STEP                      SUTRA........20600
         END IF                                                          SUTRA........20700
ccc         LCNT(NFLO) = 1                                                  SUTRA........20800
         LCOB(NFLO) = 1                                                  ! fix rbw 200519b
  400 CONTINUE                                                           SUTRA........20900
C                                                                        SUTRA........21000
C.....INITIALIZE FLAGS THAT INDICATE WHETHER P AND U HAVE BEEN SOLVED    SUTRA........21100
C         FOR AT LEAST ONCE.  SET FLAG TO MAKE CALLS TO BCSTEP ACTUALLY  SUTRA........21200
C         SET THE BOUNDARY CONDITIONS (AS OPPOSED TO SIMPLY READING      SUTRA........21300
C         THEM IN SEARCH IF INPUT ERRORS).                               SUTRA........21400
      ONCEP = .FALSE.                                                    SUTRA........21500
      ONCEU = .FALSE.                                                    SUTRA........21600
      SETBCS = .TRUE.                                                    SUTRA........21700
C                                                                        SUTRA........21800
C.....SET FLAG FOR TIME-DEPENDENT SOURCES OR BOUNDARY CONDITIONS         SUTRA........21900
C        SET IN BCTIME. WHEN IBCT=+6, THERE ARE NO TIME-DEPENDENT        SUTRA........22000
C        SPECIFICATIONS IN BCTIME.                                       SUTRA........22100
      IBCT=IQSOPT+IQSOUT+IPBCT+IUBCT+IPBGT+IUBGT                         SUTRA........22200
C                                                                        SUTRA........22300
C.....SET STARTING TIME OF SIMULATION CLOCK                              SUTRA........22400
C     TSEC=TSTART                                                        SUTRA........22500
      TSECP0=TSEC                                                        SUTRA........22600
      TSECU0=TSEC                                                        SUTRA........22700
      TMIN=TSEC/60.D0                                                    SUTRA........22800
      THOUR=TMIN/60.D0                                                   SUTRA........22900
      TDAY=THOUR/24.D0                                                   SUTRA........23000
      TWEEK=TDAY/7.D0                                                    SUTRA........23100
      TMONTH=TDAY/30.4375D0                                              SUTRA........23200
      TYEAR=TDAY/365.25D0                                                SUTRA........23300
C                                                                        SUTRA........23400
C.....OUTPUT INITIAL/STARTING CONDITIONS FOR TRANSIENT TRANSPORT         SUTRA........23500
      IF(ISSTRA.NE.1) THEN                                               SUTRA........23600
C........PRINT TO LST OUTPUT FILE                                        SUTRA........23700
         IF (KTYPE(1).EQ.3) THEN                                         SUTRA........23800
            CALL OUTLST3(0,0,0,0,0,0D0,0,0,0D0,PVEC,UVEC,VMAG,VANG1,     SUTRA........23900
     1         VANG2,SW,SI)                                              SUTRA........24000
         ELSE                                                            SUTRA........24100
            CALL OUTLST2(0,0,0,0,0,0D0,0,0,0D0,PVEC,UVEC,VMAG,VANG1,SW,  SUTRA........24200
     1         SI)                                                       SUTRA........24300
         END IF                                                          SUTRA........24400
C........IF TRANSIENT FLOW, PRINT TO NODEWISE AND OBSERVATION OUTPUT     SUTRA........24500
C           FILES NOW.  (OTHERWISE, WAIT UNTIL STEADY-STATE FLOW         SUTRA........24600
C           SOLUTION IS COMPUTED.)                                       SUTRA........24700
         IF (ISSFLO.EQ.0) THEN                                           SUTRA........24800
            IF (K5.NE.-1)                                                SUTRA........24900
     1         CALL OUTNOD(PVEC,UVEC,SW,X,Y,Z,TITLE1,TITLE2,             SUTRA........25000
     2            BCSFL,BCSTR)                                           SUTRA........25100
            IF (LAKUSD) THEN                                             SUTRA........25200
               IF (K20.NE.-1) CALL OUTLKST(TITLE1,TITLE2)                SUTRA........25300
               CALL OUTLKBU(TITLE1,TITLE2)                               SUTRA........25400
               IF (LAKUP) THEN                                           SUTRA........25500
                  VOLWO = VOLW                                           SUTRA........25600
                  STGBO = STGB                                           SUTRA........25700
                  UWMSO = UWMS                                           SUTRA........25800
                  UWO = UW                                               SUTRA........25900
                  ISTATO = ISTAT                                         SUTRA........26000
                  TSECO = TSEC                                           SUTRA........26100
                  LUTSO = IT                                             SUTRA........26200
               END IF                                                    SUTRA........26300
            END IF                                                       SUTRA........26400
            DO 650 NFLO=1,NFLOMX                                         SUTRA........26500
               IF (IUNIO(NFLO).NE.-1) THEN                               SUTRA........26600
                  IF (OFP(NFLO)%FRMT.EQ."OBS") THEN                      SUTRA........26700
                     TIME = TSEC                                         SUTRA........26800
                     CALL OUTOBS(NFLO,OBSPTS,TIME,DIT,PM1,UM1,           SUTRA........26900
     1                  PVEC,UVEC,TITLE1,TITLE2,IN,LREG,BCSFL,BCSTR)     SUTRA........27000
                  ELSE                                                   SUTRA........27100
                     CALL OUTOBC(NFLO,OBSPTS,TIME,DIT,PM1,UM1,           SUTRA........27200
     1                  PVEC,UVEC,TITLE1,TITLE2,IN,LREG,BCSFL,BCSTR)     SUTRA........27300
                  END IF                                                 SUTRA........27400
                  STEP = DENOB(NFLO)%SLIST(1)%DVALU2                     SUTRA........27500
                  LENSCH = SCHDLS(OFP(NFLO)%ISCHED)%LLEN                 SUTRA........27600
ccc                  IF ((STEP.EQ.ITRST).AND.(LCNT(NFLO).LT.LENSCH)) THEN   SUTRA........27700
ccc                     LCNT(NFLO) = LCNT(NFLO) + 1                         SUTRA........27800
                  IF ((STEP.EQ.ITRST).AND.(LCOB(NFLO).LT.LENSCH)) THEN   ! fix rbw 200519b
                     LCOB(NFLO) = LCOB(NFLO) + 1                         ! fix rbw 200519b
                  END IF                                                 SUTRA........27900
               END IF                                                    SUTRA........28000
  650       CONTINUE                                                     SUTRA........28100
         END IF                                                          SUTRA........28200
      END IF                                                             SUTRA........28300
C                                                                        SUTRA........28400
C.....SET SWITCHES AND PARAMETERS FOR SOLUTION WITH STEADY-STATE FLOW    SUTRA........28500
      IF(ISSFLO.NE.1) GOTO 1000                                          SUTRA........28600
      ML=1                                                               SUTRA........28700
      NOUMAT=0                                                           SUTRA........28800
      ISSFLO=2                                                           SUTRA........28900
      ITREL = 0                                                          SUTRA........29000
      ITER=0                                                             SUTRA........29100
      DLTPM1=DELTP                                                       SUTRA........29200
      DLTUM1=DELTU                                                       SUTRA........29300
      BDELP1 = 1D0                                                       SUTRA........29400
      BDELP=0.0D0                                                        SUTRA........29500
      BDELU=0.0D0                                                        SUTRA........29600
C.....SAVE LAKE STATE                                                    SUTRA........29700
      IF (LAKUSD) THEN                                                   SUTRA........29800
         ISTATM1 = ISTAT                                                 SUTRA........29900
         VOLWM1 = VOLW                                                   SUTRA........30000
         UWM1 = UW                                                       SUTRA........30100
         UWMSM1 = UWMS                                                   SUTRA........30200
      END IF                                                             SUTRA........30300
      IF (ISSTRA.NE.0) THEN                                              SUTRA........30400
         IF (KSCRN.EQ.1) WRITE (*,902) IT, ITMAX                         SUTRA........30500
         WRITE (K00,902) IT, ITMAX                                       SUTRA........30600
      ELSE                                                               SUTRA........30700
         TELAPS = TSEC - TSTART                                          SUTRA........30800
         IF (KSCRN.EQ.1) WRITE (*,903) IT, ITMAX, TELAPS, TEMAX          SUTRA........30900
         WRITE (K00,903) IT, ITMAX, TSEC, TEMAX                          SUTRA........31000
      END IF                                                             SUTRA........31100
  902 FORMAT (1X, 'TIME STEP ', I8, ' OF ', I8)                          SUTRA........31200
  903 FORMAT (1X, 'TIME STEP ', I8, ' OF ', I8, ';',                     SUTRA........31300
     1        3X, 'ELAPSED TIME: ', 1PE11.4, ' OF ', 1PE11.4, ' [s]')    SUTRA........31400
      GOTO 1100                                                          SUTRA........31500
C                                                                        SUTRA........31600
C                                                                        SUTRA........31700
C ********************************************************************** SUTRA........31800
C.....BEGIN TIME STEP ************************************************** SUTRA........31900
C ********************************************************************** SUTRA........32000
C.....INCREMENT TIME STEP NUMBER                                         SUTRA........32100
 1000 IT=IT+1                                                            SUTRA........32200
      ITREL = IT - ITRST                                                 SUTRA........32300
      ITBCS = IT                                                         SUTRA........32400
      DIT = DNINT(DBLE(IT))                                              SUTRA........32500
      ITP1 = IT + 1                                                      SUTRA........32600
      ITER=0                                                             SUTRA........32700
      ML=0                                                               SUTRA........32800
      NOUMAT=0                                                           SUTRA........32900
C.....SET NOUMAT TO OBTAIN U SOLUTION BY SIMPLE BACK SUBSTITUTION        SUTRA........33000
C        BEGINNING ON SECOND TIME STEP AFTER A PRESSURE SOLUTION         SUTRA........33100
C        IF THE SOLUTION IS NON-ITERATIVE (ITRMAX=1)                     SUTRA........33200
      IF (ONCEP.AND.ITREL.GT.2) THEN                                     SUTRA........33300
      IF(MOD(IT-1,NPCYC).NE.0.AND.MOD(IT,NPCYC).NE.0                     SUTRA........33400
     1   .AND.(.NOT.BCSFL(IT-1)).AND.(.NOT.BCSFL(IT))                    SUTRA........33500
     2   .AND.ITRMAX.EQ.1) NOUMAT=1                                      SUTRA........33600
      END IF                                                             SUTRA........33700
C.....CHOOSE SOLUTION VARIABLE ON THIS TIME STEP:                        SUTRA........33800
C        ML=0 FOR P AND U, ML=1 FOR P ONLY, AND ML=2 FOR U ONLY.         SUTRA........33900
      IF(IT.EQ.1.AND.ISSFLO.NE.2) GOTO 1005                              SUTRA........34000
      IF(MOD(IT,NPCYC).NE.0 .AND. (.NOT.BCSFL(IT))) ML=2                 SUTRA........34100
      IF(MOD(IT,NUCYC).NE.0 .AND. (.NOT.BCSTR(IT))) ML=1                 SUTRA........34200
C.....INCREMENT SIMULATION CLOCK, TSEC, TO END OF NEW TIME STEP          SUTRA........34300
 1005 TSECM1 = TSEC                                                      SUTRA........34400
      TSEC = SCHDLS(ISCHTS)%SLIST(ITP1)%DVALU1                           SUTRA........34500
      TMIN=TSEC/60.D0                                                    SUTRA........34600
      THOUR=TMIN/60.D0                                                   SUTRA........34700
      TDAY=THOUR/24.D0                                                   SUTRA........34800
      TWEEK=TDAY/7.D0                                                    SUTRA........34900
      TMONTH=TDAY/30.4375D0                                              SUTRA........35000
      TYEAR=TDAY/365.25D0                                                SUTRA........35100
C.....UPDATE TIME STEP SIZE                                              SUTRA........35200
      DELTM1 = DELT                                                      SUTRA........35300
      DELT = TSEC - TSECM1                                               SUTRA........35400
C.....NO SIMPLE BACK SUBSTITUTION FOR U IF TIME STEP HAS CHANGED         SUTRA........35500
C        BY MORE THAN A VERY SMALL TOLERANCE                             SUTRA........35600
C        OR LAKES HAVE BEEN UPDATED                                      SUTRA........35700
      RELCHG = DABS((DELT - DELTLC)/DELTLC)                              SUTRA........35800
      IF ((RELCHG.GT.1D-14).OR.LAKUP) THEN                               SUTRA........35900
         DELTLC = DELT                                                   SUTRA........36000
         NOUMAT = 0                                                      SUTRA........36100
      END IF                                                             SUTRA........36200
C                                                                        SUTRA........36300
C.....WRITE TIME STEP NUMBER AND ELAPSED TIME                            SUTRA........36400
      IF (ISSTRA.NE.0) THEN                                              SUTRA........36500
         IF (KSCRN.EQ.1) WRITE (*,902) IT, ITMAX                         SUTRA........36600
         WRITE (K00,902) IT, ITMAX                                       SUTRA........36700
      ELSE                                                               SUTRA........36800
         TELAPS = TSEC - TSTART                                          SUTRA........36900
         IF (KSCRN.EQ.1) WRITE (*,903) IT, ITMAX, TELAPS, TEMAX          SUTRA........37000
         WRITE (K00,903) IT, ITMAX, TELAPS, TEMAX                        SUTRA........37100
      END IF                                                             SUTRA........37200
C                                                                        SUTRA........37300
C.....SET TIME STEP (DELTP AND/OR DELTU) AND INCREMENT CLOCK             SUTRA........37400
C        FOR WHICHEVER OF P AND/OR U ARE SOLVED FOR ON THIS TIME STEP    SUTRA........37500
      IF(ML-1) 1010,1020,1030                                            SUTRA........37600
 1010 DLTPM1=DELTP                                                       SUTRA........37700
      DLTUM1=DELTU                                                       SUTRA........37800
      DELTP=TSEC-TSECP0                                                  SUTRA........37900
      DELTU=TSEC-TSECU0                                                  SUTRA........38000
      TSECP0=TSEC                                                        SUTRA........38100
      TSECU0=TSEC                                                        SUTRA........38200
      GOTO 1040                                                          SUTRA........38300
 1020 DLTPM1=DELTP                                                       SUTRA........38400
      DELTP=TSEC-TSECP0                                                  SUTRA........38500
      TSECP0=TSEC                                                        SUTRA........38600
      GOTO 1040                                                          SUTRA........38700
 1030 DLTUM1=DELTU                                                       SUTRA........38800
      DELTU=TSEC-TSECU0                                                  SUTRA........38900
      TSECU0=TSEC                                                        SUTRA........39000
 1040 CONTINUE                                                           SUTRA........39100
C.....SET PROJECTION FACTORS USED ON FIRST ITERATION TO EXTRAPOLATE      SUTRA........39200
C        AHEAD ONE-HALF TIME STEP                                        SUTRA........39300
      BDELP=(DELTP/DLTPM1)*0.50D0                                        SUTRA........39400
      BDELU=(DELTU/DLTUM1)*0.50D0                                        SUTRA........39500
      BDELP1=BDELP+1.0D0                                                 SUTRA........39600
      BDELU1=BDELU+1.0D0                                                 SUTRA........39700
C                                                                        SUTRA........39800
C.....SAVE LAKE STATE                                                    SUTRA........39900
      IF (LAKUSD) THEN                                                   SUTRA........40000
         ISTATM1 = ISTAT                                                 SUTRA........40100
         VOLWM1 = VOLW                                                   SUTRA........40200
         UWM1 = UW                                                       SUTRA........40300
         UWMSM1 = UWMS                                                   SUTRA........40400
      END IF                                                             SUTRA........40500
C                                                                        SUTRA........40600
C - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  SUTRA........40700
C.....BEGIN ITERATION - - - - - - - - - - - - - - - - - - - - - - - - -  SUTRA........40800
C - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  SUTRA........40900
C.....INCREMENT ITERATION NUMBER                                         SUTRA........41000
 1100 ITER=ITER+1                                                        SUTRA........41100
C.....IF ITERATIVE SOLUTION, WRITE ITERATION NUMBER                      SUTRA........41200
      IF (ITRMAX.NE.1) THEN                                              SUTRA........41300
         IF (KSCRN.EQ.1) WRITE (*,1104) ITER                             SUTRA........41400
         WRITE (K00,1104) ITER                                           SUTRA........41500
      END IF                                                             SUTRA........41600
 1104 FORMAT (1X, 3X, 'NON-LINEARITY ITERATION ', I5)                    SUTRA........41700
C                                                                        SUTRA........41800
      IF(ML-1) 2000,2200,2400                                            SUTRA........41900
C.....SHIFT AND SET VECTORS FOR TIME STEP WITH BOTH P AND U SOLUTIONS    SUTRA........42000
 2000 DO 2025 I=1,NN                                                     SUTRA........42100
C.....SET DPDT AND DUDT ITERATES TO VALUES FROM PREVIOUS ITERATION       SUTRA........42200
C        FOR P AND U COMING FROM THIS TIME STEP                          SUTRA........42300
C        (THIS IS OVERWRITTEN ON THE FIRST ITERATION JUST BELOW)         SUTRA........42400
C        NOTE: DPDTITR IS USED IN THE BUDGET AND IN SUBROUTINE NODAL     SUTRA........42500
C        NOTE: DUDTITR IS USED IN THE BUDGET AND IN SUBROUTINE NODAL     SUTRA........42600
      DPDTITR(I)=(PVEC(I)-PM1(I))/DELTP                                  SUTRA........42700
      DUDTITR(I)=(UVEC(I)-UM1(I))/DELTU                                  SUTRA........42800
      PITER(I)=PVEC(I)                                                   SUTRA........42900
      PVEL(I)=PVEC(I)                                                    SUTRA........43000
      UITER(I)=UVEC(I)                                                   SUTRA........43100
      RCITM1(I)=RCIT(I)                                                  SUTRA........43200
 2025 RCIT(I)=RHOFUN(UITER(I))                                           SUTRA........43300
      IF ((ONCEP).AND.(NPBC.NE.0)) CALL GETQPLITR(ONCEP)                 SUTRA........43400
 2051 IF ((ONCEP).AND.(NPBG.NE.0)) CALL GETQPGITR(ONCEP)                 SUTRA........43500
C.....QINITR VALUE DIFFERS FROM QIN ONLY IF BCTIME OR BCSTEP CHANGED QIN SUTRA........43600
 2059 IF (ITER.LE.2) THEN                                                SUTRA........43700
         DO 2060 I=1,NN                                                  SUTRA........43800
 2060    QINITR(I)=QIN(I)                                                SUTRA........43900
      END IF                                                             SUTRA........44000
      IF(ITER.GT.1) GOTO 2600                                            SUTRA........44100
      DO 2075 I=1,NN                                                     SUTRA........44200
      PITER(I)=BDELP1*PVEC(I)-BDELP*PM1(I)                               SUTRA........44300
      UITER(I)=BDELU1*UVEC(I)-BDELU*UM1(I)                               SUTRA........44400
C.....RESET DPDT AND DUDT ITERATES TO VALUE FROM MOST RECENT             SUTRA........44500
C        P AND U TIME STEP ON THE FIRST ITERATION FOR THIS TIME STEP     SUTRA........44600
      DPDTITR(I)=(PVEC(I)-PM1(I))/DLTPM1                                 SUTRA........44700
      DUDTITR(I)=(UVEC(I)-UM1(I))/DLTUM1                                 SUTRA........44800
      PM1(I)=PVEC(I)                                                     SUTRA........44900
 2075 UM1(I)=UVEC(I)                                                     SUTRA........45000
      GOTO 2600                                                          SUTRA........45100
C.....SHIFT AND SET VECTORS FOR TIME STEP WITH P SOLUTION ONLY           SUTRA........45200
 2200 DO 2225 I=1,NN                                                     SUTRA........45300
      PVEL(I)=PVEC(I)                                                    SUTRA........45400
 2225 PITER(I)=PVEC(I)                                                   SUTRA........45500
      IF (ITER.EQ.1) THEN                                                SUTRA........45600
         DO 2435 I=1,NN                                                  SUTRA........45700
 2435       DPDTITR(I)=(PVEC(I)-PM1(I))/DLTPM1                           SUTRA........45800
      ELSE                                                               SUTRA........45900
         DO 2440 I=1,NN                                                  SUTRA........46000
 2440       DPDTITR(I)=(PVEC(I)-PM1(I))/DELTP                            SUTRA........46100
      END IF                                                             SUTRA........46200
      IF(ITER.GT.1) GOTO 2600                                            SUTRA........46300
      DO 2250 I=1,NN                                                     SUTRA........46400
      DUDTITR(I)=(UVEC(I)-UM1(I))/DELTU                                  SUTRA........46500
      PITER(I)=BDELP1*PVEC(I)-BDELP*PM1(I)                               SUTRA........46600
      UITER(I)=UVEC(I)                                                   SUTRA........46700
      RCITM1(I)=RCIT(I)                                                  SUTRA........46800
      RCIT(I)=RHOFUN(UITER(I))                                           SUTRA........46900
 2250 PM1(I)=PVEC(I)                                                     SUTRA........47000
      GOTO 2600                                                          SUTRA........47100
C.....SHIFT AND SET VECTORS FOR TIME STEP WITH U SOLUTION ONLY           SUTRA........47200
 2400 IF (ITER.EQ.1) THEN                                                SUTRA........47300
         DO 2405 I=1,NN                                                  SUTRA........47400
 2405       UITER(I)=BDELU1*UVEC(I)-BDELU*UM1(I)                         SUTRA........47500
      ELSE                                                               SUTRA........47600
         DO 2410 I=1,NN                                                  SUTRA........47700
 2410       UITER(I)=UVEC(I)                                             SUTRA........47800
      END IF                                                             SUTRA........47900
      IF(NOUMAT.EQ.1) GOTO 2480                                          SUTRA........48000
      IF (ITER.EQ.1) THEN                                                SUTRA........48100
         DO 2415 I=1,NN                                                  SUTRA........48200
 2415       DUDTITR(I)=(UVEC(I)-UM1(I))/DLTUM1                           SUTRA........48300
      ELSE                                                               SUTRA........48400
         DO 2420 I=1,NN                                                  SUTRA........48500
 2420       DUDTITR(I)=(UVEC(I)-UM1(I))/DELTU                            SUTRA........48600
      END IF                                                             SUTRA........48700
C.....SET PARAMETERS FROM MOST RECENT P AND U TIME STEP                  SUTRA........48800
      IF(ITER.GT.1) GOTO 2600                                            SUTRA........48900
      DO 2450 I=1,NN                                                     SUTRA........49000
      DPDTITR(I)=(PVEC(I)-PM1(I))/DELTP                                  SUTRA........49100
      QINITR(I)=QIN(I)                                                   SUTRA........49200
      PITER(I)=PVEC(I)                                                   SUTRA........49300
      PVEL(I)=PVEC(I)                                                    SUTRA........49400
 2450 RCITM1(I)=RCIT(I)                                                  SUTRA........49500
      IF ((ONCEP).AND.(NPBC.NE.0)) CALL GETQPLITR(ONCEP)                 SUTRA........49600
 2476 IF ((ONCEP).AND.(NPBG.NE.0)) CALL GETQPGITR(ONCEP)                 SUTRA........49700
 2480 DO 2500 I=1,NN                                                     SUTRA........49800
 2500 UM1(I)=UVEC(I)                                                     SUTRA........49900
 2600 CONTINUE                                                           SUTRA........50000
C                                                                        SUTRA........50100
C.....IDENTIFY ACTIVE LAKE NODES AND UPDATE THEIR LAKE PRESSURES         SUTRA........50200
      IF (LAKUSD) CALL GETPLK()                                          SUTRA........50300
C                                                                        SUTRA........50400
C.....INITIALIZE ARRAYS WITH VALUE OF ZERO                               SUTRA........50500
      MATDIM=NELT*NCBI                                                   SUTRA........50600
      IF(ML-1) 3000,3000,3300                                            SUTRA........50700
 3000 CALL ZERO(PMAT,MATDIM,0.0D0)                                       SUTRA........50800
      CALL ZERO(PVEC,NNVEC,0.0D0)                                        SUTRA........50900
      CALL ZERO(VOL,NN,0.0D0)                                            SUTRA........51000
      IF(ML-1) 3300,3400,3300                                            SUTRA........51100
 3300 IF(NOUMAT) 3350,3350,3375                                          SUTRA........51200
 3350 CALL ZERO(UMAT,MATDIM,0.0D0)                                       SUTRA........51300
 3375 CALL ZERO(UVEC,NNVEC,0.0D0)                                        SUTRA........51400
 3400 CONTINUE                                                           SUTRA........51500
C                                                                        SUTRA........51600
C.....SET TIME-DEPENDENT BOUNDARY CONDITIONS, SOURCES AND SINKS          SUTRA........51700
C        FOR THIS TIME STEP                                              SUTRA........51800
      IF (ITER.EQ.1.AND.IBCT.NE.6)                                       SUTRA........51900
     1   CALL BCTIME(IPBC,PBC,IUBC,UBC,QIN,UIN,QUIN,IQSOP,IQSOU,         SUTRA........52000
     2   IPBG,PBG1,QPBG1,PBG2,QPBG2,CPQL1,CPQL2,UPBGI,UPBGO,CUPBGO,      SUTRA........52100
     3   IUBG,UBG1,QUBG1,UBG2,QUBG2,IPBCT,IUBCT,IQSOPT,IQSOUT,           SUTRA........52200
     4   IPBGT,IUBGT,X,Y,Z,IBCPBC,IBCUBC,IBCSOP,IBCSOU,IBCPBG,IBCUBG,    SUTRA........52300
     5   IBCSF,IBCSS,IBCSP,IBCSU,IBCSPG,IBCSUG)                          SUTRA........52400
      IF ((ITER.EQ.1).AND.(K9.NE.-1))                                    SUTRA........52500
     1   CALL BCSTEP(SETBCS,IPBC,PBC,IUBC,UBC,QIN,UIN,QUIN,IQSOP,IQSOU,  SUTRA........52600
     2   IPBCT1,IUBCT1,IQSOPT1,IQSOUT1,GNUPP,GNUUU,                      SUTRA........52700
     3   IBCPBC,IBCUBC,IBCSOP,IBCSOU,IBCPBG,IBCUBG,IIDPBC,IIDUBC,        SUTRA........52800
     4   IIDSOP,IIDSOU,IIDPBG,IIDUBG,                                    SUTRA........52900
     5   IBCSF,IBCSS,IBCSP,IBCSU,IBCSPG,IBCSUG,NCID,BCSFL,BCSTR,         SUTRA........53000
     6   IPBG,PBG1,QPBG1,PBG2,QPBG2,CPQL1,CPQL2,UPBGI,CUPBGO,UPBGO,      SUTRA........53100
     7   QPBGIC,GNUPG,IUBG,UBG1,QUBG1,UBG2,QUBG2,QUBGIC,GNUUG)           SUTRA........53200
C                                                                        SUTRA........53300
C.....DETERMINE EFFECT OF USER-SPECIFIED LAKE INTERACTIONS ON            SUTRA........53400
C        BOUNDARY CONDITIONS                                             SUTRA........53500
      IF (LAKUSD) CALL LAKAPP(IPBC,IUBC,IQSOP,IQSOU,IPBG,IUBG,           SUTRA........53600
     1   IBCSF,IBCSS,IBCSP,IBCSU,IBCSPG,IBCSUG)                          SUTRA........53700
C                                                                        SUTRA........53800
C.....IDENTIFY GENERALIZED-FLOW NODES THAT ARE ACTING AS SPECIFIED-      SUTRA........53900
C        PRESSURE NODES BECAUSE OF USER-SPECIFIED PRESSURE LIMITS        SUTRA........54000
      IF (NPBG.GT.0) CALL GETISPBG()                                     SUTRA........54100
C                                                                        SUTRA........54200
C.....SET SORPTION PARAMETERS FOR THIS TIME STEP                         SUTRA........54300
      IF(ML.NE.1.AND.ME.EQ.-1.AND.NOUMAT.EQ.0)                           SUTRA........54400
     2   CALL ADSORB(CS1,CS2,CS3,SL,SR,UITER,NREGAD)                     SUTRA........54500
C                                                                        SUTRA........54600
C.....DO ELEMENTWISE CALCULATIONS IN MATRIX EQUATION FOR P AND/OR U      SUTRA........54700
      IF (NOUMAT.EQ.0) THEN                                              SUTRA........54800
       IF (KTYPE(1).EQ.3) THEN                                           SUTRA........54900
C..... 3D PROBLEM                                                        SUTRA........55000
       CALL ELEMN3(ML,IN,X,Y,Z,PITER,UITER,RCIT,RCITM1,POR,              SUTRA........55100
     2   ALMAX,ALMID,ALMIN,ATMAX,ATMID,ATMIN,                            SUTRA........55200
     3   PERMXX,PERMXY,PERMXZ,PERMYX,PERMYY,PERMYZ,PERMZX,PERMZY,PERMZZ, SUTRA........55300
     4   PANGL1,PANGL2,PANGL3,VMAG,VANG1,VANG2,VOL,PMAT,PVEC,            SUTRA........55400
     5   UMAT,UVEC,GXSI,GETA,GZET,PVEL,LREG,IA,JA,PBC,ISPBC,UBC,ISUBC,   SUTRA........55500
     6   ISPBG,LPBGSP,PBG1,PBG2,IBCPBC,IBCUBC)                           SUTRA........55600
       ELSE                                                              SUTRA........55700
C..... 2D PROBLEM                                                        SUTRA........55800
       CALL ELEMN2(ML,IN,X,Y,Z,PITER,UITER,RCIT,RCITM1,POR,              SUTRA........55900
     2   ALMAX,ALMIN,ATMAX,ATMIN,PERMXX,PERMXY,PERMYX,PERMYY,PANGL1,     SUTRA........56000
     3   VMAG,VANG1,VOL,PMAT,PVEC,UMAT,UVEC,GXSI,GETA,PVEL,LREG,         SUTRA........56100
     4   IA,JA,PBC,ISPBC,UBC,ISUBC,ISPBG,LPBGSP,PBG1,PBG2,IBCPBC,        SUTRA........56200
     5   IBCUBC)                                                         SUTRA........56300
       VANG2 = 0D0                                                       SUTRA........56400
       END IF                                                            SUTRA........56500
      END IF                                                             SUTRA........56600
C                                                                        SUTRA........56700
C.....DO NODEWISE CALCULATIONS IN MATRIX EQUATION FOR P AND/OR U         SUTRA........56800
      CALL NODAL(ML,VOL,PMAT,PVEC,UMAT,UVEC,PITER,UITER,PM1,DPDTITR,     SUTRA........56900
     1   DUDTITR,UM1,POR,QIN,UIN,QUIN,QINITR,CS1,CS2,CS3,SL,SR,SW,       SUTRA........57000
     2   DSWDP,RHO,SOP,NREG,JA,IBCSOP,IBCSOU,IQSOP,IQSOU)                SUTRA........57100
C                                                                        SUTRA........57200
C.....IF THIS WILL BE THE FIRST U SOLUTION, PREPARE.                     SUTRA........57300
      IF ((.NOT.ONCEU).AND.(ML.NE.1)) THEN                               SUTRA........57400
C........IF P HAS NEVER BEEN SOLVED FOR, EVALUATE QPLITR AND QPGITR      SUTRA........57500
C           NOW THAT THE BASE MATRIX AND RHS FOR P ARE SET UP.           SUTRA........57600
         IF (.NOT.ONCEP) THEN                                            SUTRA........57700
            CALL GETQPLITR(ONCEP)                                        SUTRA........57800
            CALL GETQPGITR(ONCEP)                                        SUTRA........57900
         END IF                                                          SUTRA........58000
C........INITIALIZE UZERO ARRAY FOR ITERATIVE SOLVER NOW THAT            SUTRA........58100
C           BASE MATRIX AND RHS FOR U ARE SET UP.                        SUTRA........58200
         IF ((.NOT.ONCEU).AND.(KSOLVU.NE.0)) CALL INITUZ()               SUTRA........58300
      END IF                                                             SUTRA........58400
C                                                                        SUTRA........58500
C.....SET SPECIFIED P AND U CONDITIONS IN MATRIX EQUATION FOR P AND/OR U SUTRA........58600
      CALL BC(ML,PMAT,PVEC,UMAT,UVEC,IPBC,PBC,BPBC,IUBC,UBC,BUBC,        SUTRA........58700
     1   QPLITR,IA,JA,GNUPP,GNUUU,UITER,IBCPBC,IBCUBC,ISPBC,ISUBC)       SUTRA........58800
C                                                                        SUTRA........58900
C.....SET GENERALIZED FLOW AND TRANSPORT CONDITIONS IN MATRIX EQUATION   SUTRA........59000
C        FOR P AND/OR U                                                  SUTRA........59100
      CALL BCG(ML,PMAT,PVEC,UMAT,UVEC,IPBG,PBG1,QPBG1,PBG2,              SUTRA........59200
     1   QPBG2,CPQL1,CPQL2,UPBGI,CUPBGO,UPBGO,IUBG,UBG1,QUBG1,UBG2,      SUTRA........59300
     2   QUBG2,BPBG,QPGITR,JA,GNUPG,QPBGIC,GNUUG,QUBGIC,PITER,           SUTRA........59400
     3   IBCPBG,IBCUBG,IBCSPG,IBCSUG,ISPBG,LPBGSP)                       SUTRA........59500
C                                                                        SUTRA........59600
C.....MATRIX EQUATION FOR P AND/OR U COMPLETE.  SOLVE EQUATIONS:         SUTRA........59700
C        WITH DIRECT SOLVER,                                             SUTRA........59800
C           WHEN KMT=0, DECOMPOSE AND BACK-SUBSTITUTE,                   SUTRA........59900
C           WHEN KMT=2, BACK-SUBSTITUTE ONLY.                            SUTRA........60000
C        KPU=1 WHEN SOLVING FOR P,                                       SUTRA........60100
C        KPU=2 WHEN SOLVING FOR U.                                       SUTRA........60200
      IHALFB=NBHALF-1                                                    SUTRA........60300
      IERRP = 0                                                          SUTRA........60400
      IERRU = 0                                                          SUTRA........60500
      LAKUP = .FALSE.                                                    SUTRA........60600
      IF(ML-1) 5000,5000,5500                                            SUTRA........60700
C                                                                        SUTRA........60800
C.....SOLVE FOR P                                                        SUTRA........60900
 5000 KMT=000000                                                         SUTRA........61000
      KPU=1                                                              SUTRA........61100
      KSOLVR = KSOLVP                                                    SUTRA........61200
      CALL SOLVER(KMT,KPU,KSOLVR,PMAT,PVEC,PITER,B,NN,IHALFB,NELT,NCBI,  SUTRA........61300
     1            IWK,FWK,IA,JA,IERRP,ITRSP,ERRP)                        SUTRA........61400
C.....IF DIRECT SOLVER, SAVE P(0) AND FINALIZE PVEC AT SPEC-P NODES      SUTRA........61500
      IF (KSOLVP.EQ.0) CALL FINALP()                                     SUTRA........61600
      ONCEP = .TRUE.                                                     SUTRA........61700
C.....P SOLUTION NOW IN PVEC                                             SUTRA........61800
C                                                                        SUTRA........61900
C.....IF STEADY FLOW, SET PM1=PVEC SO THAT INTERPOLATION AT FRACTIONAL   SUTRA........62000
C        TIME STEPS YIELDS THE STEADY-STATE PRESSURE.                    SUTRA........62100
      IF (ISSFLO.NE.0) PM1 = PVEC                                        SUTRA........62200
C                                                                        SUTRA........62300
      IF(ML-1) 5500,6000,5500                                            SUTRA........62400
C                                                                        SUTRA........62500
C.....SOLVE FOR U                                                        SUTRA........62600
 5500 KMT=000000                                                         SUTRA........62700
      KPU=2                                                              SUTRA........62800
      IF(NOUMAT) 5700,5700,5600                                          SUTRA........62900
 5600 KMT=2                                                              SUTRA........63000
 5700 KSOLVR = KSOLVU                                                    SUTRA........63100
C........IF SOLVING FOR U USING AN ITERATIVE SOLVER, LOAD INITIAL        SUTRA........63200
C           GUESS FOR U(0) SOLUTION INTO B BEFORE CALLING SOLVER.        SUTRA........63300
      IF (KSOLVR.NE.0) CALL INITU0()                                     SUTRA........63400
      CALL SOLVER(KMT,KPU,KSOLVR,UMAT,UVEC,UITER,B,NN,IHALFB,NELT,NCBI,  SUTRA........63500
     1            IWK,FWK,IA,JA,IERRU,ITRSU,ERRU)                        SUTRA........63600
C.....IF DIRECT SOLVER, SAVE U(0) AND FINALIZE UVEC AT SPEC-U NODES      SUTRA........63700
      CALL FINALU()                                                      SUTRA........63800
C.....RESTORE SPEC-U MATRIX OFF-DIAGONALS                               ! fix bk 231103
      CALL UBCMAT(ML,UMAT,IA,JA,IBCUBC,ISUBC)                           ! fix bk 231103
      ONCEU = .TRUE.                                                     SUTRA........63900
 6000 CONTINUE                                                           SUTRA........64000
C.....U SOLUTION NOW IN UVEC                                             SUTRA........64100
C                                                                        SUTRA........64200
C.....SOLVE FOR LAKE FLOW AND TRANSPORT                                  SUTRA........64300
      IF (LAKUSD) THEN                                                   SUTRA........64400
      IF ((ISSTRA.EQ.0).OR.((ISSTRA.EQ.1).AND.(IT.EQ.1))) THEN           SUTRA........64500
         ISTAT = ISTATM1                                                 SUTRA........64600
         VOLW = VOLWM1                                                   SUTRA........64700
         UW = UWM1                                                       SUTRA........64800
         UWMS = UWMSM1                                                   SUTRA........64900
         ULKITR = ULK                                                    SUTRA........65000
         CALL SLAKE()                                                    SUTRA........65100
      END IF                                                             SUTRA........65200
      END IF                                                             SUTRA........65300
C                                                                        SUTRA........65400
      IERR = IABS(IERRP) + IABS(IERRU)                                   SUTRA........65500
C                                                                        SUTRA........65600
C.....CHECK PROGRESS AND CONVERGENCE OF NON-LINEARITY ITERATIONS         SUTRA........65700
C        AND SET STOP AND GO FLAGS:                                      SUTRA........65800
C           ISTOP = -1   NOT CONVERGED - STOP SIMULATION                 SUTRA........65900
C           ISTOP =  0   ITERATIONS LEFT OR CONVERGED - KEEP SIMULATING  SUTRA........66000
C           ISTOP =  1   LAST TIME STEP REACHED - STOP SIMULATION        SUTRA........66100
C           IGOI = 0   P AND U CONVERGED, OR NO ITERATIONS DONE          SUTRA........66200
C           IGOI = 1   ONLY P HAS NOT YET CONVERGED TO CRITERION         SUTRA........66300
C           IGOI = 2   ONLY U HAS NOT YET CONVERGED TO CRITERION         SUTRA........66400
C           IGOI = 3   BOTH P AND U HAVE NOT YET CONVERGED TO CRITERIA   SUTRA........66500
      ISTOP=0                                                            SUTRA........66600
      IGOI=0                                                             SUTRA........66700
      IF(ITRMAX-1) 7500,7500,7000                                        SUTRA........66800
 7000 RPM=0.D0                                                           SUTRA........66900
      RUM=0.D0                                                           SUTRA........67000
      IPWORS=0                                                           SUTRA........67100
      IUWORS=0                                                           SUTRA........67200
      IF(ML-1) 7050,7050,7150                                            SUTRA........67300
 7050 DO 7100 I=1,NN                                                     SUTRA........67400
      RP=DABS(PVEC(I)-PITER(I))                                          SUTRA........67500
      IF(RP-RPM) 7100,7060,7060                                          SUTRA........67600
 7060 RPM=RP                                                             SUTRA........67700
      IPWORS=I                                                           SUTRA........67800
 7100 CONTINUE                                                           SUTRA........67900
      IF(RPM.GT.RPMAX) IGOI=IGOI+1                                       SUTRA........68000
 7150 IF(ML-1) 7200,7350,7200                                            SUTRA........68100
 7200 DO 7300 I=1,NN                                                     SUTRA........68200
      RU=DABS(UVEC(I)-UITER(I))                                          SUTRA........68300
      IF(RU-RUM) 7300,7260,7260                                          SUTRA........68400
 7260 RUM=RU                                                             SUTRA........68500
      IUWORS=I                                                           SUTRA........68600
 7300 CONTINUE                                                           SUTRA........68700
      IF(RUM.GT.RUMAX) IGOI=IGOI+2                                       SUTRA........68800
 7350 CONTINUE                                                           SUTRA........68900
      IF (KSCRN.EQ.1) WRITE (*,7377) RPM, RUM                            SUTRA........69000
      WRITE (K00,7377) RPM, RUM                                          SUTRA........69100
 7377 FORMAT (1X, 6X, 'Maximum changes in P, U: ',1PE8.1,", ",1PE8.1)    SUTRA........69200
      IF(IGOI.GT.0.AND.ITER.EQ.ITRMAX) ISTOP=-1                          SUTRA........69300
      IF(IGOI.GT.0.AND.ISTOP.EQ.0.AND.IERR.EQ.0) GOTO 1100               SUTRA........69400
C - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  SUTRA........69500
C.....END ITERATION - - - - - - - - - - - - - - - - - - - - - - - - - -  SUTRA........69600
C - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  SUTRA........69700
C                                                                        SUTRA........69800
 7500 CONTINUE                                                           SUTRA........69900
      IF(ISTOP.NE.-1.AND.IT.EQ.ITMAX) ISTOP=1                            SUTRA........70000
C                                                                        SUTRA........70100
C.....OUTPUT RESULTS FOR TIME STEP IN ACCORDANCE WITH PRINT CYCLES       SUTRA........70200
C                                                                        SUTRA........70300
C.....COMPUTE SOME LOGICAL CONDITIONS.  PRNALL=.TRUE. INDICATES THAT     SUTRA........70400
C        ALL RESULTS SHOULD BE PRINTED BECAUSE THIS IS THE LAST TIME     SUTRA........70500
C        STEP (EITHER BY DESIGN OR BECAUSE OF AN ERROR).  PRN0=.TRUE.    SUTRA........70600
C        INDICATES THAT INITIAL CONDITIONS ARE TO BE PRINTED FOR A       SUTRA........70700
C        STEADY-FLOW, TRANSIENT-TRANSPORT RUN.  PRNDEF=.TRUE. IF         SUTRA........70800
C        EITHER OF THE TWO PRECEDING CONDITIONS IS TRUE.                 SUTRA........70900
      PRNALL = ((ISTOP.NE.0).OR.(IERR.NE.0))                             SUTRA........71000
      PRN0 = ((ITREL.EQ.0).AND.(ISSFLO.NE.0).AND.(ISSTRA.NE.1))          SUTRA........71100
      PRNDEF = (PRNALL.OR.PRN0)                                          SUTRA........71200
C.....PRINT RESULTS TO THE LST OUTPUT FILE                               SUTRA........71300
      PRNK3 = (PRNDEF.OR.(MOD(IT,NPRINT).EQ.0)                           SUTRA........71400
     1         .OR.((ITREL.EQ.1).AND.(NPRINT.GT.0)))                     SUTRA........71500
      IF (PRNK3) THEN                                                    SUTRA........71600
      IF (KTYPE(1).EQ.3) THEN                                            SUTRA........71700
         CALL OUTLST3(ML,ISTOP,IGOI,IERRP,ITRSP,ERRP,IERRU,ITRSU,ERRU,   SUTRA........71800
     1      PVEC,UVEC,VMAG,VANG1,VANG2,SW,SI)                            SUTRA........71900
      ELSE                                                               SUTRA........72000
         CALL OUTLST2(ML,ISTOP,IGOI,IERRP,ITRSP,ERRP,IERRU,ITRSU,ERRU,   SUTRA........72100
     1      PVEC,UVEC,VMAG,VANG1,SW,SI)                                  SUTRA........72200
      END IF                                                             SUTRA........72300
C.....CALCULATE AND PRINT FLUID MASS AND/OR ENERGY OR SOLUTE MASS BUDGET SUTRA........72400
      IF(KBUDG.EQ.1)                                                     SUTRA........72500
     1   CALL BUDGET(ML,IBCT,IQSOPT,IQSOUT,VOL,SW,DSWDP,                 SUTRA........72600
     2      RHO,SOP,QIN,PVEC,PM1,DPDTITR,PBC,QPLITR,IPBC,IQSOP,          SUTRA........72700
     3      POR,UVEC,UM1,DUDTITR,UIN,QUIN,QINITR,                        SUTRA........72800
     4      IQSOU,UBC,IUBC,CS1,CS2,CS3,SL,SR,NREG,NREGAD,GNUPP,GNUUU,    SUTRA........72900
     5      UITER,IBCPBC,IBCUBC,IBCSOP,IBCSOU,IBCPBG,IBCUBG,             SUTRA........73000
     6      IPBG,PBG1,PBG2,QPBG1,QPBG2,QPBGIC,GNUPG,CPQL1,CPQL2,QPGITR,  SUTRA........73100
     7      IUBG,UBG1,QUBG1,UPBGI,UPBGO,GNUUG,CUPBGO)                    SUTRA........73200
      END IF                                                             SUTRA........73300
C.....PRINT NODEWISE AND ELEMENTWISE RESULTS TO OUTPUT FILES             SUTRA........73400
      PRNK5 = ((PRNDEF.OR.((IT.NE.0).AND.(MOD(IT,NCOLPR).EQ.0))          SUTRA........73500
     1         .OR.((ITREL.EQ.1).AND.(NCOLPR.GT.0))).AND.(K5.NE.-1))     SUTRA........73600
      IF (PRNK5) CALL OUTNOD(PVEC,UVEC,SW,X,Y,Z,TITLE1,TITLE2,           SUTRA........73700
     1   BCSFL,BCSTR)                                                    SUTRA........73800
      PRNK6 = ((PRNALL.OR.((IT.NE.0).AND.(MOD(IT,LCOLPR).EQ.0))          SUTRA........73900
     1         .OR.(ITREL.EQ.1)).AND.(K6.NE.-1))                         SUTRA........74000
      IF (PRNK6) CALL OUTELE(VMAG,VANG1,VANG2,IN,X,Y,Z,TITLE1,TITLE2,    SUTRA........74100
     1   BCSFL,BCSTR)                                                    SUTRA........74200
C.....PRINT RESULTS TO BOUNDARY CONDITION OUTPUT FILES.                  SUTRA........74300
      PRNBCF = ((PRNALL.OR.((IT.NE.0).AND.(MOD(IT,NBCFPR).EQ.0))         SUTRA........74400
     1          .OR.((ITREL.EQ.1).AND.(NBCFPR.GT.0))).AND.(K10.NE.-1))   SUTRA........74500
      PRNBCS = ((PRNALL.OR.((IT.NE.0).AND.(MOD(IT,NBCSPR).EQ.0))         SUTRA........74600
     1          .OR.((ITREL.EQ.1).AND.(NBCSPR.GT.0))).AND.(K11.NE.-1))   SUTRA........74700
      PRNBCP = ((PRNALL.OR.((IT.NE.0).AND.(MOD(IT,NBCPPR).EQ.0))         SUTRA........74800
     1          .OR.((ITREL.EQ.1).AND.(NBCPPR.GT.0))).AND.(K12.NE.-1))   SUTRA........74900
      PRNBCU = ((PRNALL.OR.((IT.NE.0).AND.(MOD(IT,NBCUPR).EQ.0))         SUTRA........75000
     1          .OR.((ITREL.EQ.1).AND.(NBCUPR.GT.0))).AND.(K13.NE.-1))   SUTRA........75100
      PRNBGP = ((PRNALL.OR.((IT.NE.0).AND.(MOD(IT,NBGPPR).EQ.0))         SUTRA........75200
     1          .OR.((ITREL.EQ.1).AND.(NBGPPR.GT.0))).AND.(K14.NE.-1))   SUTRA........75300
      PRNBGU = ((PRNALL.OR.((IT.NE.0).AND.(MOD(IT,NBGUPR).EQ.0))         SUTRA........75400
     1          .OR.((ITREL.EQ.1).AND.(NBGUPR.GT.0))).AND.(K15.NE.-1))   SUTRA........75500
      IF (PRNBCF)                                                        SUTRA........75600
     1   CALL OUTBCOF(QIN,IQSOP,UVEC,UIN,QINITR,IBCSOP,TITLE1,TITLE2,    SUTRA........75700
     2      IIDSOP)                                                      SUTRA........75800
      IF (PRNBCS)                                                        SUTRA........75900
     1   CALL OUTBCOS(QUIN,IQSOU,IBCSOU,TITLE1,TITLE2,IIDSOU)            SUTRA........76000
      IF (PRNBCP)                                                        SUTRA........76100
     1   CALL OUTBCOP(PVEC,UVEC,PBC,UBC,QPLITR,GNUPP,IPBC,IBCPBC,        SUTRA........76200
     2      TITLE1,TITLE2,IIDPBC)                                        SUTRA........76300
      IF (PRNBCU)                                                        SUTRA........76400
     1   CALL OUTBCOU(UVEC,UBC,GNUUU,IUBC,IBCUBC,TITLE1,TITLE2,          SUTRA........76500
     2      IIDUBC)                                                      SUTRA........76600
      IF (PRNBGP)                                                        SUTRA........76700
     1   CALL OUTBCOPG(PVEC,UVEC,PBG1,QPBG1,PBG2,QPBG2,UPBGI,UPBGO,      SUTRA........76800
     1   QPBGIC,GNUPG,QPGITR,IPBG,IBCPBG,IIDPBG,CPQL1,CPQL2,CUPBGO,      SUTRA........76900
     1   TITLE1,TITLE2)                                                  SUTRA........77000
      IF (PRNBGU)                                                        SUTRA........77100
     1   CALL OUTBCOUG(UVEC,UBG1,QUBG1,UBG2,QUBG2,QUBGIC,GNUUG,          SUTRA........77200
     1   IUBG,IBCUBG,IIDUBG,TITLE1,TITLE2)                               SUTRA........77300
C.....PRINT RESULTS TO LAKE-RELATED OUTPUT FILES.                        SUTRA........77400
      IF (LAKUSD) THEN                                                   SUTRA........77500
         PRNLK = (PRNDEF.OR.((IT.NE.0).AND.(MOD(IT,NLAKPR).EQ.0))        SUTRA........77600
     1         .OR.((ITREL.EQ.1).AND.(NLAKPR.GT.0)))                     SUTRA........77700
         IF (PRNLK) THEN                                                 SUTRA........77800
            CALL OUTLKBU(TITLE1,TITLE2)                                  SUTRA........77900
            IF (K20.NE.-1) CALL OUTLKST(TITLE1,TITLE2)                   SUTRA........78000
         END IF                                                          SUTRA........78100
      END IF                                                             SUTRA........78200
C.....PRINT RESULTS TO OBSERVATION OUTPUT FILES.  CHECK FOR OUTPUT       SUTRA........78300
C       SCHEDULED WITHIN THE CURRENT TIME STEP AND PRINT IT.  IF THIS    SUTRA........78400
C       IS THE INITIAL CONDITION (IT=0) OR THE FINAL TIME STEP, PRINT    SUTRA........78500
C       RESULTS IF THEY HAVE NOT ALREADY BEEN PRINTED.                   SUTRA........78600
C.....LOOP OVER OBSERVATION OUTPUT SCHEDULES.                            SUTRA........78700
      DO 7650 NFLO=1,NFLOMX                                              SUTRA........78800
C........IF NO FILE FOR THIS OUTPUT, SKIP IT                             SUTRA........78900
         IF (IUNIO(NFLO).EQ.-1) CYCLE                                    SUTRA........79000
C........SET FLAG INDICATING THAT OUTPUT HAS NOT (YET) BEEN PRINTED      SUTRA........79100
C           FOR THE END OF THE CURRENT TIME STEP                         SUTRA........79200
         TSPRTD = .FALSE.                                                SUTRA........79300
C........IF TRANSPORT IS TRANSIENT AND THIS IS NOT THE INITIAL           SUTRA........79400
C            CONDITION, CHECK FOR SCHEDULED OUTPUT AND PRINT IT.         SUTRA........79500
         IF ((ISSTRA.EQ.0).AND.(ITREL.NE.0)) THEN                        SUTRA........79600
C...........GET THE LENGTH OF THE SCHEDULE AND THE NEXT TIME/STEP        SUTRA........79700
C              SCHEDULED TO BE OUTPUT.                                   SUTRA........79800
ccc            IF (LCNT(NFLO).GT.LENSCH) CYCLE                              SUTRA........79900
            LENSCH = DENOB(NFLO)%LLEN                                    SUTRA........80000
            IF (LCOB(NFLO).GT.LENSCH) CYCLE                              ! fix rbw 200519b
ccc            TIME = DENOB(NFLO)%SLIST(LCNT(NFLO))%DVALU1                  SUTRA........80100
ccc            STEP = DENOB(NFLO)%SLIST(LCNT(NFLO))%DVALU2                  SUTRA........80200
            TIME = DENOB(NFLO)%SLIST(LCOB(NFLO))%DVALU1                  ! fix rbw 200519b
            STEP = DENOB(NFLO)%SLIST(LCOB(NFLO))%DVALU2                  ! fix rbw 200519b
C...........LOOP THROUGH THE SCHEDULE, PRINTING ANY OUTPUT SCHEDULED     SUTRA........80300
C              WITHIN THE CURRENT TIME STEP.  (LOOP AS LONG AS THE       SUTRA........80400
C              SCHEDULED OUTPUT IS WITHIN THE CURRENT TIME STEP          SUTRA........80500
C              AND THE SCHEDULE HAS NOT BEEN EXHAUSTED.)                 SUTRA........80600
ccc            DO WHILE ((DIT.GE.STEP).AND.(LCNT(NFLO).LE.LENSCH))          SUTRA........80700
            DO WHILE ((DIT.GE.STEP).AND.(LCOB(NFLO).LE.LENSCH))          ! fix rbw 200519b
C..............IF THE SCHEDULED STEP IS NOT ZERO, PRINT RESULTS.         SUTRA........80800
               IF (STEP.NE.0D0) THEN                                     SUTRA........80900
                  IF (OFP(NFLO)%FRMT.EQ."OBS") THEN                      SUTRA........81000
                     CALL OUTOBS(NFLO,OBSPTS,TIME,STEP,PM1,UM1,          SUTRA........81100
     1                  PVEC,UVEC,TITLE1,TITLE2,IN,LREG,BCSFL,BCSTR)     SUTRA........81200
                  ELSE                                                   SUTRA........81300
                     CALL OUTOBC(NFLO,OBSPTS,TIME,STEP,PM1,UM1,          SUTRA........81400
     1                  PVEC,UVEC,TITLE1,TITLE2,IN,LREG,BCSFL,BCSTR)     SUTRA........81500
                  END IF                                                 SUTRA........81600
C.................IF END OF TIME STEP HAS JUST BEEN PRINTED, SET FLAG.   SUTRA........81700
                  IF (DIT.EQ.STEP) TSPRTD = .TRUE.                       SUTRA........81800
               END IF                                                    SUTRA........81900
C..............GO TO THE NEXT ENTRY IN THE SCHEDULE, IF THERE IS ONE,    SUTRA........82000
C                 AND INCREMENT THE COUNTER.                             SUTRA........82100
ccc               IF (LCNT(NFLO).LT.LENSCH) THEN                            SUTRA........82200
ccc                  LCNT(NFLO) = LCNT(NFLO) + 1                            SUTRA........82300
ccc                  TIME = DENOB(NFLO)%SLIST(LCNT(NFLO))%DVALU1            SUTRA........82400
ccc                  STEP = DENOB(NFLO)%SLIST(LCNT(NFLO))%DVALU2            SUTRA........82500
ccc               ELSE                                                      SUTRA........82600
ccc                  LCNT(NFLO) = LCNT(NFLO) + 1                            SUTRA........82700
ccc               END IF                                                    SUTRA........82800
               IF (LCOB(NFLO).LT.LENSCH) THEN                            ! fix rbw 200519b ...
                  LCOB(NFLO) = LCOB(NFLO) + 1
                  TIME = DENOB(NFLO)%SLIST(LCOB(NFLO))%DVALU1
                  STEP = DENOB(NFLO)%SLIST(LCOB(NFLO))%DVALU2
               ELSE
                  LCOB(NFLO) = LCOB(NFLO) + 1
               END IF                                                    ! ... fix rbw 200519b
            END DO                                                       SUTRA........82900
         END IF                                                          SUTRA........83000
C........IF THIS IS THE INITIAL OR FINAL CONDITION, PRINT IT IF IT       SUTRA........83100
C           HAS NOT ALREADY BEEN PRINTED.                                SUTRA........83200
         IF (PRNDEF.AND.(.NOT.TSPRTD)) THEN                              SUTRA........83300
            IF (OFP(NFLO)%FRMT.EQ."OBS") THEN                            SUTRA........83400
               TIME = TSEC                                               SUTRA........83500
               CALL OUTOBS(NFLO,OBSPTS,TIME,DIT,PM1,UM1,PVEC,UVEC,       SUTRA........83600
     1            TITLE1,TITLE2,IN,LREG,BCSFL,BCSTR)                     SUTRA........83700
            ELSE                                                         SUTRA........83800
               CALL OUTOBC(NFLO,OBSPTS,TIME,DIT,PM1,UM1,PVEC,UVEC,       SUTRA........83900
     1            TITLE1,TITLE2,IN,LREG,BCSFL,BCSTR)                     SUTRA........84000
            END IF                                                       SUTRA........84100
         END IF                                                          SUTRA........84200
 7650 CONTINUE                                                           SUTRA........84300
C                                                                        SUTRA........84400
C.....STORE RESULTS FOR POSSIBLE RESTART OF SIMULATION EACH              SUTRA........84500
C        ISTORE TIME STEPS AND AFTER LAST TIME STEP, THEN GO             SUTRA........84600
C        TO NEXT TIME STEP                                               SUTRA........84700
      IF (IERR.EQ.0) THEN                                                SUTRA........84800
         IF ((K4.NE.-1).AND.(ISTORE.NE.0).AND.((ISTOP.NE.0).OR.          SUTRA........84900
     1      (MOD(IT,ISTORE).EQ.0))) THEN                                 SUTRA........85000
            QINITR = QIN                                                 SUTRA........85100
            PITER = PVEC                                                 SUTRA........85200
            IF (NPBC.NE.0) CALL GETQPLITR(ONCEP)                         SUTRA........85300
            IF (NPBG.NE.0) CALL GETQPGITR(ONCEP)                         SUTRA........85400
            CALL OUTRST(PVEC,UVEC,PM1,UM1,CS1,RCIT,SW,QIN,PBC,           SUTRA........85500
     3         UIN,UBC,QUIN,PBG1,QPBG1,PBG2,QPBG2,UPBGI,UPBGO,UBG1,      SUTRA........85600
     3         QUBG1,UBG2,QUBG2,IBCPBC,IBCUBC,IBCSOP,IBCSOU,IBCPBG,      SUTRA........85700
     4         IBCUBG,IIDPBC,IIDUBC,IIDSOP,IIDSOU,IIDPBG,IIDUBG,         SUTRA........85800
     5         IBCSF,IBCSS,IBCSP,IBCSU,IBCSPG,IBCSUG,CPQL1,CPQL2,CUPBGO, SUTRA........85900
     6         QPLITR,QPGITR,QINITR,ISPBG,LPBGSP)                        SUTRA........86000
            IF (LAKUSD) CALL OUTLKRS()                                   SUTRA........86100
         END IF                                                          SUTRA........86200
C........IF LAKES UPDATED, STORE INFORMATION FOR LAKES BUDGETS.          SUTRA........86300
         IF (LAKUP) THEN                                                 SUTRA........86400
            VOLWO = VOLW                                                 SUTRA........86500
            STGBO = STGB                                                 SUTRA........86600
            UWMSO = UWMS                                                 SUTRA........86700
            UWO = UW                                                     SUTRA........86800
            ISTATO = ISTAT                                               SUTRA........86900
            TSECO = TSEC                                                 SUTRA........87000
            LUTSO = IT                                                   SUTRA........87100
         END IF                                                          SUTRA........87200
         IF (ISTOP.EQ.0) GOTO 1000                                       SUTRA........87300
      END IF                                                             SUTRA........87400
C                                                                        SUTRA........87500
C ********************************************************************** SUTRA........87600
C.....END TIME STEP **************************************************** SUTRA........87700
C ********************************************************************** SUTRA........87800
C                                                                        SUTRA........87900
C                                                                        SUTRA........88000
C.....DEALLOCATE ARRAY DENOB                                             SUTRA........88100
      DEALLOCATE (DENOB)                                                 SUTRA........88200
C                                                                        SUTRA........88300
C.....WRAP UP LAKES                                                      SUTRA........88400
      IF (LAKUSD) CALL LAKDON()                                          SUTRA........88500
C                                                                        SUTRA........88600
C.....COMPLETE OUTPUT AND TERMINATE SIMULATION                           SUTRA........88700
      IF (IERRP.NE.0) THEN                                               SUTRA........88800
         ERRCOD = 'SOL-1'                                                SUTRA........88900
         CHERR(1) = 'P'                                                  SUTRA........89000
         CHERR(2) = SOLWRD(KSOLVP)                                       SUTRA........89100
         INERR(1) = IERRP                                                SUTRA........89200
         INERR(2) = ITRSP                                                SUTRA........89300
         RLERR(1) = ERRP                                                 SUTRA........89400
         RLERR(2) = TOLP                                                 SUTRA........89500
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        SUTRA........89600
      ELSE IF (IERRU.NE.0) THEN                                          SUTRA........89700
         ERRCOD = 'SOL-1'                                                SUTRA........89800
         CHERR(1) = 'U'                                                  SUTRA........89900
         CHERR(2) = SOLWRD(KSOLVU)                                       SUTRA........90000
         INERR(1) = IERRU                                                SUTRA........90100
         INERR(2) = ITRSU                                                SUTRA........90200
         RLERR(1) = ERRU                                                 SUTRA........90300
         RLERR(2) = TOLU                                                 SUTRA........90400
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        SUTRA........90500
      END IF                                                             SUTRA........90600
C                                                                        SUTRA........90700
      IF(ISTORE.GT.0) WRITE(K3,8100)                                     SUTRA........90800
 8100 FORMAT(//////11X,'*** LAST SOLUTION HAS BEEN STORED ',             SUTRA........90900
     1   'IN THE RESTART DATA FILE ***')                                 SUTRA........91000
C                                                                        SUTRA........91100
C.....OUTPUT END OF SIMULATION MESSAGE AND RETURN TO MAIN FOR STOP       SUTRA........91200
      IF(ISTOP.EQ.-1) THEN                                               SUTRA........91300
         ERRCOD = 'CON-1'                                                SUTRA........91400
         IF (ME.EQ.1) THEN                                               SUTRA........91500
            CDUM80 = 'temperature'                                       SUTRA........91600
            LENC = 11                                                    SUTRA........91700
         ELSE                                                            SUTRA........91800
            CDUM80 = 'concentration'                                     SUTRA........91900
            LENC = 13                                                    SUTRA........92000
         END IF                                                          SUTRA........92100
         IF (IGOI.EQ.1) THEN                                             SUTRA........92200
            CHERR(1) = 'pressure'                                        SUTRA........92300
            LENC = 8                                                     SUTRA........92400
         ELSE IF (IGOI.EQ.2) THEN                                        SUTRA........92500
            CHERR(1) = CDUM80                                            SUTRA........92600
         ELSE IF (IGOI.EQ.3) THEN                                        SUTRA........92700
            CHERR(1) = 'pressure and ' // CDUM80(1:LENC)                 SUTRA........92800
            LENC = 13 + LENC                                             SUTRA........92900
         END IF                                                          SUTRA........93000
         INERR(1) = IPWORS                                               SUTRA........93100
         INERR(2) = IUWORS                                               SUTRA........93200
         INERR(3) = ITER                                                 SUTRA........93300
         INERR(4) = LENC                                                 SUTRA........93400
         RLERR(1) = RPM                                                  SUTRA........93500
         RLERR(2) = RPMAX                                                SUTRA........93600
         RLERR(3) = RUM                                                  SUTRA........93700
         RLERR(4) = RUMAX                                                SUTRA........93800
         CALL SUTERR(ERRCOD, CHERR, INERR, RLERR)                        SUTRA........93900
      ELSE IF (ISTOP.EQ.2) THEN                                          SUTRA........94000
         WRITE(K3,8450)                                                  SUTRA........94100
 8450    FORMAT(////////11X,'SUTRA SIMULATION TERMINATED AT',            SUTRA........94200
     1      ' COMPLETION OF TIME PERIOD'/                                SUTRA........94300
     2                  11X,'***** ********** ********** **',            SUTRA........94400
     3      ' ********** ** **** ******')                                SUTRA........94500
      ELSE                                                               SUTRA........94600
         WRITE(K3,8550)                                                  SUTRA........94700
 8550    FORMAT(////////11X,'SUTRA SIMULATION TERMINATED AT',            SUTRA........94800
     1      ' COMPLETION OF TIME STEPS'/                                 SUTRA........94900
     2                  11X,'***** ********** ********** **',            SUTRA........95000
     3      ' ********** ** **** *****')                                 SUTRA........95100
      END IF                                                             SUTRA........95200
C                                                                        SUTRA........95300
      IF (KSCRN.EQ.1) WRITE(*,8590)                                      SUTRA........95400
      WRITE(K00,8590)                                                    SUTRA........95500
 8590 FORMAT(/1X,'S I M U L A T I O N   E N D E D'/)                     SUTRA........95600
      RETURN                                                             SUTRA........95700
C                                                                        SUTRA........95800
      END                                                                SUTRA........95900
C                                                                        SUTRA........96000
C     SUBROUTINE        T  E  N  S  Y  M           SUTRA VERSION 3.0     TENSYM.........100
C                                                                        TENSYM.........200
C *** PURPOSE :                                                          TENSYM.........300
C ***  TO TRANSFORM A DIAGONAL MATRIX TO A NEW COORDINATE SYSTEM.        TENSYM.........400
C ***  [T] IS THE DIAGONAL MATRIX EXPRESSED IN THE FIRST (INPUT)         TENSYM.........500
C ***  COORDINATE SYSTEM; [P] IS THE (SYMMETRIC) MATRIX EXPRESSED        TENSYM.........600
C ***  IN THE SECOND (OUTPUT) COORDINATE SYSTEM; AND [Q] IS THE          TENSYM.........700
C ***  THE TRANSFORMATION MATRIX.                                        TENSYM.........800
C                                                                        TENSYM.........900
      SUBROUTINE TENSYM(T11,T22,T33,Q11,Q12,Q13,Q21,Q22,Q23,             TENSYM........1000
     1   Q31,Q32,Q33,P11,P12,P13,P21,P22,P23,P31,P32,P33)                TENSYM........1100
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                TENSYM........1200
C                                                                        TENSYM........1300
C.....COMPUTE TRANSFORMED MATRIX.                                        TENSYM........1400
      P11= T11*Q11*Q11 + T22*Q12*Q12 + T33*Q13*Q13                       TENSYM........1500
      P12= T11*Q11*Q21 + T22*Q12*Q22 + T33*Q13*Q23                       TENSYM........1600
      P13= T11*Q11*Q31 + T22*Q12*Q32 + T33*Q13*Q33                       TENSYM........1700
      P22= T11*Q21*Q21 + T22*Q22*Q22 + T33*Q23*Q23                       TENSYM........1800
      P23= T11*Q21*Q31 + T22*Q22*Q32 + T33*Q23*Q33                       TENSYM........1900
      P33= T11*Q31*Q31 + T22*Q32*Q32 + T33*Q33*Q33                       TENSYM........2000
      P21= P12                                                           TENSYM........2100
      P31= P13                                                           TENSYM........2200
      P32= P23                                                           TENSYM........2300
C                                                                        TENSYM........2400
      RETURN                                                             TENSYM........2500
      END                                                                TENSYM........2600
C                                                                        TENSYM........2700
C     SUBROUTINE        T  E  R  S  E  Q           SUTRA VERSION 3.0     TERSEQ.........100
C                                                                        TERSEQ.........200
C *** PURPOSE :                                                          TERSEQ.........300
C ***  TO GRACEFULLY TERMINATE A SUTRA RUN BY DEALLOCATING THE MAIN      TERSEQ.........400
C ***  ALLOCATABLE ARRAYS AND CLOSING ALL FILES.                         TERSEQ.........500
C                                                                        TERSEQ.........600
      SUBROUTINE TERSEQ()                                                TERSEQ.........700
      USE ALLARR                                                         TERSEQ.........800
      USE BCSDEF                                                         TERSEQ.........900
      USE FINDEF                                                         TERSEQ........1000
      USE SCHDEF                                                         TERSEQ........1100
      USE LARR, ONLY : ISLAKE,ILKF,ILKS,ILKP,ILKU,ILKPG,ITIPG,           TERSEQ........1200
     1   ILKUG,ITIUG,IBCSF,IBCSS,IBCSP,IBCSU,IBCSPG,IBCSUG,              TERSEQ........1300
     2   LKBCPBC,LKBCUBC,LKBCSOP,LKBCSOU,LKBCPBG,LKBCUBG                 TERSEQ........1400
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                TERSEQ........1500
      CHARACTER CDUM*1                                                   TERSEQ........1600
      LOGICAL ALCBCS,ALCFIN,ALCOBS                                       TERSEQ........1700
      LOGICAL LAKUSD                                                     TERSEQ........1800
      COMMON /ALC/ ALCBCS,ALCFIN,ALCOBS                                  TERSEQ........1900
      COMMON /FUNITS/ K00,K0,K1,K2,K3,K4,K5,K6,K7,K8,K9,                 TERSEQ........2000
     1   K10,K11,K12,K13,K14,K15,K16,K17,K18,K19,K20,K21,K22,K23         TERSEQ........2100
      COMMON /KPRINT/ KNODAL,KELMNT,KINCID,KPLOTP,KPLOTU,                TERSEQ........2200
     1   KPANDS,KVEL,KCORT,KBUDG,KSCRN,KPAUSE                            TERSEQ........2300
      COMMON /LAKU/ LAKUSD                                               TERSEQ........2400
      COMMON /OBS/ NOBSN,NTOBS,NOBCYC,NOBLIN,NFLOMX                      TERSEQ........2500
C                                                                        TERSEQ........2600
C.....TERMINATION SEQUENCE: DEALLOCATE ARRAYS, CLOSE FILES, AND STOP     TERSEQ........2700
      IF (ALLO1) THEN                                                    TERSEQ........2800
         DEALLOCATE(PITER,UITER,PM1,DPDTITR,UM1,PVEL,SL,SR,X,Y,Z,        TERSEQ........2900
     1      VOL,POR,CS1,CS2,CS3,SW,DSWDP,RHO,SOP,QIN,UIN,                TERSEQ........3000
     2      QUIN,QINITR,RCIT,RCITM1)                                     TERSEQ........3100
         DEALLOCATE(DUDTITR)                                             TERSEQ........3200
         DEALLOCATE(PVEC,UVEC)                                           TERSEQ........3300
         DEALLOCATE(ALMAX,ALMIN,ATMAX,ATMIN,VMAG,VANG1,PERMXX,PERMXY,    TERSEQ........3400
     1      PERMYX,PERMYY,PANGL1)                                        TERSEQ........3500
         DEALLOCATE(ALMID,ATMID,VANG2,PERMXZ,PERMYZ,PERMZX,PERMZY,       TERSEQ........3600
     1      PERMZZ,PANGL2,PANGL3)                                        TERSEQ........3700
         DEALLOCATE(PBC,UBC,QPLITR,GNUPP,GNUUU)                          TERSEQ........3800
         DEALLOCATE(BPBC,PZERO,BUBC,UZERO,BPBG,PZERG)                    TERSEQ........3900
         DEALLOCATE(PBG1,QPBG1,PBG2,QPBG2,UPBGI,UBG1,QUBG1,UBG2,QUBG2,   TERSEQ........4000
     2      QPBGIC,GNUPG,QUBGIC,GNUUG,QPGITR,UPBGO)                      TERSEQ........4100
         DEALLOCATE(GXSI,GETA,GZET)                                      TERSEQ........4200
         DEALLOCATE(B)                                                   TERSEQ........4300
         DEALLOCATE(IN,IQSOP,IQSOU,IPBC,IUBC,NREG,LREG,JA)               TERSEQ........4400
         DEALLOCATE(ISPBC,ISUBC,ISPBG)                                   TERSEQ........4500
         DEALLOCATE(LPBGSP)                                              TERSEQ........4600
         DEALLOCATE(CPQL1,CPQL2,CUPBGO)                                  TERSEQ........4700
         DEALLOCATE(IIDPBC,IIDUBC,IIDSOP,IIDSOU,IIDPBG,IIDUBG)           TERSEQ........4800
         DEALLOCATE(IBCSP,IBCSU,IBCSF,IBCSS,IBCSPG,IBCSUG)               TERSEQ........4900
         DEALLOCATE(IBCPBC,IBCUBC,IBCSOP,IBCSOU,IBCPBG,IBCUBG)           TERSEQ........5000
         DEALLOCATE(BCSFL,BCSTR)                                         TERSEQ........5100
         DEALLOCATE(OBSPTS)                                              TERSEQ........5200
         DEALLOCATE(ISLAKE)                                              TERSEQ........5300
         DEALLOCATE(ILKF,ILKS,ILKP,ILKU)                                 TERSEQ........5400
         DEALLOCATE(ILKPG,ITIPG,ILKUG,ITIUG)                             TERSEQ........5500
         DEALLOCATE(LKBCPBC,LKBCUBC,LKBCSOP,LKBCSOU,LKBCPBG,LKBCUBG)     TERSEQ........5600
      END IF                                                             TERSEQ........5700
      IF (ALLO2) THEN                                                    TERSEQ........5800
         DEALLOCATE(PMAT,UMAT,FWK)                                       TERSEQ........5900
         DEALLOCATE(IWK)                                                 TERSEQ........6000
      END IF                                                             TERSEQ........6100
      IF (ALLO3) THEN                                                    TERSEQ........6200
         DEALLOCATE(IA)                                                  TERSEQ........6300
      END IF                                                             TERSEQ........6400
      IF (ALCFIN) THEN                                                   TERSEQ........6500
         DEALLOCATE(NKS,KLIST,FNAIN)                                     TERSEQ........6600
      END IF                                                             TERSEQ........6700
      IF (ALCBCS) THEN                                                   TERSEQ........6800
         DEALLOCATE(IUNIB,FNAMB)                                         TERSEQ........6900
      END IF                                                             TERSEQ........7000
      IF (ALLOCATED(SCHDLS)) DEALLOCATE(SCHDLS)                          TERSEQ........7100
      IF (ALLOCATED(OFP)) DEALLOCATE(OFP)                                TERSEQ........7200
      IF (ALCOBS) DEALLOCATE(FNAMO)                                      TERSEQ........7300
      IF (ALLOCATED(ONCK78)) DEALLOCATE(ONCK78)                          TERSEQ........7400
      IF (ALLOCATED(CIDBCS)) DEALLOCATE(CIDBCS)                          TERSEQ........7500
      IF (ALLOCATED(BFP)) DEALLOCATE(BFP)                                TERSEQ........7600
      IF (ALLOCATED(LCNT)) DEALLOCATE (LCNT)                             TERSEQ........7700
C.....ARRAY IUNIO WILL BE DEALLOCATED AFTER THE OBSERVATION OUTPUT       TERSEQ........7800
C        FILES ARE CLOSED                                                TERSEQ........7900
      CLOSE(K00)                                                         TERSEQ........8000
      CLOSE(K0)                                                          TERSEQ........8100
      CLOSE(K1)                                                          TERSEQ........8200
      CLOSE(K2)                                                          TERSEQ........8300
      CLOSE(K3)                                                          TERSEQ........8400
      CLOSE(K4)                                                          TERSEQ........8500
      CLOSE(K5)                                                          TERSEQ........8600
      CLOSE(K6)                                                          TERSEQ........8700
      CLOSE(K7)                                                          TERSEQ........8800
      CLOSE(K8)                                                          TERSEQ........8900
      CLOSE(K9)                                                          TERSEQ........9000
      CLOSE(K10)                                                         TERSEQ........9100
      CLOSE(K11)                                                         TERSEQ........9200
      CLOSE(K12)                                                         TERSEQ........9300
      CLOSE(K13)                                                         TERSEQ........9400
      CLOSE(K14)                                                         TERSEQ........9500
      CLOSE(K15)                                                         TERSEQ........9600
      CLOSE(K16)                                                         TERSEQ........9700
      CLOSE(K17)                                                         TERSEQ........9800
      CLOSE(K18)                                                         TERSEQ........9900
      CLOSE(K19)                                                         TERSEQ.......10000
      CLOSE(K20)                                                         TERSEQ.......10100
      CLOSE(K21)                                                         TERSEQ.......10200
      CLOSE(K22)                                                         TERSEQ.......10300
      CLOSE(K23)                                                         TERSEQ.......10400
      DO 8000 NFO=1,NFLOMX                                               TERSEQ.......10500
         CLOSE(IUNIO(NFO))                                               TERSEQ.......10600
 8000 CONTINUE                                                           TERSEQ.......10700
      IF (ALCOBS) DEALLOCATE(IUNIO)                                      TERSEQ.......10800
      IF ((KSCRN.EQ.1).AND.(KPAUSE.EQ.1)) THEN                           TERSEQ.......10900
         WRITE(*,9990)                                                   TERSEQ.......11000
 9990    FORMAT(/' Press ENTER to exit ...')                             TERSEQ.......11100
         READ(*,'(A1)') CDUM                                             TERSEQ.......11200
      END IF                                                             TERSEQ.......11300
      STOP ' '                                                           TERSEQ.......11400
C                                                                        TERSEQ.......11500
      RETURN                                                             TERSEQ.......11600
      END                                                                TERSEQ.......11700
C                                                                        TERSEQ.......11800
C     FUNCTION          T  I  M  E  T  S           SUTRA VERSION 3.0     TIMETS.........100
C                                                                        TIMETS.........200
C *** PURPOSE :                                                          TIMETS.........300
C ***  TO RETURN THE TIME ASSOCIATED WITH A GIVEN TIME STEP.  IF THE     TIMETS.........400
C ***  SPECIFIED TIME STEP IS GREATER THAN THE MAXIMUM, A VALUE OF       TIMETS.........500
C ***  +HUGE(1D0) (THE LARGEST NUMBER THAT CAN BE REPRESENTED IN DOUBLE  TIMETS.........600
C ***  PRECISION) IS RETURNED.  IF THE SPECIFIED TIME STEP IS LESS THAN  TIMETS.........700
C ***  ZERO, A VALUE OF -HUGE(1D0) IS RETURNED.  IF THE TIME STEP        TIMETS.........800
C ***  SCHEDULE HAS NOT YET BEEN DEFINED, A VALUE OF ZERO IS RETURNED.   TIMETS.........900
C                                                                        TIMETS........1000
      DOUBLE PRECISION FUNCTION TIMETS(NSTEP)                            TIMETS........1100
      USE LLDEF                                                          TIMETS........1200
      USE SCHDEF                                                         TIMETS........1300
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                TIMETS........1400
      COMMON /SCH/ NSCH,ISCHTS,NSCHAU                                    TIMETS........1500
C                                                                        TIMETS........1600
      IF (ISCHTS.EQ.0) THEN                                              TIMETS........1700
         TIMETS = 0D0                                                    TIMETS........1800
         RETURN                                                          TIMETS........1900
      END IF                                                             TIMETS........2000
C                                                                        TIMETS........2100
      NSMAX = SCHDLS(ISCHTS)%LLEN - 1                                    TIMETS........2200
C                                                                        TIMETS........2300
      IF (NSTEP.LT.0) THEN                                               TIMETS........2400
         TIMETS = -HUGE(1D0)                                             TIMETS........2500
      ELSE IF (NSTEP.GT.NSMAX) THEN                                      TIMETS........2600
         TIMETS = +HUGE(1D0)                                             TIMETS........2700
      ELSE                                                               TIMETS........2800
         TIMETS = SCHDLS(ISCHTS)%SLIST(NSTEP+1)%DVALU1                   TIMETS........2900
      END IF                                                             TIMETS........3000
C                                                                        TIMETS........3100
      RETURN                                                             TIMETS........3200
      END                                                                TIMETS........3300
C                                                                        TIMETS........3400
C     SUBROUTINE        U  B  C  M  A  T           SUTRA VERSION 3.0     ! fix bk 231103 ...
C                                                                       
C *** PURPOSE :                                                         
C ***  TO RESTORE SPEC-U MATRIX OFF-DIAGONALS.                          
C                                                                       
      SUBROUTINE UBCMAT(ML,UMAT,IA,JA,IBCUBC,ISUBC)                     
      USE LARR, ONLY : LKBCUBC                                          
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                               
      DIMENSION UMAT(NELT,NCBI)                                         
      INTEGER(1) IBCUBC(NBCN)                                           
      DIMENSION IA(NDIMIA),JA(NDIMJA),ISUBC(NN)               
      COMMON /CONTRL/ GNUP,GNUU,UP,DTMULT,DTMAX,ME,ISSFLO,ISSTRA,ITCYC, 
     1   NPCYC,NUCYC,NPRINT,NBCFPR,NBCSPR,NBCPPR,NBCUPR,NLAKPR,IREAD,   
     1   NBGPPR,NBGUPR,ISTORE,NOUMAT,IUNSAT,IALSAT,KTYPE                
      COMMON /DIMS/ NN,NE,NIN,NBI,NCBI,NB,NBHALF,NPBC,NUBC,             
     1   NSOP,NSOU,NBCN,NPBG,NUBG,NCIDB                                 
      COMMON /DIMX/ NWI,NWF,NWL,NELT,NNNX,NEX,N48                       
      COMMON /DIMX2/ NELTA,NNVEC,NDIMIA,NDIMJA                          
      COMMON /SOLVI/ KSOLVP,KSOLVU,NN1,NN2,NN3                          
C                                                                       
C                                                                       
C.....SET UP MATRIX STRUCTURE INFORMATION                               
      IF (KSOLVP.EQ.0) THEN                                             
         JMID = NBHALF                                                  
      ELSE                                                              
         JMID = 1                                                       
      END IF                                                            
C                                                                       
 1050 IF (ML.NE.1) THEN                                                 
 1100 IF(NUBC.EQ.0) GOTO 3000                                           
C                                                                       
C.....FOR ALL SOLVERS, RESTORE SPEC-U MATRIX OFF-DIAGONALS              
      IF (KSOLVU.EQ.0) THEN                                             
C........DIRECT SOLVER                                                  
         DO 1140 I=1,NN                                                 
            IB = I                                                      
            DO 1120 JB=1,NB                                             
               J=JB+IB-NBHALF                                           
               IF ((J.EQ.I).OR.(J.LT.1).OR.(J.GT.NN)) CYCLE             
               JPU = ISUBC(J)                                           
               IF (JPU.NE.0) THEN                                       
                  IF ((IBCUBC(JPU).NE.2).AND.(LKBCUBC(JPU))) THEN       
                     UMAT(IB,JB) = UMAT(IB,JB)*GNUU                     
                  END IF                                                
               END IF                                                   
 1120       CONTINUE                                                    
 1140    CONTINUE                                                       
      ELSE                                                              
C........ITERATIVE SOLVER (SLAP COLUMN)                                 
         DO 1180 I=1,NN                                                 
            MDBEG = JA(I)                                               
            MDEND = JA(I + 1) - 1                                       
            DO 1170 MJ=MDBEG+1,MDEND                                    
               J = IA(MJ)                                               
C..............ASSUME MATRIX STRUCTURE IS SYMMETRIC, EVEN IF            
C                 MATRIX VALUES ARE NOT                                 
               MBEG = JA(J)                                             
               MEND = JA(J + 1) - 1                                     
               DO 1150 MM=MBEG,MEND                                     
                  IF (I.EQ.IA(MM)) THEN                                 
                     M = MM                                             
                     GOTO 1152                                          
                  END IF                                                
 1150          CONTINUE                                                 
 1152          JPU = ISUBC(J)                                           
               IF (JPU.NE.0) THEN                                       
                  IF ((IBCUBC(JPU).NE.2).AND.(LKBCUBC(JPU))) THEN       
                     UMAT(M,1) = UMAT(M,1)*GNUU
                  END IF                                                
               END IF                                                   
 1170       CONTINUE                                                    
 1180    CONTINUE                                                       
      END IF                                                            
C                                                                       
      END IF                                                            
C
 3000 CONTINUE                                                          
C                                                                       
C                                                                       
      RETURN                                                            
      END                                                               
C                                                                        ! ... fix bk 231103
C     FUNCTION          V  I  S  C  F  U  N        SUTRA VERSION 3.0     VISCFUN........100
C                                                                        VISCFUN........200
C *** PURPOSE :                                                          VISCFUN........300
C ***  TO RETURN A VALUE OF VISCOSITY BASED ON TEMPERATURE (U).          VISCFUN........400
C                                                                        VISCFUN........500
      DOUBLE PRECISION FUNCTION VISCFUN(U)                               VISCFUN........600
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                VISCFUN........700
      COMMON /PARAMS/ COMPFL,COMPMA,DRWDU,CW,CS,RHOS,SIGMAW,SIGMAS,      VISCFUN........800
     1   RHOW0,URHOW0,VISC0,PRODF1,PRODS1,PRODF0,PRODS0,CHI1,CHI2        VISCFUN........900
C                                                                        VISCFUN.......1000
      VISCFUN = VISC0*239.4D-7*(10.D0**(248.37D0/(U + 133.15D0)))        VISCFUN.......1100
C                                                                        VISCFUN.......1200
      RETURN                                                             VISCFUN.......1300
      END                                                                VISCFUN.......1400
C                                                                        VISCFUN.......1500
C     SUBROUTINE        Z  E  R  O                 SUTRA VERSION 3.0     ZERO...........100
C                                                                        ZERO...........200
C *** PURPOSE :                                                          ZERO...........300
C ***  TO FILL AN ARRAY WITH A CONSTANT VALUE (USUALLY ZERO).            ZERO...........400
C                                                                        ZERO...........500
      SUBROUTINE ZERO(A,IADIM,FILL)                                      ZERO...........600
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                ZERO...........700
      DIMENSION A(IADIM)                                                 ZERO...........800
C                                                                        ZERO...........900
C.....FILL ARRAY A WITH VALUE IN VARIABLE 'FILL'                         ZERO..........1000
      DO 10 I=1,IADIM                                                    ZERO..........1100
   10 A(I)=FILL                                                          ZERO..........1200
C                                                                        ZERO..........1300
C                                                                        ZERO..........1400
      RETURN                                                             ZERO..........1500
      END                                                                ZERO..........1600
